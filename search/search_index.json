{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Home</p>"},{"location":"#welcome-to-the-eudi-wallet-dev-hub","title":"Welcome to the EUDI Wallet Dev Hub!","text":"<p>EU Digital Identity Wallets will enable users to access online services, store and share digital documents, and create binding signatures.</p> <p>Learn more about the EUDI Wallet project</p> <p>This is the developer's hub for the European Digital Identity Wallet\u2014a key reference point for those building and testing EUDI Wallet solutions, whether for Wallet Providers, Issuers, or Relying Parties.</p> <p>Everything you need to start your development project is gathered here. You will find technical guidelines and tools as well as directions for how to get started defining, designing and building an EUDI Wallet project.</p>"},{"location":"#build","title":"Build","text":"<p>Access comprehensive resources to guide your development efforts. This section provides detailed instructions, open-source libraries, and tools to support the development of Wallet, Issuer, or Relying Party solutions that meet the EU technical specifications to ensure interoperability.</p> <p>Get ready to build your solution</p>"},{"location":"#test","title":"Test","text":"<p>Validate your solution with the EUDI Wallet testing toolkit. This includes pre-built testing tools designed to ensure your solution meets all specified functional requirements, guaranteeing quality and compliance.</p> <p>Get ready to test your solution</p>"},{"location":"#resources","title":"Resources","text":"<p>Compliance with the established set of technical specifications is essential for the security, interoperability and reliability of the EUDI Wallet.</p> <p>Discover essential resources</p>"},{"location":"Build/","title":"Build","text":"<p>Home / Build</p>"},{"location":"Build/#build-your-solution","title":"Build your Solution","text":"<p>In this section, you'll find comprehensive guidance on how to leverage the EUDI Wallet Reference Implementation to build your own EUDI Wallet, Issuer, or Verifier. The reference implementation provides open-source code libraries, tools, and sample applications to help you get started quickly and efficiently.</p> <p>Whether you are a Wallet Provider, an Issuer, or a Relying Party, the guide provides clear, step-by-step instructions and examples to help you get started. It also assists you in evaluating how you can leverage the EUDI Wallet reference implementation in your development project and how to make the most of it.</p> <p>Let\u2019s get started with building your secure and interoperable EUDI solutions!</p> Role Description Get Started Wallet Provider A Wallet Provider is responsible for developing, maintaining, and operating a secure and interoperable wallet application. EUDI Wallet Providers are Member States or organisations either mandated or recognized by Member States making the EUDI Wallet available for end users. The Wallet Provider ensures compliance with EU regulations while delivering an intuitive, user-friendly, and accessible solution for all users, including those with disabilities or varying levels of digital literacy. Build your Wallet Issuer An issuer is a PID Provider or a Qualified or Non-Qualified Electronic Attestation of Attributes Provider. They are responsible for issuing the PID or the Electronic Attestation to the Wallet and providing information that can be used to enquire about the validity status of the PID or Attestation. Build your Issuer Relying Party A relying party requires a verifier to accept and verify Attestations presented by wallet user. Verifiers can be used in both online and proximity use cases. Build your Verifier"},{"location":"Build/#test-your-solution","title":"Test your Solution","text":"<p>Congratulations on building your solution. Time to test it!</p> <ul> <li>Test your Solution</li> </ul>"},{"location":"Build/Build%20your%20Issuer/","title":"Build your Issuer","text":"<p>Home / Build / Build your Issuer</p>"},{"location":"Build/Build%20your%20Issuer/#build-your-issuer","title":"Build your Issuer","text":""},{"location":"Build/Build%20your%20Issuer/#overview","title":"Overview","text":"<p>The Issuer is an implementation of  the PID and (Q)EAA Provider service, supporting the OpenID4VCI (draft 13) protocol.</p> <p>The service provides, by default, support for <code>mso_mdoc</code> and <code>SD-JWT-VC</code>formats, for the following credentials:</p> Credential/Attestation Format PID mso_mdoc PID(sample) SD-JWT-VC mDL mso_mdoc mDL SD-JWT-VC <p>For authenticating the user, it requires the use of an eIDAS node, an OAUTH2 server or a simple form (for testing purposes).</p>"},{"location":"Build/Build%20your%20Issuer/#openid4vci-coverage","title":"OpenId4VCI Coverage","text":"<p>This version of the Issuer supports the OpenId for Verifiable Credential Issuance (draft 13) protocol with the following coverage:</p> Feature Coverage Authorization Code flow \u2705 Support for PAR, PKCE, credential configuration id, scope Pre-authorized code flow \u2705 Dynamic Credential Request \u2705 mso_mdoc format \u2705 SD-JWT-VC format \u2705 W3C VC DM \u274c Token Endpoint \u2705 Credential Offer \u2705 <code>authorization_code</code>, \u2705 <code>pre-authorized_code</code> Credential Endpoint \u2705 Including proofs and repeatable invocations Credential Issuer MetaData \u2705 Batch Endpoint \u2705 Deferred Endpoint \u2705 Proof \u2705 JWT, \u2705 CWT Notification Endpoint \u2705 <p>You can use the Issuer at https://issuer.eudiw.dev/, or install it locally.</p>"},{"location":"Build/Build%20your%20Issuer/Configure/","title":"Configure your Issuer","text":"<p>Home / Build / Build your Issuer</p>"},{"location":"Build/Build%20your%20Issuer/Configure/#configure-your-issuer","title":"Configure your Issuer","text":"<p>For configuring your locally installed version of the Issuer, you need to change the following configurations.</p>"},{"location":"Build/Build%20your%20Issuer/Configure/#1-service-configuration","title":"1. Service Configuration","text":"<p>Base configuration for the Issuer is located in <code>app/app_config/config_service.py</code>.</p> <p>Parameters that should be changed:</p> <ul> <li><code>service_url</code> (Base url of the service)</li> <li><code>trusted_CAs_path</code> (Path to a folder with trusted IACA certificates)</li> <li><code>eidasnode_url</code> (eIDAS Node base URL. Only needs to be changed if you're configuring the eIDAS Node)</li> <li><code>eidasnode_lightToken_connectorEndpoint</code> (eIDAS node connector endpoint for lightrequest. Only needs to be changed if you're configuring the eIDAS Node)</li> </ul> <p>You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder - you can find an example test IACA certificate for country Utopia (UT) here.</p>"},{"location":"Build/Build%20your%20Issuer/Configure/#2-configuration-of-countries","title":"2. Configuration of Countries","text":"<p>The supported countries configuration of the Issuer is located in <code>/app/app_config/config_countries.py</code>.</p> <p>Parameters that should be changed for each country:</p> <ul> <li><code>name</code> - name of the country</li> <li><code>connection_type</code>- options are eidasnode, oauth, and openid.</li> <li><code>pid_mdoc_privkey</code>- Document/Credential signer (DS) private key file location.</li> <li><code>pid_mdoc_privkey_passwd</code> - Document/Credential signer (DS) private key password.( Can be None or bytes. Example: b\"password\")</li> <li><code>pid_mdoc_cert</code> - Document/Credential signer (DS) certificate file location.</li> </ul> <p>You must copy your DS private key (in PEM format) to <code>pid_mdoc_privkey</code> file (the password must be defined in <code>pid_mdoc_privkey_passwd</code>), and the certificate (in DER format) to <code>pid_mdoc_cert</code> file.</p> <p>You can find example test private DS keys and certificates, for country Utopia (UT) here - the password of the example test private DS keys is b\"pid-ds-0002\". To decrypt the private key you can run the following command <code>openssl ec -in PID-DS-0002.pid-ds-0002.key.pem -out PID-DS-0002-decrypted.key.pem</code>.</p>"},{"location":"Build/Build%20your%20Issuer/Configure/#3-oid4vci-configuration","title":"3. OID4VCI Configuration","text":"<p>For configuring the installed idpy-oidc and openid4v libraries, you need to change the following parameters in the <code>app/app_config/oid_config.py</code> configuration file:</p> <ul> <li>port</li> </ul>"},{"location":"Build/Build%20your%20Issuer/Configure/#4-metadata-configuration","title":"4. Metadata Configuration","text":"<p>The Issuer OAuth2 metadata configuration files are located in <code>app/metadata_config/metadata_config.json</code> and <code>app/metadata_config/openid-configuration.json</code></p> <p>You must change the base URL of the endpoints from <code>https://issuer.eudiw.dev</code> to a custom one or <code>https://localhost</code> if installed locally</p> <p>Example: <pre><code>\"credential_issuer\": \"{base_url}\",\n\"credential_endpoint\": \"{base_url}/credential\",\n\"batch_credential_endpoint\": \"{base_url}/batch_credential\",\n\"notification_endpoint\": \"{base_url}/notification\",\n\"deferred_credential_endpoint\": \"{base_url}/deferred_credential\",\n</code></pre></p>"},{"location":"Build/Build%20your%20Issuer/New%20Attestation/","title":"Add Attestations","text":"<p>Home / Build / Build your Issuer</p>"},{"location":"Build/Build%20your%20Issuer/New%20Attestation/#add-attestations","title":"Add Attestations","text":"<p>This document specifies the changes needed to add a new attestation/credential to the EUDI Wallet Issuer. We will use a generic loyalty card credential as an example for this configuration.</p>"},{"location":"Build/Build%20your%20Issuer/New%20Attestation/#1-metadata-configuration","title":"1. Metadata Configuration","text":"<p>Add a new json file with the credential metadata to <code>app/metadata_config/credentials_supported</code></p> <p>For this example we will use <code>app/metadata_config/credentials_supported/loyalty_mdoc.json</code></p> <p>Example loyalty card metadata for mso_mdoc format (ISO 18013-5), with namespace <code>eu.europa.ec.eudi.loyalty_mdoc</code>:</p> <pre><code>{\n  \"eu.europa.ec.eudi.loyalty_mdoc\": {\n      \"format\": \"mso_mdoc\",\n      \"doctype\": \"eu.europa.ec.eudi.loyalty.1\",\n      \"scope\": \"eu.europa.ec.eudi.loyalty.1\",\n      \"cryptographic_binding_methods_supported\": [\n        \"jwk\", \"cose_key\"\n      ],\n      \"credential_signing_alg_values_supported\": [\n        \"ES256\"\n      ],\n      \"proof_types_supported\": {\n        \"jwt\": {\n          \"proof_signing_alg_values_supported\": [\n            \"ES256\"\n          ]\n        },\n        \"cwt\": {\n          \"proof_signing_alg_values_supported\": [\n            \"ES256\"\n          ],\n          \"proof_alg_values_supported\": [\n            -7\n          ],\n          \"proof_crv_values_supported\": [\n            1\n          ]\n        }\n      },\n      \"display\": [\n        {\n          \"name\": \"Loyalty\",\n          \"locale\": \"en\",\n          \"logo\": {\n            \"url\": \"https://examplestate.com/public/pid.png\",\n            \"alt_text\": \"A square figure of a PID\"\n          }\n        }\n      ],\n      \"claims\": {\n        \"eu.europa.ec.eudi.loyalty.1\": {\n          \"given_name\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Given Name\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          \"family_name\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Family Name\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"company\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Loyalty Card Company\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"client_id\": {\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Client ID\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          \"issuance_date\": {\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Issuance Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          \"expiry_date\": {\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Expiry Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          }\n        }\n      }\n    }\n  }\n</code></pre> <p>If you want to issue a different attestation/credential using this example as a template, choose a different namespace, doctype, and scope, and modify the claims to include the required attributes.</p> <p>For more information on the metadata parameters, refer to https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-metadata.</p> <p>Extra Parameters  - source: Where the attribute is sourced from. Either the user or issuer (Example: Issuance Date is filled in by the issuer while given_name is filled in by the user on the form) - value_type: Type of the value expected. This will add the attribute to the forms. (Can be string, full-date, jpeg, driving_privileges, uint, bool)</p>"},{"location":"Build/Build%20your%20Issuer/New%20Attestation/#2-service-configuration","title":"2. Service Configuration","text":"<p>In the service configuration file (<code>app/app_config/config_service.py</code>), you need to configure the issuing authority, organization and validity of the credential.</p> <ul> <li>Add a new entry to config_doctype (using the doctype of the credential as key)</li> </ul> <pre><code>\"eu.europa.ec.eudi.loyalty.1\": {\n    \"issuing_authority\": \"Test QEAA issuer\",\n    \"organization_id\": pid_organization_id,\n    \"validity\": qeaa_validity,\n    \"organization_name\": \"Test QEAA issuer\",\n    \"namespace\": \"eu.europa.ec.eudi.loyalty.1\",\n}\n</code></pre> <ul> <li> <p>Add a new entry to auth_method_supported_credencials (using the credential identifier specified in the metadata)</p> <p>This configures the type of user authentication allowed for the credential. You may choose authentication through a PID using OpenId4VP, or through a country selection (options are: IDP, eidas node or a simple form).</p> <p>In the following examples the authentication allowed for the loyalty credential is through country selection.</p> </li> </ul> <pre><code>auth_method_supported_credencials = {\n    \"PID_login\": [\n    ],\n    \"country_selection\": [\n        \"eu.europa.ec.eudi.loyalty_mdoc\",\n    ],\n}\n</code></pre> <ul> <li>If this credential supports Dynamic Credential Request, add a new entry to dynamic_issuing</li> </ul> <p>This configures which attestation and attributes are asked for in the OID4VP Request When using Dynamic credential request to issue this credential.</p> <p>Follows the format: <pre><code>dynamic_issuing = {\n      \"credential_configuration_id\":{\n          \"DocType\":{\"Namespace\":[\"attribute\",...,\"attribute\"]}\n      }\n}\n</code></pre></p> <p>Example from age over 18 pseudonym: <pre><code>dynamic_issuing = {\n      \"eu.europa.ec.eudi.pseudonym_over18_mdoc\":{\n          \"eu.europa.ec.eudi.pid.1\":{\"eu.europa.ec.eudi.pid.1\":[\"age_over_18\"]}\n      }\n}\n</code></pre></p>"},{"location":"Build/Build%20your%20Issuer/New%20Attestation/#3-configuration-of-countries","title":"3. Configuration of Countries","text":"<p>Located in <code>app/app_config/config_countries.py</code>, this configuration file contains configuration data related to the countries supported by the PID Issuer, and the credentials supported by each country.</p> <p>For example, to add the loyalty credential to the <code>formCountry</code>, you need to add the loyalty credential id (defined in the metadata) to the <code>supported_credentials</code> of the <code>formCountry</code>.</p> <pre><code>\"supported_credentials\": [\n  \"eu.europa.ec.eudi.loyalty_mdoc\"\n]\n</code></pre>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/","title":"Steps to Build","text":"<p>Home / Build / Build your Issuer</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#steps-to-build-your-issuer","title":"Steps to Build your Issuer","text":"<p>This section includes a thorough description of the steps to build your own Issuer.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#1-python","title":"1. Python","text":"<p>The Issuer was tested with</p> <ul> <li>Python v. 3.9.2</li> </ul> <p>and should only be used with Python 3.9 or 3.10.</p> <p>If you don't have it installed, download it from here and follow the Python Developer's Guide.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#2-flask","title":"2. Flask","text":"<p>The Issuer was tested with</p> <ul> <li>Flask v. 2.3</li> </ul> <p>and should only be used with Flask v. 2.3 or higher.</p> <p>To install Flask, follow the Installation Guide.</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#3-run-your-issuer","title":"3. Run your Issuer","text":"<p>To run the Issuer, follow these simple steps (some of which may have already been completed when installing Flask) for Linux/macOS or Windows.</p> <ol> <li> <p>Clone the Issuer repository:</p> <pre><code>git clone git@github.com:eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py.git\n</code></pre> </li> <li> <p>Create a <code>.venv</code> folder within the cloned repository:</p> <pre><code>cd eudi-srv-web-issuing-eudiw-py\npython3 -m venv .venv\n</code></pre> </li> <li> <p>Activate the environment:</p> <p>Linux/macOS</p> <pre><code>. .venv/bin/activate\n</code></pre> <p>Windows</p> <pre><code>. .venv\\Scripts\\Activate\n</code></pre> </li> <li> <p>Install or upgrade pip</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> </li> <li> <p>Install Flask, gunicorn and other dependencies in virtual environment</p> <pre><code>pip install -r app/requirements.txt\n</code></pre> </li> <li> <p>Setup secrets</p> </li> <li> <p>Copy <code>app/app_config/__config_secrets.py</code> to <code>app/app_config/config_secrets.py</code> and modify secrets.</p> </li> <li> <p>Service Configuration</p> </li> <li> <p>Configure the service according to documentation</p> </li> <li> <p>Run the Issuer </p> <p>In the root directory of the clone repository, insert one of the following command lines to run the Issuer.</p> <ul> <li>Linux/macOS/Windows (on <code>http://127.0.0.1:5000</code> or <code>http://localhost:5000</code>)</li> </ul> <pre><code>flask --app app run\n</code></pre> <ul> <li>Linux/macOS/Windows (on <code>http://127.0.0.1:5000</code> or <code>http://localhost:5000</code> with flag debug)</li> </ul> <pre><code>flask --app app run --debug\n</code></pre> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#4-run-your-local-issuer-over-https","title":"4. Run your local Issuer over HTTPS","text":"<ol> <li>Generate a self signed certificate and a private key</li> <li> <p>Linux/macOS</p> <p>Example:      <code>openssl req -x509 -out localhost.crt -keyout localhost.key -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -extensions EXT -config &lt;( \\    printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=IP.1:127.0.0.1\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")</code></p> <ul> <li> <p>Windows</p> <p>Create the file localhost.conf using the following as an example: <pre><code>[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 120.0.0.1: Self-signed certificate\n[req_ext]\nsubjectAltName = @alt_names\n[v3_req]\nsubjectAltName = @alt_names\n[alt_names]\nIP.1 = 127.0.0.1\n</code></pre></p> <p>Use the configuration file above to generate the certificate and key <pre><code>openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout key.pem -out cert.pem -config localhost.conf \n</code></pre></p> </li> </ul> </li> <li> <p>Add certificate to environment variables</p> </li> <li> <p>Linux/macOS        <pre><code> export REQUESTS_CA_BUNDLE=\"/path/to/certificate\"\n</code></pre></p> </li> <li> <p>Windows         <pre><code>set REQUESTS_CA_BUNDLE=\"\\path\\to\\certificate\"\n</code></pre></p> </li> <li> <p>Run the Issuer with certificate and key     <pre><code>flask --app app run --cert=cert.pem --key=key.pem\n</code></pre></p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#5-make-your-local-issuer-available-on-the-internet-optional","title":"5. Make your local Issuer available on the Internet (optional)","text":"<p>If you want to make your local Issuer available on the Internet, we recommend to use NGINX reverse proxy and certbot (to generate an HTTPS certificate).</p>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#51-install-and-configure-nginx","title":"5.1 Install and configure NGINX","text":"<ol> <li> <p>Follow the installation guide</p> </li> <li> <p>Configure your local Issuer. For example, use the following Nginx configuration file (for a Linux installation):</p> <pre><code>server {\n    server_name FQDN; # Change to the FQDN you want to use\n\n    listen 80;\n    access_log /var/log/nginx/issuer.eudiw.access.log;\n    error_log /var/log/nginx/issuer.eudiw.error.log;\n    root /var/www/html;\n\n# Recommended\n    proxy_busy_buffers_size   512k;\n    proxy_buffers   4 512k;\n    proxy_buffer_size   256k;\n\n# Provider backend\n    location / {\n        # The proxy_pass directive assumes that your local Issuer is running at http://127.0.0.1:5000/. \n        # If not, adjust it accordingly.\n        proxy_pass                              http://127.0.0.1:5000/;\n        proxy_set_header Host                   $http_host;\n        proxy_set_header X-Real-IP              $remote_addr;\n        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto      $scheme;\n    }\n}\n</code></pre> </li> <li> <p>Restart the Nginx server</p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#52-install-and-run-certbot-to-get-a-free-https-certificate","title":"5.2 Install and run certbot to get a free HTTPS certificate","text":"<ol> <li> <p>Follow the installation guide</p> </li> <li> <p>Run <code>certbot</code> to get a free HTTPS certificate. The <code>certbot</code> will also configure the Issuer Nginx configuration file with the HTTPS certificate</p> </li> <li> <p>Restart the Nginx server and goto <code>https:\\\\FQDN\\</code> (FQDN configured in the Nginx configuration file)</p> </li> </ol>"},{"location":"Build/Build%20your%20Issuer/Steps%20to%20Build/#6-docker","title":"6. Docker","text":"<p>To run the Issuer in Docker, follow these steps:</p> <ol> <li> <p>Install Docker following the official instructions for your operating system</p> </li> <li> <p>Download the Dockerfile</p> </li> <li> <p>Build the Docker: <code>sudo docker build -t eudiw-issuer .</code></p> </li> <li> <p>Create 2 directories to be mounted:</p> <ol> <li> <p>First directory named <code>config_secrets</code></p> <p>This directory will have the cert.pem and key.pem generated in Section 4 above</p> <p>As well as the config_secrets.py based on this example</p> </li> <li> <p>Second directory named <code>pid-issuer</code>, inside will be a directory <code>cert</code> and <code>privKey</code></p> <p>The <code>cert</code> directory has the certificates of the trusted CAs in PEM format as well as the Document/Credential signer (DS) certificates in DER format</p> <p>The <code>privKey</code> directory has the Document/Credential signer (DS) private keys</p> <p>Example:</p> <pre><code>docker-issuer\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 config_secrets\n\u2502   \u251c\u2500\u2500 config_secrets.py\n\u2502   \u251c\u2500\u2500 cert.pem\n\u2502   \u2514\u2500\u2500 key.pem\n\u2514\u2500\u2500 pid-issuer\n    \u251c\u2500\u2500 cert\n    \u2502   \u251c\u2500\u2500 PID-DS-0001_UT_cert.der\n    \u2502   \u2514\u2500\u2500 PIDIssuerCAUT01.pem\n    \u2514\u2500\u2500 privKey\n        \u2514\u2500\u2500 PID-DS-0001_UT.pem\n</code></pre> </li> </ol> </li> <li> <p>Run Docker</p> <p>If running a basic configuration without EIDAS node or Dynamic presentation, their respective variables can be removed from the run command below.</p> <pre><code>sudo docker run -d \\\n--name eudiw-issuer \\\n-e SERVICE_URL=\"https://your.service.url/\" \\\n-e EIDAS_NODE_URL=\"https://your.eidas.node.url/\" \\\n-e DYNAMIC_PRESENTATION_URL=\"https://your.dynamic.presentation.url/\" \\\n-v ./config_secrets:/root/secrets \\\n-v ./pid-issuer:/etc/eudiw/pid-issuer \\\n-p 5000:5000 \\\neudiw-issuer\n</code></pre> </li> <li> <p>Docker logs</p> <p>Issuer logs in real time: <code>sudo docker logs -f eudiw-issuer</code> All logs: <code>sudo docker logs eudiw-issuer</code></p> </li> <li> <p>Stop Docker Issuer    <code>sudo docker stop eudiw-issuer</code></p> </li> </ol>"},{"location":"Build/Build%20your%20Verifier/","title":"Build your Verifier","text":"<p>Home / Build / Build your Verifier</p>"},{"location":"Build/Build%20your%20Verifier/#build-your-verifier","title":"Build your Verifier","text":""},{"location":"Build/Build%20your%20Verifier/#overview","title":"Overview","text":"<p>This is a web UI that provides functionality to interact with the Verifier/RP trusted endpoint implemented in this repository. Another way to think of this application is that it represents an arbitrary application that wants to delegate to the trusted endpoint the burden of interacting with a wallet using OpenId4VP. The project was generated with Angular CLI version 19.1.4.</p>"},{"location":"Build/Build%20your%20Verifier/Configure/","title":"Configure your Verifier","text":"<p>Home / Build / Build your Verifier</p>"},{"location":"Build/Build%20your%20Verifier/Configure/#configure-your-verifier","title":"Configure your Verifier","text":""},{"location":"Build/Build%20your%20Verifier/Configure/#use-your-custom-relying-party-certificate-with-the-verifier","title":"Use your custom relying party certificate with the verifier","text":"<p>In order to use your own certificate with the verifier, the <code>VERIFIER_JAR_SIGNING_KEY</code> needs to be set to <code>LoadFromKeystore</code>. Moreover, the following environment variables must also be configured accordingly.</p> <p>Variable: <code>VERIFIER_JAR_SIGNING_ALGORITHM</code> Description: Algorithm used to sign Authorization Request  Possible values: Any <code>Algorithm Name</code> of an IANA registered asymmetric signature algorithm (i.e. Usage is <code>alg</code>): Signature Encryption Algorithm Note: The configured signing algorithm must be compatible with the configured signing key Default value: <code>ES256</code></p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY</code> Description: Key to use for Authorization Request signing Possible values: <code>GenerateRandom</code>, <code>LoadFromKeystore</code> Setting this value to <code>GenerateRandom</code> will result in the generation of a random <code>EC</code> key using the curve <code>P-256</code>  Note: The configured signing key must be compatible with the configured signing algorithm Default value: <code>GenerateRandom</code></p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY_KEYSTORE</code> Description: URL of the Keystore from which to load the Key to use for JAR signing Examples: <code>classpath:keystore.jks</code>, <code>file:///keystore.jks</code></p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY_KEYSTORE_TYPE</code> Description: Type of the Keystore from which to load the Key to use for JAR signing Examples: <code>jks</code>, <code>pkcs12</code></p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY_KEYSTORE_PASSWORD</code> Description: Password of the Keystore from which to load the Key to use for JAR signing</p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY_ALIAS</code> Description: Alias of the Key to use for JAR signing, in the configured Keystore</p> <p>Variable: <code>VERIFIER_JAR_SIGNING_KEY_PASSWORD</code> Description: Password of the Key to use for JAR signing, in the configured Keystore</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/","title":"Steps to Build","text":"<p>Home / Build / Build your Verifier</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#steps-to-build-your-verifier","title":"Steps to Build your Verifier","text":""},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#development-server","title":"Development Server","text":"<p>Run <code>ng serve</code> for a dev server. Navigate to <code>http://localhost:4200/</code>. The application will automatically reload if you change any of the source files.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#code-scaffolding","title":"Code Scaffolding","text":"<p>Run <code>ng generate component component-name</code> to generate a new component. You can also use <code>ng generate directive|pipe|service|class|guard|interface|enum|module</code>.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#build","title":"Build","text":"<p>Run <code>ng build</code> to build the project. The build artifacts will be stored in the <code>dist/</code> directory.</p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#run-your-verifier","title":"Run your Verifier","text":"<p>You need npm (node version 18.15.0) and Angular CLI installed on your machine.</p> <p>To run Verifier UI run the following commands:</p> <p><pre><code>npm install\nng serve --proxy-config src/proxy.conf.json\n</code></pre> The above command utilizes proxy.conf.json that proxies the calls to the expected verifier backend service. Update this file if you want your Verifier UI to point to a locally running verifier backend service.</p> <p>You can access the application at <code>http://localhost:4200</code>. </p>"},{"location":"Build/Build%20your%20Verifier/Steps%20to%20Build/#run-tests","title":"Run Tests","text":"<p>Run <code>ng test</code> to execute the unit tests via Karma.</p> <p>Run <code>ng e2e</code> to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.</p> <p>To get more help on the Angular CLI use <code>ng help</code> or go check out the Angular CLI Overview and Command Reference page.</p>"},{"location":"Build/Build%20your%20Wallet/","title":"Build your Wallet","text":"<p>Home / Build / Build your Wallet</p>"},{"location":"Build/Build%20your%20Wallet/#build-your-wallet","title":"Build your Wallet","text":"<p>In this section, you will find all the resources you need to build your own Wallet application using the tools and libraries provided by the EUDI Wallet Reference Implementation. These resources include the Wallet application for Android/iOS, the Wallet Core for Android and Wallet Kit for iOS that serve as a coordinator layer between the Wallet application and the Wallet libraries, all designed to help you create a secure, user-friendly, and interoperable digital wallet solution.</p> <p>Let's start with your implementation!</p> Operating System Description Get Started Android Reference Implementation Wallet Application Android Wallet Android Reference Implementation Core Android Core iOS Reference Implementation Wallet Application iOS Wallet iOS Reference Implementation Core iOS Core"},{"location":"Build/Build%20your%20Wallet/Android/","title":"Index","text":"<p>Home </p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/","title":"Library Level","text":"<p>Home / Build / Build your Wallet / Android / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/#eudi-wallet-core-library-for-android","title":"EUDI Wallet Core library for Android","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Core library for Android. The library is part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator, orchestrating the various components that are required to implement the EUDI Wallet functionality. Additionally, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Document Key creation and management with Android Keystore by default</li> <li> Support for custom SecureArea implementations</li> <li> Support for multiple SecureArea implementations</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI Draft 14 document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> </ul> </li> <li> Support for sd-jwt-vc format<ul> <li> Support for credential offers</li> <li> Support for DPoP JWT in authorization</li> </ul> </li> <li> Support for JWT proof types</li> <li> Support for deferred issuance</li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> NFC device engagement</li> <li> BLE data transfer</li> <li> NFC data transfer</li> <li> Wifi-Aware data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Kotlin and is compatible with Java. It is distributed as a Maven package and can be included in any Android project that uses Android 8 (API level 26) or higher.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/","title":"Build the Core","text":"<p>Home / Build / Build your Wallet / Android / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#build-the-core","title":"Build the Core","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#requirements","title":"Requirements","text":"<ul> <li>Android 8 (API level 26) or higher</li> </ul>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#dependencies","title":"Dependencies","text":"<p>To use snapshot versions add the following to your project's settings.gradle file:</p> <pre><code>dependencyResolutionManagement {\n    repositories {\n        // ...\n        maven {\n            url = uri(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")\n            mavenContent { snapshotsOnly() }\n        }\n        // ...\n    }\n}\n</code></pre> <p>To include the library in your project, add the following dependencies to your app's build.gradle file.</p> <pre><code>dependencies {\n    implementation \"eu.europa.ec.eudi:eudi-lib-android-wallet-core:0.14.0\"\n    // required when using the built-in AndroidKeystoreSecureArea implementation provided by the library\n    // for user authentication with biometrics\n    implementation \"androidx.biometric:biometric-ktx:1.2.0-alpha05\"\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#how-to-use","title":"How to use","text":""},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Build%20the%20Core/#initialize-the-library","title":"Initialize the library","text":"<p>To instantiate a <code>EudiWallet</code> use the <code>EudiWallet.Builder</code> class or the <code>EudiWallet.invoke</code> method, from the EudiWallet companion object.</p> <p>The minimum requirements to initialize the library are to provide a <code>EudiWalletConfit</code> object that will be used to configure the library's built-in components.</p> <p>The built-in components are:</p> <ul> <li><code>AndroidKeystoreSecureArea</code> for storing and managing the documents' keys</li> <li><code>AndroidStorageEngine</code> for storing the documents' data</li> <li><code>ReaderTrustStore</code> implementation for validating the reader's certificates</li> <li><code>PresentationManager</code> implementation for managing both proximity and remote presentation of   documents</li> <li><code>Logger</code> implementation for logging</li> </ul> <p>The following example demonstrates how to initialize the library for using the built-in components:</p> <pre><code>// configuring the wallet\nval config = EudiWalletConfig()\n    // configure the document storage\n    // the noBackupFilesDir is used to store the documents by default\n    .configureDocumentManager(context.noBackupFilesDir)\n    // configure the built-in logger\n    .configureLogging(\n        // set log level to info\n        level = Logger.LEVEL_INFO\n    )\n    // configure the built-in key creation settings\n    .configureDocumentKeyCreation(\n        // set userAuthenticationRequired to true to require user authentication\n        userAuthenticationRequired = true,\n        // set userAuthenticationTimeout to 30 seconds\n        userAuthenticationTimeout = 30_000L,\n        // set useStrongBoxForKeys to true to use the the device's StrongBox if available\n        // to store the keys\n        useStrongBoxForKeys = true\n    )\n    .configureReaderTrustStore(\n        // set the reader trusted certificates for the reader trust store\n        listOf(readerCertificate)\n    )\n    // mandatory configuration for OpenId4Vci if you want to issue documents\n    .configureOpenId4Vci {\n        withIssuerUrl(\"https://issuer.com\")\n        withClientId(\"client-id\")\n        withAuthFlowRedirectionURI(\"eudi-openid4ci://authorize\")\n    }\n    // configuration for proximity presentation\n    // the values below are the default values\n    .configureProximityPresentation(\n        // ble mode: peripheral and/or central\n        enableBlePeripheralMode = true,\n        enableBleCentralMode = false,\n        clearBleCache = true,\n        // registered application service for handling NFC device engagement\n        nfcEngagementServiceClass = MyNfcEngagementService::class.java\n    )\n    // mandatory configuration for OpenId4Vp if you want to enable\n    // remote presentation of documents with OpenId4Vp\n    .configureOpenId4Vp {\n        withEncryptionAlgorithms(\n            EncryptionAlgorithm.ECDH_ES\n        )\n        withEncryptionMethods(\n            EncryptionMethod.A128CBC_HS256,\n            EncryptionMethod.A256GCM\n        )\n        withClientIdSchemes(\n            ClientIdScheme.X509SanDns\n        )\n        withSchemes(\n            \"openid4vp\",\n            \"eudi-openid4vp\",\n            \"mdoc-openid4vp\"\n        )\n        withFormats(\n            Format.MsoMdoc, \n            Format.SdJwtVc.ES256\n        )\n    }\n\nval wallet = EudiWallet(context, config)\n</code></pre> <p><code>EudiWallet.Builder</code> allows you to configure the library with custom implementations of the built-in components.</p> <p>The following example demonstrates how to initialize the library with custom implementations for StorageEngine, SecureArea, ReaderTrustStore, and Logger:</p> <pre><code>val wallet = EudiWallet(context, config) {\n    // custom StorageEngine to store documents' data\n    withStorageEngine(myStorageEngine)\n    // a list of SecureArea implementations to be used\n    withSecureAreas(listOf(deviceSecureArea, cloudSecureArea))\n    // ReaderTrustStore to be used for reader authentication\n    withReaderTrustStore(myReaderTrustStore)\n    // custom logger to be used\n    withLogger(myLogger)\n}\n</code></pre> <p>See the CustomizeSecureArea.md for more information on how to use the wallet-core library with custom SecureArea implementations.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/","title":"Manage Documents","text":"<p>Home / Build / Build your Wallet / Android / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#manage-documents","title":"Manage Documents","text":"<p>The library provides a set of methods to work with documents.</p> <pre><code>val documents = wallet.getDocuments()\n</code></pre> <p>You can also retrieve documents based on a predicate. The following snippet shows how to retrieve documents of mso_mdoc format of a specific docType:</p> <pre><code>val documents = wallet.getDocuments { document -&gt;\n    (document.format as MsoMdocFormat).docType == \"eu.europa.ec.eudi.pid.1\"\n}\n</code></pre> <p>The following snippet shows how to retrieve a document by its id:</p> <pre><code>val documentId = \"some_document_id\"\nval document: Document? = wallet.getDocumentById(documentId)\n</code></pre> <p>To delete a document, use the following code snippet:</p> <pre><code>try {\n    val documentId = \"some_document_id\"\n    val deleteResult = wallet.deleteDocumentById(documentId)\n    deleteResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#creating-and-storing-a-new-document","title":"Creating and storing a new document","text":"<p>Adding a new document to the wallet is a two-step process. First, a new document must be created using the <code>createDocument</code> method. The method returns an <code>UnsignedDocument</code> object that contains the keys that will be used for signing the proof of possession for the issuer. Creating a new document requires the document format and the create key settings. The create key settings can be used to specify the way the keys are created.</p> <p>When using the built-in <code>AndroidKeystoreSecureArea</code> implementation of the library, the <code>wallet.getDefaultCreateDocumentSettings()</code> extension can be used to create an instance of the appropriate <code>CreateDocumentSettings</code> class.</p> <p>After the document is created, the user must retrieve the document's data from the issuer and store it in the wallet using the storeIssuedDocument method.</p> <p>The following snippet demonstrates how to create a new document for the mso_mdoc format, using library's default implementation of CreateDocumentSettings.</p> <pre><code>try {\n    // create a new document\n    // Construct the CreateDocumentSettings object\n    val createSettings = wallet.getDefaultCreateDocumentSettings()\n\n    val createDocumentResult = wallet.createDocument(\n        format = MsoMdocFormat(docType = \"eu.europa.ec.eudi.pid.1\"),\n        createSettings = createSettings\n    )\n    val unsignedDocument = createDocumentResult.getOrThrow()\n    val publicKeyBytes = unsignedDocument.publicKeyCoseBytes\n\n    // prepare keyUnlockData to unlock the key\n    // here we use the default key unlock data for the document\n    // provided by the library\n    val keyUnlockData = unsignedDocument.DefaultKeyUnlockData\n    // proof of key possession\n    // Sign the documents public key with the private key\n    // before sending it to the issuer\n    val signatureResult =\n        unsignedDocument.sign(publicKeyBytes, keyUnlockData = keyUnlockData)\n    val signature = signatureResult.getOrThrow().toCoseEncoded()\n\n    // send the public key and the signature to the issuer\n    // and get the document data\n    val documentData = sendToIssuer(\n        publicKeyCoseBytes = publicKeyBytes,\n        signatureCoseBytes = signature\n    )\n\n    // store the issued document with the document data received from the issuer\n    val storeResult =\n        wallet.storeIssuedDocument(unsignedDocument, documentData)\n\n    // get the issued document\n    val issuedDocument = storeResult.getOrThrow()\n} catch (e: Throwable) {\n    // Handle the exception\n}\n\n// ...\n\nfun sendToIssuer(publicKeyCoseBytes: ByteArray, signatureCoseBytes: ByteArray): ByteArray {\n    TODO(\"Send publicKey and proof of possession signature to issuer and retrieve document's data\")\n}\n</code></pre> <p>Important!: In the case of <code>DocumentFormat.MsoMdoc</code>, the <code>DocumentManager.storeIssuedDocument()</code>  method expects the document's data to be in CBOR bytes and have the IssuerSigned structure according to ISO 23220-4.</p> <p>Currently, the library does not support IssuerSigned structure without the <code>nameSpaces</code> field.</p> <p>The following CDDL schema describes the structure of the IssuerSigned structure:</p> <pre><code>IssuerSigned = {\n ?\"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n \"issuerAuth\" : IssuerAuth ; Contains the mobile security object (MSO) for issuer data authentication\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItemBytes = #6.24(bstr .cbor IssuerSignedItem)\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\nIssuerAuth = COSE_Sign1 ; The payload is MobileSecurityObjectBytes\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Library%20Level/Manage%20Documents/#working-with-sample-documents","title":"Working with sample documents","text":"<p>The wallet-core library provides a method to load sample documents easily. This feature is useful for demonstration or testing purposes.</p> <p>Currently, the library supports loading sample documents in MsoMdoc format.</p> <p>The following code snippet shows how to load sample documents:</p> <pre><code>val sampleMdocDocuments: ByteArray = readFileWithSampleData()\n\nval createSettings = wallet.getDefaultCreateDocumentSettings()\nval loadResult = wallet.loadMdocSampleDocuments(\n    sampleData = sampleMdocDocuments,\n    createSettings = createSettings,\n    documentNamesMap = mapOf(\n        \"eu.europa.ec.eudi.pid.1\" to \"EU PID\",\n        \"org.iso.18013.5.1.mDL\" to \"mDL\"\n    )\n)\n\nval documentIds: List&lt;DocumentId&gt; = loadResult.getOrThrow()\n\n// ...\n\nfun readFileWithSampleData(): ByteArray = TODO(\"Reads the bytes from file with sample documents\")\n</code></pre> <p>Sample documents must be in CBOR format with the following structure:</p> <pre><code>Data = {\n \"documents\" : [+Document] ; Sample documents\n}\nDocument = {\n \"docType\" : DocType, ; Document type returned\n \"issuerSigned\" : IssuerSigned ; Data elements\n}\nIssuerSigned = {\n \"nameSpaces\" : IssuerNameSpaces, ; Returned data elements\n}\nIssuerNameSpaces = { ; Returned data elements for each namespace\n + NameSpace =&gt; [ + IssuerSignedItemBytes ]\n}\nIssuerSignedItem = {\n \"digestID\" : uint, ; Digest ID for issuer data authentication\n \"random\" : bstr, ; Random value for issuer data authentication\n \"elementIdentifier\" : DataElementIdentifier, ; Data element identifier\n \"elementValue\" : DataElementValue ; Data element value\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/","title":"Build the App","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/#build-the-app","title":"Build the App","text":""},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/#overview","title":"Overview","text":"<p>This guide assists developers in building the EUDI Wallet application on Android.</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/#setup-eudi-wallet-application-on-android","title":"Setup EUDI Wallet application on Android","text":"<p>To build the application using the source code and connect it with the issuer and verifier, follow the next steps:</p> <ol> <li>Download and install Android Studio and its associated tools by following the official setup guide. Using the latest stable version is recommended.</li> <li>Clone the Android repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-android-wallet-ui.git</code></li> <li>Open the project in Android Studio.</li> <li> <p>Configure the Build Variant by navigating to Build -&gt; Select Build Variant and from the tool window you can click on the \"Active Build Variant\" of the module \":app\" and select the one you prefer. It will automatically apply to the other modules as well.</p> <p>The application has two product flavors:</p> <pre><code>- \"Dev\", which communicates with the services deployed in an environment based on the latest main branch.\n- \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.\n</code></pre> <p>and two Build Types:</p> <pre><code>- \"Debug\", which has full logging enabled.\n- \"Release\", which has no logging enabled.\n</code></pre> <p>which, ultimately, result in the following Build Variants:</p> <pre><code>- \"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\"\n</code></pre> </li> <li> <p>The App can be executed both on a device or on an emulator:</p> <ol> <li>To run the App on a device, firstly you must connect your device with the Android Studio, and then go to Run -&gt; Run 'app'.</li> <li>To run the App on an emulator, simply go to Run -&gt; Run 'app'.</li> </ol> </li> <li> <p>Finally, the App needs to be connected with an Issuer and a Verifier either locally, or remotely.</p> <ol> <li>Follow the instructions to run remotely.</li> <li>Follow the instructions to run locally.</li> </ol> </li> <li> <p>(Optional) Follow the instructions if self-signed certificates are required.</p> </li> </ol> <p>Check the full list of configuration options</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Local%20Services/","title":"Run with Local Services","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Local%20Services/#run-with-local-services","title":"Run with Local Services","text":"<p>The first step is to ensure all three services are running locally on your machine, you can follow these Repositories for further instructions:</p> <ul> <li>Issuer</li> <li>Web Verifier UI</li> <li>Web Verifier Endpoint</li> </ul> <p>After this, assuming you have everything running locally, you need to change the contents of the ConfigWalletCoreImpl file from: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre> into something like this: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"local_IP_address_of_issuer\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>for example: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://192.168.1.1:5000\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>Finally, you also have to change the content of the network_security_config.xml file and allow HTTP traffic to this: <pre><code>&lt;network-security-config&gt;\n    &lt;base-config cleartextTrafficPermitted=\"true\" /&gt;\n&lt;/network-security-config&gt;\n</code></pre></p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Remote%20Services/","title":"Run with Remote Services","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Running%20with%20Remote%20Services/#run-with-remote-services","title":"Run with Remote Services","text":"<p>The app is configured to use some configuration in the two ConfigWalletCoreImpl.kt files (located in the \"core-logic\" module, in either</p> <p><code>src\\dev\\java\\eu\\europa\\ec\\corelogic\\config</code> or <code>src\\demo\\java\\eu\\europa\\ec\\corelogic\\config</code>,</p> <p>depending on the flavor of your choice).</p> <p>These are the contents of the ConfigWalletCoreImpl file (dev flavor) and you don't need to change anything:</p> <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Self-signed%20Certificates/","title":"Self-signed Certificates","text":"<p>Home / Build / Build your Wallet / Android / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/Android/Wallet%20Application%20Level/Self-signed%20Certificates/#self-signed-certificates","title":"Self-signed Certificates","text":"<p>This section describes how to configure the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new Kotlin file ProvideKtorHttpClient.kt and place it into the <code>src\\main\\java\\eu\\europa\\ec\\corelogic\\config</code> package.</li> <li>Copy and paste the following code into your newly created ProvideKtorHttpClient.kt file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Finally, add this custom HttpClient to the EUDI Wallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> </ol>"},{"location":"Build/Build%20your%20Wallet/iOS/","title":"Index","text":"<p>Home </p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/","title":"Library Level","text":"<p>Home / Build / Build your Wallet / iOS / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/#eudi-wallet-kit-library-for-ios","title":"EUDI Wallet Kit library for iOS","text":""},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Kit library for iOS. The library is part of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator, by orchestrating the various components that are required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library provides the following functionality:</p> <ul> <li>Document management<ul> <li> Storage encryption</li> <li> Using iOS Secure Enclave for generating/storing documents' keypair</li> <li> Enforcing device user authentication when retrieving documents' private keys</li> </ul> </li> <li>Document issuance<ul> <li> Support for OpenId4VCI document issuance<ul> <li> Authorization Code Flow</li> <li> Pre-authorization Code Flow</li> <li> Support for mso_mdoc format</li> <li> Support for sd-jwt-vc format</li> <li> Support credential offer</li> <li> Support for DPoP JWT in authorization</li> <li> Support for JWT and CWT proof types</li> <li> Support for deferred issuing</li> </ul> </li> </ul> </li> <li>Proximity document presentation<ul> <li> Support for ISO-18013-5 device retrieval<ul> <li> QR device engagement</li> <li> BLE data transfer</li> </ul> </li> </ul> </li> <li>Remote document presentation<ul> <li> OpenId4VP document transfer<ul> <li> For pre-registered verifiers</li> <li> Dynamic registration of verifiers</li> </ul> </li> </ul> </li> </ul> <p>The library is written in Swift and is compatible with iOS 14 or higher. It is distributed as a Swift package and can be included in any iOS project.</p> <p>It is based on the following specifications:</p> <ul> <li>ISO/IEC 18013-5 \u2013 Published</li> <li>Presentation Exchange v2.0.0 - Published</li> <li>OpenID4VP \u2013 Draft 18</li> <li>SIOPv2 \u2013 Draft</li> </ul>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Kit/","title":"Build the Kit","text":"<p>Home / Build / Build your Wallet / iOS / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Kit/#build-the-kit","title":"Build the Kit","text":"<p>To use EUDI Wallet Kit, add the following dependency to your Package.swift: <pre><code>dependencies: [\n    .package(url: \"https://github.com/eu-digital-identity-wallet/eudi-lib-ios-wallet-kit.git\", .upToNextMajor(from: \"0.6.6\"))\n]\n</code></pre></p> <p>Then add the Eudi Wallet package to your target's dependencies: <pre><code>dependencies: [\n    .product(name: \"EudiWalletKit\", package: \"eudi-lib-ios-wallet-kit\"),\n]\n</code></pre></p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Kit/#reference","title":"Reference","text":"<p>For detailed documentation, refer to the DocC documentation available in the project's repository.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Build%20the%20Kit/#initialisation","title":"Initialisation","text":"<p>The library provides a unified API for the two user attestation presentation flows. It is initialized with a document storage manager instance. For SwiftUI apps, the wallet instance can be added as an <code>environmentObject</code> to be accessible from all views. A KeyChain implementation of document storage is available.</p> <p>The wallet developer can customize cryptographic key operations by passing <code>SecureArea</code> instances to the wallet, otherwise the wallet-kit creates 'SecureEnclave' (default) and 'Software' secure areas. The wallet developer can specify key creation options per doc-type such as curve type, secure area name, and key unlock policy.</p> <pre><code>let wallet = try! EudiWallet(serviceName: \"my_wallet_app\",\n   trustedReaderCertificates: [Data(name: \"eudi_pid_issuer_ut\", ext: \"der\")!] )\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/","title":"Manage Documents","text":"<p>Home / Build / Build your Wallet / iOS / Library Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#manage-documents","title":"Manage Documents","text":"<p>The library provides a set of methods to work with documents.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#load-documents","title":"Load Documents","text":"<p>The <code>loadDocuments</code> method returns documents with a specific status from storage.</p> <p>The following example shows how to retrieve issued documents:</p> <pre><code> public func loadDocuments() async throws {\n    let documents = try await wallet.loadDocuments(status: .issued)\n  }\n</code></pre> <p>To retrieve documents of all statuses use the <code>loadAllDocuments</code> method.</p> <pre><code>let documents = try await wallet.loadAllDocuments()\n</code></pre> <p>The <code>loadDocument(id:status:)</code> method returns a document with a given id and status. </p> <p>The following example shows how to retrieve a document:</p> <pre><code>let document = try await wallet.loadDocument(id: documentId, status: .issued)\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#storage-manager","title":"Storage Manager","text":"<p>The read-only property <code>storage</code> is an instance of a StorageManager class. Currently the keychain implementation is used. It provides document management functionality using the iOS KeyChain.</p> <p>The storage model provides the following models for the supported well-known document types:</p> DocType Model eu.europa.ec.eudiw.pid.1 EuPidModel org.iso.18013.5.1.mDL IsoMdlModel <p>Since the issued mDoc documents that are retrieved expose only basic metadata and raw data, they must be decoded into the corresponding CBOR models. The library provides the <code>StorageManager\\toClaimsModel</code> function to decode document raw CBOR data to strongly-typed models conforming to DocClaimsDecodable protocol. </p> <p>The loading functions automatically update the members of the <code>StorageManager</code>. The decoded issued documents are available in the <code>docModels</code> property. The deferred and pending documents are available in the <code>StorageManager\\deferredDocuments</code> and <code>StorageManager\\pendingDocuments</code> properties respectively.</p> <p>For other document types the GenericMdocModel is provided.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Library%20Level/Manage%20Documents/#delete-documents","title":"Delete Documents","text":"<p>The <code>deleteDocument(id:)</code> method that deletes a document with the given id.</p> <p>The following example shows how to delete a document:</p> <pre><code>try await wallet.deleteDocument(id: documentId)\n</code></pre>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/","title":"Build the App","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/#build-the-app","title":"Build the App","text":""},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/#overview","title":"Overview","text":"<p>This guide aims to assist developers to build the EUDI Wallet application on iOS.</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/#setup-eudi-wallet-application-on-ios","title":"Setup EUDI Wallet application on iOS","text":"<ol> <li>Download and install Xcode and its associated tools by following the official setup guide. Using the latest stable version is recommended.</li> <li>Clone the iOS repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-ios-wallet-ui.git</code></li> <li>Open the project file in Xcode.</li> <li> <p>The application has two schemes: \"EUDI Wallet Dev\" and \"EUDI Wallet Demo\" that can be configured in the xcconfig files located under the Config folder in the project.</p> <p>The application has two product flavors:</p> <pre><code>- \"Dev\", which communicates with the services deployed in an environment based on the latest main branch.\n- \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.\n</code></pre> <p>and two Build Types:</p> <pre><code>- \"Debug\", which has full logging enabled, used when running the app from within Xcode.\n- \"Release\", which has no logging enabled, used when running the app after it has been distributed via a distribution platform, currently TestFlight.\n</code></pre> <p>which, ultimately, result in the following Build Variants:</p> <pre><code>- \"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\"\n</code></pre> </li> <li> <p>The App can be executed both on a device or on an emulator:</p> <ol> <li>To run the app on the simulator, select your app schema and press Run.</li> <li>To run the app on a device, follow similar steps to running it on the simulator. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</li> </ol> </li> <li> <p>Finally, the App needs to be connected with an Issuer and a Verifier either locally, or remotely.</p> <ol> <li>Follow the instructions to run remotely.</li> <li>Follow the instructions to run locally.</li> </ol> </li> <li> <p>(Optional) Follow the instructions if self-signed certificates are required.</p> </li> </ol> <p>For a complete list of all configuration options, refer to this document</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Local%20Services/","title":"Run with Local Services","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Local%20Services/#run-with-local-services","title":"Run with Local Services","text":"<ol> <li> <p>In order for the application to interact with locally running services; these must first be running on your machine. Please follow the instructions in the links below in order to have these services running locally:</p> <ul> <li>Issuer</li> <li>Web Verifier UI</li> <li>Web Verifier Endpoint</li> </ul> </li> <li> <p>In addition to the change above, you also need to allow self-signed certificates as described here.</p> </li> </ol>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Remote%20Services/","title":"Run with Remote Services","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Running%20with%20Remote%20Services/#run-with-remote-services","title":"Run with Remote Services","text":"<p>The app is configured to the type (debug/release) and variant (dev/demo) in the four xcconfig files. These are the contents of the xcconfig file and you don't need to change anything if you don't want to:</p> <pre><code>BUILD_TYPE = RELEASE\nBUILD_VARIANT = DEMO\n</code></pre> <p>The values defined in the <code>.xcconfig</code> files are utilized within instances of <code>WalletKitConfig</code> and <code>RQESConfig</code> to assign the appropriate configurations. These configurations are selected based on the specified build type and build variant defined in the <code>.xcconfig</code> files.</p> <p>Instances of <code>ConfigLogic</code> are responsible for interpreting the raw string values extracted from the <code>.xcconfig</code> files and converting them into appropriate data types.</p> <pre><code>/**\n * Build type.\n */\nvar appBuildType: AppBuildType { get }\n\n/**\n * Build variant.\n */\nvar appBuildVariant: AppBuildVariant { get }\n</code></pre> <p>Using this parsed information, instances such as <code>WalletKitConfig</code> and <code>RQESConfig</code> can determine and assign their specific configurations based on the defined build type and variant.</p> <p>For instance, here's how <code>WalletKitConfig</code> resolves its configuration for OpenID4VCI remote services based on the build variant:</p> <pre><code>var vciConfig: VciConfig {\n    switch configLogic.appBuildVariant {\n    case .DEMO:\n        return .init(\n            issuerUrl: \"https://issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    case .DEV:\n        return .init(\n            issuerUrl: \"https://dev.issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    }\n}\n</code></pre> <p>In this example, the <code>vciConfig</code> property dynamically assigns configurations such as <code>issuerUrl</code>, <code>clientId</code>, and <code>redirectUri</code> based on the current appBuildVariant. This ensures that the appropriate settings are applied for each variant (e.g., .<code>DEMO</code> or <code>.DEV</code>).</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Self-signed%20Certificates/","title":"Self-signed Certificates","text":"<p>Home / Build / Build your Wallet / iOS / Wallet Application Level</p>"},{"location":"Build/Build%20your%20Wallet/iOS/Wallet%20Application%20Level/Self-signed%20Certificates/#self-signed-certificates","title":"Self-signed Certificates","text":"<p>In order for the app to interact with locally running service the following changes need to be done:</p> <ol> <li> <p>Before running the app in the simulator add these lines of code to the top of the file WalletKitController just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> </li> <li> <p>Once the above is in place, add the following line in the initializer in order for the app to interact with web services that rely on self-signed certificates:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> </li> </ol>"},{"location":"Reference%20Implementation/","title":"Index","text":"<p>Home</p>"},{"location":"Reference%20Implementation/#eudi-wallet-reference-implementation","title":"EUDI Wallet Reference Implementation","text":"<p>The EUDI Wallet Reference Implementation consists of open-source code libraries and a reference application, which are publicly available and ready for Member States and stakeholders to use in building their own applications.</p> <p>Its goal is to showcase a robust and interoperable platform for digital identification, authentication and electronic signatures based on common standards across the European Union.</p> <p>The Reference Implementation can be used by wallet providers, issuers and Relying Parties as a basis for their own solution. It also includes a set of testing tools to support testing and ensure that your implementation meets functional requirements.</p> <p>Check GitHub for more details and the repositories</p>"},{"location":"Reference%20Implementation/#check-out-the-roadmap-to-discover-upcoming-features","title":"Check out the roadmap to discover upcoming features","text":"<p>New features are regularly added to the reference implementation. The roadmap of the EUDI Wallet Reference Implementation provides a transparent view of the features and enhancements that are currently being developed or planned for the future. Its purpose is to promote open communication and collaboration within our community.</p> <p>View the roadmap of the EUDI Wallet reference implementation</p> <p>Join the discussion on the Reference Implementation Roadmap</p>"},{"location":"Reference%20Implementation/#start-your-solution","title":"Start your solution","text":"<p>Leverage the EUDI Wallet Reference Implementation to build and test your solution:</p> <ul> <li>Build your Solution</li> <li>Test your Solution</li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/","title":"Code Contributions","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Code%20Contributions/#code-contributions","title":"Code Contributions","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check whether the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"Reference%20Implementation/Code%20Contributions/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> branch for your changes.    <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre></li> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.    <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre></li> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"Reference%20Implementation/Code%20Contributions/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before committing them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-mention   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set the respective comments in your GitHub review as resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"Reference%20Implementation/Code%20Contributions/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when openning an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"Reference%20Implementation/Code%20Contributions/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released under a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/","title":"Code of Conduct","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#code-of-conduct","title":"Code of Conduct","text":""},{"location":"Reference%20Implementation/Code%20of%20Conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contribute to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned with this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"Reference%20Implementation/Code%20of%20Conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"Reference%20Implementation/Disclaimer/","title":"Disclaimer","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Disclaimer/#disclaimer","title":"Disclaimer","text":"<p>The released software is an initial development release version:</p> <ul> <li>The initial development release is an early endeavor reflecting the efforts of a short, time-boxed period, and by no means should be considered as the final product.</li> <li>The initial development release may be changed substantially over time, might introduce new   features but also may change or remove existing ones, potentially breaking compatibility with your   existing code.</li> <li>The initial development release is limited in functional scope.</li> <li>The initial development release may contain errors or design flaws and other problems that could   cause system or other failures and data loss.</li> <li>The initial development release has reduced security, privacy, availability, and reliability   standards relative to future releases. This could make the software slower, less reliable, or more   vulnerable to attacks than mature software.</li> <li>The initial development release is not yet comprehensively documented.</li> <li>Users of the software must perform sufficient engineering and additional testing in order to properly evaluate their application and determine whether any of the open-sourced components are suitable for use in that application.</li> <li>We strongly recommend not putting this version of the software into production use.</li> <li>Only the latest version of the software will be supported</li> </ul>"},{"location":"Reference%20Implementation/Licensing/","title":"Licensing","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Licensing/#licensing","title":"Licensing","text":"<p>EUDI Wallet is an open-source code base provided to the community in order to build their solutions on top. Therefore, the licenses covering it are the following:</p> <ul> <li>For libraries and the core element, Apache 2.0 license is used.</li> <li>For the Wallet application (Android and iOS) EUPL-1.2 license is used.</li> </ul>"},{"location":"Reference%20Implementation/Demos/","title":"Index","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Demos/#demos","title":"Demos","text":"<p>EUDI Wallets or simply Wallets simplify the lives of citizens and businesses in many ways; making data more secure and private. It will also improve security and flexibility for governments and businesses when carrying out transactions online.</p> <p>Available use cases:</p> <ol> <li>Travel Scenario</li> <li>More to come shortly. Stay tuned...</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/","title":"Travel Scenario","text":"<p>Home</p>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#travel-scenario","title":"Travel Scenario","text":"<p>The Reference Implementation includes the travel use case implementation to showcase the utilization of the EUDI Wallet in a \u2018Travel\u2019 scenario, where the EUDI Wallet is used for several purposes, such as presenting attestations (remotely and in proximity) as well as digitally signing documents.</p>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#use-case","title":"Use Case","text":"<ol> <li>Jane is preparing for her next trip with the help of her EUDI Wallet. Jane starts by securing her essential travel documents. She issues her Digital Identity, Mobile Driving License, and Photo-ID directly into her EUDI Wallet. Each document is safely stored, ready to be accessed whenever she needs them.</li> <li>Booking: With her documents in place, Jane navigates to the travel booking portal. Here, she effortlessly presents her Digital ID and other necessary documents requested by the booking portal from her EUDI Wallet to book her car rental and hotel.</li> <li>Renting a car: When it comes to renting a car, Jane is redirected to a remote signing portal to conclude the rental process. Using her EUDI Wallet, she digitally signs the car rental contract, finalizing her arrangements with security and ease.</li> <li>Hotel check-in: Upon arrival at her hotel, Jane approaches the check-in counter. She presents her Digital ID and Photo-ID from her EUDI Wallet to the hotel\u2019s proximity reader. The process is quick and secure, allowing her to start relaxing in her room in no time.</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#test-online-or-run-locally","title":"Test online or run locally","text":"<ol> <li>Download the EUDI Wallet Reference Implementation application.</li> <li>Access the demo booking service.</li> </ol>"},{"location":"Reference%20Implementation/Demos/Travel%20Scenario/#user-journey","title":"User Journey","text":"<ol> <li> <p>User is preparing for a trip with the help of her EUDI Wallet</p> <ol> <li>User issues the necessary identification documents, i.e. Digital Identity, Mobile Driving License and Photo-ID</li> <li>User navigates to the issuance service and follows the process to complete the issuance of the needed documents</li> <li>Identification documents are successfully issued to the EUDI Wallet</li> </ol> </li> <li> <p>User makes a reservation</p> <ol> <li>User navigates to the booking service</li> <li>User fills in the required data for the booking reservation:<ol> <li>Number of Guests</li> <li>Number of Rooms</li> <li>Check In/Out dates</li> <li>Option to include \u2018car rental\u2019 in the reservation</li> </ol> </li> <li>User is requested to present the required attestations from the EUDI Wallet (note: depending on the scenario, the user scans the rendered QR-code or selects the deep-link in cross-device or same-device flows respectively)</li> <li>User receives the presentation request from the booking service and consents to the presentation of the requested attestations</li> </ol> </li> <li>User reviews reservation details<ol> <li>User can view a summary of the reservation details, based on the previously added data as well as the attestations shared from the EUDI Wallet</li> <li>User selects to add the reservation confirmation to the EUDI Wallet<ol> <li>User scans the rendered QR-code</li> <li>Following the issuance process in the EUDI Wallet, the \u2018reservation confirmation\u2019 is added to the EUDI Wallet</li> </ol> </li> </ol> </li> <li>User selects to sign the \u2018car rental contract\u2019<ol> <li>User downloads a template car rental contract from the corresponding link</li> <li>User selects to sign the car rental contract and is navigated to the external trust service, which prompts the user to remotely sign the uploaded car rental contract</li> </ol> </li> <li>User checks-in at the hotel:<ol> <li>User approaches the reader at the hotel check-in (note: the available proximity verifier can be utilized to mock the \u2018reader\u2019 service at a hotel)</li> <li>User presents the QR-code from the EUDI Wallet, which is scanned from the proximity verifier</li> <li>User receives the presentation request for the \u2018Photo-ID\u2019 and the \u2018Reservation\u2019 attestations</li> <li>User consents to present the attestations, which are successfully received by the proximity verifier</li> </ol> </li> </ol> <p>You can also run the booking service locally. Instructions for this available in GitHub.</p>"},{"location":"Resources/","title":"Resources","text":"<p>Home / Resources</p>"},{"location":"Resources/#eudi-wallet-resources","title":"EUDI Wallet Resources","text":"<p>To support your introduction to the EUDI Wallet, we\u2019ve gathered essential resources that provide a comprehensive foundation. Dive into technical specifications, explore the regulatory framework, and gain insights from real-world pilot projects. These materials are designed to help you understand the EUDI Wallet from all critical perspectives.</p>"},{"location":"Resources/#master-the-architecture-and-reference-framework","title":"Master the Architecture and Reference Framework","text":"<p>Discover the key specifications and guidelines needed to develop an interoperable EUDI Wallet solution. This framework provides a solid foundation based on common standards and best practices to ensure seamless integration and functionality. </p> <p>The Architecture and Reference Framework (ARF) outlines the specifications required to develop an interoperable European Digital Identity (EUDI) Wallet Solution based on common standards and practices. It defines high-level requirements to ensure consistent implementation across Member States.</p> <p>The Architecture and Reference Framework (ARF) is a work in progress that is continuously updated. It reflects the collaborative efforts among the 27 Member States, the European Commission, and, where relevant, private sector operators.</p> <p>Review the latest updates on the ARF</p>"},{"location":"Resources/#delve-into-the-applicable-technical-standards-and-specifications","title":"Delve into the applicable Technical Standards and Specifications","text":"<p>The European Digital Identity Wallet initiative is supported by ongoing work to define and align relevant standards and technical specifications with the relevant Implementing Acts establishing the European Digital Identity Framework. For more information, please refer to the following resources:</p> <ul> <li>Ongoing Workstream on Standards and Technical Specifications</li> <li>List of Technical Specifications</li> </ul>"},{"location":"Resources/#discover-the-eudi-wallet-reference-implementation","title":"Discover the EUDI Wallet Reference Implementation","text":"<p>The EUDI Wallet Reference Implementation consists of open-source code libraries and a reference application, which are publicly available and ready for Member States and stakeholders to use in building their own applications.</p> <p>Its goal is to showcase a robust and interoperable platform for digital identification, authentication and electronic signatures based on common standards across the European Union.</p> <p>The Reference Implementation can be used by wallet providers, issuers and Relying Parties as a basis for their own solution. It also includes a set of testing tools to support testing and ensure that your implementation meets functional requirements.</p> <p>Check GitHub for more details and the repositories</p>"},{"location":"Resources/Architecture%20and%20Reference%20Implementation/","title":"Architecture and Reference Implementation","text":"<p>Home</p>"},{"location":"Resources/Architecture%20and%20Reference%20Implementation/#architecture-and-reference-framework","title":"Architecture and Reference Framework","text":"<p>The Architecture and Reference Framework (ARF) outlines the specifications required to develop an interoperable European Digital Identity (EUDI) Wallet Solution based on common standards and practices. It defines high-level requirements to ensure consistent implementation across Member States.</p> <p>The Architecture and Reference Framework (ARF) is a work in progress that is continuously updated. It reflects the collaborative efforts among the 27 Member States, the European Commission, and, where relevant, private sector operators.</p> <p>Review the latest version of the ARF</p>"},{"location":"Resources/Architecture%20and%20Reference%20Implementation/#check-out-the-roadmap-to-see-what-is-coming-next","title":"Check out the roadmap to see what is coming next","text":"<p>New epics are analysed in the ARF. The ARF roadmap provides a transparent view of the new epics currently being discussed or planned for the future. Its purpose is to promote open communication and collaboration in our community.</p> <p>View the ARF roadmap</p>"},{"location":"Resources/Architecture%20and%20Reference%20Implementation/#contributions-and-discussion","title":"Contributions and discussion","text":"<p>We welcome contributions to the ARF. Whether it's fixing a bug, proposing a new feature, or improving documentation, we appreciate any and all contributions that can help make the ARF better. Read the contribution guidelines. </p> <p>Join the discussion on ARF</p>"},{"location":"Resources/Large-Scale%20Pilots/","title":"Large Scale Pilots","text":"<p>Home</p>"},{"location":"Resources/Large-Scale%20Pilots/#eudi-wallet-large-scale-pilots","title":"EUDI Wallet Large-Scale Pilots","text":"<p>In May 2023, four Large-Scale Pilot projects were launched to rigorously test and prepare the EU Digital Identity Wallet for secure and seamless deployment. These Pilots involve approximately 360 entities, including private companies and public authorities, from 26 Member States, Norway, Iceland, and Ukraine. The projects are co-funded by European Commission grants and guided by EUDI Wallet technical specifications. Running until 2025, the pilots are structured as consortia, combining public and private sector expertise across the EU.</p> <p>The Pilots aim to validate the wallet's functionality in real-life scenarios, by gathering feedback on the reference implementation to enhance its security, interoperability, and overall design. These efforts focus on practical use cases that Europeans encounter daily, spanning 11 key areas such as accessing government services, opening bank accounts, and facilitating travel.</p> Pilot Focus EUDI Wallet Consortium (EWC) Focuses on Digital Travel Credentials, building on the reference wallet application to streamline cross-border travel. POTENTIAL Explores innovations across six digital identity sectors, including governmental services, banking, telecommunications, and healthcare. NOBID Led by Nordic and Baltic countries with Germany and Italy, this pilot tests the EUDI Wallet in payments. DC4EU Targets education and social security, supporting the integration of cross-border digital service infrastructures within a trust framework."},{"location":"Resources/Regulation/","title":"Regulation","text":"<p>Home</p>"},{"location":"Resources/Regulation/#eudi-wallet-regulation","title":"EUDI Wallet Regulation","text":"<p>Regulation (EU) 2024/1183  establishing the European Digital Identity Framework has entered into force. The framework mandates Member States to provide EU Digital Identity (eID) Wallets to citizens within 24 months of Implementing Acts adoption. </p> <p>All the Implementing Acts  that have been adopted until now, and lay down the rules for the core functionalities and certification of the eID Wallets. </p>"},{"location":"Resources/Standards/","title":"Standards","text":"<p>Home</p>"},{"location":"Resources/Standards/#standards","title":"Standards","text":"<p>EUDI Wallet Reference Implementation is based on the latest standards of ISO, OpenID and ETSI. Key standards include:</p> <ul> <li>ISO/IEC 18013-5 \u2013 International standard for mobile driving license (mDL) and digital credentials.</li> <li>OpenID4VP &amp; OpenID4VCI \u2013 OpenID standards for Verifiable Presentations (VP) and Verifiable Credential Issuance (VCI), ensuring secure authentication and credential exchange.</li> <li>ETSI TS 119 432 - Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation.</li> <li>CSC - Cloud Signature Consortium (CSC) API v2.0 specification.</li> </ul>"},{"location":"Test/","title":"Test","text":"<p>Home / Test</p>"},{"location":"Test/#test-your-solution","title":"Test your Solution","text":"<p>In this section, you will find a set of pre-built testing tools to support you in validating your EUDI Wallet solution. These tools include an issuer, a verifier, and a wallet application, enabling you to assess interoperability and compliance with functional requirements. Whether you are developing a wallet, an issuer, or a verifier, you can test your solution against the corresponding tools to ensure seamless integration within the EUDI Wallet ecosystem.</p>"},{"location":"Test/#test-with-the-wallet-application","title":"Test with the Wallet Application","text":"<p>Instructions are provided on how to install the EUDI Wallet Application on your mobile phone (Android or iOS) and initialise it through issuing and presenting attestations.</p>"},{"location":"Test/#test-with-the-issuer","title":"Test with the Issuer","text":"<p>Test various issuance flows of OpenID4VCI with your wallet.</p>"},{"location":"Test/#test-with-the-online-verifier","title":"Test with the Online Verifier","text":"<p>Test how your wallet implementation responds to a credential request from a verifier. </p>"},{"location":"Test/#test-with-the-proximity-verifier","title":"Test with the Proximity Verifier","text":"<p>Use the Proximity Verifier app to test and validate your wallet implementation.</p>"},{"location":"Test/Issuer/","title":"Issuer","text":"<p>Home / Test</p>"},{"location":"Test/Issuer/#issuer","title":"Issuer","text":"<p>As part of the testing tools, we offer an issuer, that allows you to test various issuance flows of OpenID4VCI with your wallet:</p> <ul> <li>Credential Offer</li> <li>Credential Offer Pre-Authorization</li> <li>Credential Offer Deferred</li> <li>Credential Offer Dynamic</li> </ul> <p>You can test the issuance of credentials in both mDoc and SD-JWT formats. The test tools include a variety of credential types.</p> Tool Description Basic issuer Basic issuer that supports all issuance flows, in both mDoc and SD-JWT formats. Includes several credential types. Available at https://issuer.eudiw.dev/. Advanced issuance tester A more comprehensive issuance tester that enables following the different steps in the issuance flow. Supports all issuance flows, in both mDoc and SD-JWT formats. Includes several credential types.  Available at https://tester.issuer.eudiw.dev/. Locally installed Issuer Install the issuer locally. Allows you to add new credential types.  See Installation instructions and instructions on how to add new credential types."},{"location":"Test/Online%20Verifier/","title":"Online Verifier","text":"<p>Home / Test</p>"},{"location":"Test/Online%20Verifier/#online-verifier","title":"Online Verifier","text":"<p>Test how your wallet implementation responds to a credential request from a verifier. </p> <p>The test service provides extensive capabilities to test various credentials, including PID. You can also create custom credential requests tailored to your specific needs.</p> <p>Test service supports both mDoc and SD-JWT formats.</p> <p>There are two options available:</p> <ul> <li>https://verifier.eudiw.dev/ </li> <li>https://tester.relyingparty.eudiw.dev/</li> </ul>"},{"location":"Test/Proximity%20Verifier/","title":"Proximity Verifier","text":"<p>Home / Test</p>"},{"location":"Test/Proximity%20Verifier/#proximity-verifier","title":"Proximity Verifier","text":"<p>The Proximity Verifier (also referred as mDoc Verifier) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"Test/Proximity%20Verifier/#purpose","title":"Purpose","text":"<p>The Proximity Verifier app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"Test/Proximity%20Verifier/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made (the code is not currently publicly available):</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul>"},{"location":"Test/Proximity%20Verifier/#install-the-verifier","title":"Install the Verifier","text":"<p>The app is available for download from the App Center, here.</p>"},{"location":"Test/Proximity%20Verifier/#important-note","title":"Important Note","text":"<p>The Proximity Verifier app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"Test/Wallet%20Application/","title":"Wallet Application","text":"<p>Home / Test / Wallet Application</p>"},{"location":"Test/Wallet%20Application/#wallet-application","title":"Wallet Application","text":"<p>The EUDI Wallet application is available for download to your phone. The app is available for both Android and iOS devices.</p>"},{"location":"Test/Wallet%20Application/Android/","title":"Android","text":"<p>Home / Test / Wallet Application</p>"},{"location":"Test/Wallet%20Application/Android/#install-the-wallet-application","title":"Install the Wallet Application","text":""},{"location":"Test/Wallet%20Application/Android/#minimum-device-requirements","title":"Minimum Device Requirements","text":"<ul> <li>API level 26.</li> </ul>"},{"location":"Test/Wallet%20Application/Android/#installation","title":"Installation","text":"<p>You can download the application (apk file) through GitHub releases here</p> <p>For the proximity flow, you will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"Test/Wallet%20Application/Android/#app-launch","title":"App Launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"Test/Wallet%20Application/iOS/","title":"iOS","text":"<p>Home / Test / Wallet Application</p>"},{"location":"Test/Wallet%20Application/iOS/#install-the-wallet-application","title":"Install the Wallet Application","text":""},{"location":"Test/Wallet%20Application/iOS/#minimum-device-requirements","title":"Minimum Device Requirements","text":"<ul> <li>Any device that supports iOS 16.0</li> </ul>"},{"location":"Test/Wallet%20Application/iOS/#setup","title":"Setup","text":"<ol> <li>Download and install Xcode and its associated tools by following the official setup guide. Using the latest stable version is recommended.</li> <li>Clone the iOS repository using the following command:     <code>git clone git@github.com:eu-digital-identity-wallet/eudi-app-ios-wallet-ui.git</code></li> <li> <p>Make sure you have access to the dependencies below:</p> <ul> <li>iso18013-data-model</li> <li>iso18013-data-transfer</li> <li>iso18013-security</li> <li>wallet-storage</li> <li>wallet-kit</li> <li>openid4vp-swift</li> <li>presentation-exchange-swift</li> <li>openid4vci-swift</li> </ul> </li> <li> <p>To run the app on a device, select your app scheme and press Run. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</p> </li> </ol> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"Test/Wallet%20Application/iOS/#app-launch","title":"App Launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"assets/","title":"Index","text":"<p>Home</p>"},{"location":"assets/#index-of-assets","title":"Index of assets","text":""},{"location":"css/","title":"Index","text":"<p>Home</p>"},{"location":"css/#index-of-css","title":"Index of css","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/img/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/img/#index-of-eudi-doc-architecture-and-reference-frameworkdocstechnical-specificationsimg","title":"Index of eudi-doc-architecture-and-reference-framework/docs/technical-specifications/img","text":"<ul> <li>README</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp","text":"<ul> <li>-client-id</li> <li>-client-id-scheme</li> <li>-encryption-algorithm</li> <li>-encryption-method</li> <li>-format</li> <li>-jws-algorithm</li> <li>-legal-name</li> <li>-open-id4-vp-config</li> <li>-open-id4-vp-manager</li> <li>-open-id4-vp-request</li> <li>-open-id4-vp-request-processor</li> <li>-open-id4-vp-response</li> <li>-preregistered-verifier</li> <li>-processed-generic-open-id4-vp-request</li> <li>-processed-mso-mdoc-open-id4-vp-request</li> <li>-sd-jwt-vc-item</li> <li>-verifier-api</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme","text":"<ul> <li>-preregistered</li> <li>-x509-san-dns</li> <li>-x509-san-uri</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-preregistered","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered","text":"<ul> <li>-preregistered</li> <li>preregistered-verifiers</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/-preregistered/","title":"preregistered","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/Preregistered</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/-preregistered/#preregistered","title":"Preregistered","text":"<p>[androidJvm] constructor(preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/preregistered-verifiers/","title":"Preregistered verifiers","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/preregisteredVerifiers</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-preregistered/preregistered-verifiers/#preregisteredverifiers","title":"preregisteredVerifiers","text":"<p>[androidJvm] var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-dns/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-dns/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-x509-san-dns","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-dns","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-uri/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-uri/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-x509-san-uri","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-client-id-scheme/-x509-san-uri","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm","text":"<ul> <li>-e-c-d-h_-e-s</li> <li>-e-c-d-h_-e-s_-a128-k-w</li> <li>-e-c-d-h_-e-s_-a192-k-w</li> <li>-e-c-d-h_-e-s_-a256-k-w</li> <li>-e-c-d-h_1-p-u</li> <li>-e-c-d-h_1-p-u_-a128-k-w</li> <li>-e-c-d-h_1-p-u_-a192-k-w</li> <li>-e-c-d-h_1-p-u_-a256-k-w</li> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a128-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a192-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a256-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a128-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a192-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a256-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method","text":"<ul> <li>-a128-c-b-c_-h-s256</li> <li>-a128-g-c-m</li> <li>-a192-c-b-c_-h-s384</li> <li>-a192-g-c-m</li> <li>-a256-c-b-c_-h-s512</li> <li>-a256-g-c-m</li> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a128-c-b-c_-h-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128CBC_HS256/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-c-b-c_-h-s256/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a128-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a128-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a192-c-b-c_-h-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192CBC_HS384/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-c-b-c_-h-s384/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a192-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a192-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a256-c-b-c_-h-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256CBC_HS512/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-c-b-c_-h-s512/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a256-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-encryption-method/-a256-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format","text":"<ul> <li>-mso-mdoc</li> <li>-sd-jwt-vc</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-mso-mdoc/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-mso-mdoc/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-mso-mdoc","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-mso-mdoc","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-sd-jwt-vc","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc","text":"<ul> <li>-companion</li> <li>-sd-jwt-vc</li> <li>kb-jwt-algorithms</li> <li>sd-jwt-algorithms</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-sd-jwt-vc/","title":"sd jwt vc","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-sd-jwt-vc/#sdjwtvc","title":"SdJwtVc","text":"<p>[androidJvm] constructor(sdJwtAlgorithms: List&lt;Algorithm&gt;, kbJwtAlgorithms: List&lt;Algorithm&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/","title":"Kb jwt algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/kbJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/#kbjwtalgorithms","title":"kbJwtAlgorithms","text":"<p>[androidJvm] val kbJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/","title":"Sd jwt algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/sdJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/#sdjwtalgorithms","title":"sdJwtAlgorithms","text":"<p>[androidJvm] val sdJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-sd-jwt-vc-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion","text":"<ul> <li>-e-s256</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/-e-s256/","title":"e s256","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/Companion/ES256</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-format/-sd-jwt-vc/-companion/-e-s256/#es256","title":"ES256","text":"<p>[androidJvm] val ES256: Format.SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm","text":"<ul> <li>-e-s256</li> <li>-e-s256-k</li> <li>-e-s384</li> <li>-e-s512</li> <li>-ed-d-s-a</li> <li>-ed25519</li> <li>-ed448</li> <li>-h-s256</li> <li>-h-s384</li> <li>-h-s512</li> <li>-p-s256</li> <li>-p-s384</li> <li>-p-s512</li> <li>-r-s256</li> <li>-r-s384</li> <li>-r-s512</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;JwsAlgorithm&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): JwsAlgorithm</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;JwsAlgorithm&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256-k/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256-k/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s256-k","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s256-k","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-e-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed-d-s-a/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed-d-s-a/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed-d-s-a","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed-d-s-a","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed25519/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed25519/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed25519","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed25519","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed448/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed448/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed448","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-ed448","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-h-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-p-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-jws-algorithm/-r-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-legal-name/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-legal-name/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-legal-name","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-legal-name","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-config","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config","text":"<ul> <li>-builder</li> <li>client-id-schemes</li> <li>encryption-algorithms</li> <li>encryption-methods</li> <li>formats</li> <li>schemes</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/client-id-schemes/","title":"Client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] val clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] val encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-methods/","title":"Encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] val encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/formats/","title":"Formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/formats/#formats","title":"formats","text":"<p>[androidJvm] val formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/schemes/","title":"Schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] val schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-config-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder","text":"<ul> <li>-builder</li> <li>build</li> <li>client-id-schemes</li> <li>encryption-algorithms</li> <li>encryption-methods</li> <li>formats</li> <li>schemes</li> <li>with-client-id-schemes</li> <li>with-encryption-algorithms</li> <li>with-encryption-methods</li> <li>with-formats</li> <li>with-schemes</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VpConfig</p> <p>Builds the OpenId4VpConfig.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/build/#return","title":"Return","text":"<p>the OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/client-id-schemes/","title":"Client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] lateinit var clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] lateinit var encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-methods/","title":"Encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] lateinit var encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/formats/","title":"Formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/formats/#formats","title":"formats","text":"<p>[androidJvm] lateinit var formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/schemes/","title":"Schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] var schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/","title":"With client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withClientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#withclientidschemes","title":"withClientIdSchemes","text":"<p>[androidJvm] fun withClientIdSchemes(clientIdSchemes: List&lt;ClientIdScheme&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withClientIdSchemes(vararg clientIdSchemes: ClientIdScheme): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/","title":"With encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#withencryptionalgorithms","title":"withEncryptionAlgorithms","text":"<p>[androidJvm] fun withEncryptionAlgorithms(encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withEncryptionAlgorithms(vararg encryptionAlgorithms: EncryptionAlgorithm): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/","title":"With encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/#withencryptionmethods","title":"withEncryptionMethods","text":"<p>[androidJvm] fun withEncryptionMethods(encryptionMethods: List&lt;EncryptionMethod&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the issuer url.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-encryption-methods/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url <p>[androidJvm] fun withEncryptionMethods(vararg encryptionMethods: EncryptionMethod): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-formats/","title":"With formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withFormats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-formats/#withformats","title":"withFormats","text":"<p>[androidJvm] fun withFormats(formats: List&lt;Format&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the supported credential formats for the OpenId4Vp.</p> <p>[androidJvm] fun withFormats(vararg formats: Format): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/","title":"With schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/#withschemes","title":"withSchemes","text":"<p>[androidJvm] fun withSchemes(schemes: List&lt;String&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets a list of schemes for openId4Vp. By default, the scheme \"mdoc-openid4vp\" is supported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-config/-builder/with-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> schemes the list of schemes <p>[androidJvm] fun withSchemes(vararg schemes: String): &lt;Error class: unknown class&gt;</p> <p>Sets a list of schemes for openId4Vp.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-manager","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager","text":"<ul> <li>-companion</li> <li>-open-id4-vp-manager</li> <li>add-transfer-event-listener</li> <li>config</li> <li>ktor-http-client-factory</li> <li>listeners-executor</li> <li>logger</li> <li>reader-trust-store</li> <li>remove-all-transfer-event-listeners</li> <li>remove-transfer-event-listener</li> <li>request-processor</li> <li>resolve-request-uri</li> <li>send-response</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-open-id4-vp-manager/","title":"open id4 vp manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-open-id4-vp-manager/#openid4vpmanager","title":"OpenId4VpManager","text":"<p>[androidJvm] constructor(config: OpenId4VpConfig, requestProcessor: OpenId4VpRequestProcessor, logger: Logger? = null, listenersExecutor: Executor? = null, ktorHttpClientFactory: () -&gt; HttpClient? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/add-transfer-event-listener/","title":"Add transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/addTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/add-transfer-event-listener/#addtransfereventlistener","title":"addTransferEventListener","text":"<p>[androidJvm] open override fun addTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/config/#config","title":"config","text":"<p>[androidJvm] val config: OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] val ktorHttpClientFactory: () -&gt; HttpClient? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/listeners-executor/","title":"Listeners executor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/listenersExecutor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/listeners-executor/#listenersexecutor","title":"listenersExecutor","text":"<p>[androidJvm] var listenersExecutor: Executor?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/logger/#logger","title":"logger","text":"<p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-transfer-event-listener/","title":"Remove transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/remove-transfer-event-listener/#removetransfereventlistener","title":"removeTransferEventListener","text":"<p>[androidJvm] open override fun removeTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/request-processor/","title":"Request processor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/requestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/request-processor/#requestprocessor","title":"requestProcessor","text":"<p>[androidJvm] val requestProcessor: OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/resolve-request-uri/","title":"Resolve request uri","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/resolveRequestUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/resolve-request-uri/#resolverequesturi","title":"resolveRequestUri","text":"<p>[androidJvm] fun resolveRequestUri(uri: String)</p> <p>Resolves a request URI. This method is asynchronous and the result is emitted through the TransferEvent.Listener interface. Every time it is called it cancels any previous request that is being resolved. This will lead to the TransferEvent.Disconnected event being emitted.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/resolve-request-uri/#see-also","title":"See also","text":"OpenId4VpManager.addTransferEventListener"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/","title":"Send response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] fun sendResponse(response: Response)</p> <p>Sends a response to the verifier. This method is asynchronous and the result is emitted through the TransferEvent.Listener interface. Every time it is called it cancels any previous response that is being sent. This will lead to the TransferEvent.Disconnected event being emitted.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response The response to send."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/send-response/#see-also","title":"See also","text":"OpenId4VpManager.addTransferEventListener"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-manager-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-manager/-companion","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request","text":"<ul> <li>-open-id4-vp-request</li> <li>resolved-request-object</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/-open-id4-vp-request/","title":"open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/OpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/-open-id4-vp-request/#openid4vprequest","title":"OpenId4VpRequest","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-request-processor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor","text":"<ul> <li>-open-id4-vp-request-processor</li> <li>process</li> <li>reader-trust-store</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/","title":"open id4 vp request processor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/#openid4vprequestprocessor","title":"OpenId4VpRequestProcessor","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, readerTrustStore: ReaderTrustStore?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/process/","title":"Process","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/process</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/process/#process","title":"process","text":"<p>[androidJvm] open override fun process(request: Request): RequestProcessor.ProcessedRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-request-processor/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response","text":"<ul> <li>-device-response</li> <li>-generic-response</li> <li>consensus</li> <li>resolved-request-object</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] abstract val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] abstract val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response-device-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response","text":"<ul> <li>-device-response</li> <li>consensus</li> <li>equals</li> <li>hash-code</li> <li>mso-mdoc-nonce</li> <li>resolved-request-object</li> <li>response-bytes</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/-device-response/","title":"device response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/DeviceResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/-device-response/#deviceresponse","title":"DeviceResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus.VPTokenConsensus, msoMdocNonce: String, responseBytes: DeviceResponseBytes)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/equals/","title":"Equals","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/equals</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/equals/#equals","title":"equals","text":"<p>[androidJvm] open operator override fun equals(other: Any?): Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/hash-code/","title":"Hash code","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/hashCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/hash-code/#hashcode","title":"hashCode","text":"<p>[androidJvm] open override fun hashCode(): Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] open override val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/response-bytes/","title":"Response bytes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/responseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-device-response/response-bytes/#responsebytes","title":"responseBytes","text":"<p>[androidJvm] val responseBytes: DeviceResponseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response-generic-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response","text":"<ul> <li>-generic-response</li> <li>consensus</li> <li>resolved-request-object</li> <li>response</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/-generic-response/","title":"generic response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/GenericResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/-generic-response/#genericresponse","title":"GenericResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus.VPTokenConsensus, msoMdocNonce: String, response: List&lt;String&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/response/","title":"Response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/response</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-open-id4-vp-response/-generic-response/response/#response","title":"response","text":"<p>[androidJvm] val response: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-preregistered-verifier","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier","text":"<ul> <li>-preregistered-verifier</li> <li>client-id</li> <li>jwk-set-source</li> <li>jws-algorithm</li> <li>legal-name</li> <li>verifier-api</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/-preregistered-verifier/","title":"preregistered verifier","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/PreregisteredVerifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/-preregistered-verifier/#preregisteredverifier","title":"PreregisteredVerifier","text":"<p>[androidJvm] constructor(clientId: ClientId, legalName: LegalName, verifierApi: VerifierApi, jwsAlgorithm: JwsAlgorithm = JwsAlgorithm.ES256, jwkSetSource: URI = URI(\"$verifierApi/wallet/public-keys.json\"))</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/client-id/","title":"Client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] var clientId: ClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/jwk-set-source/","title":"Jwk set source","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/jwkSetSource</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/jwk-set-source/#jwksetsource","title":"jwkSetSource","text":"<p>[androidJvm] var jwkSetSource: URI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/jws-algorithm/","title":"Jws algorithm","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/jwsAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/jws-algorithm/#jwsalgorithm","title":"jwsAlgorithm","text":"<p>[androidJvm] var jwsAlgorithm: JwsAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/legal-name/","title":"Legal name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/legalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/legal-name/#legalname","title":"legalName","text":"<p>[androidJvm] var legalName: LegalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/verifier-api/","title":"Verifier api","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/verifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-preregistered-verifier/verifier-api/#verifierapi","title":"verifierApi","text":"<p>[androidJvm] var verifierApi: VerifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-processed-generic-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request","text":"<ul> <li>-processed-generic-open-id4-vp-request</li> <li>generate-response</li> <li>mso-mdoc-nonce</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/","title":"processed generic open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/ProcessedGenericOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/#processedgenericopenid4vprequest","title":"ProcessedGenericOpenId4VpRequest","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-processed-mso-mdoc-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request","text":"<ul> <li>-processed-mso-mdoc-open-id4-vp-request</li> <li>generate-response</li> <li>mso-mdoc-nonce</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/","title":"processed mso mdoc open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/ProcessedMsoMdocOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/#processedmsomdocopenid4vprequest","title":"ProcessedMsoMdocOpenId4VpRequest","text":"<p>[androidJvm] constructor(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-sd-jwt-vc-item","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item","text":"<ul> <li>-sd-jwt-vc-item</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/","title":"sd jwt vc item","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/SdJwtVcItem</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/#sdjwtvcitem","title":"SdJwtVcItem","text":"<p>[androidJvm] constructor(path: List&lt;String&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-verifier-api/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-verifier-api/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-verifier-api","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openid4vp/-verifier-api","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/batch_credential/","title":"Batch credential","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/batch_credential/#batch-credential-request-post","title":"Batch Credential Request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/batch_credential (or https://localhost/batch_credential if installed locally)</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>credential_requests - Required</li> </ul> <p></p> <p>Example Request:</p> <p>header:   <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJzY29wZSI6ICJvcGVuaWQiLCAiYXVkIjogWyJJRCJdLCAianRpIjogImZiMGI3NzdmODk5ODQ2MjBiMjQwZjNhZjczNjFlYzU3IiwgImNsaWVudF9pZCI6ICJJRCIsICJzdWIiOiAiODQzZjFjN2FkMDRjYTAyYTY1ZWEzYTc0MWY2YjkzOGNjN2U2N2E3OGQ0ZmFhN2YwMDYyNWFkYTFkZTM2OTM1NiIsICJhY3IiOiAidXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6SW50ZXJuZXRQcm90b2NvbFBhc3N3b3JkIiwgInNpZCI6ICJaMEZCUVVGQlFtMWhSbEYwVFV0TVRYUnJkak5wVkRjdFRWOTFWa3RRUmtkcVptTjFhamxETUdKemMzUkpXV1ZzUTBoeFVHazNZbXhpVjNaV1QzZDVjbFJ0Wkd0bk16Qk9WekEwV0Y5T2NuRkZYMWg2UjFWSGFuWlhkV0V0UmkwdGRtcFZVbTl1YzFJM2MwdDFjVUoyVGs1RGMyNXlaRVpxWkhKa1MwSkJObWxpY1hSS1JFaEVkVXRMT1dOWFRYcFBWMHB1VlVSWE9UTjZVVUZMYmw5RFNGOXVMWEJaY1VwRFRrbGxYMnQzVURadlNra3dka1owZEd0Vk9VVkRVMGhzWlhwelREVnpiemRuYzFCTk16TTFjVEZoUTA0eGN6Um5SekU1UnpsZlJrYzBZMDFXU2tGbmJYUkxXV1ZOVjNGRk9VRkRVMVl5Y25KWWRuZFdlR2h4VVZBMGVUZHJWMWQzTW1vMFRWRndVa3RJZFdGc2QySTNMVkozWW5wTVpWb3pRbEU5UFE9PSIsICJ0b2tlbl9jbGFzcyI6ICJhY2Nlc3NfdG9rZW4iLCAiaXNzIjogImh0dHBzOi8vZGV2Lmlzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODExMzMzNCwgImV4cCI6IDE3MTgxMTY5MzR9.QA7er_vPCqQsXjP3BtL2uFT1tKYKqaV7RRd_rwcdBOOO_uniax2uwjsWp5m5TAXYjzhec_ioL3kmv2OmRSLhlg'\n</code></pre></p> <p>payload:   <pre><code>{\n  \"credential_requests\": [\n    {\n      \"format\": \"mso_mdoc\",\n      \"doctype\": \"eu.europa.ec.eudi.pid.1\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    },\n    {\n      \"format\": \"vc+sd-jwt\",\n      \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    },\n    {\n      \"credential_identifier\": \"eu.europa.ec.eudiw.pid_jwt_vc_json\",\n      \"proof\": {\n        \"proof_type\": \"jwt\",\n        \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"\n      }\n    }\n  ]\n}\n</code></pre></p> <p>Response:</p> <ul> <li>c_nonce - String containing a nonce</li> <li>c_nonce_expires_in - Json integer denoting lifetime of c_nonce</li> <li>credential_responses - Optional. Contains issued Credential</li> <li>notification_id - Used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance.</li> <li>transaction_id - Optional, String identifying a Deferred Issuance transaction</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/#index-of-eudi-doc-architecture-and-reference-framework","title":"Index of eudi-doc-architecture-and-reference-framework","text":"<ul> <li>.github</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>docs</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#contributing-to-the-european-digital-identity-wallet-architecture-and-reference-framework","title":"Contributing to The European Digital Identity Wallet Architecture and Reference Framework","text":"<p>We welcome contributions to The European Digital Identity Wallet Architecture and Reference Framework (ARF). Whether you are fixing a bug, proposing a new feature, or improving documentation, we appreciate any contributions that help improve the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#how-to-contribute","title":"How to Contribute","text":"<ol> <li>Fork the repository and create your changes on a separate branch.</li> <li>Submit a pull request targeting the <code>main</code> branch.</li> <li>Your pull request will be reviewed and, if approved, merged.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#guidelines","title":"Guidelines","text":"<ul> <li>Follow the existing style and conventions.</li> <li>Document any additions or changes to the text.</li> <li>Proofread your work thoroughly before submitting a pull request.</li> <li>Keep each pull request focused on a single change or fix.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>All contributors are expected to abide by our Code of Conduct (pending). Please ensure you are familiar with its contents before contributing.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/CONTRIBUTING/#license","title":"License","text":"<p>By contributing to The European Digital Identity Wallet Architecture and Reference Framework, you agree that your contributions will be licensed under the Project's License.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:<ul> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> </ul> </li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li>We will respond to your report within three business days with our evaluation of the report.</li> <li>We will handle your report with strict confidentiality.</li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/#index-of-eudi-doc-architecture-and-reference-frameworkdocs","title":"Index of eudi-doc-architecture-and-reference-framework/docs","text":"<ul> <li>annexes</li> <li>architecture-and-reference-framework-main</li> <li>discussion-topics</li> <li>media</li> <li>technical-specifications</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/","title":"European Digital Identity Wallet","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#architecture-and-reference-framework","title":"Architecture and Reference Framework","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#11-context","title":"1.1 Context","text":"<p>On 3 June 2021, the European Commission adopted a Recommendation ([COMMISSION RECOMMENDATION (EU) 2021/946 of 3 June 2021 on a Common Union Toolbox for a coordinated approach towards a European Digital Identity Framework,  OJ L 210/51, 14.6.2021) calling on Member States to work closely together with the Commission towards the development of a Toolbox including a technical Architecture and Reference Framework (hereinafter the ARF), a set of common standards and technical specifications and a set of common guidelines and best practices.</p> <p>The Recommendation specifies that these outcomes will serve as a basis for the implementation of the [European Digital Identity Regulation], without the process of developing the Toolbox interfering with, or prejudging the legislative process.</p> <p>The Recommendation establishes a structured framework for cooperation between Member States, the Commission, and, where relevant, private sector operators to develop the Toolbox. The European Digital Identity Cooperation Group (EDICG), formerly known as the eIDAS Expert Group, is responsible for:</p> <ul> <li>exchange best practices and cooperate with the Commission on emerging policy initiatives in the field of digital identity wallets, electronic identification means and trust services;</li> <li>advising the Commission in the preparation of draft implementing and delegated acts;</li> <li>supporting Supervisory Bodies in the implementation of the [European Digital Identity Regulation];</li> <li>organising peer reviews of electronic identification schemes;</li> <li>engaging with the Commission and other relevant stakeholders to develop a Common Union Toolbox;</li> </ul> <p>The European Digital Identity Cooperation Group's page can be found at the official page.</p> <p>The European Digital Identity Cooperation Group has since further developed the concepts and specifications for the European Digital Identity Framework. The current ARF version is based on the legal text adopted by the co-legislators, including the adopted Commission Implementing Regulations:</p> <ul> <li>CIR 2024/2977 regarding PID and EAA,</li> <li>CIR 2024/2979 regarding integrity and core functionalities,</li> <li>CIR 2024/2980 regarding ecosystem notifications,</li> <li>CIR 2024/2981 regarding certification of Wallet Solutions,</li> <li>CIR 2024/2982 regarding protocols and interfaces.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#12-purpose-of-this-document","title":"1.2 Purpose of this document","text":"<p>The purpose of this document is to explain the architecture of the EUDI Wallet ecosystem and all of its components, as well as how these components will interact to ensure the security of the ecosystem and the privacy of its Users. Also, it serves as background information to allow a better understanding of the the high-level requirements established in Annex 2.</p> <p>Additionally, this document forms a reference to create uniform conditions for the implementation of the [European Digital Identity Regulation] and to define the technical specifications, standards and procedures that the Commission will develop for the purpose of implementing this Regulation.</p> <p>Finally, this document is used to develop the Wallet Solution reference implementation.</p> <p>The document presents a state-of-play of ongoing work of the European Digital Identity Cooperation Group and does not imply any formal agreement regarding its content. This document will be complemented and updated over time through the process of establishing the toolbox, as described in Chapter 8.</p> <p>This document holds no legal value and does not prejudge the final mandatory legal requirements for the EUDI Wallet ecosystem. Only the adopted [European Digital Identity Regulation], and the implementing and delegated acts adopted under that Regulation, are mandatory. This document serves as a foundation for regularly updating the implementing acts, ensuring alignment with technological and standards developments.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#13-relation-to-the-large-scale-pilots-lsp","title":"1.3 Relation to the Large-Scale Pilots (LSP)","text":"<p>To support the development of a reference implementation of a Wallet Solution and to pilot its usage across different priority use cases, the Commission launched a call for proposals on 22 February 2022 under the Digital Europe Programme to pilot use cases for the EUDI Wallet ecosystem at a large scale.</p> <p>The objective of the Large-Scale Pilots (LSP) call is to support the piloting of the EUDI Wallet ecosystem around a range of use cases involving both public and private sector stakeholders. The LSPs will test the EUDI Wallet ecosystem in both national and cross-borders contexts and integrate with the iterative development of the reference application.</p> <p>The works of the LSPs will be aligned with the ARF, which will guide pilot system design and architecture development together with the release of the reference implementation.</p> <p>The LSPs are expected to provide feedback on the ARF as they develop and interact with Relying Party services, Qualified or non-qualified Electronic Attestations of Attributes (Q)EAA Providers, Person Identification Data (PID) Providers, Qualified and non-qualified Trust Service Providers and Users in meaningful interactions under the proposed use cases.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#14-definitions","title":"1.4 Definitions","text":"<p>The definitions used in this document can be found in Annex 1 of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#15-scope","title":"1.5 Scope","text":"<p>The EUDI Wallet Architecture and Reference Framework (ARF) document defines the structural and functional aspects of the EUDI Wallet ecosystem, detailing its key components and their interactions. It provides a technical foundation to ensure interoperability, security, and privacy, aligning with the high-level requirements specified in Annex 2. The ARF serves as a reference for the harmonised implementation of the [European Digital Identity Regulation], guiding the development of technical specifications, standards, and operational procedures.</p> <p>This document only applies to EUDI Wallet ecosystems compliant with the [European Digital Identity Regulation], ensuring consistency in architecture and implementation. It is designed to support the development of the Wallet Solution reference implementation while remaining adaptable to technological and regulatory advancements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#16-change-log","title":"1.6 Change log","text":"<p>In this version of the ARF,</p> <ul> <li>relevant text from the Discussion Paper for Topic D (Embedded disclosure policies) was included in Sections 6.6.2.7 and 6.6.3.4. The High-Level Requirements introduced in this discussion paper were included in Annex 2 in Topic 43.</li> <li>relevant text from the Discussion Paper for Topic C (Wallet Unit Attestation) was included in Section 6.5.3.4, as well as other sections. However, only limited changes were made. The High-Level Requirements introduced and changed in this discussion paper were included in Annex 2 in Topic 9. Other High-Level Requirements that used to be in Topic 9 were moved elsewhere, mainly to Topic 40.</li> <li>relevant text from the Discussion Paper for Topic G (Zero-Knowledge Proofs) was included in Section 7.4.3.5.3. The High-Level Requirements introduced in this discussion paper were included in Annex 2 in Topic 53.</li> <li>relevant text from the Discussion Paper for Topic V (PID Rulebook) was included in Section 5.3. Furthermore, high-level requirements and a specification of the encoding and format of [SD-JTW VC]-based PIDs were added to the PID Rulebook.</li> </ul> <p>Apart from these changes, a limited number of editorial mistakes were corrected.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#17-additional-topics","title":"1.7 Additional topics","text":"<p>In this version of the ARF, several key areas still require further exploration and refinement. These topics will be discussed in collaboration with Member States, the European Digital Identity Cooperation Group, civil society, industry representatives, and professionals, ensuring comprehensive feedback from all relevant stakeholders. The outcomes of these discussions will be incorporated into future versions of this ARF. The document will be iteratively updated to improve its content and address emerging topics, with the process for providing feedback and details on how updates will be managed outlined in Chapter 8.</p> <p>Among the areas identified for further discussion are:</p> <ul> <li>Relying Party registration.</li> </ul> <p>Other topics that will be developed include:</p> <ul> <li>transaction logs maintained by the Wallet Unit,</li> <li>scenarios involving a natural person representing another natural person,</li> <li>Wallet-to-Wallet interactions,</li> <li>combined presentations of attestations,</li> <li>User requests for data deletion by Relying Parties,</li> <li>mechanisms for Users to report unlawful or suspicious data requests to data protection authorities (DPAs),</li> <li>data portability.</li> </ul> <p>Further discussions will explore the following topics:</p> <ul> <li>the development of catalogues for attestations,</li> <li>secure cryptographic interfaces between the Wallet Instance and the WSCA,</li> <li>User interfaces with Wallet Instances,</li> <li>authentication mechanisms for Users to access their devices,</li> <li>certificate transparency,</li> <li>support and maintenance responsibilities of Wallet Providers,</li> <li>the EUDI Wallet Trust Mark,</li> <li>transactional data needed by Wallet Units in payments and other use cases.</li> </ul> <p>A detailed list of these topics and the progress of their development is available on GitHub.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2-eudi-wallet-functionalities","title":"2 EUDI Wallet functionalities","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#21-introduction","title":"2.1 Introduction","text":"<p>The EUDI Wallet ecosystem is designed as a secure, User-controlled digital environment that enables Users to use their Wallet Unit to manage and present their person identification data (PID) and attestations across both public and private services in the EU. Its functionalities are built around security, privacy, and User control, ensuring seamless interactions with Relying Parties and other entities, while adhering to data protection principles.</p> <p>This chapter outlines the core functionalities of Wallet Solutions, as defined by the [European Digital Identity Regulation], and examines how the requirements for its implementation align with real-world use cases where Users will use their Wallet Unit.</p> <p>The functionalities of a Wallet Unit can be grouped into the following categories:</p> <ul> <li>Secure identification and authentication, ensuring that Users can present person identification data in a trusted environment.</li> <li>Exchanging qualified and non-qualified User attributes through secure and verifiable electronic attestations of attributes.</li> <li>Electronic signing of documents or data, allowing Users to create legally recognised qualified electronic signatures and seals.</li> <li>Generate and use pseudonyms for authentication, to enhance privacy and prevent tracking.</li> </ul> <p>These functionalities are discussed in the next four sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#22-identification-and-authentication","title":"2.2 Identification and authentication","text":"<p>Using their Wallet Units, Users are able to:</p> <ul> <li>Identify and authenticate to online and offline services, while using selective disclosure of attributes as well as User approval. This *ensures that only necessary and User-approved attributes are presented to *Relying Parties, which minimises exposure of personal information.</li> <li>Securely authenticate Relying Parties or other Wallet Units, making sure that attributes are only presented to trusted entities.</li> <li>Onboard seamlessly with PID Providers or attestation Providers by leveraging existing electronic identification schemes, for a smooth and secure registration process.</li> <li>Be informed whether a Relying Party is authorised or registered to receive the requested attributes.</li> <li>Access a transaction log via a dashboard, allowing Users to:  <ul> <li>Review past interactions with Relying Parties and Wallet Units.  </li> <li>Request data erasure under the GDPR Article 17 to maintain privacy.  </li> <li>Report suspicious Relying Parties to the relevant national data protection authority.</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#23-attribute-exchange-mechanism-using-attestations","title":"2.3 Attribute exchange mechanism using attestations","text":"<p>Using their Wallet Units, Users are able to:</p> <ul> <li>Request, store, and present personal identification data and electronic attestations of attributes under their sole control, ensuring secure usage in both online and offline scenarios.</li> <li>Backup a list of their attributes, attestations, and configurations, guaranteeing compliance with data portability rights.</li> <li>Prevent tracking by Relying Parties when using attestations, ensuring privacy-preserving interactions.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#24-qualified-electronic-signatures","title":"2.4 Qualified electronic signatures","text":"<p>Using their Wallet Units, Users are able to:</p> <ul> <li>Create qualified electronic signatures and seals for legally binding digital transactions.</li> <li>Sign documents using qualified electronic signatures, which are provided by default and free of charge within the Wallet Unit, ensuring universal accessibility and compliance with legal standards.</li> </ul> <p>These functionalities are implemented by using the authentication and signing capabilities of the Wallet Unit as a part of a local QSCD, or a remote QSCD managed by a QTSP. See Topic 16 and Topic 37.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#25-pseudonyms","title":"2.5 Pseudonyms","text":"<p>Pseudonyms can be used to authenticate a User when it is not necessary for a Relying Party to learn the identity of the User. As specified in [CIR 2024/2979], [W3C WebAuthn] defines the technical specification for pseudonyms. Passkeys are a widely used type of credential which are created and asserted using the WebAuthn API. Section 4.7 gives more information on the architecture and message flows of Passkeys.</p> <p>A User uses a pseudonym when they wish to create an account at a Relying Party without identifying themselves. The Relying Party associates the pseudonym with the account, such that it can be used for subsequent authentication in later interactions with that Relying Party. The User may additionally present attributes from a PID or attestation to the Relying Party, either during registration of the pseudonym or at a later interaction.</p> <p>See also Topic 11 and the Discussion Paper on Topic E.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#26-the-role-of-use-cases-in-the-development-of-the-architecture-and-reference-framework","title":"2.6 The role of use cases in the development of the Architecture and Reference Framework","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#261-overview","title":"2.6.1 Overview","text":"<p>The development of the Architecture and Reference Framework (ARF) is strategically driven by real-world use cases, ensuring that the User experience, value proposition, and requirements of the EUDI Wallet ecosystem are effectively addressed. To achieve this, the European Digital Identity Cooperation Group initially created service blueprints for each use case, which detail service touch points, components, and processes.</p> <p>These blueprints serve a dual purpose: they play a crucial role in service design, enhancing both User experience and operational efficiency, while also identifying areas for improvement. As a foundational element, these blueprints shape the development of common specifications, providing comprehensive yet flexible solutions that can accommodate alternative approaches and optional steps.</p> <p>It is important to note that User journeys may vary based on the specific implementation approach, influencing aspects such as data retrieval and User approval processes. The Annexes contain detailed descriptions of these blueprints, ensuring transparency and adaptability.</p> <p>The European Digital Identity Cooperation Group has outlined service blueprints for the following key use cases:</p> <ul> <li>Identification and authentication to access online services, see Section 2.6.2,</li> <li>Qualified Electronic Signature, see Section 2.4,</li> <li>Mobile Driving Licence, see Section 2.6.3,</li> <li>Additional use cases that will be introduced in the future, see Section 2.6.4.</li> </ul> <p>These blueprints, along with all relevant information on use cases implementation, will be compiled in a standardised format within a dedicated document titled the \"Use Cases Manual\", and distributed together with this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#262-identification-and-authentication-to-access-online-services-using-pid","title":"2.6.2 Identification and authentication to access online services using PID","text":"<p>One of the main use cases of the EUDI Wallet ecosystem is secure User identification and authentication. A User presents data from their PID, which is issued and managed at Level of Assurance (LoA) High, to various online services, both public and private.. This capability is crucial, as it allows Relying Parties to confidently verify the identity of Users they interact with.</p> <p>In this use case, a User utilises their Wallet Unit to present specific attributes from a PID to a Relying Party in order to access online services. Before doing so, the Wallet Unit first authenticates the User. The User is particularly mindful of the privacy and security implications of presenting data when accessing online services. Their primary objective is to securely and reliably access online services that require authentication, while maintaining full control over how their personal data is presented.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#263-mobile-driving-licence","title":"2.6.3 Mobile Driving Licence","text":"<p>A significant use case for the Wallet Unit involves allowing Users to request, store, and present a mobile Driving Licence (mDL) as an attestation in their Wallet Unit, allowing them mainly to prove their driving privileges. In this use case, the User employs a Wallet Unit to present an mDL to a Relying Party, for instance a police officer.</p> <p>The use case description concentrates on proximity supervised and unsupervised flows, which involve scenarios where the User is physically near a Relying Party, and the mDL attribute exchange occurs using proximity technologies (e.g., NFC, Bluetooth). The two proximity flows have one significant difference: in the supervised flow, the Wallet Unit presents mDL attributes to a human Relying Party or under their supervision, whereas in the unsupervised flow, the Wallet Unit presents mDL attributes to a machine without human oversight.</p> <p>In addition, like any other attestation type, an mDL can be presented online, over the internet.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#264-other-use-cases","title":"2.6.4 Other use cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2641-health-data","title":"2.6.4.1 Health data","text":"<p>Easy access to health data is crucial in both national and cross-border contexts. A Wallet Unit may enable access to patient summary, ePrescriptions, etc.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2642-educational-attestations-and-professional-qualifications","title":"2.6.4.2 Educational attestations and professional qualifications","text":"<p>Providing credentials for qualification recognition procedures can be costly and time-consuming for Users, Relying Parties (such as companies and employers), and Attestation Providers (such as education and training providers or academic institutions). A Wallet Unit may be a repository for educational credentials and a means for presenting them by the User to relevant Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2643-digital-finance","title":"2.6.4.3 Digital finance","text":"<p>A Wallet Unit may facilitate complying with strong customer authentication requirements, using the user authentication capabilities described in Section 2.6.2. In line with the Commission's Retail Payments Strategy, this use case would be developed in close coordination with Member States' advisory groups on retail payments and the finance industry.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2644-digital-travel-credential","title":"2.6.4.4 Digital Travel Credential","text":"<p>Digital Travel Credential (DTC) Providers may issue DTCs to Wallet Units in a supported format, to enable Relying Parties to identify Users, thus facilitating a smooth travel experience and User journey. Relying Parties for a DTC may include governments, transportation providers, hospitality agents, or any other actors operating in a regulated environment which requires the use of a DTC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#2645-social-security","title":"2.6.4.5 Social Security","text":"<p>Documents related to social security are important for many EU citizens to prove their rights and obligations under social security legislation in the EU. Examples include:</p> <ul> <li>Portable Document (\u201cPDA1\u201d) This is a statement of applicable legislation which is useful to prove that a person pays social contributions in another EU country, for example if they are a posted worker or work in several countries at the same time.</li> <li>Electronic Health Insurance Card (\"EHIC\") This is a free card that provides every citizen with access to medically necessary government-provided healthcare during a temporary stay in one of the 27 EU countries, Iceland, Liechtenstein, Norway, and Switzerland, under the same conditions and at the same cost (free in some countries) as persons insured in that country. This includes, for example, services related to chronic or existing illnesses, as well as in connection with pregnancy and childbirth.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#3-eudi-wallet-ecosystem","title":"3. EUDI Wallet ecosystem","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#31-introduction","title":"3.1 Introduction","text":"<p>This chapter describes the EUDI Wallet ecosystem as it is foreseen in the [European Digital Identity Regulation]. The different roles in the EUDI Wallet ecosystem are described in Figure 1 and detailed in the following sections.</p> <p> Figure 1: Overview of the EUDI Wallet ecosystem roles</p> <ol> <li>Users of Wallet Units, see Section 3.2,</li> <li>Wallet Providers, see Section 3.3,</li> <li>Person Identification Data (PID) Providers, see Section 3.4,</li> <li>Trusted List Providers, see Section 3.5,</li> <li>Qualified Electronic Attestation of Attributes (QEAA) Providers, see Section 3.6,</li> <li>Electronic Attestation of Attributes issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA) Providers, see Section 3.7,</li> <li>Electronic Attestation of Attributes (EAA) Providers, see Section 3.8,</li> <li>Qualified Electronic Signature Remote Creation Providers, see Section 3.9,</li> <li>Authentic Sources, see Section 3.10,</li> <li>Relying Parties, see Section 3.11,</li> <li>Conformity Assessment Bodies (CAB), see Section 3.12,</li> <li>Supervisory Bodies, see Section 3.13,</li> <li>Device Manufacturers and Related Subsystems Providers, see Section 3.14,</li> <li>Attribute Schema Providers, see Section 3.15,</li> <li>National Accreditation Bodies, see Section 3.16,</li> <li>Access Certificate Authorities, see Section 3.17.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#32-users-of-wallet-units","title":"3.2 Users of Wallet Units","text":"<p>Users of Wallet Units use the Wallet Unit to receive, store, and present PID, QEAA, PuB-EAA, or non-qualified EAA to Relying Parties. Users can also create qualified electronic signatures and seals (QES) and create and present pseudonyms.</p> <p>CIR 2024/2982 (among others) defines 'wallet user' as 'a user who is in control of the wallet unit'. Being in control of the Wallet Unit implies being able to present a PID or attestation to a Relying Party. Within the use cases described in the current version of the ARF, the User is the subject of the PID(s) in the Wallet Unit. The User is also the subject of most of the attestations in the Wallet Unit, but there could be attestations that have no subject, such as vouchers, or that relate to objects owned or used by the User, such as a vehicle registration card.</p> <p>Please note that this ARF assumes that a User device is a personal device, meaning that the User will not share it with other people, and that only the User can access and control the Wallet Unit.</p> <p>Next versions of the ARF may include use cases for representation and delegation, for example a parent representing their children or a CEO having the right to sign contracts on behalf of their company. Conceivably, such use cases may lead to situations where a Wallet Unit holds the natural-person PIDs of multiple persons, or holds one or more legal-person PIDs in addition to a natural-person PID. However, other solutions are possible as well. The topics of representation and delegation will be further discussed with Member States in the future.</p> <p>The use of a Wallet Unit by citizens is not mandatory under the [European Digital Identity Regulation]. However, each Member State will provide at least one European Digital Identity Wallet within 24 months after the entry into force of the implementing acts referred to in the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#33-wallet-providers","title":"3.3 Wallet Providers","text":"<p>Wallet Providers are Member States or organisations either mandated or recognised by Member States making a Wallet Solution available to Users. All Wallet Solutions must be certified as described in Chapter 7.</p> <p>A Wallet Provider makes a combination of several products and Trust Services available to a User, which give the User sole control over the use of their Person Identification Data (PID) and Electronic Attestations of Attributes (QEAA, PuB-EAA or EAA), and any other personal data within their Wallet Unit. This also implies guaranteeing a User sole control over sensitive cryptographic material (e.g., private keys) related to their Wallet Unit.</p> <p>Wallet Providers are responsible for ensuring compliance with the requirements for Wallet Solutions.</p> <p>From the viewpoint of the other actors in the EUDI Wallet ecosystem, the Wallet Provider is responsible for all components of the Wallet Unit. These components are described in Section 4.3.2. In particular, the Wallet Provider is responsible for ensuring that the Wallet Instance can access a Wallet Secure Cryptographic Device (WSCD) that has a level of security sufficient to ensure that the Wallet Unit can achieve Level of Assurance High, as required in the [European Digital Identity Regulation]. This is true even if the WSCD is not delivered by the Wallet Provider but is integrated into the User device. For more information, see Section 4.5. Other actors in the ecosystem do not need to interact with or explicitly trust a WSCD supplier. As explained in Section 6.5.3, Wallet Providers provide Wallet Unit Attestations (WUA) to the Wallet Unit. The WUA attests that the Wallet Unit and all of its components, including the WSCD, comply with the relevant requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#34-person-identification-data-pid-providers","title":"3.4 Person Identification Data (PID) Providers","text":"<p>PID Providers are trusted entities responsible for:</p> <ul> <li>verifying the identity of the User in compliance with LoA high requirements,</li> <li>issuing a PID to the Wallet Unit, and</li> <li>making available, in a privacy-preserving way, information for Relying Parties to verify the validity of the PID.</li> </ul> <p>The terms and conditions of these services are for each Member State to determine.</p> <p>PID Providers may be the same organisations that today issue official identity documents, electronic identity means, etc. PID Providers may be the same organisations as Wallet Providers. In case an organisation acts as both a PID Provider and a Wallet Provider, it complies with all requirements for both PID Providers and Wallet Providers.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#35-trusted-list-provider","title":"3.5 Trusted List Provider","text":"<p>A Trusted List Provider (TLP) is a body responsible for maintaining, managing, and publishing a Trusted List. Within the EUDI Wallet ecosystem, Trusted Lists exist for the following entities:</p> <ul> <li>Wallet Providers,</li> <li>PID Providers,</li> <li>QEAA Providers,</li> <li>PuB-EAA Providers,</li> <li>Access Certificate Authorities,</li> <li>Qualified Electronic Signature Remote Creation (QESRC) Providers.</li> </ul> <p>Notes:</p> <ul> <li>Wallet Providers, PID Providers, and Access Certificate Authorities are not trust service providers in the sense of the [European Digital Identity Regulation]. Therefore, the Trusted Lists for these entities are -legally speaking- not trusted lists in the sense of Article 22. However, the technical requirements for all Trusted Lists and Trusted List Providers are the same. For that reason, the ARF does not distinguish between Trusted Lists for these entities and those for QEAA Providers and PuB-EAA Providers, who are trust service providers in the sense of the Regulation.</li> <li>Non-qualified EAA Providers are trust service providers in the sense of the [European Digital Identity Regulation]. Therefore, Trusted Lists and Trusted List Providers may also exist for non-qualified EAA Providers. However, this is out of scope of the ARF.</li> </ul> <p>These Trusted Lists are described in more detail in Sections 6.2.2, 6.3.2 and 6.4.2. Some Trusted Lists contain the trust anchors of the relevant entities. A trust anchor is a combination of a public key and the identifier of the associated entity and may be used to verify signatures created by that entity.</p> <p>An entity's status as a trusted entity can be verified by checking whether they are present on the relevant Trusted List. Trusted List Providers provide a registration service for the relevant entities. The terms and conditions for entities to become registered are for each Trusted List Provider to determine.</p> <p>For more information, please refer to Topic 27 and to Topic 31.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#36-qualified-electronic-attestation-of-attributes-qeaa-providers","title":"3.6 Qualified Electronic Attestation of Attributes (QEAA) Providers","text":"<p>Qualified EAAs are provided by Qualified Trust Service Providers (QTSPs). The general trust framework for QTSPs (see Chapter III, Section 3 of the [European Digital Identity Regulation] applies also to QEAA Providers, but specific rules for the Trust Service of issuing QEAAs may be defined as well.</p> <p>QEAA Providers maintain an interface to Wallet Units to provide QEAAs upon request. Potentially, they also maintain an interface towards Authentic Sources to verify attributes, as specified in Topic 42.</p> <p>It is likely that for most QEAAs, a QEAA Provider will need to verify the identity of a User when issuing a QEAA. It is up to each QEAA Provider to implement the necessary User authentication processes, in compliance with all applicable national and Union legislation. Note that, when User identity verification is necessary, it is likely that the User requesting a QEAA already possesses a PID. This would enable the QEAA Provider to carry out User identification and authentication at LoA high, by requesting and verifying User attributes from the PID in the Wallet Unit.</p> <p>The terms and conditions of these services are for each QEAA Provider to determine, beyond what is specified in the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#37-eaa-issued-by-or-on-behalf-of-a-public-sector-body-responsible-for-an-authentic-source-pub-eaa-providers","title":"3.7 EAA issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA) Providers","text":"<p>As specified in the [European Digital Identity Regulation], an attestation may be issued by or on behalf of a public sector body responsible for an Authentic Source. This ARF calls such an attestation a PuB-EAA. For a description of Authentic Sources, see Section 3.10. A public sector body primarily is a state, regional or local authority, or a body governed by public law.</p> <p>A PuB-EAA Provider, meaning a public sector body issuing PuB-EAAs, is not a QTSP. However, a PuB-EAA Provider has a qualified certificate, issued by a QTSP, that allows it to sign PuB-EAAs. A Relying Party verifies a PuB-EAA by first verifying the signature over the PuB-EAA, and subsequently verifying the signature of the qualified PuB-EAA Provider certificate. For more details, refer to Section 6.6.3.6. The [European Digital Identity Regulation] stipulates that PuB-EAAs, like QEAAs, have the same legal effect as attestations in paper form. It is up to the Member States to define terms and conditions for the provisioning of PuB-EAAs, but PuB-EAA Providers will comply with the same technical specifications and standards as Providers of PIDs and other attestations.</p> <p>For the precise and legally binding definitions and obligations regarding the issuance of PuB-EAAs, please refer to the [European Digital Identity Regulation].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#38-non-qualified-electronic-attestation-of-attributes-eaa-providers","title":"3.8 Non-Qualified Electronic Attestation of Attributes (EAA) Providers","text":"<p>Non-qualified EAAs can be provided by any (non-qualified) Trust Service Provider. While they will be supervised under the [European Digital Identity Regulation], it can be assumed that other legal or contractual frameworks will mostly govern the rules for provision, use and recognition of EAAs. Those other frameworks may cover policy areas such as educational credentials, digital payments, although they may also rely on Qualified Electronic Attestation of Attributes Providers. For non-qualified EAAs to be used, EAA Providers offer Users a way to request and obtain these EAAs. This implies that these non-qualified EAA Providers comply with the Wallet Unit interface specifications. The terms and conditions of issuing EAAs and related services are subject to sectoral rules.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#39-qualified-electronic-signature-remote-creation-qesrc-providers","title":"3.9 Qualified Electronic Signature Remote Creation (QESRC) Providers","text":"<p>The Wallet Unit will allow the User to create qualified electronic signatures or seals over any data. This will also enhance the use of the Wallet Unit for signing, in a natural and convenient way. The creation of a qualified electronic signature or seal by means of the Wallet Unit can be achieved in several ways:</p> <ul> <li>the Wallet Unit itself could be certified as a qualified signature or seal creation device (QSCD), or</li> <li>the Wallet Unit could implement secure authentication into an electronic signature or electronic seal invocation capability, as part of a local QSCD or a remote QSCD managed by a QTSP.</li> </ul> <p>As part of the ecosystem, the use of common interfaces and protocols for provisioning qualified electronic signatures and seals will create a unified European market for QTSPs offering remote signature services. European citizens will be able to choose any QTSP, without worrying about technical interoperability, and this will enhance competition.</p> <p>Besides providers of qualified electronic signatures and seals, also providers of non-qualified electronic signatures or seals may exist. However, such providers are out of scope of this ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#310-authentic-sources","title":"3.10 Authentic Sources","text":"<p>Authentic Sources are public or private repositories or systems, recognised or required by law, containing attributes about natural or legal persons. Authentic Sources are sources for attributes on, for instance, address, age, gender, civil status, family composition, nationality, education and training qualifications titles and licences, professional qualifications titles and licences, public permits and licences, or financial and company data.</p> <p>Authentic Sources are required to provide an interface to QEAA Providers to verify the authenticity of the above attributes, either directly or via designated intermediaries recognised at national level. Authentic Sources may act as PuB-EAA Providers if they meet the requirements of the [European Digital Identity] Regulation, see Section 3.7. In Figure 1 this is indicated by the arrow 'provides qualified data'.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#311-relying-parties-and-intermediaries","title":"3.11 Relying Parties and intermediaries","text":"<p>Within the scope of this ARF, a Relying Party is a service provider requesting attributes contained within a PID, QEAA, PuB-EAA or EAA from the Wallet Unit, subject to the approval of the User and within the limits of applicable legislation and rules.</p> <p>Note: As specified in the [European Digital Identity Regulation], legally speaking, the term 'Relying Party' includes Attestation Providers (i,e, QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers), as well as service providers. However, technically speaking the responsibilities of Attestation Providers are quite different from those of service providers, as is the way they interact with Wallet Units. Therefore, for clarity the term 'Relying Party' is used in all parts of the ARF exclusively to mean a service provider interacting with a Wallet Unit to request and receive attributes from an attestation.</p> <p>The reason for a Relying Party to rely on the Wallet Unit may be a legal requirement, a contractual agreement, or their own decision. In particular, the [European Digital Identity Regulation] requires that providers of very large online platforms must accept the EUDI Wallet for their user authentication processes.</p> <p>Relying Parties maintain an interface with Wallet Units to request PIDs and attestations, using Relying Party authentication, as described in Section 6.6.3.2. If a Wallet Unit presents attributes from a PID or attestation to a Relying Party, the Relying Party can verify the authenticity of these attributes.</p> <p>To rely on Wallet Units for the purpose of providing a service, Relying Parties inform the Member State where they are established about their intention for doing so, and register the attributes that they intend to request. See Section 6.4.2 for more information on Relying Party registration. During a transaction, a Wallet Unit will verify that the Relying Party only requests attributes that it registered. It will warn the User if this is not the case. This is explained in Section 6.6.3.3.</p> <p>In addition, an Attestation Provider may embed a disclosure policy in an attestation. Such a policy indicates to which Relying Parties a Wallet Unit should (or should not) present specific attributes from that attestation. During a transaction, the Wallet Unit evaluates the policy based on data provided by the Relying Party, and warns the User if the outcome of that evaluation is negative. Please refer to Section 6.6.3.4 for more information.</p> <p>So-called intermediaries form a special class of Relying Party. Article 5b (10) of the [European Digital Identity Regulation] states \"Intermediaries acting on behalf of relying parties shall be deemed to be relying parties and shall not store data about the content of the transaction.\". Such an intermediary is a party that offers services to Relying Parties to, on their behalf, connect to Wallet Units and request the User attributes that these Relying Parties need. The intermediary then sends the presented attributes to the 'end' Relying Party. This implies that an intermediary performs all tasks assigned to a Relying Party in this ARF on behalf of the 'end' Relying Party. In particular:</p> <ol> <li>The intermediary registers once as a Relying Party and obtains an access certificate (see Section 6.6.3.2) bearing its own name and Relying Party identifier. This access certificate is not different from an access certificate issued to a 'normal' Relying Party, since an intermediary is, as a matter of legal fact, a Relying Party. Note: In addition, the intermediary may receive a registration certificate, if issued (see Section 6.6.3.3). However this certificate is not used in intermediated transactions. </li> <li>Next, the intermediary will separately register each of the 'end' Relying Parties that uses its services, including registering the attributes the 'end' Relying Party wants to request. The intermediary obtains a registration certificate (see Section 6.6.3.3) showing the name of the 'end' Relying Party. The Registrar verifies, in a manner to be decided by a Member State, that the 'end' Relying Party is indeed using the services of the intermediary. If all is correct, the Registrar will issue a registration certificate containing an additional attribute stating that the 'end' Relying Party is using the services of the intermediary.</li> <li> <p>When asked by an 'end' Relying Party, the intermediary will request the presentation of attributes from Wallet Units, using one or more of the flows described in Section 4.4. For this, the intermediary will use their own access certificate (point 1. above) and the registration certificate of the 'end' Relying Party (point 2. above).</p> </li> <li> <p>If a Wallet Unit during a transaction, obtains information that the Relying Party uses the services of an intermediary, it verifies that the name and the identifier of the intermediary in the registration certificate are identical to the name and identifier in the access certificate. If this verification fails, the Wallet Unit treats this as a Relying Party authentication failure. If this verification succeeds, the Wallet Unit displays to the User the name of the intermediary next to the name of the 'end' Relying Party when asking for User approval to present the requested attributes. </p> <p>The Wallet Unit obtains information whether the Relying Party uses the services of an intermediary, along with the name of the 'end' Relying Party, from: + the registration certificate - if provided in the presentation request, or + the information contained in the presentation request (note: this will need an extension of [ISO/IEC 18013-5] and [OpenID4VP])</p> </li> <li> <p>When a Wallet Unit presents a PID or attestation to the intermediary, the intermediary verifies the authenticity of the PID or attestation, its revocation status, device binding, and User binding, as well as any combined presentation of attributes, if applicable, if it has agreed to do so with the Relying Party. Also, the intermediary may need to verify the authenticity of the Wallet Unit and its revocation status. (Note that a Relying Party is not obliged to carry out all of these verifications. Therefore, the intermediary and any Relying Party using its services must agree on what verifications the intermediary will carry out.)</p> </li> <li>If these verifications are successful, the intermediary forwards the User attributes it obtained from the Wallet Unit to the 'end' Relying Party. There must be an interface between an intermediary and a Relying Party, over which the 'end' Relying Party can request the intermediary to request some User attributes from a Wallet Unit and that the intermediary uses to send back the attribute values presented by the Wallet Unit. However, specifying this interface or the (security) requirements with which it needs to comply, is out of scope of the ARF. In particular, it is not required that the User attributes are end-to-end encrypted between the Wallet Unit and the 'end' Relying Party, such that an intermediary would not be able to see them.</li> <li>The intermediary deletes any PIDs, attestations, or WUAs it obtained from the Wallet Unit, including any User attributes, immediately after it has sent the User attributes to the Relying Party. If the intermediary does not send any User attributes to the Relying Party, for example because one of the verifications in the previous step failed, the intermediary deletes the PIDs, attestations, or WUAs immediately after it has completed all necessary verifications.</li> </ol> <p>Note that this approach implies that an intermediary (if it is acting only as an intermediary, and never as an 'end' Relying Party in its own right) will not need a registration certificate (despite it might be issued by a Registrar, according to rules set out by a given Member State). Conversely, an 'end' Relying Party using the services of an intermediary will not need an access certificate.</p> <p>As discussed in Section 6.6.3.5, during a transaction, a Wallet Unit requests the User for their approval to present any User attributes to the Relying Party. In this process, the Wallet Unit informs the User about the authenticated identity of the intermediary (from the access certificate), and also about the identity of the 'end' Relying Party and the fact that this Relying Party is using the services of the intermediary (from the registration certificate).</p> <p>For high-level requirements on this topic, see Topic 52.</p> <p>In addition, before approval, the User may want to verify the 'end' Relying Party registration information and the scope of attributes requested, as described in Section 6.6.3.3).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#312-conformity-assessment-bodies-cab","title":"3.12 Conformity Assessment Bodies (CAB)","text":"<p>Conformity Assessment Bodies (CAB) are public or private bodies that are accredited by a national accreditation body, which itself is designated by Member States according to Regulation 765/2008 Article 6c (3). In particular, CABs are accredited to carry out assessments on which Member States will rely before issuing a Wallet Solution or providing the 'qualified' status to a Trust Service Provider.</p> <p>Wallet Solutions will be certified by CABs. QTSPs will be audited regularly by CABs.</p> <p>The standards and schemes used by CABs to fulfil their tasks to certify Wallet Solutions are discussed in Chapter 7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#313-supervisory-bodies","title":"3.13 Supervisory Bodies","text":"<p>Supervisory Bodies review the proper functioning of Wallet Providers and other actors in the EUDI Wallet ecosystem. Supervisory Bodies will be created and appointed by the Member States. The Supervisory Bodies will be notified to the Commission by the Member States.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#314-device-manufacturers-and-related-subsystems-providers","title":"3.14 Device Manufacturers and Related Subsystems Providers","text":"<p>In the EUDI Wallet ecosystem, commercial actors such as device manufacturers and related subsystems providers fulfil an important role to enable a Wallet Unit to work smoothly and securely. Device manufacturers and related subsystem providers provide a platform on which a Wallet Unit can be built. Wallet Providers ensure that their Wallet Units use that platform to ensure usability, security, stability and connectivity. The components provided by device manufacturers and providers of related subsystems may include, among others, hardware, operating systems, secure cryptographic hardware, libraries, and app stores.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#315-attribute-schema-providers-for-qeaa-pub-eaa-and-eaa","title":"3.15 Attribute Schema Providers for QEAA, PuB-EAA and EAA","text":"<p>Attribute Schema Providers publish attribute schemas describing the structure of QEAAs, PuB-EAAs and EAAs, including the identifier, semantics, and encoding of all attributes. These attribute schemas are published in Attestation Rulebooks, see Section 5.4. For PIDs and mDLs, the applicable Rulebooks are published by the Commission.</p> <p>A catalogue of published Attestation Rulebooks will enable other entities such as Relying Parties to discover which attestations exist within the EUDI Wallet ecosystem, and how attributes from these attestations can be requested and validated. The Commission sets out the technical specifications, standards, and procedures for this purpose. Common schemas, including by sector-specific organisations, are critical for widespread adoption of attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#316-national-accreditation-bodies","title":"3.16 National Accreditation Bodies","text":"<p>National Accreditation Bodies (NAB), under Regulation (EC) No 765/2008, are the bodies in Member States that perform accreditation with authority derived from the Member State. NABs accredit CABs (Section 3.12) as competent, independent, and supervised professional certification bodies in charge of certifying Wallet Solutions against normative document(s) establishing the relevant requirements. NABs monitor the CABs to which they have issued an accreditation certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#317-access-certificate-authorities","title":"3.17 Access Certificate Authorities","text":"<p>Access Certificate Authorities issue access certificate to all PID Providers, QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers and Relying Parties in the EUDI Wallet ecosystem. When these entities interact with a Wallet Unit to issue or request a PID or attestation, they will present an access certificate to prove their authenticity and validity.</p> <p>Access Certificate Authorities must be notified by a Member State to the Commission. As part of the notification process, the trust anchors of the Access CA must be included in a Trusted List. A trust anchor is the combination of a public key and an identifier for the associated entity. Wallet Units need these trust anchors to verify the signatures over the access certificates presented to them when a new PID or attestation is issued or when they receive an attribute presentation request from a Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4-high-level-architecture","title":"4 High level architecture","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#41-introduction","title":"4.1 Introduction","text":"<p>This chapter provides a broad overview of the EUDI Wallet ecosystem's core components, their interfaces, and the overall design principles. This chapter is structured as follows:</p> <ul> <li>Section 4.2 discusses the design principles that guided the design of the EUDI Wallet ecosystem, as described in this ARF.</li> <li>Section 4.3 presents an overview of the ecosystem's architecture, focussing on the components that make up a Wallet Unit and on the interfaces between a Wallet Unit and other entities, as well as the protocols used on these interfaces.</li> <li>Section 4.4 discusses the different attestation presentation flows enabled by this architecture, and in particular the mechanisms foreseen to enable and secure remote presentation flows in which the Wallet Unit and the Relying Party interact over the internet.</li> <li>Section 4.5 briefly discusses the different architecture types a Wallet Providers may use for implementing one or more Wallet Secure Cryptographic Device(s) into their Wallet Solutions.</li> <li>Section 4.6 presents state diagrams for all of the main entities and components in the EUDI Wallet ecosystem, discussing all of the states a particular component can be in, as well as the conditions triggering state transitions.</li> <li>Section 4.7 discusses how pseudonyms will be implemented and used within a Wallet Unit.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#42-design-principles","title":"4.2 Design principles","text":"<p>To effectively translate the [European Digital Identity Regulation] into a User-friendly, privacy-focused, and secure technical architecture, establishing design principles is crucial. These principles, rooted in the regulatory framework and enriched by industry best practices, will serve as fundamental guidelines. This approach ensures compliance with requirements emphasising User-centricity, privacy, security, and cross-border interoperability. It demonstrates a commitment to both regulatory alignment and excellence in the EUDI Wallet architecture's design.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#421-user-centricity","title":"4.2.1 User-centricity","text":"<p>The EUDI Wallet ecosystem prioritises User-centricity as a core design principle. This means placing User needs and experience at the forefront of every design decision. The Wallet Unit should be intuitive and easy to use, with seamless integration into existing use cases. Users should have full control over their attributes and privacy, with transparent information about what attributes are being presented and to whom. Additionally, the Wallet Unit should be accessible and inclusive, catering to Users with varying technical backgrounds and abilities. By prioritising User-centricity, the EUDI Wallet ecosystem fosters trust and encourages widespread adoption, ultimately achieving its goal of empowering Users with secure and convenient digital identity management.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#422-interoperability","title":"4.2.2 Interoperability","text":"<p>The EUDI Wallet ecosystem prioritises interoperability as a core design principle. This ensures a Wallet Unit functions seamlessly across borders within the EU. Users can travel freely and confidently utilise their digital identity wallets for various services, from e-government platforms to private online interactions. Interoperability fosters secure data exchange through standardised protocols, allowing trusted entities to verify credentials effortlessly. This not only simplifies the User experience but also strengthens overall security within the system. Moreover, interoperability prevents market fragmentation by creating a level playing field for different Wallet Solutions. It fosters competition and collaboration, ultimately driving innovation in the EUDI Wallet ecosystem. By prioritising interoperability, the EUDI Wallet architecture lays the foundation for a trusted and universally accepted EUDI Wallet ecosystem across the EU.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#423-privacy-by-design","title":"4.2.3 Privacy by design","text":"<p>The EUDI Wallet architecture embodies the principle of privacy by design. This means that the protection of User data is a fundamental pillar of the architecture's design. The principle of data minimisation guides the collection of personal information, ensuring that Relying Parties gather only the attributes they need and have registered for. By enabling selective disclosure of attributes, the Wallet Unit empowers Users with granular control over what data is presented and to whom. Transparency is built into the system, with clear explanations of how data is used and protected. By making privacy a cornerstone from the beginning, the EUDI Wallet ecosystem aims to foster trust and protect the fundamental rights of its Users. Finally, measures are taken to prevent Users from being tracked by Relying Parties, PID Providers, or Attestation Providers.</p> <p>For more information, please refer to Sections 7.4.3.4 and 7.4.3.5.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#424-security-by-design","title":"4.2.4 Security by design","text":"<p>The EUDI Wallet architecture embraces the principle of security by design. This means security considerations are woven into the very fabric of the architecture's design. Throughout the design process, potential vulnerabilities are identified and mitigated. Secure coding practices are mandated, and the architecture itself minimises attack surfaces by compartmentalising sensitive data and access controls. By prioritising security from the outset, the EUDI Wallet architecture aims to be inherently resistant to cyberattacks and data breaches, fostering trust and User confidence in this EUDI Wallet ecosystem.</p> <p>For more information, please refer to Sections 7.4.3.2 and 7.4.3.3.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#43-reference-architecture","title":"4.3 Reference architecture","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#431-overview","title":"4.3.1 Overview","text":"<p>The figure below gives an overview of the architecture of the EUDI Wallet ecosystem and its components. In comparison to Figure 1, this figure presents more detail on the composition of a Wallet Unit and its interfaces to other entities. The depicted components of a Wallet Unit are described in Section 4.3.2, while the interfaces are described in Section 4.3.3. The other entities shown in the figure were already described in Chapter 3.</p> <p> Figure 2: EUDI Wallet ecosystem reference architecture</p> <p>Note that a User device can host more than one Wallet Unit, either provided by multiple Wallet Providers or by the same one, if supported by that Wallet Provider. If a User device hosts more than one Wallet Unit, all statements in this ARF regarding a Wallet Unit and its components hold for each Wallet Unit independently.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#432-components-of-a-wallet-unit","title":"4.3.2 Components of a Wallet Unit","text":"<p>The following have been identified as the core components of a Wallet Unit:</p> <ul> <li>User device (UD): A User Device comprises the hardware, operating system, and software environment required to host and execute the Wallet Instance. The minimum hardware and software requirements for the User device will be determined by the Wallet Provider.</li> <li>Wallet Instance (WI): The app or application installed on a User device, which is an instance of a Wallet Solution and belongs to and is controlled by a User. This component implements the core business logic and interfaces as depicted in Figure 2. It directly interacts with the WSCA/WSCD (see bullets hereafter) to securely manage cryptographic assets and execute cryptographic functions, ensuring a high level of assurance for authentication.</li> <li> <p>Wallet Secure Cryptographic Device (WSCD): tamper-resistant device that provides an environment that is linked to and used by the wallet secure cryptographic application to protect critical assets and to securely execute cryptographic functions. This includes a keystore, but also the environment where the security-critical functions are executed. The WSCD is tamper-proof and duplication-proof. One WSCD may be a part of multiple Wallet Units, e.g. in case of a remote HSM. The WSCD consists of two parts: the WSCD hardware covers the hardware issued by the WSCD vendor and the WSCD firmware covers security-related software, such as an operating system and cryptographic libraries provided by the WSCD vendor. Figure 2 shows four different possible security architectures for the WSCD (for more details see Section 4.5):</p> <ul> <li>a remote WSCD, which is a remote device, such as a Hardware Security Module (HSM), accessed over a network.</li> <li>a local external WSCD, which is an external device, such as a smart card issued to the User specifically for this purpose,</li> <li>a local internal WSCD, which is a component within the User device, such as a SIM, e-SIM, or embedded Secure Element,</li> <li>a local native WSCD, which is a component embedded in the User device and accessed via an API provided by the operating system.</li> </ul> </li> <li> <p>Wallet Secure Cryptographic Application (WSCA): an application that manages critical assets by being linked to and using the cryptographic and non-cryptographic functions provided by the Wallet Secure Cryptographic Device. The WSCA interfaces directly with the Wallet Instance. For more details see Section 4.5.</p> </li> <li>Wallet Provider backend (WPB): The Wallet Provider backend offers Users support with their Wallet Units, performs essential maintenance, and issues Wallet Unit Attestations through the Wallet Provider Interface (WPI).</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#433-wallet-unit-interfaces-and-protocols","title":"4.3.3 Wallet Unit interfaces and protocols","text":"<p>Figure 2 shows the following interfaces between components of a Wallet Unit, or between the Wallet Unit and other entities in the EUDI Wallet ecosystem:</p> <ul> <li>The Wallet Provider Interface (WPI) is used by the Wallet Instance to communicate with the Wallet Provider to request and issue the Wallet Unit Attestation, as well as to provide support to the User and collect aggregated and User-consented information in a privacy-preserving manner to provision the Wallet Unit, in compliance with applicable legislation. Because the Wallet Provider is responsible for both sides of this interface, it will not be standardised in the scope of the EUDI Wallet ecosystem.</li> <li>The User Interface (UI) is the point of interaction and communication between the User and the Wallet Instance. This interface will not be standardised in the scope of the EUDI Wallet ecosystem.</li> <li>The Presentation Interface (PI) enables Relying Party Instances to securely request and receive PIDs, QEAAs, PuB-EAAs and EAAs from Wallet Units. This interface accommodates both remote and proximity interactions. For remote presentation flows, as detailed in Section 4.4.3, the Wallet Instance implements the OpenID for Verifiable Presentation protocol [OpenID4VP] in combination with the [W3C Digital Credentials API]. In contrast, for the proximity presentation flow, this interface adheres to the [ISO/IEC 18013-5] standard, see Section 4.4.2. The same interface can also be used by another Wallet Unit to request User attributes, see Section 6.6.4.</li> <li> <p>The Secure Cryptographic Interface (SCI) enables the Wallet Instance to communicate with the Wallet Secure Cryptographic Application (WSCA). This interface is specifically designed for managing critical assets and executing cryptographic functions. To be able to support different types of WSCA/WSCD, Wallet Instances may need to be able to handle multiple flavours of this interface.</p> </li> <li> <p>The PID Issuance Interface (PII) complies with the [OpenID4VCI] standard and is used when the Wallet Unit communicates with a PID Provider to request and receive PIDs to be stored within the Wallet Unit.</p> </li> <li>The Attestation Issuance Interface (AII) complies with the [OpenID4VCI] standard and is used by the Wallet Unit to request various attestations that the User wants to include in their Wallet Unit.</li> <li>The Remote Signing or Sealing Interface (RSI) facilitates communication between the Wallet Unit and a Qualified Electronic Signature Remote Creation (QESRC) Provider. This interface is used by the Wallet Unit to generate a qualified electronic signature or seal.</li> </ul> <p>*Note that the \"Attribute Deletion Request to Relying Party Interface\" and the \"Reporting Relying Party to DPA Interface\", which are mentioned in the Regulation, are not depicted as interfaces in Figure 2. Functionality enabling a User to request a Relying Party to delete personal data (i.e., User attributes) obtained from the User's Wallet Unit is seen as a feature of the Wallet Solution. The same applies to functionalities enabling the User to report a Relying Party to a Data Protection Authority.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#44-data-presentation-flows","title":"4.4 Data presentation flows","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#441-overview","title":"4.4.1 Overview","text":"<p>This section defines four distinct communication flows that can be used when a Wallet Unit presents a PID or attestation to a Relying Party Instance:</p> <ul> <li>Proximity Supervised Flow: In this flow, the User and their User Device are physically near the Relying Part Instance. PIDs and attestations are exchanged using proximity technology (e.g., NFC, Bluetooth) between the Wallet Unit and the Relying Party Instance. Both devices may be with or without internet connectivity. A human representative of the Relying Party supervises the process.</li> <li>Proximity Unsupervised Flow: This flow is like the supervised flow, but the Wallet Unit presents attestations to a machine, without human supervision. The interfaces and protocols used in this flow are the same as for the proximity supervised flow, and are described in Section 4.4.2.</li> <li>Remote Same-Device Flow: In this flow, the User utilises a web browser or another application on their User device to access a Relying Party's a service. If consuming the service requires the Relying Party to obtain specific attributes from the User's Wallet Unit, the Relying Party sends a presentation request to the Wallet Unit. As explained in Section 4.4.3.2, this request is managed by the web browser on the User's device, utilising a solution like the [W3C Digital Credentials API].</li> <li>Remote Cross-Device Flow: In this flow, the User uses a web browser on a device other than the User device on which their Wallet Unit is installed to access the Relying Party's service. This other device could be for instance a desktop, laptop, or another mobile device. If the Relying Party needs to send a presentation request to the User's Wallet Unit, it presents this request to the web browser on the other device. Again using the [W3C Digital Credentials API], this web browser sets up a secure communication channel between the other device and the User's device. Section 4.4.3.3 explains this in more detail.</li> </ul> <p>Specific use cases integrate one or more of these flows. Each of these flows is described in more detail in one of the next sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#442-proximity-presentation-flows","title":"4.4.2 Proximity presentation flows","text":"<p>Figure 3 shows how attestation presentation works when the User and their User Device are physically near the Relying Part Instance. In this case, the [ISO/IEC 18013-5] standard specifies how a communication channel is set up and how a presentation request and the corresponding response are exchanged.</p> <p> Figure 3: Proximity presentations</p> <p>The attribute presentation flow begins when the User opens the Wallet Instance and instructs it to display a QR code or present an NFC tag. This QR code or NFC tag contains the information necessary to establish an NFC, BLE, or Wi-Fi Aware connection. The Relying Party Instance scans the QR code or the NFC tag and set ups the connection. The QR code or NFC tag also contains the information necessary to create an authenticated and encrypted secure channel between both entities.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#443-remote-presentation-flows","title":"4.4.3 Remote presentation flows","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4431-introduction","title":"4.4.3.1 Introduction","text":"<p>Remote transaction flows are use cases in which the Relying Party Instance is remote from the User and the User device. The Relying Party Instance requests data from the Wallet Unit over the internet, using a browser. These use cases can be further distinguished as same-device flows, in which the browser is running on the same device as the Wallet Unit, and cross-device flows, where the browser is on a different device.</p> <p>Remote presentation flows come with a number of challenges that are not present for proximity flows:</p> <ol> <li>Secure Cross-Device Flows: Cross-device flows are vulnerable to phishing and relay attacks, necessitating enhanced security measures. Proximity checks, managed by the operating system of the User device, can mitigate the risks derived from these vulnerabilities by leveraging built-in security features to verify the authenticity of interactions, ensuring they are both secure and reliable.</li> <li>Wallet Unit Selection: In remote flows, where interactions do not originate from the Wallet Unit, Users may encounter difficulties in selecting the appropriate Wallet Unit to fulfil a specific presentation request, particularly when multiple Wallet Units are present on the device. A unified interface provided by the web browser and the device operating system can streamline this process, offering a seamless and intuitive User experience.</li> <li>Invocation Mechanism: Establishing a communication channel between the Wallet Unit and the remote Relying Party Instance presents challenges due to inconsistent invocation methods. One approach considered by standardisation bodies involves using custom URI schemes, such as \"mdoc://\" or \"openid4vp://\". In this approach, the device operating system would trigger the Wallet Unit when the Relying Party Instance requests a connection via a custom URI. Another approach is the use of domain-bound universal links (a.k.a. app links). However, relying on custom URI schemes or universal links introduces variability in User experiences across different browsers and operating systems, resulting in operational inefficiencies and potential security risks. An interface provided by the web browser and the device OS does not need custom URL schemes or universal links for invoking a Wallet Unit.</li> <li>Clear Origin Verification: Protecting against relay attacks requires precise identification of the Relying Party Instance's origin. Including the origin information, such as the website domain or app package name, within the presentation request ensures the authenticity of the request and enhances trust for both Wallet Units and Users.</li> <li>Session binding: When presenting a PID or attestation to a remote Relying Party Instance, Users have to switch contexts. Existing protocols may enable attacks where the contexts are not bound to each other, resulting in session hijacking. Using an interface provided by the web browser and the device OS allows information about a session to be embedded in a presentation request. At the same time, the browser and the operating system handle proper context switching, preventing session hijacking.</li> </ol> <p>The next sections describe how these challenges might be solved for both same-device and cross-device remote presentation flows, by using the [W3C Digital Credentials API]. This API is expected to establish a consistent method for invoking Wallet Units, addressing these challenges.</p> <p>The current version of the [W3C Digital Credentials API] extends the Credential Management Level 1 API (the same API used by WebAuthn / Passkeys, see Section 4.7) to allow websites to request an attestation. This is achieved by providing a sequence of \"presentation requests\", where each presentation request includes an \"exchange protocol\" and \"request data\". The format of the request data are specific to the exchange protocol. The Digital Credentials API specifications will include a registry of supported protocols. For more information see the Topic F: Digital Credentials API discussion paper.</p> <p>However, the [W3C Digital Credentials API] is still under development and has not yet been standardised. For the [W3C Digital Credentials API] to be mandated by this ARF in the future, it will have to align with the principles and expectations outlined in Chapter 3 of the Topic F discussion paper. Moreover, the API has not been implemented yet by all browsers and operating systems.</p> <p>Until these three conditions (standardisation, compliance with expectations, and broad support) are fulfilled, the use of this API by Wallet Units and Relying Parties is optional, and custom URL schemes may be used as well. If a Wallet Unit implements a custom URL scheme, it will need to implement mitigations for the challenges described in this section.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4432-same-device-remote-presentation-flows","title":"4.4.3.2 Same-device remote presentation flows","text":"<p> Figure 4: Remote same-device presentations</p> <p>Compared to Figure 2, Figure 4 shows additional detail. In particular, it shows the browser on the User device and the relevant interfaces of this browser:</p> <ul> <li>The Remote same-device presentation interface establishes communication between the web browser and a remote Relying Party Instance, which may operate on a server managed by the Relying Party. This interface may comply with the [Digital Credentials API], which is a browser API that is currently being standardised within the W3C.</li> <li>The WI-platform API interface is a mechanism provided by the device's operating system that may implement the Digital Credentials API mechanism at OS level. There are however no current plans to standardise this interface on the level of the API calls. These calls will be specified in the developer documentation for the respective OS. One of the key elements of this API is that Wallet Unit receives reliable information regarding the origin of the presentation request.</li> </ul> <p>Obviously, the browser also has a User interface allowing the User to interact with it. This interface will not be standardised in the context of the EUDI Wallet ecosystem.</p> <p>A remote same-device attribute presentation flow begins when the User accesses the Relying Party's website using a browser on their device. The website may provide an option for the User to present attributes from their Wallet Unit, typically via a button or similar interface. When the User selects this option, the browser may ask the User for permission to initiate the presentation flow. Upon granting permission, the Relying Party Instance sends a presentation request compliant with the OpenID4VP specification to the browser via the Digital Credentials API. The browser, working in tandem with the device's operating system (OS), forwards the request to the Wallet Unit using the WI-platform API. If the device hosts multiple Wallet Units, the browser and OS will determine which Wallet Unit should handle the request. This decision may involve consulting the User.</p> <p>The selected Wallet Unit processes the presentation request and seeks the User's approval before returning the requested attributes in an encrypted format to the browser. The browser then forwards this encrypted response to the remote Relying Party Instance.</p> <p>Figure 4 also illustrates an inter-app attribute presentation flow. In this scenario, an application on the User's device, such as a banking or shopping app, interacts with the Wallet Unit over the WI-platform API. This app acts as the Relying Party Instance, possibly in cooperation with a remote server of the entity that provisioned the app. The app can use the User attributes retrieved from the Wallet Unit itself, for example for User authentication or to automatically fill in data fields like User name and address. Alternatively, the app can send these User attributes to the remote server. All requirements on Relying Parties in this ARF, such as those regarding Relying Party registration and authentication, User consent, and other aspects, obviously are applicable in this use case as well.</p> <p>In this use case, the attribute presentation flow begins when the User opens the app and initiates a request for attributes from the Wallet Unit via the WI-platform API. Notably, this is the same API used in remote same-device presentation flow involving a browser. The primary difference lies in the origin information included in the presentation request, which may vary.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4433-cross-device-remote-presentation-flows","title":"4.4.3.3 Cross-device remote presentation flows","text":"<p> Figure 5: Remote cross-device presentations</p> <p>A remote cross-device attribute presentation flow begins when the User uses a browser on a device different from their User device to visit the website of the Relying Party. The website may offer the User the possibility to present attributes from their Wallet Unit, for example by clicking a button. If the User does so, the browser may ask the User for permission to initiate the presentation flow. If the User allows this, the Relying Party Instance sends a presentation request to the browser over the Digital Credentials API. The browser then establishes a tunnel towards the User device, using the FIDO CTAP 2.2 hybrid flow, see section 11.5 of [CTAP]. Note that this flow is also used for FIDO Passkeys. This is done as follows:</p> <ol> <li>The browser presents a QR code that includes information about the tunnel  endpoint, as well as keys that will be used for establishing a secure channel  over this tunnel.</li> <li>The User scans the QR code using the camera on the User device.</li> <li>The User device emits a BLE advertisement, which is received by the browser.  The advertisement includes, in an encrypted form, information required for  establishing the secure tunnel. This advertisement is used as a proximity  check: the tunnel cannot be established if the User device and the device on  which the browser runs are not close to each other.</li> <li>A tunnel is established between the two devices.</li> </ol> <p>The browser then sends the OpenID4VP-compliant presentation request to the User device. If there are multiple Wallet Instances present on the User device, the device OS will determine to which of these the request will be forwarded, possibly after consulting the User. The selected Wallet Unit will process the presentation request and, after requesting approval from the User, will return the requested attributes in encrypted format to the browser, using the established tunnel. The browser will forward the response to the remote Relying Party Instance.</p> <p>Note that the Wallet Instance does not see any difference between the cross-device flow and the same-device flow. In both cases, it receives an OpenID4VP-compliant presentation request over the WI-platform API described in the previous section.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4434-profiling-the-use-of-openid4vp-in-remote-presentation-flows","title":"4.4.3.4 Profiling the use of [OpenID4VP] in remote presentation flows","text":"<p>As mentioned above, for both same-device and cross-device remote presentation flows, the messages used to request and present attestations comply with [OpenID4VP]. The OpenID Foundation is standardising a profile for the W3C Digital Credentials API, that will define how OpenID4VP will be used over this API.</p> <p>In addition, there are two other profiles that will be used by Wallet Units and remote Relying Parties:</p> <ul> <li>[ISO/IEC 18013-7] Annex B contains a profile for OpenID4VP. Relying Parties and Wallet Unit will comply with the requirements in this profile when the format of the attestation complies with [ISO/IEC 18013-5].</li> <li>Otherwise, i.e. when the format of the attestation complies with [SD-JWT VC], Relying Parties and Wallet Unit will comply with the requirements in the profile for SD-JWT VCs specified in [HAIP].</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#45-wscd-architecture-types","title":"4.5 WSCD architecture types","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#451-introduction","title":"4.5.1 Introduction","text":"<p>Figure 2 showed four different types of architecture for the WSCD, which are:</p> <ul> <li>Remote WSCD</li> <li>Local external WSCD</li> <li>Local internal WSCD</li> <li>Local native WSCD</li> </ul> <p>In addition, this section also describes a hybrid architecture. Within the EUDI Wallet ecosystem, a Wallet Provider is allowed to use any of these architectures.</p> <p>Notes:</p> <ul> <li>Regardless of the architecture used, the Wallet Provider is responsible for ensuring that the Wallet Instance can access a WSCD that has a level of security sufficient to ensure that the Wallet Unit can achieve Level of Assurance High, as required in the [European Digital Identity Regulation]. The Wallet Provider remains responsible for managing cryptographic keys on the WSCD (through the WSCA) throughout the lifetime of the Wallet Unit. The Wallet Provider is also responsible for attesting the properties of the WSCD (including relevant certifications) in the Wallet Unit Attestation, see Section 6.5.3.</li> <li>Again regardless of the architecture used, User access to the WSCD always involves two authentication factors: physical access to the User device and a knowledge-based authentication factor verified by the WSCA. If the WSCA/WSCD is local, the second authentication factor is directly verified by the WSCA. If it is remote, the Wallet Unit must contain an access token (or similar mechanism) to authenticate the Wallet Unit towards the WSCA and set up a secure communication channel. Over that channel, the PIN entered by the User is transferred to the WSCA and verified by it. See the requirements on User authentication in the section on Wallet Unit management in Topic 40.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#452-remote-wscd","title":"4.5.2 Remote WSCD","text":"<p>In this architecture, the Wallet Secure Cryptographic Device is situated remotely from the User device. Typically, it will be implemented by the Wallet Provider using an HSM running on a secure server. The Wallet Provider will also provide the WSCA with which the Wallet Unit interacts.</p> <p>This architecture is typically used if the User device lacks sufficiently secure hardware, or if the Wallet Provider does not want to have a dependency on such hardware.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#453-local-external-wscd","title":"4.5.3 Local external WSCD","text":"<p>If the User device lacks sufficiently secure hardware, another option is to use a local external hardware component as the WSCD. This local external WSCD is typically a smart card or a secure token. It is connected to the User device via NFC or another short-range connection, and is able to perform all of the cryptographic operations required from a WSCD / WSCA in the ARF. Note that many existing smart cards, such as identity cards, will not be able to do this.</p> <p>The WSCA typically takes the form of a Java Card applet. The WSCA is installed prior to issuance of the smart card or secure token to the User. The issuer of the WSCD and of the WSCA is the Wallet Provider or another entity acting on behalf of or in cooperation with the Wallet Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#454-local-internal-wscd","title":"4.5.4 Local internal WSCD","text":"<p>In this architecture, the Wallet Secure Cryptographic Device is integrated directly within the User's device. This includes solutions like UICCs, e-SIM/SAMs, or embedded Secure Elements. Such solutions typically are compliant with the GlobalPlatform Card Specifications [GP CS] or with the GSMA Secured Applications for Mobile [GSMA SAM] specification.</p> <p>The WSCA will typically be a Java Card applet, and it is remotely issued to the WSCD by the Wallet Provider, at the moment the Wallet Unit is activated; see Section 6.5.3. In order to do this, the Wallet Provider may need to connect to and collaborate with other entities, such as a Trusted Service Manager employed by the owner of the WSCD.</p> <p>The Wallet Provider is responsible for verifying that the local internal WSCD is compliant with all applicable requirements, prior to activating a Wallet Unit using such a WSCD.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#455-local-native-wscd","title":"4.5.5 Local native WSCD","text":"<p>A local native WSCD is integrated into the User device. However, the API to access the WSCD is included in the operating system of the User device. Therefore, no separate WSCA is necessary. Alternatively, the API offered by the OS may be viewed as the WSCA.</p> <p>The Wallet Provider is responsible for verifying that the local native WSCD is compliant with all applicable requirements, prior to activating a Wallet Unit using such a WSCD.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#456-hybrid-architecture","title":"4.5.6 Hybrid architecture","text":"<p>In this architecture, two or more of the different types of WSCD described above are combined. For example, a remote HSM may manage the cryptographic keys of the Wallet Unit and of PIDs and attestations present in the Wallet Unit, while an embedded Secure Element is used to manage the access to the remote HSM.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#46-state-diagrams","title":"4.6 State diagrams","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#461-introduction","title":"4.6.1 Introduction","text":"<p>In this section, state diagrams are presented for Wallet Solutions, Wallet Units, PID Providers and Attestation Providers, PIDs and attestations, and Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#462-wallet-solution","title":"4.6.2 Wallet Solution","text":"<p>A Wallet Solution has a state diagram of its own. The state of a Wallet Solution affects the state of all Wallet Units of that Wallet Solution. Figure 6 below shows the states of the Wallet Solution:</p> <p></p> <p>Figure 6: State diagram of Wallet Solution</p> <p>The Candidate state is the first state of a Wallet Solution. This means it is fully implemented and the Wallet Provider requests the solution to be certified as a Wallet Solution as part of an EUDI Wallet eID scheme.</p> <p>If all the legal and technical criteria have been met, a Member State may decide to allow a Wallet Provider to start providing the Wallet Solution to Users. The state of the Wallet Solution becomes Valid. This means the Wallet Solution can be officially launched, and can be provided to Users. The issuing Member State informs the Commission of each change in the certification status of their EUDI Wallet eID schemes and the Wallet Solutions provided under that scheme.</p> <p>The issuing Member State can temporarily suspend a Wallet Solution. This would for example be the result of a critical security issue. This leads to the Suspended state. The issuing Member State can unsuspend the Wallet Solution, bringing the Solution back to the Valid state. The issuing Member State can also decide to completely withdraw the Wallet Solution, which brings the Wallet Solution in the Withdrawn state.</p> <p>A Wallet Unit that is part of a suspended or withdrawn Wallet Solution Provider cannot request the issuance of a PID or attestation. Nor will a PID or attestation presented by such a Wallet Unit be accepted by a Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#463-wallet-unit","title":"4.6.3 Wallet Unit","text":"<p>Figure 7 below shows the states of a Wallet Unit.</p> <p></p> <p>Figure 7: State diagram of Wallet Unit</p> <p>A Wallet Unit lifecycle begins when the User installs a Wallet Instance on their User device, see Section 6.5.2. The Wallet Unit's state is then Installed. In this state, the User and the Wallet Provider can perform only one action, namely activating the Wallet Unit, as described in Section 6.5.3. As part of the activation process, the Wallet Provider issues one or more Wallet Unit Attestations (WUA) to the Wallet Unit.</p> <p>Once a Wallet Unit is activated, it is in the Operational state. In this state, the User and the Wallet Provider manage the Wallet Unit and can perform the same actions as in the Valid state, see below. However, obviously, the User cannot identify nor authenticate themselves by presenting a PID to a Relying Party, nor can any other action with a PID be performed, because by definition no valid PID is present in this state.</p> <p>If, in the Operational state, a PID Provider issues a PID to a Wallet Unit, it transitions to the Valid state. If, in either of these two states, the Wallet Provider revokes the WUA or the WUA expires, the Wallet Unit moves back to Installed.</p> <p>The following actions can be performed in the Valid state:</p> <ul> <li>The Wallet Provider updates the Wallet Unit to a new version,</li> <li>The Wallet Provider revokes the Wallet Unit, for instance at the User's request or if the security of the Wallet Instance is broken. Revocation of the Wallet Unit is accomplished by revoking the Wallet Unit Attestation (see Topic 9 and Topic 38).</li> <li>The User requests issuance of a PID, a QEAA, a PuB-EAA, or an EAA.</li> <li>The User presents attributes from a PID, a QEAA, a PuB-EAA, or an EAA to a Relying Party.</li> <li>The User deletes a PID, a QEAA, a PuB-EAA, or an EAA.</li> <li>A PID, a QEAA, a PuB-EAA, or an EAA is revoked by its Provider (if it is valid for more than 24 hours).</li> <li>The User uninstalls the Wallet Instance.</li> </ul> <p>If the last or only PID in the Wallet Unit expires, is revoked, or is deleted, the Wallet Unit's state is moved back to Operational. Note that if there are multiple PIDs in the Wallet Unit, it does not move to the Operational state as long as at least one of them is valid.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#464-pid-provider-or-attestation-provider","title":"4.6.4 PID Provider or Attestation Provider","text":"<p>Figure 8 shows the possible states of a PID Provider or Attestation Provider.</p> <p></p> <p>Figure 8: State diagram of PID Provider or Attestation Provider</p> <p>The Valid state is the first state of a PID Provider or Attestation Provider. This means it is registered by the corresponding Trusted List Provider (Registrar) and notified to the Commission, as described in Section 6.3.2.</p> <p>The Trusted List Provider can temporarily suspend a PID Provider or Attestation Provider. This leads to the Suspended state. The Trusted List Provider can unsuspend the PID Provider or Attestation Provider, bringing it back to the Valid state. The Trusted List Provider can also decide to completely cancel registration of the PID Provider or Attestation Provider, which brings it in the Cancelled state. For more information about suspension or cancellation, please refer to Section 6.3.3. A PID Provider or Attestation Provider with suspended or cancelled registration cannot issue PIDs or attestations to Wallet Units, nor will a PID or attestation issued by such a PID Provider or Attestation Provider be accepted by Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#465-pid-or-attestation","title":"4.6.5 PID or attestation","text":"<p>Figure 9 shows the possible states of a PID or attestation.</p> <p>In the context of the EUDI Wallet ecosystem, a PID or attestation begins its lifecycle when being issued to a Wallet Unit. Please note that this means that the management of attributes in the Authentic Source (adhering to national structures and attribute definitions) is outside the scope of the ARF.</p> <p>For certain use cases, a PID or attestation may be pre-provisioned, meaning it is not yet valid when issued. In that case, its state is Issued, and it will transition to Valid when it reaches the beginning of its validity period. However, if a PID or attestation is issued on or after the validity start date, its state directly changes to Valid.</p> <p></p> <p>Figure 9: State diagram of PID or attestation</p> <p>There are two possible transitions for a valid PID or attestation: it expires by passing through the validity end date and transitions to the Expired state, or it is revoked by its PID Provider or Attestation Provider, ending up in the Revoked state. Expiration and revocation are independent transitions. Once a PID or attestation is expired or revoked, it cannot transition back to Valid.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#466-relying-party","title":"4.6.6 Relying Party","text":"<p>Figure 10 shows the possible states of a Relying Party.</p> <p></p> <p>Figure 10: State diagram of Relying Party</p> <p>The Valid state is the first state of a Relying Party. This means it has been registered by a Relying Party Registrar, as described in Section 6.4.2.</p> <p>The Registrar can suspend or cancel registration of a Relying Party. This leads to the Suspended state. The Registrar can unsuspend the Relying Party, bringing it back to the Valid state. The Registrar can also decide to completely cancel registration of the PID Provider or Attestation Provider, which brings it in the Cancelled state. For more information about suspension or cancellation, please refer to Section 6.4.3. A Wallet Unit will not present a PID or attestation to a Relying Party that its registration is suspended or cancelled.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#47-pseudonyms","title":"4.7 Pseudonyms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#471-introduction-to-passkeys","title":"4.7.1 Introduction to Passkeys","text":"<p>As specified in [CIR 2024/2979], [W3C WebAuthn] defines the technical specification for pseudonyms. Passkeys are a widely used type of credential which are created and asserted using the WebAuthn API.</p> <p>Passkeys are to be seen as an alternative to passwords. The idea is that a User, when registering a user account at a service, uses a secure device to generate a public-private key pair, registers the public key at the service, and can then subsequently use the private key to authenticate towards the service at later points in time.</p> <p>In a bit more detail, the flow for using Passkeys is as follows:</p> <p>Registration:</p> <ol> <li>The User generates a public-private key pair and stores both the public and the private key at their secure device (referred to as an Authenticator).</li> <li>The User registers the public key at the desired Relying Party service.</li> </ol> <p>Authentication:</p> <ol> <li>When the User wishes to authenticate towards a service, the service will send them a challenge consisting of a random value.</li> <li>The User uses the private key stored on their Authenticator to sign the challenge and sends this back to the service.</li> <li>The service verifies that the signature on the challenge can be verified using the registered public key. If the signature verifies and the origin matches the expected origin, the User is considered authenticated and thereby granted access to the service.</li> </ol> <p>For high-level requirements on the use of WebAuthn and Passkeys, see Topic 11. Note that the Commission will create or reference a technical specification containing all details necessary for Wallet Units and Relying Parties to generate, register, and use Pseudonyms.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#472-introduction-to-w3c-webauthn","title":"4.7.2 Introduction to [W3C WebAuthn]","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4721-overview","title":"4.7.2.1 Overview","text":"<p>[W3C WebAuthn] defines an API for the creation and use of Passkeys. Conceptually, in addition to the User, there are four different logical components in this specification:</p> <ul> <li>Relying Party Server: The Relying Party that wishes to offer a service based on authentication using Passkeys.</li> <li>Relying Party Client: The program provided by the Relying Party that runs in the Client of the User and communicates with the Relying Party Server. The Relying Party Client is typically some JavaScript code, provided by the Relying Party, that runs on the Client (i.e., browser).</li> <li>Client: The client that the User uses to interact with the Relying Party's server and with the User's authenticator. The Client can be thought of as the browser that the User uses to access the Relying Party's service.</li> <li>Authenticator: The device controlled by the User to create, store, and use the Passkeys. In the context of the EUDI Wallet, the Wallet Unit is the Authenticator.</li> </ul> <p>Note that the Relying Party Client and the Client are two programs that are executed on the same physical machine.</p> <p>[W3C WebAuthn] defines a model dividing the responsibilities between these different entities and defines an interface between the Relying Party Client and the Client. Additionally, it defines a challenge/response protocol to authenticate with Passkeys. The interface is referred to as the WebAuthn API.</p> <p>However, [W3C WebAuthn] does not specify how the Authenticator and the Client must communicate.</p> <p>[W3C WebAuthn] relies on several different types of identifiers, including:</p> <ul> <li>Relying Party ID: An identifier unique to the Relying Party, which must be a valid domain string. This what the User will identify the Relying Party by and let the Authenticator learn which Relying Party is asking for registration/authentication.</li> <li>Credential ID: A unique identifier chosen by the Authenticator for each Passkey.</li> <li>User ID: An identifier unique to each User, which is assigned by the Relying Party. This will be provided to the Authenticator when registering a new Passkey. Subsequently, it will be provided by the Authenticator when authenticating towards the Relying Party. The Authenticator will keep track of which Passkeys are available for which User IDs and Relying Party IDs. The Relying Party keeps track of a User Name for each User ID.</li> <li>User Name: An alias that may be chosen by the User or the Relying Party and assigned to a specific Passkey on the Authenticator. This allows the User to easily distinguish and select which Passkey they want to authenticate with, if several are present in the Authenticator for the given Relying Party.</li> </ul> <p>The next sections elaborate on how the different components work together to allow the registration and subsequent authentication using Passkeys.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4722-registration","title":"4.7.2.2 Registration","text":"<p>The flow for registering a Passkey in [W3C WebAuthn] is the following:</p> <ol> <li>The User requests (out of band of WebAuthn) the Relying Party to create a new Pseudonym.</li> <li>The Relying Party Server creates a challenge and sends this along with the User ID, the Relying Party ID, and the User Name to the Relying Party Client.</li> <li>The Relying Party Client forwards the information to the Client using the WebAuthnAPI.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the User (for example using a PIN or via biometrics). It then generates a new key pair with a new Credential ID and set the scope of this to the specific Relying Party ID and User ID. Finally, the Authenticator may generate an attestation (explained in Section 4.7.2.3) and send this, as well as the public key and its Credential ID, to the Client.</li> <li>The Client then forwards the information to the Relying Party Client that again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the attestation (if present) and registers the received public key for this User ID.</li> </ol> <p>Note that the Authenticator stores the public key in a way such that it is scoped uniquely to a specific Relying Party, aligning with the requirements of [CIR 2024/2979], Article 14 (2), which states that the pseudonyms must be unique to each Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4723-pseudonym-attestation","title":"4.7.2.3 Pseudonym attestation","text":"<p>The term 'attestation' is here used differently than elsewhere in the ARF. In this context, the attestation is not about attributes of the User, but rather about attributes of the Authenticator. The attestation serves to ensure the Relying Party that they are talking with an Authenticator with certain attributes. The attestation often takes the form of a signature on the challenge as well as some other contextual data.</p> <p>In [W3C WebAuthn], five different types of attestations are mentioned:</p> <ul> <li> <p>Basic Attestation: The Authenticator stores a single master public and private key. The private key is used to sign all attestations and a certificate on the public key is included in the attestation data to allow the Relying Party to verify the signature.</p> </li> <li> <p>Attestation CA: Similar to the above, in the sense that the Authenticator stores a single master public and private key. However, instead of using this to attest Passkeys, the Authenticator uses this to authenticate towards a Certificate Authority (CA), which is configured to issue certificates to the Authenticator on multiple attestation key pairs. The Authenticator then uses these attestation private keys to sign attestations.</p> </li> <li> <p>Anonymisation CA: Similar to the second bullet above, except that it is explicit that the Authenticator requests a certificate for a new attestation key pair per generated Passkey.</p> </li> <li> <p>Self Attestation: The attestation is signed with the private key of the newly generated key pair in the Passkey. Note that this does not give any guarantees for the Relying Party about the Authenticator they are interacting with.</p> </li> <li> <p>No Attestation Statement: No attestation is given. Note that this does not give any guarantees for the Relying Party about the Authenticator they are interacting with.</p> </li> </ul> <p>Please note that Article 5a (5) a) viii) of the [European Digital Identity Regulation] states \"European Digital Identity Wallets shall, in particular support common protocols and interfaces: ... for relying parties to verify the authenticity and validity of European Digital Identity Wallets;...\". The latter two forms of attestation do not align with this requirement. Section 5.1 of the Discussion Paper for Topic E discusses how the other three possibilities relate to privacy risks about User surveillance identified in Section 7.4.3.5.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#4724-authentication","title":"4.7.2.4 Authentication","text":"<p>The flow for authentication using a Passkey following [W3C WebAuthn] is:</p> <ol> <li>The Relying Party Server creates a challenge and sends this along with its Relying Party ID to the Relying Party Client.</li> <li>The Relying Party Client forwards the information to the Client using the WebAuthn API.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the User (for example using a PIN or via biometrics). It then prompts the User to select one of the Passkeys scoped to this Relying Party ID, if there are multiple. For this step the User Name can be presented to the User. Finally, the Authenticator uses the private key of the chosen key pair (= Passkey) to sign the challenge as well as some contextual data including the User ID, Credential ID, and the Relying Party ID. The Authenticator then sends this to the Client.</li> <li>The Client forwards the information to the Relying Party Client, which again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the signature with the stored public key for this User ID and Credential ID, and, depending on the outcome of this verification, considers the User to be authenticated.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#5-data-model-and-data-exchange-protocols","title":"5 Data model and data exchange protocols","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#51-attestation-elements","title":"5.1 Attestation elements","text":"<p>Within the EUDI Wallet ecosystem, data is exchanged in the form of Electronic Attestations of Attributes (EAA), hereafter referred to as \"attestations.\" Apart from EAA, the [European Digital Identity Regulation] explicitly defines another category of data, called Person Identification Data (PID), see Section 5.2.</p> <p>Each PID and attestation consists of the following key elements:</p> <ul> <li> <p>A set of attributes, which provide information about the subject of the attestation. The subject of the PID or attestation may be a natural person or a legal person. A Relying Party will request one or more of these attributes to get the reliable information they need to provide some service to the User. The set of attributes that an attestation may contain is defined in an attribute schema, see below.</p> </li> <li> <p>A set of metadata, meaning information about the attestation itself, such as its attestation type (PID, mDL, diploma, etc.), its Attestation Provider, and its administrative validity period, if applicable. This kind of metadata is also defined in an attribute schema. In addition, metadata also includes information that is necessary to ensure the security of the attestation. This includes at least its technical validity period. It also includes a public key of the attestation, which a Relying Party will use to verify that the attestation was not copied, see Section 6.6.3.8. It may also include information allowing the Relying Party to verify that the attestation was not revoked, see Section 6.6.3.7.</p> </li> <li> <p>A proof, which ensures the integrity, authenticity, and support of selective disclosure of the attestation. The format of the proof complies with the proof mechanism specified for this type of attestation, see below. The proof includes information that enables a Relying Party to verify the proof, for example a Attestation Provider certificate and a reference to a trust anchor that can be used to verify that certificate.</p> </li> </ul> <p>An attribute schema defines the logical organisation of all mandatory and optional attributes within an attestation, as well as the format of each attribute, meaning its unique identifier, encoding, allowed values, and serialisation. In addition, an attribute schema specifies some of the attestation metadata, such as its attestation type and information about its Attestation Provider, validity period, etc. Within the EUDI Wallet ecosystem, the attribute schema for each attestation type is specified by an Attribute Schema Provider in an Attestation Rulebook according to Section 5.4.</p> <p>A proof mechanism defines the method used to create the attestation proof. For example, a 'standard' digital signature is a proof ensuring integrity and authenticity, but not allowing selective disclosure. Proof mechanisms are specified in standards or technical specifications. The attestation formats listed in Section 5.3 either specify a proof mechanism that allows for selective disclosure, or leave it to other technical specifications to do so.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#52-attestation-categories","title":"5.2 Attestation categories","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#521-overview","title":"5.2.1 Overview","text":"<p>Within the European Digital Identity Wallet ecosystem, the [European Digital Identity Regulation] distinguishes four legal categories of attestations:</p> <ul> <li>Person Identification Data (PID),</li> <li>Qualified Electronic Attestation of Attributes (QEAA),</li> <li>Electronic attestation of attributes issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA),</li> <li>Non-Qualified EAA.</li> </ul> <p>The next subsections give more information about each of these categories. Please note that the differences between them are purely legal. For example, a diploma may be a QEAA or a non-qualified EAA, depending on whether it is issued by a qualified trust service provider (QTSP) or by an unqualified one. Similarly, an mDL may be issued as a PuB-EAA, a QEAA, or a non-qualified EAA, depending on the legal status of the party issuing mobile driving licences in each Member State. From a technical point of view, all PIDs, QEAAs, PuB-EAAs, and EAAs comply with one of the attestation formats listed in Section 5.3.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#522-person-identification-data-pid","title":"5.2.2 Person Identification Data (PID)","text":"<p>A PID is a set of data that is issued in accordance with Union or national law and that enables the establishment of the identity of a natural or legal person, or of a natural person representing another natural person or a legal person.</p> <p>Besides the fact that the Regulation defines the PID as a category of data that is legally distinct from Electronic Attestations of Attributes (EAA), another difference between PID and EAA is that the presence or absence of a valid PID determines whether a Wallet Unit is in the Operational or the Valid state, as discussed in Section 4.6.3.</p> <p>As implied in that section, it is possible for a Wallet Unit to contain multiple PIDs. If the User has multiple nationalities, they may be able to receive a PID from multiple PID Providers in a single Wallet Unit. However, please note that a Wallet Provider is free to decide that its Wallet Unit does not support all PID Providers, and that, conversely, a PID Provider may decide that it does not support all Wallet Solutions; see Section 6.5.2.3. Note that the subject of all PIDs in the Wallet Unit will be the same person, namely the User of the Wallet Unit.</p> <p>For more information, please refer to Section 3.4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#523-qualified-electronic-attestation-of-attributes-qeaa","title":"5.2.3 Qualified Electronic Attestation of Attributes (QEAA)","text":"<p>A QEAA is an electronic attestation of attributes which is issued by a qualified trust service provider (QTSP) and meets the requirements laid down in Annex V of the Regulation. For more information, please refer to Section 3.6.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#524-electronic-attestation-of-attributes-issued-by-or-on-behalf-of-a-public-sector-body-responsible-for-an-authentic-source-pub-eaa","title":"5.2.4  Electronic attestation of attributes issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA)","text":"<p>A PuB-EAA is an electronic attestation of attributes issued by a public sector body that is responsible for an authentic source or by a public sector body that is designated by the Member State to issue such attestations of attributes on behalf of the public sector bodies responsible for authentic sources in accordance with Article 45f and with Annex VII of the Regulation.</p> <p>For more information, please refer to Section 3.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#525-non-qualified-eaa","title":"5.2.5 Non-Qualified EAA","text":"<p>A non-qualified EAA is an EAA which is not a QEAA or a PuB-EAA. For more information, please refer to Section 3.8.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#53-attestation-formats-and-proof-mechanisms","title":"5.3 Attestation formats and proof mechanisms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#531-overview","title":"5.3.1 Overview","text":"<p>Section 5.1 listed a proof mechanism as one of the key elements needed to define a type of attestation. The proof mechanism for an attestation is closely related to the format of that attestation. Within the EUDI Wallet ecosystem, the following standardised formats for electronic attestations of attributes can be used:</p> <ul> <li>The format specified in [ISO/IEC 18013-5] and generalised in [ISO/IEC 23220-2],</li> <li>The format specified in 'SD-JWT-based Verifiable Credentials' [SD-JWT VC],</li> <li>The format specified in 'W3C Verifiable Credentials Data Model v2.0'[W3C VCDM 2.0].</li> </ul> <p>The next subsections give more information about each of these formats and specifications, and explain where the different elements of an attestation, as explained in Section 5.1 are defined for that attestation format.</p> <p>Within the EUDI Wallet ecosystem, Wallet Units will support the first two formats above. Support for the third format is optional and meant for non-qualified EAAs only. Topic 12 states the detailed requirements regarding support by Wallet Units, PID Providers, and Attestation Providers for these formats and specifications.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#532-isoiec-18013-5-and-isoiec-23220-2","title":"5.3.2 ISO/IEC 18013-5 and ISO/IEC 23220-2","text":"<p>The ISO/IEC 18013-5 standard was originally developed as a standard for mobile driving licenses (mDL) and mDL readers. In terms of this ARF, an mDL is a Wallet Unit containing an mDL attestation (as defined in the mDL Rulebook), while an mDL reader is a Relying Party requesting such an attestation.</p> <p>ISO/IEC 18013-5 specifies:</p> <ul> <li>An attribute schema containing all attributes and metadata for an mDL. The schema specifies the semantics of these, as well as their encoding in Concise Binary Object Representation (CBOR), see [RFC 8949]. The standard also specifies the use of namespaces to avoid collision of attribute identifiers.</li> <li>A proof mechanism ensuring the authenticity and integrity of a PID or attestation, while allowing selective disclosure of attributes.</li> <li>A security mechanism enabling device binding of PIDs and attestations, see Section 6.6.3.8,</li> <li>All other aspects necessary to securely request, present, and verify an mDL attestation in proximity flows, see Section 5.6.2.</li> </ul> <p>Point to note about ISO/IEC 18013-5: - the mDL attribute schema (see first bullet above) is the only aspect of ISO/IEC 18013-5 that is specific for mDLs. All other aspects are generic and can be used for any other attestation type, including PIDs. This means that another ISO/IEC 18013-5-compliant attestation type can be created simply by specifying an appropriate attribute schema using CBOR, and referring to ISO/IEC 18013-5 for all other details. Please refer to Chapter 4 of the PID Rulebook for an example. Within the EUDI Wallet ecosystem, such an attribute schema is specified in an Attestation Rulebook, see Section 5.4. ISO/IEC 23220-2 specifies a generic set of attributes for use in different attestation types, and also specifies how these can be encoded in CBOR. - An ISO/IEC standard for mobile documents in general (not mDLs specifically) is in preparation and will become ISO/IEC 23220-4. This standard will generalise ISO/IEC 18013-5, in the sense that it will allow more options and communication flows. Once that standard is published, all references in this ARF to ISO/IEC 18013-5 may be replaced by appropriate references to ISO/IEC 23220-4. However, at the moment ISO/IEC 23220-4 is not finished yet and therefore cannot be referenced.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#533-sd-jwt-vc","title":"5.3.3 SD-JWT VC","text":"<p>'SD-JWT-based Verifiable Credentials' [SD-JWT VC] specifies a data format and processing rules to express verifiable credentials (i.e., attestations). \"SD-JWT\" here stands for 'Selectively Disclosable JSON Web Token'. As that name suggests, SD-JWTs are a special form of JWTs [RFC 7519] that are selectively disclosable. The mechanisms used to make them selectively disclosable is often described as using 'salted hashes', and is conceptually identical to the mechanism used for the same purpose in [ISO/IEC 18013-5].</p> <p>[SD-JWT VC] specifies the following aspects:</p> <ul> <li>The encoding to be used for attributes and metadata, namely JSON, as well as rules to prevent collisions of claim names,</li> <li>A proof mechanisms ensuring the authenticity and integrity of a PID or attestation, while allowing selective disclosure of attributes, see above.</li> <li>A security mechanism enabling device binding of PIDs and attestations, see Section 6.6.3.8.</li> </ul> <p>In addition to these aspects, within the EUDI Wallet ecosystem,</p> <ul> <li>attribute schemas for specific SD-JWT VC-compliant attestation types will be specified in Attestation Rulebooks, see Section 5.4. Please refer to Chapter 5 of the PID Rulebook for an example.</li> <li>SD-JWT VC-compliant attestations will be requested and presented using [OpenID4VP], see Section 5.6.3.</li> </ul> <p>Since [SD-JWT VC] contains a number of options, the use of the profile for SD-JWT VCs specified in [HAIP] is necessary to ensure interoperability between Wallet Units and Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#534-w3c-verifiable-credentials","title":"5.3.4 W3C Verifiable Credentials","text":"<p>The W3C Verifiable Credentials Data Model [W3C VCDM 2.0] defines a general data model, offering a high-level structure but leaving many technical aspects open for further definition, including:</p> <ul> <li>Security mechanisms</li> <li>Signature formats</li> <li>Transport protocols</li> </ul> <p>Key features of W3C VCDM are:</p> <ul> <li>JSON-LD (Linked Data)-based: The use of JSON-LD ensures structured and interoperable data exchange, but introduces complexity.</li> <li>Extensible Framework: Allows different implementations but requires additional specifications.</li> <li>Security and Signature Formats: Not inherently defined \u2014 must be specified separately.</li> </ul> <p>To implement W3C VCDM-based attestations, separate specifications are needed for security mechanisms and signatures, such as:</p> <ol> <li>'Securing Verifiable Credentials using JOSE and COSE' [W3C VC-JOSE-COSE]: Defines how to use one of the following to secure attestations in the VCDM model:<ul> <li>a JWT (see [RFC 7519]),</li> <li>a SD-JWT (see the previous section), or</li> <li>a CBOR Web Token (CWT, see [RFC 8392]).</li> </ul> </li> <li>'Verifiable Credential Data Integrity' [W3C VC Data Integrity]: Provides a cryptographic proof format independent of JWT or CWT, relying on detached proofs (not embedded signatures) for better flexibility.</li> </ol> <p>These mechanisms offer different trade-offs, allowing PID Providers or Attestation Providers and Relying Parties to choose the appropriate security model based on their privacy, interoperability, and trust requirements. In order to achieve interoperability, the specification of a profile standard making specific choices will be necessary.</p> <p>In addition to these aspects, within the EUDI Wallet ecosystem,</p> <ul> <li>attribute schemas for specific W3C VCDM-compliant attestation types (if any) will be specified in Attestation Rulebooks, see Section 5.4.</li> <li>W3C VCDM-compliant attestations may be requested and presented using [OpenID4VP], see Section 5.6.3. However, this ARF does not require this, and for any W3C VCDM-compliant attestation, the applicable transport protocol must be defined in the corresponding Rulebook.</li> </ul> <p>See chapters 3 and 4 of the Discussion Paper for Topic V for more considerations regarding the SD-JWT VC and W3C Verifiable Credential formats and their interoperability within the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#54-attribute-schemas-and-attestation-rulebooks","title":"5.4 Attribute schemas and Attestation Rulebooks","text":"<p>Section 5.1 listed an attribute schema as one of the key elements needed to define a type of attestation. This section specifies the concept of an Attestation Rulebook. For each type of attestation, such as a PID, an mDL, a diploma, or an e-prescription, an Attestation Rulebook specifies the attribute schema and proof mechanisms of that attestation, and, when required, the trust mechanisms for authentication and authorisation. Each attestation has an attestation type. The attribute schema specified in the Attestation Rulebook defines the unique identifier, syntax, and semantics of all attributes that can be part of that attestation.</p> <p>An Attestation Rulebook also makes some choices regarding the protocol(s) for presentation that must be supported by the relevant attestations. Topic 12 contains the requirements for Attestation Rulebooks.</p> <p>Attestation Rulebooks are defined by Attribute Schema Providers, see Section 3.15. This role can be assumed by different types of organisation:</p> <ul> <li>Some Rulebooks already have been defined by the European Commission, in consultation with the European Digital Identity Cooperation Group (EDICG). This concerns the PID Rulebook and the mDL Rulebook in Annex 3 of the ARF.</li> <li>The Rulebook for an attestation intended to be used across organisations and/or across borders can be defined by an organisation in which, insofar possible, all stakeholders are represented. This will prevent multiple Attestation Rulebooks being defined for the same type of attestation, such as diplomas. It will also prevent unnecessary differences in the syntax and semantics between similar attestations. The decision on which organisation will be responsible for a given Attestation Rulebook is out of scope for this document. As explained in Topic 12, it is possible that an individual Attestation Provider needs to include attributes in an attestation that have not been specified in the relevant sectoral or EU-wide Rulebook. An example of this are attributes that only have a meaning within the Member State in which the Attestation Provider resides. To allow such domestic attributes, an Attestation Provider can define a custom Rulebook to specify attributes that are specific to this Provider and are not included in the EU-wide or sectoral Rulebook.</li> <li>The Rulebook for an attestation intended to be used only within an organisation will be defined by that organisation.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#55-catalogues","title":"5.5 Catalogues","text":"<p>Section 2 in Article 45e of the Regulation, sets up the direct legal basis for the Commission to \"where necessary, establish specifications and procedures for the catalogue of attributes and schemes for the attestation of attributes and verification procedures for qualified electronic attestations of attributes\".</p> <p>One of the main rationales for the ARF is to reach a high level of interoperability. This interoperability can be achieved on different layers. On the technical level, interoperability can be achieved by using common standards, protocols and technical specifications, ensuring common language for Attestation Providers, Wallet Providers and Relying Parties, enabling issuance, presentation and processing of attestations, based on agreed common protocols interfaces and syntax.</p> <p>The other layer is the semantic one and relates to semantic schemes of attributes. The risk is that an uncontrolled manner of implementation and usage will create barriers and complicate the implementation, thus making the ecosystem much more costly to create and maintain, complex, and error-sensitive, affecting the quality of the overall system.</p> <p>For the development and success of the EUDI Wallet ecosystem, re-using the building blocks of attributes and attestations is therefore essential. Creating and maintaining controlled vocabularies, a catalogue of attributes, and Attestation Rulebooks enables shorter 'time-to-market' and efficient implementation.</p> <p>Building on the requirements of Topic 12, having in mind both the need for interoperability on the one hand and the varied nature of attestations and organisations specifying those attestations on the other hand, the following principles were defined:</p> <ul> <li>Attestation Rulebooks for QEAAs and PuB-EAAs used within the EUDI Wallet ecosystem may be registered and published in a publicly accessible catalogue. The Attestation Rulebook catalogue may also include Attestation Rulebooks for non-qualified EAAs.</li> <li>The Commission will take measures to establish and maintain the Attestation Rulebooks catalogue.</li> <li>The Attestation Rulebooks catalogue will enable Attestation Providers, Relying Parties and other actors in the EUDI Wallet ecosystem to know which attestation types exist, and what are the identifiers, syntax, and semantics of all attributes that are part of the attestation.</li> </ul> <p>Also, the following points are emphasised, to facilitate creation and adoption:</p> <ul> <li>Registration of an Attestation Rulebook in the Attestation Rulebook catalogue is not mandatory.</li> <li>Registration does not create any obligation or automatic acceptance by any third party, or automatically imply cross-border recognition of the type of attestation described in the Rulebook.</li> <li>The Attestation Rulebooks catalogue can be in the same environment as the catalogue of attributes.</li> </ul> <p>Implementation of these principles will be discussed further in detail. The ambition is to use existing efforts and tools created by the Member States, the Commission and cross-border organisations, to connect and interact with the stakeholders, to utilise existing data assets for updating them when needed and add new data sets to support new use cases that will be implemented in the EUDI Wallet ecosystem.</p> <p>Topic 25 and Topic 26, present the current and foreseen status of the catalogues, their creation, distribution, discovery, management and maintenance, that will allow simple update procedures, not burdening the process on the one hand, while ensuring consistent and on-going mechanisms to keep the catalogues updated and accessible to the relevant actors, both those that create the content and those that use, consume and process the attributes and the attestations, and - last but not least - for the general public.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#56-protocols-for-secure-data-exchange-between-wallet-units-and-relying-parties","title":"5.6 Protocols for secure data exchange between Wallet Units and Relying Parties","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#561-introduction","title":"5.6.1 Introduction","text":"<p>Within the EUDI Wallet ecosystem, the protocol specified in ISO/IEC 18013-5 is used for proximity transaction flows, while the protocol specified in OpenID4VP is used for remote transaction flows. This section briefly describes both of these protocols.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#562-secure-data-exchange-using-isoiec-18013-5-and-isoiec-18013-7","title":"5.6.2 Secure data exchange using ISO/IEC 18013-5 and ISO/IEC 18013-7","text":"<p>ISO/IEC 18013-5 specifies the following aspects related to secure data exchange:</p> <ol> <li>Message structures and transaction flows allowing a Wallet Unit and a Relying Party to request and present attestations.</li> <li>Proximity interface specifications, allowing a Wallet Unit and a Relying Party to set up a communication channel using QR code or NFC, and to subsequently communicate over BLE, NFC, or Wi-Fi Aware.</li> <li>Security mechanisms ensuring<ul> <li>the confidentiality and authenticity of all data exchanged between a Wallet Unit and a Relying Party,</li> <li>Relying Party authentication, see Section 6.6.3.2.</li> </ul> </li> </ol> <p>As already explained in Section 5.3.2, although ISO/IEC 18013-5 nominally specified the mobile driving licence, all of the above aspects are generic and can be used for any type of attestation.</p> <p>Whereas ISO/IEC 18013-5 specifies proximity transaction flows only, ISO/IEC 18013-7 specifies how to request and present ISO/IEC 18013-5-compliant attestations in remote transaction flows. This standard specifies three options:</p> <ul> <li>Using the messages and transaction flows specified in ISO/IEC 18103-5 over an HTTP-based interface.</li> <li>Using [OpenID4VP], see Section 5.6.3. [ISO/IEC 18013-7] specifies a profile for this standard,</li> <li>Using the Digital Credential API, see Section 4.4.3. [ISO/IEC 18013-7] specifies a profile for the use of this API.</li> </ul> <p>Within the EUDI Wallet ecosystem, the second option above will be used for requesting and presenting ISO/IEC 18013-5-compliant attestations in remote transaction flows.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#563-secure-data-exchange-using-openid4vp","title":"5.6.3 Secure data exchange using [OpenID4VP]","text":"<p>The [OpenID4VP] standard defines message structures, transaction flows, and an HTTP-based interface specification between Wallet Units and Relying Parties. [OpenID4VP] also specifies security mechanisms ensuring:     - the confidentiality and authenticity of all data exchanged between a     Wallet Unit and a Relying,     - Relying Party authentication.</p> <p>[OpenID4VP] is suitable only for remote transaction flows.</p> <p>[OpenID4VP] can be used for transporting attestations in different formats, including especially the formats used within the EUDI Wallet ecosystem. Within this ecosystem, [SD-JWT VC]-compliant attestations are always requested and presented using [OpenID4VP], while [ISO/IEC 18013-5]-compliant attestations are requested and presented using [OpenID4VP] in remote transaction flows.</p> <p>Since [OpenID4VP] contains a number of options, the use of the profile for 'OpenID for Verifiable Presentations for IETF SD-JWT VC' specified in [HAIP] is necessary to ensure interoperability between Wallet Units and Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6-trust-model","title":"6 Trust model","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#61-scope","title":"6.1 Scope","text":"<p>The trust model presented in this chapter defines how trust is established, maintained, validated, and managed among entities within the EUDI Wallet ecosystem. It outlines the underlying rules, assumptions, and mechanisms that govern trust relationships, determining whether an entity (such as a Wallet Unit, User Device, or Relying Party) can be considered trustworthy.</p> <p></p> <p>Figure 11 illustrates the key entities and the relationships in the trust model of the EUDI Wallet ecosystem.</p> <p>At its core is the Wallet Unit (top middle, blue), which interacts with various entities throughout its lifecycle. The Wallet Unit lifecycle is detailed in Section 6.5 and consists of installation, activation, management, and uninstallation. Each Wallet Unit is a configuration of a Wallet Solution, comprising a Wallet Instance and one or more WSCA/WSCDs, provided by a Wallet Provider. The Wallet Provider oversees these components and manages their registration, withdrawal, or suspension (see Section 6.2). The Wallet Provider ensures that a valid Wallet Unit is in possession of at least one Wallet Unit Attestation (WUA), to enable other entities to authenticate the Wallet Unit. The Wallet Provider can revoke the WUAs if needed.</p> <p>The Wallet Unit handles User PIDs and attestations (QEAAs, PuB-EAAs, and non-qualified EAAs). PIDs are issued by PID Providers and attestations by Attestation Providers, both positioned to the left of the Wallet Unit in Figure 11. Before interacting with a Wallet Unit these providers must be registered with a PID Provider Registrar or Attestation Provider Registrar. Upon registration, they receive an access certificate (from a PID Provider Access CA or Attestation Provider Access CA) and may optain one or more registration certificates ( from a PID Provider Registration CA or Attestation Provider Registration CA). See Section 6.3.</p> <p>Once a Wallet Unit receives a PID or attestation, it can present User attributes to Relying Party Instances (right side of Figure 11). These instances are hardware/software setups enabling Relying Parties to interact with Wallet Units. Relying Parties register with a Relying Party Registrar, receiving an access certificate for each Relying Party Instance, as well as may obtain one or more Relying Party Registration Certificates. This is discussed in Section 6.4.</p> <p>Section 6.6 further details the lifecycle of PIDs and attestations, including issuance, presentation, management, and deletion.</p> <p>Notes:</p> <ul> <li>This conceptual trust model may be implemented with slight variations across Member States, such as adopting one or multiple Certification Authorities or leveraging existing entities that already fulfil this role.</li> <li>For Access Certificates, PIDs, qualified EAAs, and PuB-EAAs, interoperability is essential (Section 4.2.2) and is achieved by using a PKI following X.509 certificate standards (RFC5280, RFC3647). Non-qualified EAAs may adopt alternative trust models and verification mechanisms.</li> <li>The model supports both remote and proximity use cases, though technical measures and authentication mechanisms may vary.</li> <li>This version of the ARF does not yet include trust interactions for qualified electronic signatures or seals (see Topic 16 and Topic 37 in Annex 2).</li> <li>Besides the trust relationships described in this chapter, other trust relations are established as well. For instance, Users, PID Providers, Attestation Providers, and Relying Parties trust certification bodies and Trusted List Providers. This trust is primarily rooted in authority and in procedural measures, such as public oversight, published security and operational policies, and audits, rather than in technical measures. To verify that entities are indeed interacting with a trusted authority, standard technical measures suitable for the context will be used.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#62-trust-throughout-a-wallet-solution-lifecycle","title":"6.2 Trust throughout a Wallet Solution lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#621-wallet-solution-lifecycle","title":"6.2.1 Wallet Solution lifecycle","text":"<p>Section 4.6.2 presented the lifecycle of a Wallet Solution:</p> <ol> <li>The Wallet Provider responsible for the Wallet Solution is registered by a Trusted List Provider. As a result, the Wallet Solution enters the Valid state. This is discussed in Section 6.2.2.</li> <li>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a registered Wallet Provider. This is discussed in Section 6.2.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#622-wallet-provider-registration-and-notification","title":"6.2.2 Wallet Provider registration and notification","text":"<p>Figure 11 depicts the Wallet Provider to the top of the Wallet Unit. To the left and below of this, the figure also shows that a Wallet Provider registers itself and its Wallet Solution with a Wallet Provider Trusted List Provider in its Member State. Subsequently, the Member State notifies the Wallet Provider to the European Commission.</p> <p>The Wallet Solution provided by the Wallet Provider is certified as described in Chapter 7.</p> <p>If the registration and notification processes are successful, the trust anchors of the Wallet Provider are included in a Wallet Provider Trusted List. During issuance of a PID or an attestation, the PID Provider or the Attestation Provider can use these trust anchors to verify the authenticity of a Wallet Unit Attestation signed by the Wallet Provider, so they can be sure they are dealing with an authentic Wallet Unit from a trusted Wallet Provider. See Section 6.6.2.3, Topic 9 and Topic 38. Similarly, when the Wallet Unit presents a PID or an attestation to a Relying Party, the Relying Party can use the Wallet Provider trust anchors to verify the authenticity of a Wallet Unit Attestation signed by the Wallet Provider; see Section 6.6.3.11, Topic 9 and Topic 38.</p> <p>If a certain entity offers multiple Wallet Solutions, they will register as a separate Wallet Provider for each of these Wallet Solutions. This implies that such an entity will register different trust anchors for each of their Wallet Solutions.</p> <p>More details on the Wallet Provider notification process can be found in Topic 31.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#623-wallet-provider-suspension-or-withdrawal","title":"6.2.3 Wallet Provider suspension or withdrawal","text":"<p>Under specific conditions, a Trusted List Provider may decide to suspend or withdraw a Wallet Provider. This implies that the Wallet Provider's status in the respective Trusted List will be changed to Invalid. The conditions for this will be specified by each Trusted List Provider. As a result of this status change, PID Providers, Attestation Providers and Relying Parties will no longer trust the trust anchors of the Wallet Provider and will therefore refuse to interact with any Wallet Unit provided by that Wallet Provider.</p> <p>When a Trusted List Provider withdraws a Wallet Provider, the Wallet Provider revokes all valid WUAs for all Wallet Units, as described in Section 6.6.3.12.</p> <p>If an entity has registered multiple Wallet Providers, each offering a different Wallet Solution, and one of these Wallet Providers is suspended or withdrawn, only the applicable Wallet Solution will be impacted. It may happen that the reason for suspension or withdrawal is applicable to all Wallet Solutions offered, in which case all of the Wallet Providers registered by that entity will be withdrawn or suspended separately.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#63-trust-throughout-a-pid-provider-or-an-attestation-provider-lifecycle","title":"6.3 Trust throughout a PID Provider or an Attestation Provider lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#631-pid-provider-or-attestation-provider-lifecycle","title":"6.3.1 PID Provider or Attestation Provider lifecycle","text":"<p>Section 4.6.4 presented the lifecycle of a PID Provider or Attestation Provider:</p> <ol> <li>A PID Provider or an Attestation Provider is registered by a Trusted List Provider in its Member State. This is discussed in Section 6.3.2.</li> <li>Under specific conditions, a Trusted List Provider may decide to suspend or cancel registration of a registered PID Provider or Attestation Provider. This is discussed in Section 6.3.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#632-pid-provider-or-attestation-provider-registration-and-notification","title":"6.3.2 PID Provider or Attestation Provider registration and notification","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6321-introduction","title":"6.3.2.1 Introduction","text":"<p>Figure 11 depicts the PID Providers and Attestation Providers to the left of the Wallet Unit. To the left and below of this, the figure also shows that each PID Provider and Attestation Provider will register itself with a PID Provider Registrar or an Attestation Provider Registrar in its Member State. The Member State notifies the PID Provider or Attestation Provider to the European Commission.</p> <p>If the registration and notification processes are successful, at least the following happens:</p> <ul> <li>Data about the PID Provider or Attestation Provider is included in the registry of the relevant Registrar.</li> <li>The PID Provider or Attestation Provider receives an access certificate, and optionally one or more registration certificates.</li> <li>The trust anchors of the PID Provider or Attestation Provider are included in a Trusted List.</li> </ul> <p>These processes are discussed in the next subsections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6322-data-about-the-pid-provider-or-attestation-provider-is-included-in-the-registry","title":"6.3.2.2 Data about the PID Provider or Attestation Provider is included in the registry","text":"<p>When a PID Provider or Attestation Provider is registered, the Trusted List Provider registers a set of data about the PID Provider or Attestation Provider in its register. The Trusted List Provider makes the contents of the register available to the general public, both in machine-readable and human-readable format.</p> <p>The data to be registered about a PID Provider or Attestation Provider includes the attestation type(s) that the PID Provider or Attestation Provider intends to issue to Wallet Units. This will enable Wallet Units and Relying to verify the entitlement of a given PID Provider or Attestation Provider to issue a specific attestation type. For example, a PuB-EAA Provider may be entitled to issue mDLs in a specific Member State, but may not be entitled to issue diplomas.</p> <p>Note that the need to verify this entitlement depends on the legal status of the Provider:</p> <ul> <li>For PID Providers, their entitlement to issue PIDs follows already from the fact that their trust anchors are included in the PID Provider Trusted List; see Section 6.3.2.4.</li> <li>For QEAA Providers, no checking of entitlement (apart from the fact that they are a QEAA) is necessary, since QEAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations that they are not legally entitlement to issue. This trust is warranted since QEAA Providers operate within a regulated framework and are regularly audited.</li> <li>For PuB-EAA Providers, checking of entitlement may be necessary, since the legal and regulatory framework within which they operate is different from that of QEAAs. To verify the entitlements of an PuB-EAA Provider it is interacting with, a Wallet Unit or Relying Party can query the registry of the Registrar mentioned in the access certificate of the PuB-EAA Provider.</li> <li>For non-qualified EAA Providers, checking of entitlement is necessary, since they are unregulated and may not be completely trustworthy. Without additional measures, a fraudulent EAA Provider may be able to issue types of QEAAs, PuB-EAAs or EAAs that it is not legally entitled to issue. To prevent this, a Wallet Unit or Relying Party may query the applicable register, as described in the previous bullet. In addition, the applicable Rulebook (see Topic 12) may define alternative mechanisms allowing a Wallet Unit or Relying Party to verify an EAA Provider's entitlements.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6323-pid-provider-or-attestation-provider-receives-an-access-certificate","title":"6.3.2.3 PID Provider or Attestation Provider receives an access certificate","text":"<p>When a PID Provider or Attestation Provider is registered by a Member State, a PID Provider Access Certificate Authority (CA) or Attestation Provider Access Certificate Authority issues one or more access certificates to the PID Provider or to the Attestation Provider. A PID Provider or an Attestation Provider needs such a certificate to authenticate itself towards a Wallet Unit when issuing a PID or an attestation to it, as described in Section 6.6.2.2.</p> <p>Subsequently, the Access Certificate Authority is included in a PID Provider Access CA Trusted List or Attestation Provider Access CA Trusted List. This Trusted List contains at least the trust anchor(s) of the CA. A Wallet Unit can use these trust anchors to verify the authenticity of a PID Provider or an Attestation Provider access certificate during the issuance of a PID or an attestation. For more information, see Topic 31.</p> <p>A PID Provider access certificate does not indicate that its subject is a PID Provider. Similarly, an Attestation Provider access certificate does not indicate that its subject is a QEAA Provider, a PuB-EAA Provider, or a non-qualified EAA Provider. Such information is included in the registration certificates (if issued), or available in the Registrar's on-line service. Furthermore, the access certificate of a PID Provider or Attestation Provider does not contain the Provider's entitlements, e.g. to issue attestations of a specific type, for instance an mDL or diploma (\"intended use\"). Such information is included in the Relying Party's registration certificate (if issued) and available in the Registrar's on-line service.</p> <p>See Section 6.6.3.3 to learn more about the registration certificate content.</p> <p>A Wallet Unit can use this information to verify that a Provider it is contacting to issue a specific type of attestation, is entitled to do so (verification of the type of the Provider and the \"intended use\"). </p> <p>If the registration certificate is not available, the Wallet Unit can always obtain this information from the Registrar's on-line service (see Section 6.3.2.2). </p> <p>To manage both flows - with use of the registration certificate and without - the access certificates contains  + information (a flag) to indicate whether the registration certificate was issued or not, + URL to the the Registrar's on-line service providing information on the Relying Parties registrations. In case the intermediary is acting on behalf of an 'end' Relying Party, the information if the registration certificate is available is contained in the presentation request. (Note: this needs an extension of [ISO/IEC 18013-5] and [OpenID4VP]).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6324-pid-provider-or-attestation-provider-trust-anchors-are-included-in-a-trusted-list","title":"6.3.2.4 PID Provider or Attestation Provider trust anchors are included in a Trusted List","text":"<p>For a PID Provider, a QEAA Provider, or a PuB-EAA Provider, successful registration and notification also means that the Provider is notified to the European Commission and that its trust anchors are included in a Trusted List. Relying Parties can use these trust anchors to verify the authenticity of PIDs, QEAAs, and PuB-EAAs they obtain from Wallet Units.</p> <p>Non-qualified EAA Providers are not included in a Trusted List by a Member State. However, if a Relying Party requests a non-qualified EAA from a Wallet Instance, it must know how to obtain the domain-specific trust anchor it needs to verify the signature over that EAA. To help with this, Topic 12 recommends that the applicable Rulebook specifies the mechanisms enabling this. This mechanism may be similar to the one for QEAAs, namely that the relevant non-qualified EAA Providers and their trust anchors are included in a trusted list. However, other methods may be used as well, and even if such a trusted list exists, it does not have to comply with the requirements in Topic 31.</p> <p>More details on the PID Provider or Attestation Provider notification process, as well as on the information registered and published in the PID Provider Trusted List or Attestation Provider Trusted List, can be found in Topic 31.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#633-pid-providers-or-attestation-providers-registration-suspension-or-cancellation","title":"6.3.3 PID Provider's or Attestation Provider's registration suspension or cancellation","text":"<p>Under specific conditions, a Registrar may decide to suspend or cancel registration of a PID Provider or Attestation Provider. The conditions for this will be specified by each Registrar.</p> <p>Suspension or cancellation implies that the PID Provider or Attestation Provider access certificates are revoked. As a result, the PID Provider or Attestation Provider will no longer be able to issue PIDs or attestations to Wallet Units.</p> <p>For a PID Provider, QEAA Provider or PuB-EAA Provider, suspension or cancellation also implies that its status in the respective Trusted List will be changed to Invalid. As a result, Relying Parties will no longer trust PIDs or attestations issued by the Provider with suspended or cancelled registration. For non-qualified EAA Providers, the applicable Rulebook (see Topic 12) may define additional mechanisms ensuring that Relying Parties will no longer trust the trust anchors of EAA Providers of which registration was suspended or cancelled.</p> <p>When a Registrar suspends or cancels registration of a PID Provider or Attestation Provider, the PID Provider or Attestation Provider revokes all of their PIDs or attestations as described in Section 6.6.3.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#64-trust-throughout-a-relying-party-lifecycle","title":"6.4 Trust throughout a Relying Party lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#641-relying-party-lifecycle","title":"6.4.1 Relying Party lifecycle","text":"<p>Section 4.6.6 presented the lifecycle of a Relying Party:</p> <ol> <li>A Relying Party is registered by a Registrar in the Member State where it resides. Relying Party registration is discussed in Section 6.4.2.</li> <li>Under specific conditions, a Registrar may decide to suspend or cancel registation of a Relying Party. This is discussed in Section 6.4.3.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#642-relying-party-registration","title":"6.4.2 Relying Party registration","text":"<p>Figure 11 depicts the Relying Party Instance to the right of the Wallet Unit. A Relying Party Instance is a combination of hardware and software used by a Relying Party to interact with a Wallet Unit. A Relying Party can use multiple Relying Party Instances, especially in case the interactions with the Wallet Unit take place in proximity, for instance, a border control agency at an airport employing multiple lines where arriving passengers can present their PID.</p> <p>Figure 11 also shows the Relying Party. Below that, it shows that each Relying Party will register itself with a Relying Party Registrar in its Member State. If the registration process is successful, the Registrar includes the Relying Party in its public registry. </p> <p>A Relying Party may register in the context of its several services, one per each intended use and requiring a specific attributes to be obtained from a Wallet Unit. In result, a single Relying Party may register multiple times and may be issued more than one registration certificate.  </p> <p>As a result of successful registration,</p> <ul> <li>the Relying Party Registration Certificate Authority (CA) may issue a registration certificate to the Relying Party. The purpose of the registration certificate is described in Section 6.6.3.3.</li> <li>a Relying Party Instance Access Certificate Authority (CA) associated with the Registrar issues an access certificate to each Relying Party Instance of the Relying Party. A Relying Party Instance needs such a certificate to authenticate itself towards Wallet Units when requesting the presentation of attributes, as described in Section 6.6.3.2.</li> </ul> <p>Subsequently, a Relying Party Registrar (or a Trusted List Provider acting on its behalf) in each Member State creates a Relying Party Instance Access CA Trusted List containing the trust anchor(s) of all associated Relying Party Instance Access CA(s). A Wallet Unit can use these trust anchors to verify the authenticity of Relying Party Instance access certificates. The Trusted List Provider signs and publishes the Relying Party Instance Access CA Trusted List and makes the URL of the Trusted List available to a common trust infrastructure maintained by the Commission, the so-called List of Trusted Lists. Using the common infrastructure, any entity in the EUDI Wallet ecosystem will be able to find all Trusted Lists in the ecosystem.</p> <p>More details on the Relying Party registration process can be found in Topic 27.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#643-relying-party-de-registration","title":"6.4.3 Relying Party de-registration","text":"<p>Under specific conditions, a Registrar may decide to suspend or cancel registration of a registered Relying Party. The conditions for this will be specified by each Registrar.</p> <p>Suspension or cancellation involves revocation of all valid Relying Party Instance access certificates by the relevant Access CA, such that the Relying Party is no longer able to interact with Wallet Units.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#65-trust-throughout-a-wallet-unit-lifecycle","title":"6.5 Trust throughout a Wallet Unit lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#651-wallet-unit-lifecycle","title":"6.5.1 Wallet Unit lifecycle","text":"<p>Section 4.6.3 above presented the lifecycle of a Wallet Unit:</p> <ol> <li>The Wallet Instance that is part of the Wallet Unit is installed on a device by a User. The required trust relationships for installation are discussed in Section 6.5.2 below.</li> <li>Next, the Wallet Unit is activated by the Wallet Provider and the User and becomes operational. The goals and required trust relationships for activation are discussed in Section 6.5.3.</li> <li>Once in the Operational or Valid state, the Wallet Unit is managed by the User and the Wallet Provider. This management includes at least revoking the Wallet Unit when necessary. This is discussed in Section 6.5.4. Management will also include regular updates of the Wallet Instance application to ensure its continued security and functionality. However, this is not further defined in this chapter.</li> <li>The User may uninstall the Wallet Instance; see Section 6.5.5.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#652-wallet-instance-installation","title":"6.5.2 Wallet Instance installation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6521-required-trust-relationships","title":"6.5.2.1 Required trust relationships","text":"<p>The lifecycle of a Wallet Unit starts when a User decides to install a Wallet Instance application on their device. This application in an instance of a Wallet Solution, which is provided to the User by a Wallet Provider.</p> <p>When downloading and installing the Wallet Instance, the following trust relationships are established:</p> <ol> <li>On behalf of the User, the OS of the User's device and the relevant app store verify that the Wallet Instance (i.e., the application the User is installing) is genuine and authentic and does not contain any malware or other threats.</li> <li>The User verifies that they can obtain the PID(s) they need in an instance of this Wallet Solution. If the relevant PID Provider does not support the Wallet Solution, the User will not be able to use the Wallet Unit for obtaining those PID(s).</li> </ol> <p>The next two sections discuss these trust relationships.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6522-wallet-solution-authenticity-is-verified","title":"6.5.2.2 Wallet Solution authenticity is verified","text":"<p>To ensure that the User can trust the Wallet Solution, Wallet Providers preferably make their certified Wallet Solutions available for installation via the official app store of the relevant operating system (e.g., Android, iOS). This allows the operating system of the device to perform relevant checks regarding the authenticity of the app. It also allows Users to use the same well-known channel for obtaining a Wallet Instance as they use for obtaining other apps. Finally, it avoids a situation where a User must allow side-loading of apps, which would increase the risk of unintentionally installing malicious apps.</p> <p>If a Wallet Provider makes its Wallet Solution available for installation through other means than the official OS app store, it implements a mechanism allowing the User to verify the authenticity of the Wallet Unit. Moreover, the Wallet Provider provides clear instructions to the User on how to install the Wallet Unit, including:</p> <ul> <li>instructions on how to verify the authenticity of the Wallet Instance to be installed. This can be done, for example, by comparing the hash value of the application downloaded by the User with a hash value published by the Wallet Provider.</li> <li>instructions on bypassing of any operating system limitations on side-loading of apps, if applicable, and ensuring that these limitations are restored after the Wallet Instance has been installed.</li> </ul> <p>Note: The [European Digital Identity Regulation] does not exclude the possibility that a Wallet Instance may be installed on a non-mobile device, for example a server. The requirements above also apply for the installation of a Wallet Unit on a User device that is not a mobile device, and for which no official operating system app store may exist.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6523-user-validates-that-wallet-solution-is-usable-with-relevant-pid","title":"6.5.2.3 User validates that Wallet Solution is usable with relevant PID","text":"<p>A User installs a Wallet Unit because they want to obtain and use one or more PIDs. However, PID Providers are not required to support all Wallet Solutions in the EUDI Wallet ecosystem. 'Support' here means that the PID Provider is willing to issue a PID to an instance of a given Wallet Solution on request of the User. Instead, a PID Provider may choose to support only a single Wallet Solution or a limited number of Wallet Solutions. Therefore, each PID Provider will publish a list of Wallet Solutions that they support, such that a User that wants to request a PID from that PID Provider knows which Wallet Unit they should install. This list could be published, for example, on the PID Provider's website.</p> <p>Conversely, a Wallet Solution is not required to support all PID Providers, where 'support' means that it is able to request the issuance of a PID from a PID Provider. Each Wallet Provider will, prior to or during installation of a Wallet Instance, let the User know which PID Providers are supported by this Wallet Solution.</p> <p>For QEAAs, PuB-EAAs, and non-qualified EAAs, the situation is different. Providers of such attestations will support all Wallet Solutions and are not allowed to discriminate between them when processing a request for the issuance of an attestation. Conversely, a Wallet Solution supports all Attestation Providers, and cannot discriminate between different Attestation Providers when requesting the issuance of an attestation at the User's request.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#653-wallet-unit-activation","title":"6.5.3 Wallet Unit activation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6531-introduction","title":"6.5.3.1 Introduction","text":"<p>After installation of the Wallet Instance, the new Wallet Unit (which includes that Wallet Instance) will contact the Wallet Provider to start the activation process. For successful EUDI Wallet Instance activation, the following trust relations are established:</p> <ol> <li>The EUDI Wallet Instance authenticates the EUDI Wallet Provider, meaning that the instance is sure that it is dealing with the genuine Wallet Provider who provided it to the User.</li> <li>The EUDI Wallet Provider authenticates the EUDI Wallet Instance. This means that the EUDI Wallet Provider is sure that the instance is indeed a true instance of their EUDI Wallet Solution, and not a fake app.</li> </ol> <p>Both of these trust relationships are the responsibility of the Wallet Provider. The ARF does not specify how these trust relationships can be satisfied.</p> <p>During the activation process, at least the following steps happen:</p> <ol> <li>The Wallet Provider requests data about the User's device from the Wallet Instance.</li> <li>The Wallet Provider requests the User to set up at least one User authentication mechanism.</li> <li>The Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit.</li> <li>The Wallet Provider sets up a User account for the User.</li> </ol> <p>These steps are described in the sections below.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6532-wallet-provider-requests-data-about-the-users-device-from-the-wallet-instance","title":"6.5.3.2 Wallet Provider requests data about the User's device from the Wallet Instance","text":"<p>The Wallet Instance connects to the Wallet Provider to be activated. Then, the Wallet Provider requests data about the User's device from the Wallet Instance. This data may include the communication technologies supported by the device and the characteristics of the WSCD(s) available to the device for securely storing cryptographic keys and data associated with the Wallet Unit itself and with the attestations in that Wallet Unit.</p> <p>Notes:</p> <ul> <li>As discussed in Section 4.5, a WSCD may be integrated directly within the User's device. Examples of this include an e-SIM, a UICC, an embedded Secure Element, or native secure hardware accessible via the device's OS. If so, the Wallet Instance will discover the presence of such a WSCD during activation and will communicate the characteristics of the WSCD to the Wallet Provider. In some cases, the Wallet Provider will subsequently deploy a WSCA to the WSCD to facilitate communication between the Wallet Instance and the WSCD.</li> <li>Sometimes, the User's device does not contain a local WSCD, or the local WSCD does not have the security posture necessary to enable the Wallet Unit to be an identity means at LoA High, or the Wallet Provider does not want to use a local WSCD. In such a case, the Wallet Provider ensures the Wallet Unit gets access to a remote HSM operated by the Wallet Provider.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6533-wallet-provider-requests-user-to-set-up-at-least-one-user-authentication-mechanism","title":"6.5.3.3 Wallet Provider requests User to set up at least one User authentication mechanism","text":"<p>User authentication will take place at several moments when a User uses their Wallet Unit:</p> <ol> <li>When the User opens the Wallet Instance. This is necessary to prevent anyone except the User from accessing the Wallet Unit and inspecting the User's attestations and attribute values. This data is personal and might be sensitive.</li> <li>When (or before) the Wallet Unit must perform any cryptographic operation involving private or secret keys in the WSCD. This will happen at least when<ul> <li>The User instructs the Wallet Unit to request the issuance of a new PID or attestation, see Section 6.6.2,</li> <li>The Wallet Unit asks the User for approval to present some attributes to a Relying Party, see Section 6.6.3.5,</li> <li>The User deletes a PID or attestation in their Wallet Unit, see Section 6.6</li> </ul> </li> </ol> <p>User authentication for opening the Wallet Instance above can be done either by the Wallet Instance or by a WSCD. In the latter case, it is the same mechanism employed before the presentation of any attributes, see below. In the former case, the mechanism used is preferably a general User authentication mechanism used by the User device, such as a lock screen.</p> <p>User authentication before presenting attributes is always done by the WSCA. It means that the User gives the WSCA permission to use the cryptographic keys belonging to the Wallet Unit and to the PID or attestation for performing the cryptographic operations necessary for presenting that PID or attestation. For that reason, it is always the WSCD that performs User authentication in this case.</p> <p>During activation of the Wallet Unit, depending on the choice made by the Wallet Provider to combine the two User authentication mechanisms or not, the Wallet Provider will ask the User to set up one or two authentication mechanisms.</p> <p>Note that, as discussed in the first bullet in Section 6.6.3.9, the User authentication mechanisms implemented in the WSCD may also play a role in ensuring User binding. User binding allows a Relying Party to trust that the person presenting a PID or attestation is in fact the subject of that PID or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6534-wallet-provider-issues-one-or-more-wallet-unit-attestations-to-the-wallet-unit","title":"6.5.3.4 Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit","text":"<p>During the activation of a Wallet Unit, the Wallet Provider issues one or more Wallet Unit Attestations to the Wallet Unit. The Wallet Unit Attestation (WUA) is described in Topic 9. More information on the WUA can also be found in the Discussion Paper for topic C.</p> <p>A WUA has three main purposes:</p> <ul> <li>It describes the capabilities and properties of the Wallet Unit, including the Wallet Instance, the User device, and the WSCD(s). This allows a PID Provider or an Attestation Provider to verify that the Wallet Unit complies with the Provider's requirements and therefore is fit to receive a PID or an attestation from the Provider. To ensure User privacy, the Wallet Unit presents its capabilities and properties only to PID Providers and Attestation Providers, but not to Relying Parties. This is because PID Providers and Attestation Providers have a valid business reason to know these properties, whereas Relying Parties do not. The Discussion Paper for topic C refers to these as 'Use case 1' (Relying Parties) and 'Use case 2' (PID Providers and Attestation Providers).</li> <li>Moreover, the WUA contains a WUA public key. During the issuance of a PID or an attestation (see Section 6.6.2.3), a PID Provider or Attestation Provider can use this public key to verify that the Wallet Unit is in possession of the corresponding private key. Moreover, at that time, the Wallet Unit will send another public key to the PID Provider or Attestation Provider. The Provider will include this public key in the issued PID or attestation. The PID Provider or Attestation Provider can optionally verify that the private key belonging to this public key is protected by the same WSCD as the private key belonging to the WUA public key, if this is supported by the WSCD. Thus, the PID Provider or Attestation Provider can trust this new public key. Note that support for such a proof is not mandatory in this version of the ARF, since no mechanism has been specified yet, let alone that this is widely supported by available WSCDs.  </li> <li>Lastly, if a WUA is valid for 24 hours or longer, it contains information allowing a PID Provider, an Attestation Provider, or a Relying Party to verify that the Wallet Provider did not revoke the Wallet Unit Attestation, and hence the Wallet Unit itself. The WUA and the revocation mechanisms for Wallet Units are described in Topic 38.</li> </ul> <p>The detailed format of the WUA will be specified in a technical specification. There may be differences in the format for the WUAs suitable for Use case 1 and those for Use case 2. Specifically, WUAs intended for Relying Parties will probably comply with either [ISO/IEC 18013-5] or [SD-JWT VC], to avoid additional requirements on Relying Parties and Wallet Units. For WUAs intended for PID Providers or Attestation Providers, there is no such limitation, and the format of these can be simpler.</p> <p>Regarding the WUA validity period, an important requirement in [CIR 2024/2977], Article 5, is that a PID Provider must revoke a PID when the Wallet Unit to which that PID was issued is revoked. This implies that a PID Provider, during the entire validity period of the PID, must be able to regularly check whether the Wallet Provider revoked the WUA the PID Provider obtained from the Wallet Unit during PID issuance. To be able to do so, the validity period of WUAs intended for PID Providers will be long, perhaps as long as the expected lifetime of the Wallet Unit. Moreover, the validity period of a PID cannot exceed the end of validity of the WUA received by the PID Provider during issuance.</p> <p>The responsibilities of the Wallet Provider regarding issuance of a WUA are similar to those of a PID Provider or Attestation Provider regarding the issuance of a PID or an attestation. This means that after the initial issuance of a WUA during activation, the Wallet Provider will manage the WUA and will issue new WUAs to the Wallet Unit as needed, during the lifetime of the Wallet Unit.  In particular, the Wallet Provider will ensure that the risk of malicious Relying Parties linking multiple presentations of the same WUA, with the goal of tracking the User, is minimised. For example, the Wallet Provider may set up the Wallet Unit in such a way that each Wallet Unit Attestation is presented to at most one PID Provider, Attestation Provider, or Relying Party. Such a WUA is  called a 'once-only' attestation, see Section 7.4.3.5.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6535-wallet-provider-sets-up-a-user-account-for-user","title":"6.5.3.5 Wallet Provider sets up a User account for User","text":"<p>The User needs a User account at the Wallet Provider to ensure that they can request the revocation of their Wallet Unit in case of theft or loss. The Wallet Provider associates the Wallet Unit with the User account. The Wallet Provider registers one or more backend-based User authentication methods that the Wallet Provider will use to authenticate the User. Note that:</p> <ul> <li>The Wallet Provider does not need to know any real-world attributes of the User. The User can use a pseudonym to register, for example an e-mail address. If the Wallet Provider wants to request additional User attributes, for instance to be able to provide additional services, they are free to do so if the User consents.</li> <li>In any case, User details registered by the Wallet Provider will not be included in the WUA. They are strictly for use by the Wallet Provider only.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#654-wallet-unit-management","title":"6.5.4 Wallet Unit management","text":"<p>Starting from Wallet Unit activation and until the Wallet Instance is uninstalled by the User, a Wallet Unit is managed by the User and the Wallet Provider. The Wallet Provider is responsible at least to:</p> <ul> <li>perform installation of a new version of the Wallet Solution as necessary.</li> <li>update the WUAs as necessary; see Topic 9.</li> <li>revoke the Wallet Unit in case its security is compromised; see Topic 38.</li> </ul> <p>The User will be able to request the Wallet Provider to revoke the Wallet Unit at least in case of loss or theft of the User's device. See Topic 38.</p> <p>If the Wallet Unit contains a PID, the PID Provider may request the Wallet Provider to revoke the Wallet Unit in case the natural person using the Wallet Unit has died or the legal person using the Wallet Unit has ceased operations. See Topic 38.</p> <p>Lastly, the Wallet Unit supports procedures for backing up and restoring the attestations it contains, or for migrating these attestations to a different Wallet Solution. See Topic 33 and Topic 34 respectively.</p> <p>To allow Wallet Unit management, the following trust relations are established:</p> <ol> <li>When contacting the Wallet Provider, for instance to request the revocation of the Wallet Unit, the User authenticates the Wallet Provider. This means the User is sure that they are visiting the website or the User portal of the genuine Wallet Provider who is responsible for the User's Wallet Unit, and not a spoofed website or portal. This risk can be partly mitigated by using standard mechanisms such as TLS server authentication. However, in addition the User will need to be vigilant as well, just as with any website on the internet.</li> <li>When contacted by a User, the Wallet Provider authenticates the User. This means that the Wallet Provider is sure that the User is indeed the User that was associated with the Wallet Unit during activation. For this, the Wallet Provider uses the authentication methods established in the User's account during activation, see Section 6.5.3.</li> <li>When the Wallet Unit and the Wallet Provider set up a communication channel, the Wallet Unit authenticates the Wallet Provider, meaning that the Wallet Unit is sure that it is dealing with the genuine Wallet Provider. Similarly, the Wallet Provider authenticates the Wallet Unit. This means that the Wallet Provider is sure that the EUDI Wallet Instance is indeed a true instance of their Wallet Solution, and not a fake app. This will be ensured by the Wallet Provider. The ARF does not specify how these trust relationships can be satisfied.</li> <li>When contacted by a PID Provider to request Wallet Unit revocation, the Wallet Provider authenticates the PID Provider. Section 6.6.2.2 below describes how a Wallet Unit can do this during PID issuance; a Wallet Provider can use the same mechanism.</li> <li>To identify the Wallet Unit that is to be revoked, the PID Provider uses a Wallet Unit identifier provided by the Wallet Unit in the WUA during PID issuance; see Topic 9.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#655-wallet-instance-uninstallation","title":"6.5.5 Wallet Instance uninstallation","text":"<p>No trust relationships are required for Wallet Instance uninstallation; anybody able to access the device of the User will be able to do this.</p> <p>If the User uninstalls the Wallet Instance, the Wallet Instance ensures that the associated WSCA(s) delete all sensitive data and cryptographic keys related to the Wallet Unit and to all PIDs and attestations on the Wallet Unit.</p> <p>If it supports the Digital Credentials API, see Section 4.4.3, the Wallet Instance also discloses the fact that it is uninstalled to the Digital Credentials API framework.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66-trust-throughout-a-pid-or-an-attestation-lifecycle","title":"6.6 Trust throughout a PID or an attestation lifecycle","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#661-pid-or-attestation-lifecycle","title":"6.6.1 PID or attestation lifecycle","text":"<p>Section 4.6.5 above presented the lifecycle of a PID or attestation within a Wallet Unit:</p> <ol> <li>Using their Wallet Unit, the User requests the issuance of a PID or an attestation from a PID Provider or an Attestation Provider. The required trust relationships for issuance are discussed in Section 6.6.2 below.</li> <li>Once the PID or attestation is issued into the Wallet Unit, the User can present attributes from it to a Relying Party Instance, according to the User's decision and depending on successful authentication of the Relying Party. The required trust relationships for presenting PIDs and attestations, including User approval and Relying Party authentication, are discussed in Section 6.6.3.</li> <li>Instead of presenting attributes to a Relying Party, a User can also present them to another User, meaning that their Wallet Unit is interacting with another Wallet Unit. This is briefly discussed in Section 6.6.4.</li> <li>The PID Provider or the Attestation Provider remains responsible for managing the PID or attestation over its lifetime. Management may include re-issuing the PID or attestation with the same or with different attribute values. The Provider can also revoke the PID or the attestation, possibly based on a request of the User. The management of PIDs and attestations is discussed in Section 6.6.5.</li> <li>Finally, Section 6.6.6 discusses what happens if a User decides to delete a PID or an attestation from their Wallet Unit.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#662-pid-or-attestation-issuance","title":"6.6.2 PID or attestation issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6621-required-trust-relationships","title":"6.6.2.1 Required trust relationships","text":"<p>The lifecycle of a PID or an attestation starts when a User, using their Wallet Unit, requests a PID Provider or an Attestation Provider to issue the PID or an attestation to their Wallet Unit. The following trust relationships are established during issuance:</p> <ol> <li>The Wallet Unit authenticates the PID Provider or Attestation Provider using the access certificate referred to in Section 6.3. This ensures that the User can trust that the PID or attestation they are about to receive, is issued by an authenticated PID Provider or Attestation Provider respectively. See Section 6.6.2.2 below describing how this will be done.</li> <li>The PID Provider or Attestation Provider authenticates the User, meaning that the Provider is sure about the identity of the User. This is necessary to enable determination of the values of the attributes that the Provider will attest to. For instance, a PID Provider needs to authenticate the User to ensure it provides a PID containing the correct family name and date of birth. The method by which the PID Provider or Attestation Provider performs User identification and authentication is out of scope of the ARF, as these processes are specific to each PID Provider or Attestation Provider. However, they will satisfy the requirements for the Level of Assurance required for the PID or attestation issued.</li> <li>The PID Provider or Attestation Provider authenticates and validates the Wallet Unit, see Section 6.6.2.3 below.</li> <li>The PID Provider or Attestation Provider verifies that the Wallet Provider did not revoke the Wallet Unit. This is described in Section 6.6.2.4.</li> <li>After the PID or attestation is issued to the Wallet Unit, the Wallet Unit verifies the authenticity of the PID or attestation; see Section 6.6.2.5.</li> <li>The User will activate a PID before they can use it; see Section 6.6.2.6.</li> <li>If an attestation contains an embedded disclosure policy, the Wallet Unit retrieves the policy and stores it locally, so that it can apply the policy in case a Relying Party requests attributes from the attestation. See Section 6.6.2.7.</li> </ol> <p>More detailed requirements for the issuance process of PIDs and attestations, for instance regarding the issuance protocol, are included in Topic 10/23.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6622-wallet-unit-authenticates-the-pid-provider-or-attestation-provider","title":"6.6.2.2 Wallet Unit authenticates the PID Provider or Attestation Provider","text":"<p>As shown in Figure 11, a Wallet Unit downloads the PID Provider Access CA Trusted List(s) it needs from the relevant Trusted List Provider(s), possibly after having located them via the Commission common trust infrastructure. It also downloads all Attestation Provider Access CA Trusted List(s). See Section 6.3.2 for more information on these Trusted Lists.</p> <p>Note: It is not mandatory for each Wallet Unit to possess all PID Provider CA Trusted Lists, if there are multiple. Wallet Providers will choose which Trusted Lists they need to subscribe to, for example depending on the Member State(s) they are operating in. It is however mandatory to possess all Attestation Provider Access CA Trusted Lists, as Wallet Units must support all QEAA Providers and PuB-EAA Providers in the EUDI Wallet ecosystem.</p> <p>To start the process of requesting a PID or an attestation, the User directs the Wallet Unit to contact the PID Provider or Attestation Provider. The User may for example use the Wallet Unit to scan a QR code or tap an NFC tag to do so. Note that no centralised service discovery mechanism for PID or attestation issuance is foreseen.</p> <p>Before requesting the issuance of a PID or an attestation, the Wallet Unit authenticates the PID Provider or the Attestation Provider. To do so, the Wallet Unit verifies the access certificate presented to it by the PID Provider or Attestation Provider in its Issuer metadata according to [OpenID4VCI].  To verify the role and the entitlements of the requesting entity (whether it is an  PID Provider or an Attestation Provider and what type of attestation provider), the Wallet unit checks the registration information contained in the registration certificate  (if available) or the Registrar's on-line service.</p> <p>The Wallet Unit also verifies that the access certificate and registration certificate (if provided)  are authentic, that they are valid at the time of validation, and that the issuers of the certificates  are in the PID Provider or Attestation Provider Access CA Trusted List.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6623-pid-provider-or-attestation-provider-validates-the-wallet-unit","title":"6.6.2.3 PID Provider or Attestation Provider validates the Wallet Unit","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66231-verifies-the-authenticity-of-the-wallet-unit","title":"6.6.2.3.1 Verifies the authenticity of the Wallet Unit","text":"<p>As shown in Figure 11, a PID Provider or an Attestation Provider downloads the Wallet Provider Trusted List(s) it needs from the relevant Trusted List Provider(s), possibly after having located them via the Commission common trust infrastructure.</p> <p>Note that for PID Providers it is not mandatory to possess all Wallet Provider Trusted Lists, if there are multiple. This is because it is not mandatory for a PID Provider to accept all certified Wallet Solutions in the EUDI Wallet ecosystem. Each PID Provider will choose which Trusted Lists they need to subscribe to. This is different for Attestation Providers: they must accept all Wallet Solutions and hence must possess all Wallet Provider Trusted Lists.</p> <p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Unit, issues one or more Wallet Unit Attestations (WUA) to the Wallet Unit. When the Wallet Unit sends a request for a PID or an attestation to a PID Provider or to an Attestation Provider, it includes the WUA in the request. The PID Provider or Attestation Provider verifies the signature over the WUA, using the Wallet Provider trust anchor obtained from the Trusted List. Next, the PID Provider or Attestation Provider verifies that the Wallet Unit possesses the private key belonging to the public key in the WUA. This proves that the Wallet Unit is authentic and is provided by a trusted Wallet Provider. For more details see Topic 9.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66232-optionally-verifies-that-the-users-wallet-unit-supports-all-required-features","title":"6.6.2.3.2 Optionally, verifies that the User's Wallet Unit supports all required features","text":"<p>The WUA describes relevant features of the Wallet Unit, as well as the device it is installed on. Depending on their needs, PID Providers or Attestation Providers optionally verify that the User's Wallet Instance supports all features they require. For example, for some PID Providers or Attestation Providers it may be relevant to know whether the Wallet Unit supports presenting the attestation in proximity flows using NFC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66233-optionally-validates-the-properties-of-the-wscd","title":"6.6.2.3.3 Optionally, validates the properties of the WSCD","text":"<p>The WUA describes the certifications and the other relevant properties of the WSCD, i.e., the secure cryptographic device included in the Wallet Unit to store and manage cryptographic keys. The security level of the WSCD is a key determinant for the overall Level of Assurance (LoA) of the Wallet Unit. For obtaining a PID, the Wallet Unit and the WSCD will comply with the requirements for LoA High. For other attestations, LoA High or Substantial will be needed, depending on the requirements of the Attestation Provider.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66234-verifies-that-the-pid-key-or-the-attestation-key-is-protected-by-the-wscd","title":"6.6.2.3.4 Verifies that the PID key or the attestation key is protected by the WSCD","text":"<p>Knowing the properties of the WSCD is not very useful if the PID Provider or Attestation Provider cannot be sure that the private key for their new PID or attestation is indeed protected by that WSCD. Topic 9 describes how the PID Provider or Attestation Provider may be able obtain a proof that the WSCD described in the WUA protects both the WUA private key and the private key of the new PID or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6624-pid-provider-or-attestation-provider-verifies-that-wua-is-not-revoked","title":"6.6.2.4 PID Provider or Attestation Provider verifies that WUA is not revoked","text":"<p>Section 6.5.3 above described that a Wallet Provider, during activation of a Wallet Unit, issues one or more Wallet Unit Attestation (WUA) to the Wallet Unit. If a WUA is valid for longer than 24 hours, it contains revocation information. During the lifetime of the Wallet Unit, the Wallet Provider regularly verifies that the security of the Wallet Unit is not breached or compromised. If the Wallet Unit is no longer secure, the Wallet Provider revokes any of its WUAs that has a remaining validity period of 24 hours or longer. If the Wallet Provider uses WUAs with a validity period of less than 24 hours, it stops issuing new WUAs to a Wallet Unit that is no longer secure. The WUA thus allows PID Providers, Attestation Providers and Relying Parties to verify that the Wallet Unit is not revoked.</p> <p>Topic 38 describes Wallet Unit revocation in more detail.</p> <p>Once it has done all verifications, the PID Provider or Attestation Provider will issue the PID or attestation to the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6625-wallet-unit-verifies-pid-or-attestation","title":"6.6.2.5 Wallet Unit verifies PID or attestation","text":"<p>After the Wallet Unit receives the PID or attestation, it will</p> <ul> <li>verify that the PID or attestation it received matches the request.</li> <li>verify the signature of the PID or attestation, using the appropriate trust anchor, in the same way as described for a Relying Party Instance in Section 6.6.3.6.</li> <li>show the contents (i.e., attribute values) of the new PID or attestation to the User and request the User's approval for storing the new PID or attestation. When requesting approval, the Wallet Unit shows the contents of the PID or attestation to the User. The Wallet Unit also informs the User about the identity of the PID Provider or Attestation Provider, using the subject information from the PID Provider or Attestation Provider access certificate.</li> </ul> <p>If one these verifications fail, the Wallet Unit will delete the PID or attestation, and will inform the User that issuance was not successful. Otherwise, the Wallet Unit will store the PID or attestation and will inform the User that issuance was successful. If it supports the Digital Credentials API, see Section 4.4.3, the Wallet Unit will also disclose the fact that it contains the new PID or attestation to the Digital Credentials API framework.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6626-user-activates-the-pid","title":"6.6.2.6 User activates the PID","text":"<p>As documented in Topic 9, to achieve Level of Assurance (LoA) High, Commission Implementing Regulation (EU) 2015/1502 requires that an activation process will be implemented to verify that a PID was in fact delivered into the possession of the person to whom it belongs.</p> <p>However, in fact no additional step is needed in the issuance process to ensure this. This is because the User always starts the issuance process from the Wallet Unit into which they want the PID Provider to issue the new PID. The PID Provider sets up a secure communication channel towards this Wallet Unit, using the flow specified in [OpenID4VCI]. Additionally, the User uses an eID means on LoA High to authenticate towards the PID Provider. This process ensures that the new PID can only end up on the device used by the subject of the PID.</p> <p>Note that activation is required only for PIDs, since the [European Digital Identity Regulation] only requires PIDs to be issued at LoA High.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6627-provisioning-embedded-disclosure-policies","title":"6.6.2.7 Provisioning embedded disclosure policies","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66271-introduction","title":"6.6.2.7.1 Introduction","text":"<p>During attestation issuance, an Attestation Provider can optionally create an embedded disclosure policy for the attestation, and provide it to Wallet Units during attestation issuance. Such an embedded disclosure policy contains rules determining which (types of) Relying Parties are allowed by the Attestation Provider to receive the attestation.</p> <p>Note that the [European Digital Identity Regulation] does not contain a requirement for PIDs to be able to contain an embedded disclosure policy, but only for QEAAs and PuB-EAAs.</p> <p>For more information regarding embedded disclosure policies, please refer to the Discussion Paper for Topic D.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66272-types-of-embedded-disclosure-policies","title":"6.6.2.7.2 Types of embedded disclosure policies","text":"<p>Annex III of [CIR 2024/2979] defines the following common embedded disclosure policies that must be supported:</p> <ol> <li>'No policy' indicating that no policy applies to the electronic attestations of attributes.</li> <li>'Authorised relying parties only policy', indicating that wallet users may only disclose electronic attestations of attributes to authenticated relying parties which are explicitly listed in the disclosure policies.</li> <li>'Specific root of trust' indicating that wallet users should only disclose the specific electronic attestation of attributes to authenticated wallet-relying parties with wallet-relying party access certificates derived from a specific root (or list of specific roots) or intermediate certificate(s).</li> </ol> <p>The first of these policies is the default and will be applied if the Attestation Provider does not provide an embedded disclosure policy for an attestation.</p> <p>For expressing conditions on Relying Parties, an embedded disclosure policy will refer to information included in the access certificate provided to the Wallet Unit by the Relying Party. Note that access certificates are signed and hence the information they contain is authenticated.</p> <p>Wallet Units, as well as the mechanisms used for defining and evaluating policies, will provide support for at least policies 2. and 3. above. The Commission will ensure a technical specification is created that specifies how these policies will be formatted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66273-distributing-embedded-disclosure-policies","title":"6.6.2.7.3 Distributing embedded disclosure policies","text":"<p>An Attestation Provider will provide an embedded disclosure policy in the Issuer metadata specified in [OpenID4VCI]. This does not require modifications to the attestation format. The Commission will ensure that a technical specification for issuing embedded disclosure policies is created.</p> <p>Moreover, policies will be integrated directly into the metadata, rather than being \"linked\" using a URL and stored by the Attestation Provider. The approach does not require the Wallet Unit to communicate with the Attestation Provider in order to be able to obtain and evaluate a policy for an attestation requested by a Relying Party. Instead, during issuance of an attestation, the Wallet Unit retrieves any relevant disclosure policy from the metadata and stores it locally. A consequence of this approach is that an Attestation Provider will revoke an attestation if a relevant embedded disclosure policy must be updated.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6628-batch-issuance","title":"6.6.2.8 Batch issuance","text":"<p>Batch issuance means that instead of issuing a single PID or attestation to a Wallet Unit, a PID Provider or Attestation Provider issues a batch of them. All PIDs or attestations in a batch have the same attestation type, attribute values and technical validity period. Apart from that, all of the descriptions in this section 6.6.2 apply regardless of the number of attestations issued (single or batch).</p> <p>Batch issuance is discussed in more detail in the Discussion Paper for Topic B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#663-pid-or-attestation-presentation-to-relying-party","title":"6.6.3 PID or attestation presentation to Relying Party","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6631-required-trust-relationships","title":"6.6.3.1 Required trust relationships","text":"<p>A Relying Party can request a User to present some attributes from a PID or from an attestation in their Wallet Unit. Figure 11 shows that a Relying Party uses a Relying Party Instance to interact with the Wallet Unit of the User. The relationship between the Relying Party and their Relying Party Instance is similar to the relationship between the User and their Wallet Unit.</p> <p>When processing the request, the following trust relationships are established:</p> <ol> <li>The Wallet Unit authenticates the Relying Party Instance, ensuring the User about the Relying Party's identity. Section 6.6.3.2 explains how this will be done.</li> <li>The Wallet Unit verifies that the Relying Party does not request more attributes than it has registered for, and informs the User about the outcome of this verification. See Section 6.6.3.3 for more information.</li> <li>The Attestation Provider, during issuance, may optionally embedded a disclosure policy in the attestation. If such a policy is present for the requested attestation, the Wallet Unit evaluates the disclosure policy and informs the User about the outcome of this evaluation. See Section 6.6.3.4.</li> <li>The User approves or rejects the presentation of the requested attributes. User approval and selective disclosure are described in Section 6.6.3.5. Subsequently, after the Wallet Unit presents the selected attributes from the PID or attestation to the Relying Party Instance by sending a response to the request, the Relying Party validates the response. The following trust relationships are established:</li> <li>The Relying Party Instance verifies the signature of the PID or attestation. This ensures that the Relying Party can trust that the PID or attestation it receives is issued by an authentic Provider and has not been changed. This is described in Section 6.6.3.6.</li> <li>The Relying Party verifies that the PID Provider or Attestation Provider did not revoke the PID or attestation. This is described in Section 6.6.3.7.</li> <li>The Relying Party verifies that the PID Provider or Attestation Provider issued this PID or attestation to the same Wallet Unit that presented it to the Relying Party. In other words, it checks that the PID or attestation was not copied or replayed. This is generally called device binding, and it is discussed in Section 6.6.3.8</li> <li>In some use cases, the Relying Party verifies that the person presenting the PID or attestation is the subject of the PID or attestation. This is called User binding. In other use cases, the Relying Party trusts that Wallet Unit and the WSCD have done this. User binding is discussed in Section 6.6.3.9.</li> <li>The Relying Party can request attributes from two or more attestations in the same interaction. This is called a combined presentation of attributes. If so, the Relying Party verifies that these attestations belong to the same User. This is discussed in Section 6.6.3.10.</li> </ol> <p>Either before or after validating the PID or attestation per steps 5 - 9,</p> <ol> <li>The Relying Party Instance authenticates the Wallet Unit and the Wallet Provider; see Section 6.6.3.11.</li> <li>The Relying Party Instance verifies that the Wallet Provider did not revoke the Wallet Unit, see Section 6.6.3.12</li> </ol> <p>Finally, after the interaction with the Relying Party Instance is over,</p> <ol> <li>The Wallet Unit enables the User to report unlawful or suspicious requests for personal data by a Relying Party, based on information logged by the Wallet Unit. Similarly, the Wallet Unit enables the User to request a Relying Party to delete personal data (i.e., User attributes) obtained from the Wallet Unit. This is discussed in Section 6.6.3.13.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6632-wallet-unit-authenticates-the-relying-party-instance","title":"6.6.3.2 Wallet Unit authenticates the Relying Party Instance","text":"<p>Relying Party authentication is a process whereby a Relying Party proves its identity to a Wallet Unit, in the context of an interaction in which the Relying Party requests the Wallet Unit to present some attributes. Relying Party authentication is discussed in Topic 6.</p> <p>Relying Party authentication is included in the protocol used by a Wallet Unit and a Relying Party Instance to communicate. As documented in Topic 12, at least two different protocols can be used within the EUDI Wallet ecosystem, namely the ones specified in [ISO/IEC 18013-5] and [OpenID4VP]. Both protocols include functionality allowing the Wallet Unit to authenticate the Relying Party Instance. Although these protocols differ in the details, on a high level, they both implement Relying Party authentication as shown in Figure 12 below.</p> <p></p> <p>Figure 12 High-level overview of Relying Party authentication process</p> <p>The figure shows the following:</p> <p>First, there are two preconditions that need to be fulfilled before the Relying Party authentication process can begin. Note that these actions are not carried out for every presentation, but only once (excluding possible updates):</p> <p>A) The Relying Party registered itself as described in Section 6.4.2 and obtained a Relying Party Instance access certificate.</p> <p>B) The Wallet Unit obtained the trust anchor of the Relying Party Instance Access Certificate Authority.</p> <p>Subsequently, during each presentation of attributes:</p> <ol> <li>The Relying Party Instance prepares a request for some attributes to the Wallet Unit and includes its Relying Party Instance access certificate in the request, plus all intermediate certificates up to (but excluding) the trust anchor.</li> <li>The Relying Party Instance signs some data in the attribute request using its private key.</li> <li>The Relying Party Instance sends the request to the Wallet Unit.</li> <li>The Wallet Unit checks the authenticity of the request by verifying the signature over the request using the public key in the Relying Party Instance access certificate.</li> <li>The Wallet Unit checks the authenticity of the Relying Party by validating the Relying Party Instance access certificate and all intermediate certificates included in the request. For validating the last intermediate certificate, the Wallet Unit uses the trust anchor it obtained from the Trusted List.</li> <li>The Wallet Unit validates that none of the certificates in the trust chain have been revoked. This includes the Relying Party Instance access certificate as well as all other certificates in the trust chain, including the trust anchor itself if applicable.</li> <li>The Wallet Unit continues by requesting the User for approval.</li> <li>The User approves the attributes that will be presented.</li> <li>The Wallet Unit sends a response containing only the approved attributes to the Relying Party Instance.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6633-wallet-unit-allows-user-to-verify-that-relying-party-does-not-request-more-attributes-than-it-registered","title":"6.6.3.3 Wallet Unit allows User to verify that Relying Party does not request more attributes than it registered","text":"<p>During registration, the Relying Party registered which attributes it intends to request from Wallet Units.  If the registration certificate had been issued for this Relying Party,  + the Registrar listed these attributes in this certificate and sent it to the Relying Party, + the Relying Party may distribute it to all of its Relying Party Instances, + the Relying Party Instance may send this registration certificate to the Wallet Unit in each presentation request.</p> <p>During a transaction, the Wallet Unit offers to the User an option to perform verification of the  Relying Party registration information. If the User choses to do so, the Wallet Unit displays the contents of the registration certificate to the User when asking the User for approval, see Section 6.6.3.5, at least in case one or more of the requested attributes is not included in the list of attributes in the registration certificate.</p> <p>The format of the registration certificate, as well as the way in which the Wallet Unit can verify that the registration certificate belongs to the authenticated Relying Party, will be specified in a technical specification. For more information, see Topic 44.</p> <p>In case the registration certificate was not issued or not provided in the presentation  request, the Wallet Unit offers to the User an alternative option to perform verification of the  Relying Party information, through an on-line check instead. </p> <p>If the User choses to perform such a check, the Wallet Unit retrieves a URL of the Registrar's on-line service from:  + the Relying Party Access Certificate, or + the information contained in the presentation request - in case of requestor being an intermediary (note: this needs an extension of [ISO/IEC 18013-5] and [OpenID4VP]).</p> <p>Next, the Wallet Unit makes a verification request via this URL, using the unique ID of the Relying Party (retrieved from the Relaying Party access certificate or from the presentation request in case the requestor is an intermediary). The Wallet Unit notifies the User about the outcome of the verification in case the Relying Party requested attributes that it had not registered at Registrar before.  The Wallet Unit also notifies the User in case the Wallet Unit is not able to retrieve the Relying Party registration information (otherwise the notification is optional). </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6634-wallet-unit-evaluates-embedded-disclosure-policy-if-present","title":"6.6.3.4 Wallet Unit evaluates embedded disclosure policy, if present","text":"<p>During attestation issuance, an Attestation Provider optionally created an embedded disclosure policy for the attestation, see Section 6.6.2.7. If such a policy is present for the requested attestation, the Wallet Unit evaluates the policy, together with information in the access certificate, to determine whether the Attestation Provider allows this Relying Party to receive the requested attestation. Note that the Wallet Unit verifies the authenticity of these certificates before using any data contained in them.</p> <p>The Wallet Unit presents the outcome of the disclosure policy evaluation to the User in the form of an advice, when requesting User approval. For example, \"The issuer of your medical data does not want you to present data from &lt;attestation name&gt; to &lt;Relying Party name&gt;. Do you want to continue?\" Note that the User can overrule the disclosure policy evaluation outcome.</p> <p>For more details on the embedded disclosure policy, see Topic 43.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6635-wallet-unit-obtains-user-approval-for-presenting-selected-attributes","title":"6.6.3.5 Wallet Unit obtains User approval for presenting selected attributes","text":"<p>Note: In this document the term 'User approval' exclusively refers to a User's decision to present an attribute to a Relying Party. Under no circumstances User approval to present data from their Wallet Unit should be construed as lawful grounds for the processing of personal data by the Relying Party or any other entity. A Relying Party requesting or processing personal data from a Wallet Unit must ensure that it has grounds for lawful processing of that data, according to Article 6 of the GDPR.</p> <p>Before presenting any attribute to a Relying Party, the Wallet Unit requests the User for their approval. This is critical for ensuring that the User remains in control of their attributes.</p> <p>A Wallet Unit requests User approval in all use cases, both in proximity flow and remote flow, and including:</p> <ul> <li>Use cases where the Relying Party could be assumed to be trusted, for example, when the Relying Party is part of law enforcement or another government agency.</li> <li>Use cases where the requested attributes are critical for the Relying Party to grant access to the User or deliver the requested services.</li> <li>Use cases where there is, according to the GDPR or other legislation, no legal need to ask for the User's approval because another legal basis exists for requesting the attributes.</li> </ul> <p>A prerequisite for requesting User approval is that the Wallet Unit is sure that the person using the Wallet Unit is in fact the User. Therefore, the WSCA authenticates the User prior to or during requesting User approval, on request of the Wallet Unit. To do so, the Wallet Unit uses the User authentication mechanisms set up during Wallet Unit activation, see Section 6.5.3. More detailed requirements regarding User approval can be found in Topic 6.</p> <p>Another prerequisite for effective User approval is that the Wallet Unit allows the selective disclosure of attributes. Selective disclosure implies mainly two things. First, it enables a Relying Party to specify which of the attributes in an attestation it wishes to receive (and which ones not). A Relying Party may have different purposes for the requested attributes. For example, an online liquor shop may need an age attestation to comply with its legal obligations, and in addition would like to receive address information to be able to send the ordered liquor to the User's home. Therefore, the Relying Party indicates the goal of each (group of) requested attributes.</p> <p>Secondly, selective disclosure implies that the Wallet Unit enables the User to approve or deny the presentation of each (group of) attributes separately. The User takes a decision based on at least the following information:</p> <ul> <li>The authenticated identity of the Relying Party,</li> <li>The information in the Relying Party's registration certificate or the information  received from the Registrar's on-line service regarding the attributes that the Relying Party has registered during registration (\"intended use\")- at least in case one or more of the requested attributes is not included in the list of registered attributes,</li> <li>The information in the Relying Party's registration certificate or the information  received from the Registrar's on-line service regarding an intermediary used by the Relying Party, if any - see Section 3.11.</li> <li>The outcome of the evaluation of the embedded disclosure policy, if any.</li> </ul> <p>After the User gives their approval, the Wallet Unit will present the approved User attributes to the Relying Party Instance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6636-relying-party-instance-verifies-the-authenticity-of-the-pid-or-attestation","title":"6.6.3.6 Relying Party Instance verifies the authenticity of the PID or attestation","text":"<p>The Relying Party Instance receives a PID or attestation, including some attributes, from the Wallet Unit. Subsequently, it verifies the signature over the PID or attestation. To do this for PIDs and QEAAs, the Relying Party Instance uses a trust anchor of the Provider obtained from a Trusted List. Note that the PID Provider or QEAA Provider may use an intermediate signing certificate to sign the PID or attestation, and use the trust anchor to sign the signing certificate, instead of signing the PID or attestation directly with the trust anchor.</p> <p>For PuB-EAAs, the Relying Party Instance verifies a PuB-EAA by first verifying the signature of the PuB-EAA Provider over the PuB-EAA, using the PuB-EAA Provider certificate issued by a QTSP. Subsequently, the Relying Party Instance verifies the signature over this certificate, using the corresponding trust anchor from the QTSP Trusted List. Note that both the PuB-EAA Provider and the QTSP may use an intermediate signing certificate. All other things being equal, the verification of a PuB-EAA will therefore involve one or more extra certificates, compared to the verification of a PID or QEAA.</p> <p>Finally, for non-qualified EAAs, the applicable Rulebook may describe how the Relying Party Instance obtains the relevant trust anchor.</p> <p>The above implies that a Relying Party Instance is aware whether the attestation it is requesting from a Wallet Instance is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. Also, the Relying Party Instance stores trust anchors in such a way that, at the time of verification, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs.</p> <p>The technical implementation of the signature verification process depends on which of the standards mentioned in Topic 12 is supported by the Wallet Unit. Each of these standards specifies in detail how to carry out signature verification.</p> <p>In addition, the Relying Party may want to verify that the Attestation Provider can legally issue the type of attestation in question. As described in Section 6.3.2.3, this is only needed for non-qualified EAA Providers, as the Relying Party trusts a PID Provider, QEAA Provider or PuB-EAA Provider. For EAA Providers, the applicable Rulebook may define methods that the Relying Party can use to verify that the EAA Provider is allowed to issue this type of attestation.</p> <p>Notes:</p> <ul> <li> <p>All PIDs and attestations in the EUDI Wallet ecosystem are digitally signed by the respective PID Provider or Attestation Provider, or by a WSCD that is part of the Wallet Unit. If an attestation is digitally signed by a WSCD, it is called a device-signed or self-issued attestation. Device-signed or self-issued PIDs or attestations are allowed only if it can be shown that the WSCD signs them at the required Level of Assurance (LoA). This implies that the level of security offered by the WSCD is at least equivalent to the security level of the secure infrastructure used by the PID Provider or Attestation Provider for signing PIDs or attestations.</p> </li> <li> <p>The signature over the PID or attestation may or may not include the value of the presented attributes. If the attribute values are not included in the signature creation, the Relying Party trusts these attributes because they are presented over an authenticated channel set up between the secure environment (i.e., the WSCD or the secure infrastructure used by the PID Provider or Attestation Provider, see previous bullet) and the Relying Party. One possible way to set up such an authenticated channel is by ensuring the authenticity and integrity (but not the non-repudiation) of the attributes by means of a Message Authentication Code (MAC). The MAC is created by the secure environment over the presented attribute values. The MAC key is generated from an ephemeral key of the Relying Party (sent to the secure environment by the Wallet Instance) in combination with an ephemeral key created by the secure environment. The latter ephemeral key is sent to the Relying Party in such a way that the Relying Party can verify the authenticity of this key. Such a solution, or similar ones, can be used provided that:</p> <ul> <li>the solution is fully compliant with the relevant standards, i.e., [ISO/IEC 18013-5] or [OpenID4VP] and [SD-JWT VC].</li> <li>the solution can be certified for security at LoA High according to Chapter 7</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6637-relying-party-verifies-that-the-pid-or-attestation-is-not-revoked","title":"6.6.3.7 Relying Party verifies that the PID or attestation is not revoked","text":"<p>To allow revocation checking of a PID or attestation, the PID Provider or Attestation Provider includes revocation information in the PID or attestation, if it is valid for longer than 24 hours. This revocation information includes a URL indicating the location where a Relying Party can obtain a status list or revocation list, and an identifier or index for this specific certificate or attestation within that list.</p> <p>Notes:</p> <ul> <li>For attestations with a validity period of less than 24 hours, including revocation information is not necessary.</li> <li>A status list is a bit string or byte string in which each bit or group of bits denotes the current revocation status (valid or revoked) of one attestation. To get the status of the attestation it has received from the Wallet Unit, the Relying Party obtains the status list from the URL specified in the attestation and verifies the value encoded at the bit position given by the index value in the attestation.</li> <li>A revocation list is a list of PID identifiers or attestation identifiers revoked by the PID Provider or Attestation Provider. To get the status of the PID or attestation it has received from the Wallet Unit, the Relying Party obtains the revocation list from the URL specified in the attestation and verifies whether the identifier included in the attestation is on the list or not.</li> </ul> <p>For more details and requirements on revocation, see Topic 7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6638-relying-party-instance-verifies-device-binding","title":"6.6.3.8 Relying Party Instance verifies device binding","text":"<p>Device binding is the property that a PID or an attestation is bound to a specific device (in fact, a WSCD) and cannot be used independent from that device. Device binding protects the attestation against copying or cloning, which enhances its security.</p> <p>A PID Provider or an Attestation Provider implements device binding by including a cryptographic public key in the PID or attestation and signing it. The corresponding private key is protected by a certified WSCD in the Wallet Unit.</p> <p>Topic 9 explains that a WSCD generates a public-private key pair for each attestation upon request of the Wallet Unit, and that the Wallet Unit sends the public key to the PID Provider or Attestation Provider. Furthermore, it discusses how the PID or Attestation Provider can verify that the corresponding private key is really protected by the WSCD.</p> <p>During an interaction, the Relying Party verifies that the PID or attestation it received from a Wallet Unit is indeed bound to the WSCD included in the Wallet Unit. The Relying Party does so by requesting the Wallet Unit to sign some data using the private key corresponding to the public key in the PID or attestation. For this reason, device binding is also called 'proof of possession'. In [ISO/IEC 18013-5] it is called 'mdoc authentication'. In [SD-JWT VC] it is called 'key binding'.</p> <p>The technical implementation of this verification depends on which of the standards mentioned in Topic 12 is supported by the Wallet Unit. Each of these standards specifies in detail how to carry out this verification.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6639-relying-party-instance-verifies-or-trusts-user-binding","title":"6.6.3.9 Relying Party Instance verifies or trusts User binding","text":"<p>User binding (sometimes also called 'holder binding') is the property that the subject of the PID or attestation, meaning the natural or legal person described in it, is in fact the person that presents the PID or attestation to the Relying Party. User binding prevents an attacker from successfully presenting a PID or an attestation that they are not legally allowed to use.</p> <p>The mechanism(s) available for User binding depend on the presentation flow type (proximity or remote, supervised or unsupervised, see also Section 4.4), and on the attributes issued to the User by the PID Provider or Attestation Provider:</p> <ol> <li> <p>In the first place, the Relying Party can always decide to trust the User authentication mechanisms implemented by the WSCD (see Topic 9). This means that the Relying Party trusts that the the WSCD has properly authenticated the User before allowing the User to present the attributes. Note that:</p> </li> <li> <p>This trust is not based on the outcome of any verification by the Relying  Party but on a a-priori trust in (in particular) the certified WSCD that is  part of the Wallet Unit.</p> </li> <li>Using this method implies that Relying Parties also trust device binding,  as described in Section 6.6.3.8.  The Relying Party Instance in fact first verifies that the PID or  attestation is bound to a WSCD trusted by the PID Provider or Attestation  Provider, and then trusts that the WSCD has properly authenticated the User.</li> <li> <p>As a matter of fact, this User binding method will always be carried out,  since the WSCD must authenticate its User when asking for User approval for  presenting any attributes, and since device binding is also mandatory.</p> </li> <li> <p>In addition, in some cases, if a Relying Party does not want to only trust the above mechanism, it may be able to use User attributes to carry out an additional User binding process. For example, if the PID or attestation contains a User portrait, the Relying Party may be able to visually or biometrically compare that portrait to the face of the person presenting the attestation or by a photo taken of it by an automated machine or as a \"selfie\". This will generally be possible in supervised proximity presentations by human inspection, or in an unsupervised proximity flow if equipped with the appropriate equipment. It may also be possible to do this in unsupervised remote presentations by using face recognition technology, possibly even remotely. However, to generate trustworthy outcomes in such situations, special conditions and dedicated security measures are required, such as good lighting, clear instructions for the User for positioning their face and an approved liveness detection mechanism supporting Presentation Attacks Detection (PAD), as well as mechanisms for injection attack detection, in particular deepfake detection.</p> </li> <li>Lastly, if the person presenting the PID or attestation is able to present an identity document, the Relying Party may be able to verify User binding by comparing attributes from the PID or attestation, such as first and last name, to those in the identity document. However, this requires that the Relying Party can verify that the identity document is authentic and really belongs to the person presenting it. In practice this will often mean that the identity document is a photo ID, and the presentation must consequently be done in proximity and be supervised, or done remotely and supported by PAD.</li> </ol> <p>Finally, note that in a combined presentation of attributes according to the next section, if User binding is proven for one of the presented attestations, it is proven for all of them.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66310-relying-party-instance-verifies-combined-presentation-of-attributes","title":"6.6.3.10 Relying Party Instance verifies combined presentation of attributes","text":"<p>According to the [European Digital Identity Regulation], a combined presentation of attributes is a request for attributes from two or more attestations in the same action. In this case, the Relying Party will verify that these attestations belong to the same User, to prevent a hacked or fraudulent Wallet Unit from presenting attributes from different Users.</p> <p>A Relying Party can verify this by comparing attributes from the different attestations. For example, the Relying Party may request the first and last name of the User in all of the attestations, and compare the names. If they match, the Relying Party concludes that the attestations belong to the same User. However, this method implies that the Relying Party must request identifying information from the User. In some use cases, requiring that information may not be strictly necessary, and so this method may be seen as a threat to User privacy. Moreover, this method may not be conclusive, for instance if multiple people share the same name.</p> <p>To solve these drawbacks, Topic 18 describes how the Relying Party Instance can verify this cryptographically by checking that the private keys paired with the public keys in the attestations are protected by the same WSCD. This is further described in Topic 9.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66311-relying-party-instance-authenticates-the-wallet-unit-and-the-wallet-provider","title":"6.6.3.11 Relying Party Instance authenticates the Wallet Unit and the Wallet Provider","text":"<p>Section 6.5.3 above describes that a Wallet Provider, during the lifetime of a Wallet Unit, ensures that the Wallet Unit is always in possession of one or more valid Wallet Unit Attestations (WUAs). Either before or after requesting one or more PIDs or attestations from a Wallet Unit, a Relying Party Instance can:</p> <ul> <li>request a WUA from the Wallet Unit.</li> <li>verify the signature over the WUA using the Wallet Provider trust anchor obtained from the Wallet Provider Trusted List.</li> <li>verify that the Wallet Unit is in possession of the private key belonging to the public key in the WUA. This proves that the Wallet Unit is authentic and is provided by the trusted Wallet Provider.</li> </ul> <p>Note that requesting and verifying the WUA is not mandatory.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66312-relying-party-verifies-that-wua-is-not-revoked","title":"6.6.3.12 Relying Party verifies that WUA is not revoked","text":"<p>Section 6.6.2.4 explained how a PID Provider or an Attestation Provider can verify that a WUA (and thus the Wallet Unit) is not revoked. The same mechanism can be used by Relying Party Instances as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66313-wallet-unit-enables-the-user-to-report-suspicious-requests-by-a-relying-party-and-to-request-a-relying-party-to-erase-personal-data","title":"6.6.3.13 Wallet Unit enables the User to report suspicious requests by a Relying Party and to request a Relying Party to erase personal data","text":"<p>A Wallet Unit enables the User to report unlawful or suspicious requests for personal data by a Relying Party to a Data Protection Authority (DPA). To allow this, a Wallet Unit provides a dashboard allowing the User to lodge a complaint about a suspicious Relying Party presentation request to the DPA of the Member State that provided their Wallet Unit. For more information and requirements, see Topic 50. The User can make such a report regardless of whether any attributes were actually presented to the Relying Party. Even if the Wallet Instance prevented the presentation of any attributes because Relying Party authentication failed, or if the User did not approve the presentation of any attributes, the User can still lodge a complaint about the request with the relevant Data Protection Authority.</p> <p>The dashboard also enables the User to request a Relying Party to erase personal data. For more information and requirements, see Topic 48.</p> <p>To be able to substantiate a complaint, or to list data that must be deleted, the User needs to be informed about which attributes were requested by which Relying Parties. To enable this, a Wallet Unit maintains a log of all transactions that are performed. For presentation transactions, this log includes the attributes that were requested and presented. The aforementioned dashboard also enables the User to view the log and lodge a complaint for any transaction in the log. More details about the logging functionality can be found in Topic 19.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#664-pid-or-attestation-presentation-to-another-wallet-unit","title":"6.6.4 PID or attestation presentation to another Wallet Unit","text":"<p>Section 6.6.3 discussed the trust relationships necessary when a Wallet Unit receives a request from a Relying Party Instance and presents attributes to that Relying Party Instance.</p> <p>However, the [European Digital Identity Regulation] requires that a Wallet Unit is also able to receive such a request from another Wallet Unit, and present attributes to that requesting Wallet Unit. For more information and requirements, please refer to Topic 30.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#665-pid-or-attestation-management","title":"6.6.5 PID or attestation management","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6651-overview","title":"6.6.5.1 Overview","text":"<p>Starting from the issuance of a PID or attestation, the PID or attestation is managed by the User and the Wallet Provider. Management is performed until the PID, or attestation, is deleted or the Wallet Instance is uninstalled by the User. Management includes at least the following processes:</p> <ol> <li>Re-issuance of the PID or attestation when necessary.</li> <li>Revocation of the PID or attestation when necessary.</li> </ol> <p>These processes are discussed in the next subsections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6652-pid-or-attestation-re-issuance","title":"6.6.5.2 PID or attestation re-issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66521-introduction","title":"6.6.5.2.1 Introduction","text":"<p>Re-issuance means the replacement of a PID or attestation that already exists in a Wallet Unit by a PID or attestation having the same attestation type. Re-issuance is always performed by the same PID Provider or Attestation Provider that issued the existing PID or attestation, and it is initiated by the Wallet Unit. The value of the attributes in the new attestation will typically be the same as in the original attestation. However, this is not required; the PID Provider or Attestation Provider may change one or more attribute values. Re-issuance is only applied within the administrative validity period of a document. As an example, a mobile driving licence (mDL) will typically be issued in the form of attestations which have a technical validity period shorter than the administrative validity period of the licence itself. Re-issuance is used for obtaining fresh attestations as needed during the administrative validity period, to ensure that the User can always present a valid mDL. When the administrative validity period ends, there will be an administrative process for obtaining a new driving license, which is however out of scope of this document.</p> <p>Note that, in general, if the original PID or attestation was issued in a batch, then the PID Provider or Attestation Provider will re-issue that PID or attestation in a batch as well.</p> <p>There may be different reasons for re-issuing a PID or attestation, for example:</p> <ul> <li>The current PID(s) or attestation(s) are near the end of their  technical validity period, or the Wallet Unit is running out of once-only  attestations. This is done to mitigate the risk of Relying Party linkability. For more information, see Section 7.4.3.5.</li> <li>The value of one or more of the attributes in the PID or attestation  has changed.</li> <li>The security architecture of the Wallet Solution may use PIDs and/or  attestations that are issued just-in-time, at the moment that PID or  attestation is being requested by a Relying Party. This is sometimes  called synchronous issuing.</li> </ul> <p>These reasons are discussed in the next subsections. Re-issuance is discussed in more detail in the Discussion Paper for Topic B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66522-re-issuance-to-limit-relying-party-linkability","title":"6.6.5.2.2 Re-issuance to limit Relying Party linkability","text":"<p>As specified in [ISO/IEC 18013-5] or [SD-JWT VC], each PID or attestation contains metadata indicating its technical validity period. Determining the length of the technical validity period is the responsibility of the PID Provider or the Attestation Provider. The technical validity period chosen by the PID Provider or Attestation Provider will depend on several factors, primarily the security architecture of the Wallet Solution and the strategy chosen to mitigate Relying Party linkability, see Section 7.4.3.5.</p> <p>Given the above factors, it can generally be assumed that the technical validity period of a PID or attestations will be much shorter than their lifetime, meaning the period of time that a User wants to keep that PID or attestation in their Wallet Unit. That implies that new PIDs and attestations will need to be re-issued periodically, to replace the ones that are reaching end of their technical validity.</p> <p>A similar reason for re-issuing PIDs and attestations occurs when the PID Provider or Attestation Provider uses once-only attestations (see Section 7.4.3.5), which can be presented only once to a Relying Party. In that case, the Wallet Unit, or rather the User, will regularly need new PIDs or attestations to avoid running out.</p> <p>Re-issuance of PIDs or attestations for these reasons is a purely technical matter. To the maximum extent possible, the User does not notice that a PID or attestation has been re-issued, nor do they have to take any action to ensure that re-issuance happens in time. These conditions are very different from a first-time issuance of a PID or attestation, where the User must take the initiative to request the PID or attestation, and is potentially involved in the process in other ways as well.</p> <p>This implies, among other, that no User authentication can take place during re-issuance of an existing attestation. Nevertheless, a Wallet Unit may offer the User the option to receive a notification of re-issuance.</p> <p>In the absence of User authentication, and to prevent that a re-issued PID or attestation ends up at the wrong User, the PID Provider or Attestation Provider ensures that the re-issued PID or attestation is bound to the same WSCD as the PID or attestation it replaces.</p> <p>Finally, since the User is not involved, it is the Wallet Unit that triggers the re-issuance of PIDs and attestation when necessary.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66523-re-issuance-because-of-a-change-of-attribute-values","title":"6.6.5.2.3 Re-issuance because of a change of attribute values","text":"<p>During the lifetime of a PID or attestation, the value of some of the attributes may change. For example, at the date of birth of the User, an age attestation attribute (i.e., an attribute indicating whether the User has reached a certain age) may have to be changed from value False to value True. In another example, the User of a mobile driving licence may have passed the examination for a different vehicle category. In this case, the PID Provider or Attestation Provider shall re-issue the PID or attestation with the correct attribute values, and shall revoke the existing attestation.</p> <p>Re-issuance of a PID or attestation for this reason will have an impact on the User, because they will notice that their attribute values have been changed. Therefore, in this case Users will be informed when re-issuance happens. Additionally, an Attestation Provider may state in their terms of conditions that re-issuance of an attestation may be used.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#66524-re-issuance-when-using-synchronous-issuing","title":"6.6.5.2.4 Re-issuance when using synchronous issuing","text":"<p>A third reason for re-issuing a PID or attestation is where the PID Provider or Attestation Provider uses synchronous issuing in their security architecture. In such an architecture, the Wallet Unit requests the re-issuance of a new PID or attestation after it has received a request for that PID or attestation from a Relying Party. Such a PID or attestation is very short-lived and is used only once.</p> <p>The conditions on User awareness and authentication discussed in Section 6.6.5.2.2 are also valid for a synchronous re-issuance process.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#6653-pid-or-attestation-revocation","title":"6.6.5.3 PID or attestation revocation","text":"<p>PID or attestation management includes ensuring that PIDs and attestations can be revoked if necessary. Revocation is discussed in Topic 7. The User can request the PID Provider or Attestation Provider to revoke the PID or attestation at least in case of loss or theft. In addition, a PID Provider or Attestation Provider could regularly verify, for each of its valid PIDs or attestations, whether the Wallet Provider revoked the Wallet Unit on which that PID or attestation is residing. If it turns out that the Wallet Unit is revoked, the PID Provider or Attestation Provider could revoke the respective PID or attestation. Currently, no mechanism has been specified yet to enable a PID Provider or Attestation Provider to verify whether a Wallet Unit is revoked. This will be discussed for ARF 2.0.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#666-pid-or-attestation-deletion","title":"6.6.6 PID or attestation deletion","text":"<p>In case the User no longer wants to retain a specific PID or attestation in their Wallet Unit, the User can delete it. If the PID Provider or Attestation Provider issued a batch of multiple PIDs or attestations that have the same content and are valid, the Wallet Unit deletes them all. Deleting a PID or an attestation also means that the WSCD destroys the cryptographic key material associated with that PID or attestation. Before deleting the PID or attestation and the cryptographic keys, the WSCA included in the Wallet Unit will authenticate the User.</p> <p>If it supports the Digital Credentials API, see Section 4.4.3, the Wallet Unit also discloses the fact that it no longer contains the PID or attestation to the Digital Credentials API framework.</p> <p>For high-level requirements on this topic, see Topic 51.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7-certification-and-risk-management","title":"7 Certification and Risk Management","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#71-introduction","title":"7.1 Introduction","text":"<p>This chapter briefly describes the certification of Wallet Solutions and the eID schemes under which they are provided, covering the overall certification approach, design principles, and key requirements outlined in the European Digital Identity Regulation and Commission Implementing Regulation (CIR) laying down rules for on the certification of Wallet Solution (2024/2981), or simply the CIR 2024/2981. Furthermore, references are made to the Annex I of the CIR, the Risk Register, supporting the risk-based approach of the Wallet Solutions. For more detailed requirements, please refer to the CIR 2024/2981 itself.</p> <p>The European Digital Identity Regulation requires certification of Wallet Solutions to ensure conformity of the Wallet Solutions with functional, security, and privacy related requirements, to achieve a high level of interoperability, security and trustworthiness. Certification applies to the Wallet Solutions and the eID schemes under which they are provided; for ease of reading this chapter only refers to Wallet Solutions. Furthermore, the object of certification includes software components, hardware components (in cases where they are provided directly or indirectly by the Wallet Provider) and the processes that support the provision and operation of a Wallet Solution, such as Wallet Unit activation, see Section 6.5.3.</p> <p>The aim is to harmonise the implementation of the requirements laid down by the [European Digital Identity Regulation] and avoid divergent approaches to the maximum extent possible. For this reason, the Commission requested ENISA to prepare a candidate European certification scheme under the Cybersecurity Act, the CSA. As defining and adopting a dedicated, harmonised certification scheme for Wallet Solutions depends on agreements between Member States on detailed security requirements, on the availability of underlying certification schemes, and on established good practices in the Member States themselves, a transitory approach is foreseen by means of national certification schemes.</p> <p>In other words, the certification approach for Wallet Solutions follows two phases. In the short-term, Member States provide national (transitory) certification schemes. In the medium term, a harmonised CSA scheme will be established. When the CSA-based scheme becomes available, it replaces the national schemes as for cybersecurity requirements. The schemes may continue to exist for functional requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#72-certification-of-wallet-solutions-against-national-certification-schemes","title":"7.2. Certification of Wallet Solutions against national certification schemes","text":"<p>Until a dedicated Wallet Solution cybersecurity certification scheme under the CSA is available, the [European Digital Identity Regulation] requires Member States to establish national certification schemes. This will be done in time to make available the Wallet Solutions before the end of 2026. The Commission has adopted the CIR 2024/2981 to provide the main requirements on Member States for creation of national certification schemes. The CIR 2024/2981 and resulting national certification schemes are defined around a number of guiding principles:</p> <p>First, the goal is to harmonise requirements to the extent possible. Member States are also encouraged to work together in the design and implementation of national schemes. Additionally, national schemes will leverage the use of relevant and existing certification schemes and standards for Wallet Solution certification and evaluation. Where available, relevant European CSA schemes must be used. Currently, only the Common Criteria based European candidate cybersecurity certification EUCC scheme is available for the cybersecurity certification of ICT products, parts, or components for products. Upcoming CSA-based schemes include EUCS &amp; EU5G. Additionally, other existing or upcoming schemes\u200b include schemes based on FITCEM (EN 17640)\u200b, national schemes such as on remote identity verification, or other private schemes (e.g. for mobile devices and apps)\u200b. For harmonisation of functional requirements, the Commission Implementing Regulations (CIRs) adopted under the European Digital Identity Regulation article 5(a) are referenced. For harmonisation of certification requirements, the ISO/IEC 17065 framework under Regulation [765/2008] is used, complemented by ISO/IEC 17067 on the definition of schemes.</p> <p>Next, the CIR 2024/2981 refers to the composite nature of the Wallet Solutions as well as the potential different architectures in Member States, considering that the European Digital Identity Regulation is technology (and architecture) neutral. This means that a final ('top-level') certification of the Wallet Solution will yield a composite certificate, built on certification of separate components, such as EUCC certification. Wallet Solutions are always to be certified against assurance level High, as set out in the European Digital Identity Regulation as well as CIR (EU) 2015/1502. That assurance level has to be reached by the overall Wallet Solution. Under this Regulation, some components of the Wallet Solution may be certified at a lower assurance level, provided this is duly justified and without prejudice to the assurance level High reached by the overall Wallet Solution. For the use of assurance information from other certification schemes or sources, a dependency analysis will be performed.</p> <p>Finally, in order to ensure a harmonised approach to cybersecurity and the assessment of the most critical risks that might affect the provision and operation of Wallet Units, a register of risks and threats is defined, see 7.4 Risk-based approach and risk register. The Risk Register contains high level risks and threats in relation to Wallet Solutions and the ecosystem, as well as detailed threat scenarios that will be taken into consideration when designing Wallet Solutions, independent of their specific architecture.</p> <p>As a first step towards certification of Wallet Solutions under national schemes, Member States will assign a scheme owner, and design and roll out the scheme. As part of this process, Certification Bodies (CBs) will be accredited to carry out conformity assessments of Wallet Solutions against the requirements of the CIR 2024/2981 and the national scheme. Wallet Providers then request one or more designated CABs to assess and certify the conformity of their Wallet Solution. The CAB evaluates and certifies the conformity of the Wallet Solution if they meet the requirements.</p> <p>The European Commission and ENISA support Member States in designing and implementing national certification schemes in the Cooperation Group.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#73-certification-of-wallet-solutions-against-a-dedicated-csa-based-scheme","title":"7.3 Certification of Wallet Solutions against a dedicated CSA-based scheme","text":"<p>In parallel to the work described above, ENISA is requested to draft a dedicated European cybersecurity certification scheme for the Wallet Solutions under the CSA. Once available, this CSA-based scheme will replace the national transitory schemes mentioned above for the cybersecurity requirement it covers. This scheme will be based on available national schemes, harmonised requirements, and identify any additional requirements relevant for cybersecurity. The scheme will further detail the cybersecurity requirements, identify and set normative standards and define the target level of assurance or security for the relevant Wallet Solution components.</p> <p>The work to develop the CSA-based scheme follows the milestones set out by the CSA and is supported by the Ad Hoc Working Group or 'AHWG'. This group is composed of selected experts from private organisations and industry, with extensive knowledge and experience in the areas of cybersecurity certification, digital wallets, electronic identification and trust services. The first step is to have a candidate scheme ready for public consultation and submitted for feedback of the European Cybersecurity Certification Group or ECCG. The ECCG\u2019s opinion serves as advisory input to ensure the candidate scheme aligns to EU cybersecurity objectives, standards and regulatory requirements. Although the ECCG\u2019s opinion is not binding, it will hold significant influence, as it reflects the collective expertise of national cybersecurity authorities, aiming to harmonise cybersecurity certification practices across Member States. Based on this input, the candidate scheme might be updated further. After finalisation of the ECCG opinion, the scheme will be transformed into a new Implementing Regulation and adopted by comitology procedure.</p> <p>Finally, ENISA is also asked to facilitate the transition from national certification schemes to the dedicated cybersecurity certification scheme under the CSA.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#74-risk-based-approach-and-risk-register","title":"7.4 Risk-based approach and risk register","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#741-introduction","title":"7.4.1 Introduction","text":"<p>This section details the approach to develop harmonised guidelines for the development of the transitory national certification schemes. In addition to the requirements set out in the European Digital Identity Regulation article 5c, cybersecurity risks and threats associated with the Wallet Solutions will be identified. Here, a risk-based approach is envisioned as the basis for certification by Member States, ensuring that the Wallet Solutions uphold confidentiality, availability and strong safeguards for User privacy and data protection. This is inspired by known processes, such as for the General Data Protection Regulation (GDPR) and related Data Protection Impact Assessments (DPIA).</p> <p>The risk-based approach sets out a common Risk Register that contains a comprehensive but non-exhaustive list of risks and threats related to the Wallet Solution. These risks and threats are architecture-agnostic and provide a benchmark overview of the most critical risks and threats to Wallet Solutions. By adopting this common set of risks and threats, national transitory certification schemes will achieve a baseline level of harmonisation.</p> <p>The risk register will be applied by scheme owners, Wallet Providers, and Certification Bodies (CBs). When establishing their certification schemes, scheme owners will perform a risk assessment to refine and complement the risks and threats listed in the register with those specific to their architecture, and consider how the applicable risks and threats can be appropriately treated. Wallet Providers will complement the scheme\u2019s risk assessment to identify any risks and threats specific to their implementation and propose appropriate mitigation measures for evaluation by the certification body.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#742-high-level-risks-and-threats","title":"7.4.2 High-level risks and threats","text":"<p>The following is an excerpt from [Risk Register]. To keep in line with the continuously evolving threat landscape, the risk register will be maintained and regularly updated in collaboration with the Cooperation Group.</p> <p>High-level risks and threats</p> <p>R1 Creation or use of an existing electronic identity  R2 Creation or use of a fake electronic identity  R3 Creation or use of fake attributes  R4 Identify theft  R5 Data theft  R6 Data disclosure  R7 Data manipulation  R8 Data loss  R9 Unauthorised transaction  R10 Transaction manipulation  R11 Repudiation  R12 Transaction data disclosure  R13 Service disruption  R14 Surveillance</p> <p>System-related risks</p> <p>SR1 Wholesale surveillance  SR2 Reputational damage  SR3 Legal non-compliance</p> <p>Technical threats</p> <p>TT1 Physical attacks</p> <p>1.1 Theft  1.2 Information leakage  1.3 Tampering</p> <p>TT2 Errors and misconfigurations</p> <p>2.1 Errors made when managing an IT system  2.2 Application-level errors or usage errors  2.3 Development-time errors and system misconfigurations</p> <p>TT3 Use of unreliable sources</p> <p>3.1 Erroneous use or configuration of wallet components</p> <p>TT4 Failure and outages</p> <p>4.1 Failure or dysfunction of equipment, devices or systems  4.2 Loss of resources  4.3 Loss of support services</p> <p>TT5 Malicious actions</p> <p>5.1 Interception of information  5.2 Phishing and spoofing  5.3 Replay of messages  5.4 Brute-force attack  5.5 Software vulnerabilities  5.6 Supply chain attacks  5.7 Malware  5.8 Random number prediction</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#743-risks-and-mitigation-measures-discussed-in-chapter-6-of-this-arf","title":"7.4.3 Risks and mitigation measures discussed in Chapter 6 of this ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7431-introduction","title":"7.4.3.1 Introduction","text":"<p>This section briefly discusses some of the risks that were considered when the trust model in Chapter 6 was created, together with the mitigations for these risks and the residual risks that remain after these mitigations. This section is not intended to be a comprehensive risk register for the EUDI Wallet ecosystem as a whole; for that register, see [Risk Register] and Section 7.4.2 above. This section is limited to the scope of the ARF, namely, the Wallet Unit and its interactions with other entities in the ecosystem, as depicted in Figure 11 in Chapter 6.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7432-risks-and-mitigation-measures-related-to-confidentiality-integrity-and-authenticity","title":"7.4.3.2 Risks and mitigation measures related to confidentiality, integrity, and authenticity","text":"<p>Within the EUDI Wallet ecosystem, many interactions take place between entities in which one entity requests another entity to perform a task. For example, a User may ask a PID Provider or an Attestation Provider to provide a PID or an attestation to a Wallet Unit, or a Relying Party may ask a User to present attributes from an attestation in their Wallet Unit. For any of these interactions, the following risks apply:</p> <ul> <li>An attacker could impersonate one of the interacting entities. Therefore, the receiver of a message must be able to verify the identity of the sender, and vice versa. In other words, mutual authentication is needed. This authentication can be performed because valid entities in the EUDI Wallet ecosystem are put on a Trusted List by Member States. By verifying the signature over a message and verifying the associated public key certificates with a trust anchor included in a Trusted List, the receiver of a message can be sure about the identity of the message's sender.</li> <li>Messages between entities could be intercepted, meaning that they could be read by an attacker. To mitigate this risk, messages must be encrypted to ensure confidentiality.</li> <li>Intercepted messages could be changed by an attacker. To mitigate this risk, messages must be authenticated, so that the receiver can verify that originate from the authenticated sender and were not changed.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7433-risks-and-mitigation-measures-related-to-tampering-of-cryptographic-keys-and-sensitive-data","title":"7.4.3.3 Risks and mitigation measures related to tampering of cryptographic keys and sensitive data","text":"<p>The mechanisms for authentication and confidentiality described in the previous section rely on the security of cryptographic keys, especially private and secret keys. If an attacker can obtain, use, or tamper with these keys, these security mechanisms would break down. Therefore, all cryptographic keys are managed by dedicated secure applications (WSCAs), running on secure hardware (WSCDs), as described in Section 4.3. The security of WSCDs and WSCAs is ensured by means of an appropriate certification process.</p> <p>These mitigation measures apply for all entities in the EUDI Wallet ecosystem that use cryptographic keys, including Wallet Units, Wallet Providers, PID Providers and Attestation Providers, Trusted List Providers, and Certificate Authorities. For Relying Parties and Relying Party Instances, such measures are formally not required.</p> <p>WSCDs and WSCAs in a Wallet Unit may also be used to store other sensitive data except cryptographic keys. In particular, they could be used to store User attributes, in such a way that attackers, including malicious applications residing on the same User device as the Wallet Instance, cannot retrieve these attributes. This is beneficial for User privacy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7434-risks-and-mitigation-measures-related-to-authorisation","title":"7.4.3.4 Risks and mitigation measures related to authorisation","text":"<p>In certain cases, there is a risk that a legitimate entity within the EUDI Wallet ecosystem may attempt to perform actions beyond its authorised scope. This risk primarily affects two types of entities.</p> <p>First, a non-qualified EAA Provider may attempt to issue attestations for which it lacks the necessary authorisation. For example, an Attestation Provider that has not been officially designated by a Member State or another relevant authority to issue diplomas may still attempt to generate an attestation of the diploma type. Within the EUDI Wallet ecosystem, this risk is limited to non-qualified EAA Providers, as PID Providers, QEAA Providers, and PuB-EAA Providers are assumed to be inherently trustworthy in this context. For more information, see Section 6.3.2.3.</p> <p>This risk is mitigated by querying the Relying Party registry via an API. This registry, maintained by the Member State, contains comprehensive information about each Relying Party, allowing the system to verify the legitimacy of the issuer and ensure compliance with regulatory requirements.</p> <p>In the context of the [European Digital Identity Regulation] Regulation, the term Relying Party encompasses both Attestation Providers and entities that provide services relying on attestations, ensuring a broad and consistent approach to trust and verification within the EUDI Wallet ecosystem.</p> <p>Second, a Relying Party in the EUDI Wallet ecosystem may attempt to request attributes from a Wallet Unit without being registered or authorised to do so. This risk is mitigated mainly by three measures:</p> <ol> <li>Selective Disclosure and User Control \u2013 The attestation formats and protocols specified in [ISO/IEC 18013-5] and [SD-JWT VC] + [OpenID4VP] enable selective disclosure of attributes. This allows a Relying Party to specify which attributes within an attestation it wishes to receive while excluding others, a feature known as collection limitation. Additionally, selective disclosure ensures that the User retains control over their data, as they can approve or deny the presentation of requested attributes. More details on selective disclosure and User approval can be found in Section 6.6.3.5.</li> <li>Mandatory Relying Party Registration of Requested Attributes \u2013 The [European Digital Identity Regulation] mandates that each Relying Party register the attributes it intends to request from Users. According to CIR 2024/2982, these registered attributes must be included in a Relying Party registration certificate, which the Wallet Unit uses to verify the legitimacy of the request and inform the User accordingly. This transparency ensures that Users can make an informed decision about whether to approve or deny the presentation of the requested attributes. More details on this requirement can be found in Section 6.6.3.3.</li> <li>Attestation Provider Disclosure Policy Enforcement \u2013 The [European Digital Identity Regulation] also mandates that Attestation Providers can embed a disclosure policy within their attestations. This policy may include rules governing whether the Attestation Provider approves the presentation of this attestation to an authenticated Relying Party. The Wallet Unit evaluates this policy \u2014if present\u2014 alongside authenticated data from the Relying Party, and informs the User of the outcome. This mechanism further supports the User in making a well-informed decision on whether to approve or deny attribute presentation. More information on disclosure policy enforcement can be found in Sections 6.6.2.7 and 6.6.3.4.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#7435-risks-and-mitigation-measures-related-to-user-privacy","title":"7.4.3.5 Risks and mitigation measures related to User privacy","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#74351-linkability","title":"7.4.3.5.1 Linkability","text":"<p>User privacy is a key consideration in the design and implementation of the EUDI Wallet ecosystem. An important aspect of privacy is unlinkability. Unlinkability implies that, if a User presents attributes from an attestation multiple times, the receiving Relying Parties cannot link these separate presentations to conclude that they concern the same User.</p> <p>Within the EUDI Wallet ecosystem, attributes are presented in electronic attestations containing unique, fixed elements such as hash values, salts, public keys, and signatures. Malicious Relying Parties could exploit these values to track Users by storing and comparing them across multiple transactions, identifying recurring patterns. This privacy threat, known as Relying Party linkability, can occur within a single Relying Party or among colluding entities.</p> <p>A similar privacy threat arises when colluding Relying Parties share the unique values they obtained from an attestation with a malicious PID Provider or Attestation Provider. This allow the PID Provider or Attestation Provider to track User activity across multiple services. In this case, it's called Attestation Provider linkability.</p> <p>This topic is discussed in more detail in the Discussion Paper for Topic A.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#74352-mitigating-relying-party-linkability","title":"7.4.3.5.2 Mitigating Relying Party linkability","text":"<p>Regarding the mitigation of Relying Party linkability: A trustworthy PID Provider or Attestation Provider can mitigate Relying Party linkability fully by issuing multiple PIDs or attestations to the same User. Wallet Units can use these attestations as disposable (single-use) attestations, which ensures attestations can never be linked by Relying Parties. Topic 10/23 in Annex 2 calls this 'once-only attestations', and requires Wallet Solutions to support this method. It also specifies how a PID Provider or Attestation Provider can indicate that they want a Wallet Unit to treat their PIDs or attestations in this way.</p> <p>However, the 'once-only' approach increases issuance complexity and management overhead. Therefore, Topic 10/23 also mandates support for another solution, where PIDs and attestations are valid for a limited time only. This limits the amount of PIDs and attestations to be issued, but only partially mitigates Relying Party linkability. Topic 10/23 calls this 'limited-time attestations'.</p> <p>Furthermore, Topic 10/23 describes two other approaches, which are optionally supported by Wallet Solutions, namely:</p> <ul> <li>the Attestation Provider issues attestations in batches to the Wallet Unit. The Wallet Unit then uses the attestations from a batch in a random order, until it has presented all attestations in the batch once. Then it 'resets' the batch and starts using them again in a random order. Topic 10/23 calls this 'rotating-batch attestations'.</li> <li>the Wallet Unit will present different attestations to different Relying Parties. However, in case a Relying Party requests attributes from this attestation multiple times, the Wallet Unit will present the same attestation to this Relying Party each time. Topic 10/23 calls this 'Per-Relying Party attestations'.</li> </ul> <p>Additionally, organisational and enforcement measures can help deter Relying Parties from colluding and tracking Users. In particular, Relying Parties found in violation will have their access certificates revoked, preventing them from further interactions with Wallet Units.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#74353-zero-knowledge-proofs","title":"7.4.3.5.3 Zero-Knowledge Proofs","text":"<p>Attestation Provider linkability cannot be fully eliminated when using attestation formats based on salted hashes. The only viable mitigation is to adopt Zero-Knowledge Proofs (ZKPs) as a verification mechanism instead of relying on salted-attribute hashes. However, the integration of ZKPs in the EUDI Wallet ecosystem is still under discussion and development due to the complexity of implementing ZKP solutions in secure hardware and the lack of support in currently available secure hardware (WSCDs). As with Relying Party linkability, organisational and enforcement measures can help deter Attestation Providers from colluding and tracking Users. Additionally, many Attestation Providers are subject to regular audits, making it easier to detect collusion and tracking compared to Relying Parties.</p> <p>Zero-Knowledge Proof (ZKP) mechanisms for verifying personal information are highly promising and essential for ensuring privacy in various use cases. They enable Users to prove statements such as \"I am over 18\" without disclosing any personal data, offering a robust solution for privacy-preserving authentication and verification.</p> <p>One key area of development is age verification, where the European Commission is actively exploring and testing ZKP-based solutions. The outcomes of this initiative could pave the way for the adoption of ZKPs within the EUDI Wallet ecosystem, further strengthening privacy protections in future implementations.</p> <p>The Discussion Paper for Topic G (Zero-Knowledge Proofs) presents the (desired) privacy properties of Zero-Knowledge Proof schemes. It introduces the main families of Zero-Knowledge Proof schemes and gives an overview of representative solutions. Finally, it discusses topics related to the integration of Zero-Knowledge Proof schemes into the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8-document-development","title":"8 Document development","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#81-publication","title":"8.1 Publication","text":"<p>This document is made publicly available at https://github.com/eu-digital-identity-wallet/eudi-doc-architecture-and-reference-framework (GitHub repository) where it will be regularly updated.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#82-contributing","title":"8.2 Contributing","text":"<p>We value your feedback and encourage you to share any thoughts, suggestions, or concerns you may have regarding this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#821-providing-feedback","title":"8.2.1 Providing Feedback","text":"<p>To provide feedback on this document, please visit our GitHub repository. You can do so by navigating to the \"Issues\" tab and submitting a new issue or commenting on existing ones. Whether you've spotted a typo, have a suggestion for clarifying a section, or want to propose a new topic for inclusion, we welcome your feedback.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8211-guidelines-for-adding-issues-to-the-github-repository","title":"8.2.1.1 Guidelines for adding issues to the Github repository","text":"<p>When adding issues to the Github repository, please follow these general guidelines:</p> <ul> <li>Use clear and descriptive titles for your issues to provide a concise summary of the problem or task. This helps others quickly understand the issue at a glance.</li> <li>Provide a detailed description of the issue, including any relevant context, background information. The description should be comprehensive enough for others to understand the issue and take appropriate action.</li> <li>Use one or more of the following labels to categorise issues. Labels help organise and prioritise issues, making it easier to manage the repository.</li> </ul> Label Description Content Clarifications Raise issues seeking clarification on specific content within the document. This could include explanations of concepts, definitions of terms, or examples to illustrate certain points. Suggestions for Improvements Propose suggestions to enhance the clarity, completeness, or accuracy of the document. This could involve restructuring sections, adding examples, or providing additional information. Errors and Corrections Identify errors such as typos, grammatical mistakes, or factual inaccuracies within the document and suggest corrections. Compatibility and Integration Issues related to how the document integrates with other systems or technologies, ensuring compatibility with different platforms or frameworks. Enhancement Requests Request new features, sections, or content to be added to the document to improve its usefulness or relevance. Formatting and Styling Feedback regarding the visual appearance, organisation, and consistency of formatting within the document. Documentation Standards Discussions around adhering to documentation standards, conventions, or guidelines. Licence and Legal Concerns Questions or concerns related to the licensing of the document, usage rights, attribution requirements, or legal implications for contributors and Users. Technical Clarification Raise issues seeking clarification on specific technical content within the document. <ul> <li>Attach relevant files, screenshots, or links to additional resources that provide context or assist in resolving the issue. This can include references to related documentation or discussions.</li> <li>Follow issue etiquette by conducting a search to see if the issue has already been reported before creating a new one. This helps avoid duplicate issues.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#8212-guidelines-for-discussing-existing-issues-in-the-github-repository","title":"8.2.1.2 Guidelines for discussing existing issues in the GitHub repository","text":"<p>When discussing existing issues in the Github repository, please follow these general guidelines:</p> <ul> <li>Communicate with respect and courtesy towards other contributors, maintain a professional tone, and avoid using language that could be interpreted as confrontational or inflammatory.</li> <li>Provide context and background information to help others understand your perspective. Explain the reasoning behind your comments.</li> <li>Communicate your intentions and motivations behind your comments or suggestions to avoid misunderstandings.</li> <li>Keep discussions focused on the technical aspects of the issue at hand.</li> <li>Provide constructive feedback and suggestions in a helpful and supportive manner. Instead of simply pointing out problems, offer solutions or alternative approaches to address the issue positively.</li> <li>Approach discussions with a mindset of collaboration and problem-solving.</li> <li>Be open to different perspectives, as contributors may have different viewpoints, experiences, and expertise levels.</li> <li>Contribute to a positive and welcoming community atmosphere.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#822-managing-issues-and-pull-requests","title":"8.2.2 Managing Issues and Pull Requests","text":"<p>Our team is committed to managing issues and pull requests related to this document in a transparent and efficient manner to ensure that all feedback is addressed promptly and effectively. Here's how we manage issues and pull requests to set the right expectations:</p> <ul> <li>Issue Management: When an issue is submitted, our team will review and prioritise it based on its relevance and impact. We'll keep you informed of the status of your issue and provide updates as it progresses. Once resolved, we'll close the issue and incorporate any necessary changes into the document.</li> <li>Pull Request Management: If you submit a pull request with proposed changes or improvements to the document, our team will review it carefully and provide feedback and suggestions for refinement. We'll work collaboratively with you to ensure that your contribution aligns with our document's objectives and maintains consistency and quality. Once approved, we'll merge your changes into the document and acknowledge your contribution.</li> </ul> <p>Your feedback and contributions are essential in helping us maintain the quality and relevance of this document. We value your participation and strive to create a collaborative environment where everyone's contributions are valued and recognised.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#83-document-versioning","title":"8.3 Document Versioning","text":"<p>To avoid interoperability issues and changes to the ARF going unnoticed, a version control system and the following semantic versioning scheme (https://semver.org) will be used for the ARF.</p> <p>The ARF document will be published under a standardised release versioning format, MAJOR.MINOR.PATCH, where:</p> <p>MAJOR version is incremented (i.e., new version), when the ARF document has *undergone significant changes, for example introducing some breaking changes in *the architecture,</p> <p>MINOR version is incremented when new information has been added to the *document or information has been removed from the document, and</p> <p>PATCH version is incremented when minor changes have been made (e.g., fixing *typos).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#9-references","title":"9 References","text":"<p>For undated references, the latest version available applies.</p> Item Reference Standard name/details [2015/1505] COMMISSION IMPLEMENTING DECISION (EU) 2015/1505 of 8 September 2015 laying down technical specifications and formats relating to trusted lists pursuant to Article 22(5) of Regulation (EU) No 910/2014 of the European Parliament and of the Council on electronic identification and trust services for electronic transactions in the internal market. [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [Risk Register] Regulation (EU) 2024/2981, Annex I of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets [CIR 2024/2977] Commission Implementing Regulation 2024/2977 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards person identification data and electronic attestations of attributes issued to European Digital Identity Wallets [CIR 2024/2979] Commission Implementing Regulation 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets [CIR 2024/2980] Commission Implementing Regulation 2024/2980 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards notifications to the Commission concerning the European Digital Identity Wallet ecosystem [CIR 2024/2981] Commission Implementing Regulation (EU) 2024/2981 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets [CIR 2024/2982] Commission Implementing Regulation 2024/2982 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards protocols and interfaces to be supported by the European Digital Identity Framework [ISO/IEC 18013-5] ISO/IEC 18013-5, Personal identification --- ISO-compliant driving licence - Part 5: Mobile driving licence (mDL) application [ISO/IEC 18013-7] ISO/IEC 18013-7, Personal identification --- ISO-compliant driving licence - Part 7: Mobile driving licence (mDL) add-on functions [ISO/IEC 23220-2] ISO/IEC 23220-2, --- Cards and security devices for personal identification \u2014 Building blocks for identity management via mobile devices - Part 2: Data objects and encoding rules for generic eID systems [ISO 3166-1] ISO 3166-1: Codes for the representation of names of countries and their subdivisions -- Part 1: Country codes: alpha-2 country [ISO 3166-2] ISO 3166-2:2020: Codes for the representation of names of countries and their subdivisions --- Part 2: Country subdivision code [ETSI TS 119 612] ETSI TS 119 612: Electronic Signatures and Infrastructures (ESI); Trusted Lists [ETSI TS 119 431-1] ETSI TS 119 431-1 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 1: TSP service components operating a remote QSCD / SCDev. [ETSI TS 119 431-2] ETSI TS 119 431-2 - Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 2: TSP service components supporting AdES digital signature creation [ETSI TS 119 432] ETSI TS 119 432 - Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation [ETSI EN 319 132-1] ETSI EN 319 132-1 - Electronic Signatures and Infrastructures (ESI); XAdES digital signatures; Part 1: Building blocks and XAdES baseline signatures (XAdES) [ETSI TS 119 182-1] ETSI TS 119 182-1 - Electronic Signatures and Infrastructures (ESI); JAdES digital signatures; Part 1: Building blocks and JAdES baseline signatures [ETSI EN 319 122-1] ETSI EN 319 122-1 - Electronic Signatures and Infrastructures (ESI); CAdES digital signatures; Part 1: Building blocks and CAdES baseline signatures [ETSI EN 319 162-1] ETSI EN 319 162-1 - Electronic Signatures and Infrastructures (ESI); Associated Signature Containers (ASiC); Part 1: Building blocks and ASiC baseline containers [ETSI EN 319 142] ETSI EN 319 142-1 - Electronic Signatures and Infrastructures (ESI); PAdES digital signatures; Part 1: Building blocks and PAdES baseline signatures [CEN EN 419 241-1] CEN EN 419 241-1 -- Trustworthy Systems Supporting Server Signing - Part 1: General System Security Requirements [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC). Retrievable from: https://datatracker.ietf.org/doc/draft-ietf-oauth-sd-jwt-vc/ [RFC 2119] RFC 2119 - Key words for use in RFCs to Indicate Requirement Levels. S. Bradner, March 1997. [RFC 3339] RFC 3339 - Date and Time on the Internet: Timestamps, G. Klyne et al., July 2002 [RFC 9562] RFC 9562 - Universally Unique IDentifiers (UUIDs), P. Leach et al., May 2024 [RFC 5280] RFC 5280 - Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile, D. Kooper et al., May 2008 [RFC 3647] RFC 3647 - Internet X.509 Public Key Infrastructure Certificate Policy and Certification Practices Framework, S. Chokhani et al., November 2003 [RFC 7519] RFC 7519 - JSON Web Token (JWT), M. Jones et al., May 2015 [RFC 8259] RFC 8259 - The JavaScript Object Notation (JSON) Data Interchange Format, T. Bray, Ed., December 2017 [RFC 8610] RFC 8610 - Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures, H. Birkholz et al., June 2019 [RFC 8943] RFC 8943 - Concise Binary Object Representation (CBOR) Tags for Date, M. Jones et al., November 2020 [RFC 8949] RFC 8949 - Concise Binary Object Representation (CBOR), C. Bormann et al., December 2020 [CSC API] Cloud Signature Consortium API Specification v2.0, 20 April 2023 [GP OMAPI] GPD_SPE_075 Open Mobile API Specification, v3.3, July 2018, GlobalPlatform [GP CS] GPC_SPE_034 Card Specification, v2.3.1, March 2018, GlobalPlatform [GSMA SAM] GSMA Secured Applications for Mobile, v1.1, 03 November 2023, GSM Association [W3C VCDM v2.0] Sporny, M. et al, Verifiable Credentials Data Model v2.0, W3C Proposed Recommendation [W3C VC-JOSE-COSE] Jones, M. et al, \"Securing Verifiable Credentials using JOSE and COSE\", W3C Proposed Recommendation [W3C VC Data Integrity] Sporny, M. et al, Verifiable Credential Data Integrity 1.0, W3C Proposed Recommendation [W3C Digital Credentials API] Caceres, M., Cappalli, T., Goto, S. et al, \"Digital Credentials API\", Draft Community Group Report [W3C WebAuthn] Jeff Hodges et al, Web Authentication, An API for accessing Public Key Credentials Level 2, W3C Recommendation [CTAP] Client to Authenticator Protocol (CTAP) Review Draft, March 21, 2023. Available: https://github.com/eu-digital-identity-wallet/eudi-doc-standards-and-technical-specifications/issues/365 [OpenID4VCI] Lodderstedt, T. et al., \"OpenID for Verifiable Credential Issuance\", OpenID Foundation. [OpenID4VP] Terbu, O. et al., \"OpenID Connect for Verifiable Presentations\", OpenID Foundation. [OIDC] Sakimura, N. et al., \"OpenID Connect Core 1.0\", OpenID Foundation. Available: https://openid.net/specs/openid-connect-core-1_0.html [EKYC] Lodderstedt, T. et al., \"OpenID Connect for Identity Assurance Claims Registration 1.0\", OpenID Foundation. Available: https://openid.net/specs/openid-connect-4-ida-claims-1_0-final.html [EKYC Schema] Lodderstedt, T. et al., \"OpenID Identity Assurance Schema Definition 1.0\", OpenID Foundation. Available: https://openid.net/specs/openid-ida-verified-claims-1_0-final.html [HAIP] Yasuda, K. et al, \"OpenID4VC High Assurance Interoperability Profile\", OpenId Foundation. [IANA-JWT-Claims] IANA JSON Web Token Claims Registry. Available: https://www.iana.org/assignments/jwt/jwt.xhtml [Topic 6] Annex 2 - Relying Party authentication and User approval [Topic 7] Annex 2 - Attestation revocation and revocation checking [Topic 9] Annex 2 - Wallet Unit Attestation [Topic 10] Annex 2 -Issuing a PID or attestation to a Wallet Unit [Topic 11] Annex 2 - Pseudonyms [Topic 12] Annex 2 - Attestation Rulebooks [Topic 16] Annex 2 - Signing documents with a Wallet Unit [Topic 18] Annex 2 - Combined presentations of attributes [Topic 19] Annex 2 - User Navigation requirements (Dashboard logs for transparency) [Topic 23] Annex 2 - PID issuance and (Q)EAA issuance [Topic 25] Annex 2 - Unified definition and controlled vocabularies for attributes [Topic 26] Annex 2 - Catalogue of attestations [Topic 27] Annex 2 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and (non-qualified) EAAs, and Relying Parties [Topic 30] Annex 2 - Interaction between Wallet Units [Topic 31] Annex 2 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication [Topic 33] Annex 2 - Wallet Unit backup and restore [Topic 34] Annex 2 - Migrate to a different Wallet solution [Topic 37] Annex 2 - QES -- Remote Signing - Technical Requirements [Topic 38] Annex 2 - Wallet Unit revocation [Topic 42] Annex 2 - Requirements for QTSPs to access Authentic Sources [Topic 43] Annex 2 - Embedded disclosure policies [Topic 44] Annex 2 - Relying Party registration certificates [Topic 48] Annex 2 - Blueprint for requesting data deletion to Relying Parties [Topic 50] Annex 2 - Blueprint to report unlawful or suspicious request of data [Topic 51] Annex 2 - PID or attestation deletion [Topic 52] Annex 2 - Relying Party intermediaries"},{"location":"eudi-doc-architecture-and-reference-framework/docs/architecture-and-reference-framework-main/#10-annexes","title":"10 Annexes","text":"<ul> <li>Definitions - Annex 1</li> <li>High Level Technical Requirements - Annex 2</li> <li>Rulebooks - Annex 3:<ul> <li>PID Rulebook - Annex 3.1</li> <li>mDL Rulebook - Annex 3.2</li> </ul> </li> <li>Service Blueprints - Annex 4:<ul> <li>Blueprint Initialisation and activation - Annex 4.1</li> <li>Blueprint Online identification and authentication - Annex 4.2</li> <li>Blueprint Issuing mDL - Annex 4.3</li> <li>Blueprint Presenting mDL (proximity-supervised) - Annex 4.4</li> <li>Blueprint Presenting mDL (proximity-unsupervised) - Annex 4.5</li> <li>Blueprint Remote QES -- Creating a signature for authentication / authorisation - Annex 4.6</li> <li>Blueprint Remote QES - Enrolment - Annex 4.7</li> <li>Blueprint Remote QES - Creating a signature channelled by a Wallet Unit - Annex 4.8</li> <li>Blueprint Remote QES - Creating a signature channelled by Relying Party - Annex 4.9</li> <li>Blueprint QES -- View history of signatures - Annex 4.10</li> <li>Blueprint Local QES - Enrolment - Annex 4.11</li> <li>Blueprint Local QES -- Creating a signature - Annex 4.12</li> </ul> </li> <li>Design Guides - Annex 5:<ul> <li>Wallet Unit design guide - Annex 5.1</li> <li>Wallet Unit design guide -- data sharing scenarios - Annex 5.2</li> </ul> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexes","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes","text":"<ul> <li>annex-1</li> <li>annex-2</li> <li>annex-3</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-1","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1","text":"<ul> <li>annex-1-definitions</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/","title":"European Digital Identity Wallet","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#annex-1-definitions","title":"ANNEX 1 - Definitions","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a1-introduction","title":"A.1 Introduction","text":"<p>In the Architecture Reference Framework (ARF) many terms are used that need a precise definition. This Annex contains the definitions of these terms.</p> <p>In fact, there are three sources for these definitions:</p> <ul> <li>In the first place, the [European Digital Identity Regulation] defines several of these terms. For convenience, these definitions are listed in Section A.2.</li> <li>Secondly, the adopted Commission Implementing Regulations CIR 2024/2977, CIR 2024/2979, CIR 2024/2980, CIR 2024/2981, and CIR 2024/2982 also contain a list of definitions. Again for convenience, these definitions are included in Section A.3</li> <li>Thirdly, in writing the ARF, additional technical terms and corresponding definitions are used. These are listed in Section A.4.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a2-definitions-from-the-european-digital-identity-regulation","title":"A.2 Definitions from the [European Digital Identity Regulation]","text":"<p>The following terms are defined in the [European Digital Identity Regulation] and used in the ARF.</p> Term Definition in [European Digital Identity Regulation] Electronic attestation of attributes (EAA) An attestation in electronic form that allows attributes to be authenticated. Attribute A characteristic, quality, right or permission of a natural or legal person or of an object. Authentic Source A repository or system, held under the responsibility of a public sector body or private entity, that contains and provides attributes about a natural or legal person or object and that is considered to be a primary source of that information or recognised as authentic in accordance with Union law or national law, including administrative practice. Authentication An electronic process that enables the confirmation of the electronic identification of a natural or legal person or the confirmation of the origin and integrity of data in electronic form. Conformity Assessment Body (CAB) A conformity assessment body as defined in Article 2, point 13, of Regulation (EC) No 765/2008, which is accredited in accordance with that Regulation as competent to carry out conformity assessment of a qualified trust service provider and the qualified trust services it provides, or as competent to carry out certification of European Digital Identity Wallets or electronic identification means. Electronic attestation of attributes issued by or on behalf of a public sector body (PuB-EAA) An electronic attestation of attributes issued by a public sector body that is responsible for an authentic source or by a public sector body that is designated by the Member State to issue such attestations of attributes on behalf of the public sector bodies responsible for authentic sources in accordance with Article 45f and with Annex VII. Electronic identification scheme A system for electronic identification under which electronic identification means are issued to natural or legal persons or natural persons representing other natural persons or legal persons. (Electronic) signature Data in electronic form which is attached to or logically associated with other data in electronic form and which is used by the signatory to sign. (Electronic) seal Data in electronic form which is attached to or logically associated with other data in electronic form to ensure the latter\u2019s origin and integrity User A natural or legal person, or a natural person representing another natural person or a legal person, that uses trust services or electronic identification means provided in accordance with the [European Digital Identity Regulation]. Person Identification Data (PID) A set of data that is issued in accordance with Union or national law and that enables the establishment of the identity of a natural or legal person, or of a natural person representing another natural person or a legal person. Qualified Electronic Attestation of Attributes (QEAA) An electronic attestation of attributes which is issued by a qualified trust service provider and meets the requirements laid down in Annex V. Qualified Electronic Signature (QES) An advanced electronic signature that is created by a qualified electronic signature creation device, and which is based on a qualified certificate for electronic signatures. Qualified Electronic Signature Creation Device (QSCD) Configured software or hardware used to create an electronic signature that meets the requirements laid down in Annex II of the [European Digital Identity Regulation]. Qualified Trust Service Provider (QTSP) Qualified Trust Service Provider means a trust service provider who provides one or more qualified trust services and is granted the qualified status by the supervisory body. Relying Party A natural or legal person that relies upon electronic identification, European Digital Identity Wallets or other electronic identification means, or upon a trust service Public Sector Body A state, regional or local authority, a body governed by public law or an association formed by one or several such authorities or one or several such bodies governed by public law, or a private entity mandated by at least one of those authorities, bodies or associations to provide public services, when acting under such a mandate. <p>Table 1: Definition of terms used in the ARF originating from the [European Digital Identity Regulation]</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a3-definitions-from-the-adopted-commission-implementing-regulations","title":"A.3 Definitions from the adopted Commission Implementing Regulations","text":"<p>The following terms are defined in the adopted Commission Implementing Regulations and used in the ARF. Note that small differences exist in the way in which terms are written, for example regarding capitalisation. The table contains the term as used in the ARF.</p> Term Definition (Wallet) User A user who is in control of the Wallet Unit Wallet Unit A unique configuration of a Wallet Solution that includes Wallet instances, Wallet Secure Cryptographic Applications and Wallet Secure Cryptographic Devices provided by a Wallet Provider to an individual Wallet User Wallet Solution A combination of software, hardware, services, settings, and configurations, including Wallet Instances, one or more Wallet Secure Cryptographic Applications and one or more Wallet Secure Cryptographic Devices Provider of person identification data (PID Provider) A natural or legal person responsible for issuing and revoking the person identification data and ensuring that the person identification data of a user is cryptographically bound to a Wallet Unit Wallet Unit Attestation (WUA) A data object that describes the components of the Wallet Unit or allows authentication and validation of those components; Embedded disclosure policy A set of rules, embedded in an electronic attestation of attributes by its provider, that indicates the conditions that a wallet-relying party has to meet to access the electronic attestation of attributes Registrar (of wallet-relying parties) The body responsible for establishing and maintaining the list of registered wallet-relying parties established in their territory who has been designated by a Member State Wallet Instance The application installed and configured on a Wallet User\u2019s device or environment, which is part of a Wallet Unit, and that the Wallet User uses to interact with the Wallet Unit Wallet Secure Cryptographic Application (WSCA) An application that manages critical assets by being linked to and using the cryptographic and non-cryptographic functions provided by the Wallet Secure Cryptographic Device Wallet Secure Cryptographic Device (WSCD) A tamper-resistant device that provides an environment that is linked to and used by the Wallet Secure Cryptographic Application to protect critical assets and provide cryptographic functions for the secure execution of critical operations Wallet Provider A natural or legal person who provides Wallet Solutions critical assets Assets within or in relation to a Wallet Unit of such extraordinary importance that where their availability, confidentiality or integrity are compromised, this would have a very serious, debilitating effect on the ability to rely on the Wallet Unit (Wallet-) Relying Party A Relying Party that intends to rely upon Wallet Units for the provision of public or private services by means of digital interaction (Wallet-relying party) access certificate A certificate for electronic seals or signatures authenticating and validating the (Wallet-) Relying Party, issued by a provider of wallet-relying party access certificates Provider of wallet-relying party access certificates (Access Certificate Authority, Access CA) A natural or legal person mandated by a Member State to issue Relying Party access certificates to (Wallet-) Relying Parties registered in that Member State. (Wallet-relying party) registration certificate A data object that indicates the attributes the Relying Party has registered to intend to request from Users"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-1/annex-1-definitions/#a4-additional-definitions-used-in-the-arf","title":"A.4 Additional definitions used in the ARF","text":"<p>Note: The technical terms and definitions in Table 3 below are intended to be defined in such a way that they are aligned with the definitions used in the [European Digital Identity Regulation] and the Commission Implementing Regulations in Tables 1 and 2, and should be interpreted as such. In case any definition in Table 3 contradicts a definition from the [European Digital Identity Regulation] or the Commission Implementing Regulations, the latter take precedence.</p> <p>In some cases, a term has its origin in the context of a specific Topic in Annex 2. In such a case, the topic number appears in brackets following the definition. If the definition relies on an external source, such as a standard or a formal publication, that source is mentioned.</p> Term Definition Administrative validity period (of a PID or attestation) The date(s) from and/or up to which the attributes in the attestation are valid, which are represented as attribute(s) in the attestation. Note: Some attestations, for instance diplomas, do not have an administrative validity period Attestation When not further qualified, a collective term for a QEAA, PuB-EAA, or (non-qualified) EAA. Attestation Provider When not further qualified, a collective term for QEAA Provider, PuB-EAA Provider, or (non-qualified) EAA Provider. Attestation Revocation List A mechanism provided by a PID Provider or an Attestation Provider (or a trusted party acting on its behalf) for communicating the revocation status of PIDs and attestations, by publishing a list of identifiers of revoked PIDs or attestations. [Topic 7] Attestation Rulebook A document describing the attestation type, namespace(s), and other features for a specific attestation type. [Topic 12] Attestation Status List A mechanism provided by a PID Provider or an Attestation Provider (or a trusted party acting on its behalf) for communicating the revocation status of PIDs and attestations, by publishing status information (Valid or Invalid) for all relevant PIDs or attestations. [Topic 7] Note: Which PIDs or attestations are relevant is determined by the entity publishing the status list. For example, a status list may contain all PIDs or attestations whose validity period is not over yet at the time of publication of the list. Attestation type An identifier for a type of attestation, unique within the context of the EUDI Wallet ecosystem [Topic 12] Certificate Authority (CA) An entity which is trusted by one or more parties in the EUDI Wallet ecosystem to create and seal certificates. Certificate Policy (CP) A named set of rules that indicates the applicability of a certificate to a particular community and/or class of application with common security requirements. Namespace A specification of the attribute identifier, syntax and semantics of attributes that can be used in an attestation, having an identifier that is unique within the context of the EUDI Wallet ecosystem. [Topic 12] National Accreditation Bodies (NAB) A body that performs accreditation with authority derived from a Member State under Regulation (EC) No 765/2008. Notification The act of transferring information to the European Commission. [Topics 31] Pseudonym Data uniquely representing a user which in itself does not allow to infer any user's attribute or person identification data, without the use of additional information that is kept separately by the issuer of the data uniquely representing the user. Public Key Infrastructure (PKI) Systems, software, and communication protocols that are used by EUDI Wallet ecosystem components to distribute, manage, and control public keys. A PKI publishes public keys and establishes trust within an environment by validating and verifying the public keys mapping to an entity. Qualified Electronic Signature Remote Creation Provider A natural or a legal person that offers services related to the remote creation, validation, and management of qualified electronic signatures that meet legal requirements and standards in the [European Digital Identity Regulation] to be considered as legally equivalent to handwritten signatures. Relying Party Instance A software and/or hardware module with the capability to interact with a Wallet Unit and to perform Relying Party authentication, that is controlled by a Relying Party. Selective Disclosure The capability enabling the User to present a subset of the attributes included in a PID or attestation. Technical validity period (of a PID or attestation) The dates (and possibly times) from and up to which the attestation is valid, which are represented as metadata of the attestation. Note: All PIDs and attestations have a technical validity period, which is typically much shorter than its administrative validity period (if existent). The technical validity period is chosen based on a risk analysis, e.g. with regard to User privacy. Trust Anchor An authoritative entity represented by a public key and associated data. Note: based on RFC 5914. Trusted List Repository of information about authoritative entities in a particular legal or contractual context which provides information about their current and historical status."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-2","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2","text":"<ul> <li>annex-2-high-level-requirements</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/","title":"European Digital Identity Wallet","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#annex-2-high-level-requirements","title":"ANNEX 2 - High-Level Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2-high-level-requirements","title":"A.2 High-level requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a21-introduction","title":"A.2.1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a211-overview","title":"A.2.1.1 Overview","text":"<p>This annex to the ARF main document includes high-level requirements (HLRs) related to the EUDI Wallet ecosystem. The requirements define the responsible actor that should implement each requirement. There are no requirements imposed on the Users.</p> <p>All requirements in this Annex only apply in the context of the EUDI Wallet ecosystem. Attestations that are not bound to Wallet Units, as described in Section 6.6.3.8 of the ARF main document, are not included in the scope of this Annex.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a212-key-words","title":"A.2.1.2 Key words","text":"<p>This Annex uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this annex.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, i.e., a requirement that is not mandated by this document, but, for instance, by an external standard or specification. The word 'can' indicates a capability, whereas other words, such as 'will', and 'is' or 'are', are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a22-structure-and-order-of-presentation-of-the-hlrs","title":"A.2.2 Structure and order of presentation of the HLRs","text":"<p>Topics presented in Section A.2.3 are ordered by a Topic number.</p> <p>Each Topic includes a short description, followed by the High-Level Requirements (HLRs), identified by a unique identifier. The identifier includes a prefix which signifies the context of the HLRs (e.g. ISSU for issuance), an underscore and a numerator, e.g. ISSU_10.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a23-high-level-requirements","title":"A.2.3 High-Level Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a231-topic-1-accessing-online-services-with-a-wallet-unit","title":"A.2.3.1 Topic 1 - Accessing Online Services with a Wallet Unit","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description","title":"Description","text":"<p>One of the main use cases of the EUDI Wallet ecosystem is to enable Users to access online services and to enable Relying Parties offering such services to, where needed, identify and authenticate Users with a high level of assurance. This essential functionality ensures that Relying Parties can confidently verify that they are interacting with the correct User.</p> <p>Note: As specified in the [European Digital Identity Regulation], legally speaking, the term 'Relying Party' also include QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers. However, for clarity this Annex uses the term 'Relying Party' exclusively in the meaning of a service provider interacting with a Wallet Unit to request and receive attributes from an attestation.</p> <p>In this use case, a User is using their Wallet Unit to present attributes in order to access online services offered by Relying Parties. The User is concerned about presenting such attributes during online interactions. Their objectives include maintaining control over the presentation of personal attributes from PIDs and attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs","title":"HLRs","text":"Index Requirement specification OIA_01 A Wallet Unit SHALL support technical specifications to respond to person identification data (PID) and attestation presentation requests by Relying Parties. OIA_02 A Wallet Unit SHALL support proving cryptographic binding between a WSCA included in the Wallet Unit and a PID or attestation, in accordance with [SD-JWT VC] or [ISO/IEC 18013-5]. Note: Such a mechanism is called device binding in [ISO/IEC 18013-5] and key binding in [SD-JWT VC]. OIA_03 The Commission SHALL adopt the technical specifications for the PID or attestation presentation request-response protocol and for the device binding mechanism, according to the protocols and interfaces specified in [OpenID4VP] for remote flows, and [ISO 18013-5] for proximity flows. OIA_03a Wallet Providers SHALL ensure that their Wallet Solution supports the protocol specified in 'OpenID for Verifiable Presentations', see [OpenID4VP], with additions and changes as documented in this Annex and in future technical specifications created by or on behalf of the Commission. OIA_03b For remote presentation flows, when the format of the requested attestation complies with [ISO/IEC 18013-5], Relying Parties and Wallet Units SHALL comply with the requirements in the profile for OpenID4VP specified in [ISO/IEC 18013-7] Annex B. OIA_03c For remote presentation flows, when the format of the requested attestation complies with [SD-JWT VC], Relying Parties and Wallet Units SHALL comply with the requirements in the 'OpenID for Verifiable Presentations for IETF SD-JWT VC' profile specified in [HAIP]. OIA_04 A Wallet Unit SHALL verify and process PID or attestation presentation requests from Relying Parties in accordance with the protocols and interfaces specified in [OpenID4VP] for remote flows. OIA_05 After verifying and processing a PID or attestation request, the Wallet Unit SHALL display to the User the identity of the requesting Relying Party and the requested attributes. OIA_06 A Wallet Unit SHALL present the requested attributes only after having received the User's authorisation. See also OIA_07. OIA_07 A Wallet Unit SHALL support selective disclosure of attributes from PIDs and attestations to be released to the requesting Relying Parties. OIA_08 Wallet Units and Relying Party Instances SHALL support the [W3C Digital Credentials API]](https://wicg.github.io/digital-credentials/) for remote presentation flows, provided that a) this API is fully standardised, b) this API complies with the expectations outlined in Chapter 3 of the Topic F discussion paper, and c) this API is broadly supported by relevant browsers and operating systems. OIA_08a If Wallet Units and Relying Party Instances do not support the [W3C Digital Credentials API], they SHALL implement adequate mitigations for the challenges described in Section 4.4.3.1 of the ARF main document. OIA_08b If a Wallet Unit supports the [W3C Digital Credentials API], it SHALL disclose the presence of all stored attestations and attributes to the Digital Credentials API framework, but it SHALL NOT disclose the value of the attributes in these attestations. Note: The latter restriction applies even if such disclosure would enhance the services provided by the operating system to the Wallet Unit, for example, attestation selection in the context of the Digital Credentials API. OIA_08c If a Relying Party supports the [W3C Digital Credentials API], the Relying Party's presentation request MAY be processed by the browser for searching available attestations, for preventing fraud targeting the user, or for troubleshooting purposes. Moreover, the request SHOULD be processed by the browser for User security purposes. However, the request SHALL NOT be processed by the browser for market analysis purposes (including as a secondary purpose) or for the browser\u2019s own purposes. OIA_09 For remote presentation flows the Wallet Unit SHALL ensure that the attributes included in the presented attestation are accessible only to the Relying Party Instance, by encrypting the presentation response. The technical specification meant in OIA_03a SHALL specify mechanisms preventing decryption of the presentation response via Man-in-the-Middle attacks by the browser, the operating system, or other components between the Wallet Unit and the Relying Party. OIA_10 For both proximity and remote presentation flows, if a Wallet Unit contains two PIDs having the same encoding (e.g. ISO/IEC 18013-5 or SD-JWT VC-compliant) and a Relying Party requests a PID, the Wallet Unit SHALL ask the User which of these PIDs they want to release, unless the Wallet Unit can decide from context. OIA_11 For both proximity and remote presentation flows, if a Wallet Unit contains two attestations having the same encoding (e.g. ISO/IEC 18013-5 or SD-JWT VC-compliant) and the same attestation type, and a Relying Party requests an attestation of that type and encoding, the Wallet Unit SHALL ask the User which of these attestations they want to release, unless the Wallet Unit can decide from context. Note: Attestation types are explained in [Topic 12]. OIA_12 For both proximity and remote presentation flows, a Relying Party SHALL validate the signature of a PID using a trust anchor provided in a PID Provider Trusted List made available in accordance with [Topic 31]. OIA_13 For both proximity and remote presentation flows, a Relying Party SHALL validate the qualified signature of a QEAA in accordance with Art.32 of the [European Digital Identity Regulation]. For the verification, the Relying Party SHALL use a trust anchor provided in a QEAA Provider Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. OIA_14 For both proximity and remote presentation flows, a Relying Party SHALL validate the qualified signature of a PuB-EAA in accordance with Art.32 of the [European Digital Identity Regulation]. For that verification, the Relying Party SHALL use the public key provided in the qualified certificate of the QTSP supporting the qualified signature. The Relying Party SHALL also validate the qualified certificate of the QTSP using a trust anchor provided in a Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. The Relying Party SHALL also verify the certified attributes of the qualified certificate, as specified in Article 45f. OIA_15 For both proximity and remote presentation flows, a Relying Party SHALL validate the signature of a non-qualified EAA using a trust anchor provided according to the mechanism(s) specified in the applicable Rulebook, see [Topic 12]. Notes: - OIA_12 \u2013 OIA_15 imply that a Relying Party Instance must know if the attestation it is requesting from a Wallet Instance is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. These requirements also imply that the Relying Party Instance must store trust anchors in such a way that, at the time of verification, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs. - PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, when it receives an non-qualified attestation, a Relying Party Instance may have to verify that the non-qualified EAA Provider is authorised or registered to issue this type of attestation, in addition to verifying the signature over the attestation using the EAA Provider's trust anchor. Mechanisms allowing to do this should be defined in the applicable Rulebook, see ARB_26. OIA_16 When receiving a PID, attestation, or WUA, a Relying Party Instance SHALL discard the values of all unique elements, including at least the ones mentioned in requirement ISSU_35 in Topic 10/23, as well as any timestamps, as soon as they are no longer needed. The Relying Party Instance SHALL NOT communicate these values to the Relying Party or to any other party inside or outside the EUDI Wallet ecosystem."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a232-topic-2-mobile-driving-licence-within-the-eudi-wallet-ecosystem","title":"A.2.3.2 Topic 2 - Mobile Driving Licence within the EUDI Wallet ecosystem","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_1","title":"Description","text":"<p>A User can obtain their mobile Driving Licence (mDL) from an mDL Provider and store it in an Wallet Unit. The User can then present the mDL to a Relying Party upon request to prove their driving rights conveniently, securely, and in compliance with the Driving Licences Directive, once it is adopted.</p> <p>This Topic contains high-level requirements related to a User presenting a mobile Driving Licence (mDL) to a Relying Party in a supervised or unsupervised scenario, and also in an unsupervised scenario, in proximity mode.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_1","title":"HLRs","text":"<p>No high-level requirements are identified for this Topic, as the mDL is an attestation that must comply with all relevant requirements in other Topics.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a233-topic-3-pid-rulebook","title":"A.2.3.3 Topic 3 - PID Rulebook","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_2","title":"Description","text":"<p>The Person Identification Data (PID) Rulebook contains requirements specific to the PID within the EUDI Wallet ecosystem.</p> <p>The PID Rule Book contains the PID attribute schema, which describes the structure, the type, the identifiers, and the logical organisation of the mandatory and optional attributes and metadata of the PID, as specified in Commission Implementing Regulation (EU) 2024/2977. It also describes how Member States can specify any possible national attributes. Two encodings for these attributes are specified, one compliant with [ISO/IEC 18013-5], the other compliant with [SD-JWT VC].</p> <p>For more information, see Annex 3 - [PID Rulebook].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-generic-hlrs","title":"A. Generic HLRs","text":"<p>The requirements in the table below are valid for all PIDs in the EUDI Wallet ecosystem, regardless of the encoding used.</p> Index Requirement specification PID_01 PIDs and PID Providers SHALL comply with all requirements in [PID Rulebook]. PID_02 A PID Provider SHALL issue any PID in both the format specified in ISO/IEC 18013-5 [ISO/IEC 18013-5] and the format specified in [SD-JWT VC]. Note: CIR 2024/2977 mentions the W3C Verifiable Credentials Data Model v1.1 instead of [SD-JWT VC]. The latest stable version of this standard is [W3C VCDM 2.0].  However, W3C VCDM is not a complete specification of an attestation format. In particular, it does not specify a specific proof method to be used. Without additional specification, such as those in [W3C VC-JOSE-COSE] or [W3C VC Data Integrity], and making further choices, it is impossible to implement a PID based on W3C VCDM. This Rulebook considers [SD-JWT VC] to essentially be such an additional specification. See also Section 5.3.4 of the ARF main document. PID_03 The portrait in a PID SHALL consist of a single portrait image in JPEG format. The portrait image SHALL comply with the quality requirements for a Full Frontal Image Type in ISO/IEC 19794-5 clauses 8.2, 8.3, and 8.4. However, the attribute portrait SHALL NOT comply with the format requirements in ISO/IEC 19794-5 clauses 8.1 and 8.5, meaning it SHALL NOT contain any of the headers or blocks specified in clause 5 except for the image data itself (a JPEG)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-hlrs-for-isoiec-18013-5-compliant-pids","title":"B. HLRs for ISO/IEC 18013-5-compliant PIDs","text":"<p>The requirements in the table below are valid for PIDs in the EUDI Wallet ecosystem that are compliant with [ISO/IEC 18013-5].</p> Index Requirement specification PID_04 PID Providers SHALL use \u201ceu.europa.ec.eudi.pid.1\u201d as the attestation type for ISO/IEC 18013-5-compliant PIDs. Notes: - This identifier uses the general format [Reverse Domain].[Domain Specific Extension]. Since the European Commission controls the domain ec.europa.eu, this attestation type identifier will not collide with any attestation type identifiers defined by other organisations in other Attestation Rulebooks. - The Commission may use the version number \u201c1\u201d in this identifier to distinguish between the first version of the PID, defined in the PID Rulebook, and any future version, which will then have an incremented version number. PID_05 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL use the value \u201ceu.europa.ec.eudi.pid.1\u201d for the identifier of the namespace for the PID attributes specified in Section 4.2 of the PID Rulebook. Notes: - The version number \u201c1\u201d allows for future extension(s) or change(s) of the ISO/IEC 18013-5-compliant PID attributes. - This namespace has the same value as the attestation type specified in requirement PID_04. This is allowed according to ISO/IEC 18013-5. PID_06 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider MAY include attributes that are not defined in the PID Rulebook. If so, these attributes SHALL be defined within a domestic PID namespace as meant in requirement ARB_10 in Topic 12. The PID Provider SHALL generate the identifier for this domestic PID namespace by appending the applicable ISO 3166-1 alpha-2 country code or the ISO 3166-2 region code, separated by a period, to the PID namespace identifier specified in PID_05, excluding the version number. The PID Provider MAY include a version number in the domestic PID namespace identifier. Note: For example, the identifier of the first domestic PID namespace for Germany could be \u201ceu.europa.ec.eudi.pid.de.1\u201d. PID_07 A PID Provider that defines a domestic namespace SHALL publish the namespace, including all attribute identifiers, their definition, presence and encoding format, in an Attestation Rulebook complying with all applicable requirements in Topic 12. PID_08 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL include both the attributes and the metadata specified in CIR 2024/2977 in the PID as (issuer-signed or device-signed) data elements. Note: This implies that technically speaking, there is no difference between these attributes and metadata. PID_09 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL encode each attribute or metadata in the PID as specified in the third column of the tables in Section 4.2.1 of the PID Rulebook. PID_10 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL encode each attribute or metadata in the PID in Concise Binary Object Representation (CBOR) according to [RFC 8949]. PID_11 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that each PID contains at most one attribute with the same attribute identifier. PID_12 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that the value of all attributes and metadata in the PID is valid at the value of the timestamp in the validFrom element in the MSO, see [ISO/IEC 18013-5] clause 9.1.2.4. Note: The value of the age_over_18, age_over_NN, or age_in_years attributes, if present, changes whenever the User to whom the person identification data relates has a relevant birthday. The value of many other attributes will also change over time. PID_13 When issuing a PID compliant with [ISO/IEC 18013-5], a PID Provider SHALL ensure that the issuance_date attribute, if present, is not later than the validFrom element in the MSO, see [ISO/IEC 18013-5] clause 9.1.2.4."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-hlrs-for-sd-jwt-vc-compliant-pids","title":"C. HLRs for SD-JWT VC-compliant PIDs","text":"<p>The requirements in the table below are valid for PIDs in the EUDI Wallet ecosystem that are compliant with [SD-JWT VC].</p> Index Requirement specification PID_14 A PID Provider issuing [SD-JWT VC]-compliant PIDs SHALL include the vct claim in their PIDs, where the vct claim SHALL be a URN within the <code>urn:eudi:pid:</code> namespace. The type indicated by the vct claim SHALL be <code>urn:eudi:pid:1</code> for the type defined in this document or a domestic type that extends it. PID_15 A catalog linked in the PID Rulebook SHALL associate all SD-JWT VC types for PIDs with SD-JWT VC type metadata which will include the same information as the PID Rulebook applicable to the type. PID_16 A PID Provider that defines a domestic type SHALL publish information about the type, including all claim identifiers, their definition, presence and encoding format, in an Attestation Rulebook complying with all applicable requirements in Topic 12. PID_17 When issuing a PID compliant with [SD-JWT VC], a PID Provider SHALL include both the attributes and the metadata specified in CIR 2024/2977 in the PID as claims. Note: This implies that technically speaking, there is no difference between these attributes and metadata. PID_18 When issuing a PID compliant with [SD-JWT VC], a PID Provider SHALL encode each attribute or metadata in the PID as specified in the tables in Section 5.2 of the PID Rulebook. PID_19 When issuing a PID compliant with [SD-JWT VC], a PID Provider SHALL ensure that the value of all attributes and metadata in the PID is valid at the value of the timestamp in the nbf claim, if present. Note: The value of the age-related claims, if present, changes whenever the User to whom the person identification data relates has a relevant birthday. The value of many other attributes will also change over time. PID_20 When issuing a PID compliant with [SD-JWT VC], a PID Provider SHALL ensure that the date_of_issuance claim, if present, is not later than the value of the timestamp in the nbf claim, if present. PID_21 When issuing a PID compliant with [SD-JWT VC], a PID Provider SHALL make all claims (i.e., all top-level properties, all nested properties, and all array entries) selectively disclosable individually, except those claims defined as non-selectively disclosable in [SD-JWT VC]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a234-topic-4-mdl-rulebook","title":"A.2.3.4 Topic 4 - mDL Rulebook","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_3","title":"Description","text":"<p>The mobile driving licence (mDL) Rulebook contains requirements specific to the mDL use case within the EUDI Wallet ecosystem.</p> <p>Mobile driving licences are legally specified in the proposed EC Regulation 2023_127 (4<sup>th</sup> Driving Licence Regulation). This Regulation specifies that mDLs must comply with the ISO/IEC 18013-5 standard. It does not mention any other standards, in particular not [SD-JWT VC]. Consequently, mDLs issued to a Wallet Unit will not be implemented as [SD JWT VC]- compliant documents. The mDL Rulebook therefore specifies only an ISO/IEC 18013-5 compliant encoding.</p> <p>For more information, see Annex 3 - [mDL Rulebook].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_2","title":"HLRs","text":"Index Requirement specification mDL_01 mDLs and mDL Providers SHALL comply with all requirements in [mDL Rulebook]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a235-topic-5-wallet-unit-design-guide","title":"A.2.3.5 Topic 5 - Wallet Unit Design Guide","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a236-topic-6-relying-party-authentication-and-user-approval","title":"A.2.3.6 Topic 6 - Relying Party authentication and User approval","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_4","title":"Description","text":"<p>Relying Party authentication is a process whereby a Relying Party proves its identity to a Wallet Unit, in the context of a transaction in which the Relying Party requests the Wallet Unit to release some attributes.</p> <p>To perform Relying Party authentication, the Wallet Unit verifies a Relying Party Instance access certificate offered by the entity with which it communicates, which is called a \"Relying Party Instance\". Note that there could be multiple Relying Party Instances for each Relying Party.</p> <p>The Wallet Unit communicates the outcome of Relying Party authentication to the User when it requests the User for approval to present the requested attributes. High-level requirements for User approval are also included in this Topic. The Wallet Unit also communicates the outcome of the verification of the Relying Party registration certificate, see Topic 44, and the outcome of the evaluation of an embedded disclosure policy, if present, see Topic 43.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_3","title":"HLRs","text":"<p>A. Relying Party authentication</p> Index Requirement specification RPA_01 The Wallet Unit used by a User, as well as the Relying Party Instance used by the Relying Party, SHALL implement a mechanism for Relying Party authentication. This mechanism SHALL: - enable the Wallet Unit to identify and authenticate the Relying Party, - enable the Wallet Unit to verify that the request from the Relying Party was not copied and replayed, - use Relying Party Instance access certificates issued in accordance with [Topic 27]. RPA_01a If a Wallet Unit supports the [W3C Digital Credentials API] for remote presentation flows, it SHALL retain full authority over the process meant in RPA_01. In particular, this process SHALL NOT be handled by a third party, including the browser and the operating system. RPA_02 The Commission SHALL ensure that technical specifications for the Relying Party authentication mechanism mentioned in RPA_01 are created both for Wallet Units complying with [ISO/IEC 18013-5] and for Wallet Units complying with [OpenID4VP]. These specifications SHALL comply with applicable requirements in these standards. RPA_02a The technical specifications mentioned in RPA_02 SHALL ensure that a Relying Party Instance includes its access certificates in the presentation request by value, not by reference. Note: This ensures that no external requests are necessary to carry out Relying Party authentication, and that transactions are atomic and self-contained. RPA_03 A Wallet Unit and a Relying Party Instance SHALL perform Relying Party authentication in all use cases, whether proximity or remote, using a Relying Party Instance access certificate. Note: The actions both entities perform differ. For example, while the Relying Party creates a signature over some data in the request, the Wallet Unit validates that signature. RPA_04 For the verification of Relying Party Instance access certificates, a Wallet Unit SHALL accept the trust anchors in the Trusted List(s) of Relying Party Access Certificate Authorities of all Member States. Note: For more information about Relying Party Access Certificate Authorities, please see [Topic 31]. RPA_05 If Relying Party authentication fails for any reason, the Wallet Instance SHALL inform the User that the identity of the Relying Party could not be verified and that therefore the request is not trustworthy. RPA_06 If Relying Party authentication succeeds, the Wallet Instance SHALL display to the User the name of the Relying Party as included in the Relying Party registration certificate (see Topic 44), if available, together with the attributes requested by the Relying Party, as well as the warning in case any of the requested attributes is not included in the list of attributes in the registration certificate (registered \"intended use\"). The Wallet Instance SHALL do so when asking the User for approval according to RPA_07. Note: If the Relying Party registration certificate is not available, see RPA_06c. RPA_06a If the registration certificate indicates that an intermediary is acting on behalf of the 'end' Relying Party, as described in Topic 52, the Wallet Unit SHALL verify that the name and the unique identifier of the intermediary included in the registration certificate are identical to the name and unique identifier included in the Relying Party Instance access certificate. If this verification fails, the Wallet Unit SHALL treat this as a Relying Party authentication failure. If this verification succeeds, the Wallet Instance SHALL display to the User the names of the intermediary and the intermediated End-Relying Party. Note: If the Relying Party registration certificate is not available, see RPA_06d. RPA_06b If Relying Party authentication fails for any reason, the Wallet Unit SHALL either not present the requested attributes to the Relying Party, or give the User the choice to present the requested attributes or not. Note: It is up to the Wallet Provider to make a choice for one of the two options above. RPA_06c If the Relying Party registration certificate is not available, the name of the Relying party is retrieved from the access certificate. The User SHALL be offered on option to perform an on-line verification of the Relying Party information and the registered intended use, meaning to obtain the list of registered attributes (\"intended use\"). If the User chooses to do so, the Wallet Unit retrieves a URL of the Registrar's on-line service (or Trusted List, if applicable) to fetch such information and run comparison and display the warning as defined in RPA_06. RPA_06d If a transaction is performed by an intermediary and the Relying Party registration certificate is not available, the Wallet Unit SHALL retrieve the name and the unique identifier of the 'end' Relying Party from the presentation request and use them to obtain information from the Registrar's on-line service on the 'end' Relying Party and an intermediary it is linked to (to check if it is the same entity as in the access certificate). <p>B. User approval</p> Index Requirement specification RPA_07 A Wallet Unit SHALL ensure the User approved the release of any attribute(s) in the Wallet Unit to a Relying Party, prior to releasing these attributes. A Wallet Unit SHALL always allow the User to refuse releasing an attribute requested by the Relying Party. RPA_07a If a Wallet Unit supports the [W3C Digital Credentials API] for remote presentation flows, it SHALL retain full authority over the process meant in RPA_07. In particular, this process SHALL NOT be handled by a third party, including the browser and the operating system. RPA_08 A Wallet Unit SHALL ensure that (one of) its WSCA(s) has authenticated the User before allowing the User to give or refuse approval for releasing any attributes. Note: See [Topic 09] for information about the WSCA. RPA_09 A Relying Party SHOULD communicate in the request which attributes are needed for which purpose (use case, service), if this is supported by the protocol used for communication with the Wallet Unit. Notes: - This could be done, for instance, by grouping the attributes and describing the use case, service, or purpose of each group. - The purpose of this recommendation is that a Relying Party makes clear to the User what the intended use, the service being accessed, or the specific purpose is of each requested attribute. For example, a service may legally require attributes for age verification (e.g., birthdate), but the Relying Party may additionally want a User address (e.g., street, location, PObox, country) in order to offer added-value services. Age verification attributes and address attributes should be grouped separately, and the purposes should be clearly distinguished. This allows the User to be better informed about the request, and also allows them to approve one purpose but deny the other; see RPA_10. RPA_10 If a Wallet Unit receives a request indicating one or more purposes (use cases, services) for requesting attributes, the Wallet Instance SHOULD show these to the User when asking for User approval. Moreover, the Wallet Unit SHOULD ensure that for each purpose, the User gives approval either to release all attributes requested for that purpose, or none of them. Note: This means that a User should either approve the release of all attributes in a given group or to deny the entire group. The Wallet Unit should not allow partial approval within a group. Partial approval would mean that the Relying Party cannot deliver the service, but nevertheless receives some User attributes. This would be a violation of the User's privacy. RPA_11 When the presentation of an attestation is denied by the User, the Wallet Unit SHALL behave towards the Relying Party as if the attestation did not exist."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a237-topic-7-attestation-revocation-and-revocation-checking","title":"A.2.3.7 Topic 7 - Attestation revocation and revocation checking","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_5","title":"Description","text":"<p>This Topic contains the high-level requirements (HLRs) relating to the (possible) revocation of PIDs, QEAAs, PuB-EAAs, non-qualified EAAs and WUAs by their providers. It also contains HLRs relating to the (possible) checking of the revocations status of a PID or attestation by a Relying Party.</p> <p>Note: This Topic does not pertain to access certificates for Relying Parties, PID Providers or Attestation Providers as discussed in [Topic 31]. Neither does it apply to any intermediate certificates establishing trust between these certificates and the respective trust anchors. These access certificates are part of a Public Key Infrastructure, and rules for revoking these certificates will be established within the respective PKI.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_4","title":"HLRs","text":"Index Requirement specification VCR_01 A PID Provider, QEAA Provider, PuB-EAA Provider, or Wallet Provider SHALL use one of the following methods for revocation of a PID, QEAA, PuB-EAA, or WUA: - Only issue short-lived attestations having a validity period of 24 hours or less, such that revocation will never be necessary, - Use an Attestation Status List mechanism specified per VCR_11, or - Use an Attestation Revocation List mechanism specified per VCR_11. Note: The 24-hour period originates from ETSI EN 319 411-1 V1.4.1, requirement REV-6.2.4-03A. This requires that the process of revocation must take at most 24 hours. Consequently, revocation may make no sense if the attestation is valid for less than 24 hours, because it may reach the end of its validity period before it is revoked. VCR_02 For non-qualified EAAs, the relevant Rulebook SHALL specify whether that type of EAA must be revocable. If a non-qualified EAA type must be revocable, the relevant Rulebook SHALL determine which of the methods mentioned in VCR_01 must be implemented by the relevant EAA Providers for the revocation of such an EAA. VCR_03 If a PID or attestation is revocable, the PID Provider of a given PID, or the Attestation Provider of a given attestation, SHALL be the only party in the EUDI Wallet ecosystem responsible for executing the revocation of that PID or attestation. Similarly, if a WUA is revocable, the Wallet Provider of a given WUA SHALL be the only party in the EUDI Wallet ecosystem responsible for executing the revocation of that WUA. Note: A PID Provider, Attestation Provider or Wallet Provider MAY outsource the operation of the revocation process to a third party. VCR_04 A PID Provider, Attestation Provider or Wallet Provider that revoked a PID or attestation SHALL NOT reverse the revocation. VCR_05 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider, or Wallet Provider SHALL have a policy specifying under which conditions a PID, attestation, or WUA it issued will be revoked. VCR_06 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider, or Wallet Provider SHALL revoke a PID, attestation, or WUA when its security has been compromised. VCR_07 If a WUA is revocable, the Wallet Provider SHALL revoke that WUA upon the explicit request of the User to revoke their Wallet Unit. VCR_07a If a PID or attestation is revocable, the PID Provider or Attestation Provider SHOULD revoke that PID or attestation upon the explicit request of the subject of the PID or the attestation. VCR_07b If a PID or attestation is revocable, the PID Provider or Attestation Provider SHOULD revoke that PID if the Wallet Unit on which it resides is revoked, in compliance with requirement WU_Revocation 18 in Topic 38. VCR_08 If a PID is revocable, the PID Provider SHALL revoke a PID upon the death of the natural person who is the subject of the PID, or the cease of activity of the legal person who is the subject of the PID. VCR_09 If a PID, attestation, or WUA is revocable, the PID Provider, Attestation Provider or Wallet Provider SHALL revoke a PID, attestation, or WUA if the value of one or more attributes in the PID, attestation, or WUA was changed (including attributes being added or deleted) and it is still valid for at least 24 hours. Subsequently, if the User's contact details are known, the PID Provider SHOULD, via an out-of-band manner, notify the User about the revocation and ask the User to request re-issuance of the PID, attestation, or WUA using their Wallet Unit. Note: If the value of the attributes is determined by a party different from the Provider, such as an Authentic Source, the Provider is responsible for ensuring that this third party notifies them about such changes. VCR_10 Wallet Providers SHALL implement the attestation revocation mechanisms specified per VCR_11 in their Wallet Solutions. VCR_11 The Commission SHALL create or reference technical specifications providing all necessary details for PID Providers, Attestation Providers, and Wallet Providers to implement an Attestation Status List mechanism or an Attestation Revocation List mechanism for the PIDs, attestations, and WUAs they issue. These technical specifications SHALL also contain all details necessary for Relying Party Instances, Relying Parties and Wallet Units interacting with other Wallet Units to use these mechanisms to verify the revocation status of PIDs, attestations, and WUAs. Note: 'Attestation Status List' and 'Attestation Revocation List' are specific mechanisms, defined in Annex 1. Attestation Revocation Lists are sometimes referred to as 'Identifier Lists'. VCR_12 If a Relying Party decides it needs to verify the revocation status of a PID, attestation or WUA, it SHALL support both the Attestation Status List mechanism and the Attestation Revocation List mechanism specified per VCR_11. Note: Per VCR_13, it is recommended but not mandatory for a Relying Party to verify whether a PID, attestation or WUA is revoked. VCR_13 A Relying Party Instance SHOULD verify the revocation status of a PID, attestation, or WUA upon obtaining it from a Wallet Unit, following the steps specified per VCR_11. VCR_14 When no reliable information regarding the revocation status of a PID, attestation or WUA is available, a Relying Party SHOULD perform a risk analysis considering all relevant factors for the use case, before taking a decision to accept or refuse the PID, attestation or WUA. VCR_15 A Relying Party Instance SHOULD NOT request the relevant Attestation Status List or Attestation Revocation List each time an attestation is presented to it by a Wallet Unit. Rather, the Relying Party operating the Relying Party Instance SHOULD download each new version of the list once, at a time and from a location unrelated to the presentation of a PID or attestation by a User. The Relying Party SHOULD then distribute the list to all of its Relying Party Instances, using an Relying Party-internal distribution mechanism. VCR_16 A PID Provider, Attestation Provider or Wallet Provider SHALL NOT require the Relying Party or Relying Party Instance to authenticate itself before downloading an Attestation Status List or Attestation Revocation List. VCR_17 When using an Attestation Status List for revocation, the PID Provider, Attestation Provider or Wallet Provider SHALL randomly assign the index for each PID or attestation, to prevent this index from becoming a correlator. Note: Randomly assigning indices within a bitstring or byte array is more complicated than creating random identifiers (e.g. serial numbers) for attestations, as is needed for an Attestation Revocation List. This is because duplicate indices and unnecessarily long bitstrings or byte arrays must be prevented. VCR_18 When using an Attestation Status List for revocation, the PID Provider, Attestation Provider or Wallet Provider SHALL represent a sufficiently large number of PIDs, attestations, or WUAs on each Attestation Status List to ensure herd privacy. Note: In this context, herd privacy means that if a Relying Party requests a particular status list, the PID Provider, Attestation Provider or Wallet Provider is not able to deduce which PID or attestation (likely) was presented to that Relying Party. *Note: Complying with this requirement may be difficult in case the number of PIDs, attestations, or WUAs to be represented on the list is small. In such a case, decoy entries can be added to the list to obfuscate the real number of referenced PIDs, attestations, or WUAs. VCR_19 A Wallet Unit SHOULD regularly check the revocation status of its PIDs, attestations, and WUAs, and notify the User if a PID or attestation, or a WUA (i.e, the Wallet Unit itself), is revoked."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a238-topic-8-design-solutions-on-data-sharing-scenarios","title":"A.2.3.8 Topic 8 - Design Solutions on Data Sharing scenarios","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a239-topic-9-wallet-unit-attestation","title":"A.2.3.9 Topic 9 - Wallet Unit Attestation","text":"<p>Note to this Topic: The Commission received many comments on the ideas described in this Topic, particularly relating to revocation and the differing needs of Relying Parties on one side and PID Providers and Attestation Providers on the other. Further details on these subjects will be provided in a technical specification and the high level requirements in Topic 9 intentionally do not go into these technical details. To support the varying needs of the actors, the technical specification may specify two types of WUA, containing different information, and having different validity periods and different formats.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_6","title":"Description","text":"<p>When a User's Wallet Unit interacts with other actors in the EUDI Wallet ecosystem, e.g., PID Providers, Attestation Providers or Relying Parties, that actor may want to verify if the Wallet Unit is trustworthy, i.e., the Wallet Unit is authentic and has not been revoked. This scenario will be referred to as Use Case 1.</p> <p>Furthermore, when a PID Provider or Attestation Provider receives a request from a User to issue a PID or attestation to the User's Wallet Unit, the PID Provider or Attestation Provider needs to decide whether it can comply with this request. To determine this, the PID Provider or Attestation Provider needs to know (among other things) if the Wallet Unit offers the functional capabilities required by the PID Provider or Attestation Provider in its PID or attestation issuing policy. In addition, the PID Provider or Attestation Provider needs to know if the Wallet Secure Cryptographic Application(s) (WSCA) and the corresponding Wallet Secure Cryptographic Device(s) (WSCD) that are part of the Wallet Unit offer the required level of security. Therefore, the PID Provider or Attestation Provider needs to receive trustworthy information about these capabilities and security posture. This scenario will be referred to as Use Case 2.</p> <p>This Topic introduces an information object that contains the necessary information to achieve the two use cases. This object is called the Wallet Unit Attestation (WUA). The WUA also contains a public key. By including this public key in the WUA, the Wallet Provider attests that the corresponding private key is protected by a certified WSCA/WSCD that has the properties and security posture described in the WUA. Note that the information about the Wallet Unit and the WSCA(s) should only be released in relation to Use Case 2, meaning that to accommodate both use cases, the Wallet Unit must be able to release a WUA either with or without this information.</p> <p>The PID Provider or Attestation Provider then asks the Wallet Unit to create a key pair for its new PID or attestation, and to prove that both this new private key and the private key corresponding to public key in the WUA are in possession of the Wallet Unit.</p> <p>A topic related to the WUA is the following. It would be useful for the Wallet Unit to be able to provide a proof that the PID or attestation private key is protected by the same WSCA as the WUA private key. Because if that is the case, the PID Provider or Attestation Provider can be sure that the security level of the new PID or attestation key is the same as the security level of the WUA key. Moreover, such a proof could also be useful in case of a combined presentation of attributes as discussed in Topic 18, to give assurance to the Relying Party that all of these attestations originate from the same WSCA/WSCD and thus are related to the same User.</p> <p>However, at the moment of writing this version of the ARF, no commonly agreed technical specification of such a proof is available. Moreover, even if such a specification were available, it is not fully clear how many WSCAs/WSCDs available to Wallet Units will support the cryptographic functionalities necessary to generate such a proof. Therefore, creating such a proof is recommended (SHOULD), not required (SHALL). In this way, once a Wallet Unit includes a WSCD/WSCA that supports the required cryptographic functionalities, such a proof can be used as described in this Topic.</p> <p>Notes:</p> <ul> <li>The Commission will ensure a technical specification for such a proof is created in the future.</li> <li>In earlier versions of the ARF, this proof was called a 'proof of association'. However, this is also the name commonly used for one of the proposals for implementing such a proof. To avoid confusion, this version of the ARF does not use this term.</li> </ul> <p>Please note that the scope of this Topic is limited to the question of how the WUA is issued during Wallet Unit activation and how it is used during attestation issuance. The role played by the WUA during the release of an attestation to a Relying Party is discussed in [Topic 18] (Combined presentation of attributes).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_5","title":"HLRs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-support-for-wua-use-cases","title":"A.  Support for WUA Use Cases","text":"Index Requirement specification WUA_01 The WUA SHALL provide a PID Provider or Attestation Provider with information about the capabilities of the WSCA and WSCD of the Wallet Unit, such that they are able to take a well-grounded decision on whether to issue an attestation or PID to the Wallet Unit. WUA_02 The WUA SHALL enable Relying Parties, PID Providers, and Attestation Providers to verify the authenticity and revocation status of the Wallet Unit. WUA_03 Wallet Providers SHALL ensure that a non-revoked Wallet Unit at all times can present a WUA, when requested by a Relying Party, PID Provider, or Attestation Provider. WUA_04 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with information on all WSCAs it is able to use for private key management, so that the PID Provider or Attestation Provider can make a choice about the WSCA it wants to use for its new PID or attestation. Notes: - This information is not in the form of a WUA. As specified in WUA_05, the Wallet Unit must provide only the WUA for the WSCA that is actually used, not for all WSCAs it can potentially use. - See also WUA_15. WUA_05 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with the WUA describing the properties of the WSCA that generated the new PID or attestation private key and protects it. WUA_06 If a Wallet Unit contains multiple WSCAs, it SHALL, internally and securely, keep track of which PIDs and attestations are bound to which WSCA. WUA_07 A Wallet Unit SHALL present a WUA only as part of either the issuance of a PID or an attestation, or in conjunction with the presentation of a PID or an attestation to a Relying Party. Note: the WUA presented during issuance has different information content and may have a different format than the WUA presented in conjunction with a PID or an attestation. WUA_08 The WUA SHALL enable PID Providers to request a Wallet Provider to revoke a Wallet Unit, in accordance with requirement WURevocation_11."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-wua-in-relation-cryptographic-keys","title":"B.  WUA in relation Cryptographic Keys","text":"Index Requirement specification WUA_09 A WUA SHALL contain a public key, and the corresponding private key SHALL be generated by the WSCA described in the WUA presented by the Wallet Unit, if the WUA contains information about a WSCA. WUA_10 The WSCA SHOULD be able to prove that two or more private keys, paired with two or more public keys, are stored in it. Notes: -These public keys may be included in WUAs, PIDs, attestations, or pseudonyms. -The proof may be transitive, so a proof that two keys are stored/managed in the same WSCA may be done by proving keys relate to each other via a third key (also stored in the WSCA). WUA_11 During PID or attestation issuance, the PID Provider or Attestation Provider SHALL verify that the WSCA described in the WUA received from the Wallet Unit has proven possession of the private key corresponding to the public key in the WUA. WUA_11a During PID or attestation issuance, the PID Provider or Attestation Provider SHALL verify that a WSCA has proven possession of the new PID or attestation private key. WUA_11b During PID or attestation issuance, the PID Provider or Attestation Provider SHOULD verify the proof generated by the WSCA per requirement WUA_10, if present, to verify that the new PID or attestation private key is stored in the same WSCA as the WUA private key. Note: The three proofs mentioned in WUA_11, WUA_11a and WUA_11b MAY be implemented as a single cryptographic proof. WUA_12 The Wallet Unit SHALL be able to prove that it possesses the private key corresponding to the public key in the WUA. WUA_13 A Relying Party requesting the creation of a pseudonym according to [W3C WebAuthn] SHOULD verify that the private key belonging to the public key it receives as a pseudonym, is stored in the same WSCA as the WUA private key. WUA_14 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to verify that the WUA private key and the PID or attestation private key are stored in the same WSCA. WUA_15 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to indicate in the Token Response the WSCA to which the new PID or attestation key must be bound. WUA_16 If a WSCA is able to export a private key, the Wallet Provider SHALL specify this capability as an attribute in the WUA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-requirements-regarding-privacy","title":"C.  Requirements regarding privacy","text":"Index Requirement specification WUA_17 A Wallet Provider SHALL consider all relevant factors, including offline usage, interoperability, and the risk of a WUA becoming a vector to track the User, when deciding on the validity period of a WUA. A Wallet Provider MAY use short-lived WUAs to mitigate such risks. Note: The requirements for the validity period of WUAs presented to Relying Parties in the technical specification (see WUA_19) may be different from the validity period of WUAs presented to PID Providers and Attestation Providers. WUA_18 A Wallet Unit SHALL release data related to the User device in a WUA only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. Note: Use case 2 (data related to the User device), must not be supported for Relying Parties."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#d-miscellaneous-requirements","title":"D.  Miscellaneous requirements","text":"Index Requirement specification WUA_19 The Commission SHALL create or reference technical specification for the WUA, compliant with the HLRs in this topic. WUA_20 The Wallet Provider SHALL ensure that Wallet Units conform to all requirements specified in the technical specification mentioned in WUA_19. WUA_21 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a WUA to a PID Provider or Attestation Provider."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2310-topic-10-issuing-a-pid-or-attestation-to-a-wallet-unit","title":"A.2.3.10 Topic 10 - Issuing a PID or attestation to a Wallet Unit","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_7","title":"Description","text":"<p>PID Providers and Attestation Providers issue PIDs and attestations to Wallet Units. This Topic lists the high-level technical requirements related to PID and attestation issuance.</p> <p>This Topic also contains the high-level requirements for Topic 23.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_6","title":"HLRs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-generic-hlrs_1","title":"A - Generic HLRs","text":"Index Requirement specification ISSU_01 Wallet Providers SHALL ensure that their Wallet Solution supports the OpenID4VCI protocol specified in [OpenID4VCI], as profiled by the 'OpenID for Verifiable Credential Issuance' profile specified in [HAIP], and with additions and changes as documented in this Annex (see e.g. this Topic and [Topic 9]) and in future technical specifications created by or on behalf of the Commission. ISSU_01a PID Providers and Attestation Providers SHALL support the OpenID4VCI protocol specified in [OpenID4VCI], as profiled by the 'OpenID for Verifiable Credential Issuance' profile specified in [HAIP], and with additions and changes as documented in this Annex (see e.g. this Topic and [Topic 9]) and in future technical specifications created by or on behalf of the Commission. ISSU_02 Wallet Providers SHALL ensure that their Wallet Solution supports the attestation formats specified in ISO/IEC 18013-5, see [ISO18013-5], and in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC], with additions and changes as documented in this Annex and in future technical specifications created by or on behalf of the Commission. ISSU_03 Wallet Units, PID Providers, and Attestation Providers SHALL support the [W3C Digital Credentials API]](https://wicg.github.io/digital-credentials/) for issuance of PIDs and attestations, provided that a) this API is fully standardised, b) this API complies with the expectations outlined in Chapter 3 of the Topic F discussion paper, and c) this API is broadly supported by relevant browsers and operating systems. ISSU_04 The OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable PID Providers and Attestation Provider to issue to a Wallet Unit a batch of multiple PIDs or attestations that are simultaneously valid and contain the same attributes. ISSU_05 A Wallet Unit SHALL support a process to activate a newly issued PID, in accordance with the requirements for LoA High in Commission Implementing Regulation (EU) 2015/1502 Section 2.2.2. The Wallet Unit SHALL NOT allow a User to use a non-activated PID. Notes: - The goal of the activation process is to verify that the PID was delivered into the Wallet Unit and WSCA of the User who is the subject of the PID. - This requirement is not applicable for QEAAs, PuB-EAAs or non-qualified EAAs, since these are not identity means in the sense of Commission Implementing Regulation (EU) 2015/1502. ISSU_06 After a Wallet Unit receives a PID or an attestation from a PID Provider or Attestation Provider, it SHALL verify that the PID or attestation it received matches the PID or attestation requested by the Wallet Unit. ISSU_07 After a Wallet Unit receives a PID from a PID Provider, it SHALL validate the signature of the PID using a trust anchor provided in a PID Provider Trusted List made available in accordance with [Topic 31]. Note: This signature validation may not be useful in architectures where the Wallet Provider is also the PID Provider and the validation of the PID signature would be done by the same component (namely, a remote HSM) that created the signature. However, in such a situation, additional measures SHALL be taken to ensure that any errors in the PID issuance process will be detected. ISSU_08 After a Wallet Unit receives a QEAA from a QEAA Provider, it SHALL validate the qualified signature of the QEAA in accordance with Art.32 of the [European Digital Identity Regulation]. For the verification, the Wallet Unit SHALL use a trust anchor provided in a QEAA Provider Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. ISSU_09 After a Wallet Unit receives a PuB-EAA from a PUB-EAA Provider, it SHALL validate the qualified signature of the PuB-EAA in accordance with Art.32 of the [European Digital Identity Regulation]. For that verification, the Wallet Unit SHALL use the public key provided in the qualified certificate of the QTSP supporting the qualified signature. The Wallet Unit SHALL also validate the qualified certificate of the QTSP using a trust anchor provided in a Trusted List made available in accordance with Art. 22 of the [European Digital Identity Regulation]. Finally, the Wallet Unit SHALL also verify the certified attributes of the qualified certificate, as specified in Article 45f. ISSU_10 After a Wallet Unit receives a non-qualified EAA from an EAA Provider, it SHALL validate the signature of the EAA using a trust anchor provided according to the mechanism(s) specified in the applicable Rulebook, see [Topic 12]. Notes: - Requirements ISSU_07 to ISSU_10 are equivalent to requirements OIA_12 to OIA_15 in Topic 1. These requirements imply that a Wallet Instance must be aware whether the attestation it is requesting from an issuer is a PID, a QEAA, a PuB-EAA, or a non-qualified EAA. These requirements also imply that the Wallet Unit must store trust anchors in such a way that, when it receives an issued attestation, it is able to distinguish between trust anchors usable either for PIDs, for QEAAs, for PuB-EAAs, or for non-qualified EAAs. - PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, before requesting an non-qualified attestation, a Wallet Unit may need to verify that the non-qualified EAA Provider is authorised or registered to issue this type of attestation. Mechanisms allowing to do this may be defined in the applicable Rulebook, see ARB_26. ISSU_11 A Wallet Unit SHALL request the User's approval before storing a PID or attestation obtained from a PID Provider or Attestation Provider. When requesting approval, the Wallet Instance SHALL display the contents of the PID or attestation to the User. The Wallet Instance SHALL also inform the User about the identity of the PID Provider or Attestation Provider, using the subject information in the PID Provider's or Attestation Provider's access certificate. ISSU_11b In case one or more of the verifications in ISSU_06 \u2013 ISSU_11 fail, the Wallet Unit SHALL immediately delete the PID or attestation it received. The Wallet Instance SHALL notify the User about the fact that issuance of the PID or attestation was not successful, including the reason for this failure. ISSU_12 A PID Provider or Attestation Provider SHALL offer its PIDs or attestations in all formats required in the PID Rulebook or the applicable Attestation Rulebook, see [Topic 12]. Note: Examples include the mdoc format specified in [ISO/IEC 18013-5] and the SD-JWT VC-format specified in [SD-JWT VC]. ISSU_12a A Wallet Provider SHALL ensure that, when a User instructs their Wallet Unit to request a PID or attestation from a PID Provider or Attestation Provider, the Wallet Unit requests that PID or attestation in all formats offered by the PID Provider or Attestation Provider. Note: Examples include the mdoc format specified in [ISO/IEC 18013-5] and the SD-JWT VC-format specified in [SD-JWT VC]. ISSU_12b During PID or attestation issuance, a WSCA SHALL generate a new key pair for a new PID or attestation, on request of the PID Provider or Attestation Provider via the Wallet Instance. Note: In case of synchronous issuing in a remote HSM architecture, re-use of an existing key pair for the new PID or attestation may be acceptable and it may not be necessary to generate a new key pair for each new PID or attestation. ISSU_12c The expiration date of the issued PID or Attestation SHALL be no later than the expiration date of the WUA presented as part of the issuance process."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-hlrs-for-pid-issuance","title":"B - HLRs for PID issuance","text":"Index Requirement specification ISSU_13 A Wallet Provider SHALL ensure that at least one PID Provider is willing to issue a PID complying with [PID Rulebook] to Users of the Wallet Units it provides. ISSU_14 A PID Provider SHALL ensure that all PIDs it issues to Wallet Units comply with the requirements specified in [PID Rulebook]. ISSU_15 A PID Provider SHALL support the OpenID4VCI protocol referenced in ISSU_01 for issuing PIDs. ISSU_16 Empty ISSU_17 A PID Provider SHALL implement device binding for all PIDs it issues, meaning it SHALL ensure that a PID is cryptographically bound to a WSCA included in the Wallet Unit, as specified in requirement WUA_11 in [Topic 09]. Note: Device binding is called 'mdoc authentication' in [ISO/IEC 18013-5] and 'key binding' in [SD-JWT-VC]. ISSU_18 A PID Provider SHALL verify the identity of the subject of the PID in compliance with Level of Assurance (LoA) High requirements. Notes: - These requirements will be determined by the relevant eID scheme. - In most cases, the subject of the PID is the same person as the User. However, it has not yet been ruled out that a Wallet Unit may contain multiple PIDs, for example in the case of a parent having their children's PIDs in their Wallet Unit. Another example is a natural person representing a legal person, who may hold a legal-person PID in their Wallet Unit next to their own natural-person PID. These topics will be further discussed with Member States. ISSU_18a A PID Provider SHALL ensure that the attributes attested in the PID issued are valid for the identified PID subject at any point of time of PID validity. ISSU_19 For the verification of a WUA, a PID Provider SHALL accept the trust anchors in the Wallet Provider Trusted List it needs. Notes: - The Wallet Provider Trusted List is explained in [Topic 31]. - It is not mandatory for a PID Provider to accept all Wallet Provider Trusted Lists, if there are multiple. This is because it is not mandatory for a PID Provider to accept all certified Wallet Solutions in the EUDI Wallet ecosystem. Each PID Provider will choose which Trusted Lists they need to subscribe to. ISSU_19a A PID Provider SHALL support at least one Wallet Solution, meaning that it is willing and able to issue a PID to a Wallet Unit on request of the User. ISSU_20 To inform its potential PID subjects about the Wallet Solution(s) they can use for requesting a PID, a PID Provider SHALL publish a list of supported Wallet Solutions in such a way that it can be easily found, for example on the PID Provider's website. ISSU_21 Before issuing a PID, a PID Provider SHALL verify that the Wallet Provider mentioned in the Wallet Unit's WUA is present in a Wallet Provider Trusted List. The PID Provider SHALL also authenticate and validate the WUA using the trust anchor(s) registered for the Wallet Provider in the Wallet Provider Trusted List. Moreover, it SHALL verify that the Wallet Units's WUA is not revoked. Notes: - For the WUA, see [Topic 9] and [Topic 38]. - CIR 2024/2977, Article 3 (9), also allows \"another authentication mechanism in accordance with an electronic identity scheme notified at assurance level high.\" However, the ARF does not further specify such other authentication mechanisms, which means that in general they will not be interoperable. ISSU_22 A PID Provider SHALL include its PID Provider access certificate in its Issuer metadata used in the common OpenID4VCI protocol referenced in ISSU_01. ISSU_22a A PID Provider SHALL sign its metadata (as defined in OpenID4VCI) using the private key corresponding to its PID Provider access certificate. ISSU_22b The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to include its access certificate in its Issuer metadata, according to requirement ISSU_22. ISSU_23 For the verification of PID Provider access certificates, a Wallet Unit SHALL accept the trust anchors in the Trusted List(s) of PID Provider Access Certificate Authorities it needs. Notes: - PID Provider Access Certificate Authority Trusted Lists are explained in [Topic 27]. -It is not mandatory for a Wallet Unit to accept all PID Provider Access Certificate Authority Trusted Lists, if there are multiple. Wallet Providers will choose which Trusted Lists they need to subscribe to, for example depending on the Member State(s) they are operating in. ISSU_23a A Wallet Provider SHALL support at least one PID Provider, meaning that its Wallet Units SHALL be capable of requesting the issuance of a PID from these PID Provider(s), and that the Wallet Provider has agreed with the PID Provider(s) that the PID Provider(s) will process such a request according to the agreed rules and procedures. ISSU_23b Prior to or during installation of a Wallet Instance, the Wallet Provider SHALL notify the User about the PID Provider(s) that are supported by the Wallet Unit. ISSU_24 A Wallet Unit SHALL authenticate and validate the PID Provider access certificate before requesting the issuance of a PID. The Wallet Unit SHALL verify that the access certificate is authentic and is valid at the time of validation, and that the issuer of the access certificate is a CA that is in a PID Provider Access Certificate Authority Trusted List. Note: The PID Provider Access Certificate Authority Trusted List is not the same as the PID Provider Trusted List mentioned in [Topic 31]. ISSU_24a Before the issuance of a PID, the Wallet Unit SHALL verify that the PID issuer is a registered PID Provider and its entitlements. This can be done with use of information contained in PID Provider registration certificate, if available. If the registration certificate is not available, the Wallet Unit SHALL use the URL of the Registrar's on-line service, contained in the PID Provider access certificate, to obtain such information. In case the result of the verification is negative or indicates differences in the entitlements (eg. issuance concerns PID type that was not registered before by this PID Provider), the Wallet Unit SHALL display a warning to the user, and the User may accept or reject the issuance."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-hlrs-for-attestation-issuance","title":"C - HLRs for Attestation Issuance","text":"Index Requirement specification ISSU_25 An Attestation Provider SHALL ensure all attestations issued to Wallet Units comply with the requirements specified in the applicable Rulebook, as described in [Topic 12]. ISSU_26 An Attestation Provider SHALL support the OpenID4VCI protocol referenced in ISSU_01 for issuing attestations. ISSU_27 An Attestation Provider SHALL implement device binding for all attestations it issues, meaning it SHALL ensure that an attestation is cryptographically bound to a WSCA included in the Wallet Unit, as specified in requirement WUA_11 in [Topic 9]. Note: device binding is called 'mdoc authentication'  in [ISO/IEC 18013-5] and 'key binding' in [SD-JWT-VC]. ISSU_27a If applicable, an Attestation Provider SHALL verify the identity of the subject of the attestation in compliance with applicable requirements, in accordance with relevant standards or Implementing Regulations. Note: Not every attestation has a subject. For example, a holiday voucher may be valid for any User that can present it to a Relying Party. This is comparable to the concept of a 'bearer token'. ISSU_27b If applicable, an Attestation Provider SHALL ensure that the attributes attested in the attestation issued are valid for the identified attestation subject. ISSU_28 For the verification of a WUA, an Attestation Provider SHALL accept the trust anchors in the Wallet Provider Trusted List. Note: The Wallet Provider Trusted List is explained in [Topic 31]. ISSU_29 An Attestation Provider SHALL support all Wallet Solutions, meaning that they SHALL NOT discriminate between Wallet Solutions when processing a request for the issuance of an attestation. ISSU_30 Before issuing an attestation, an Attestation Provider SHALL: - verify that the Wallet Provider mentioned in the Wallet Unit's WUA is present in the Wallet Provider Trusted List. - authenticate and validate the WUA using the trust anchor(s) registered for the Wallet Provider in the Wallet Provider Trusted List. - verify that the Wallet Unit's WUA is not revoked. Note: For the WUA, see [Topic 9] and [Topic 38]. ISSU_31 Empty ISSU_32 An Attestation Provider SHALL include its Attestation Provider access certificate in its Issuer metadata used in the common OpenID4VCI protocol referenced in ISSU_01. ISSU_32a An Attestation Provider SHALL sign its metadata (as defined in OpenID4VCI) using the private key corresponding to its Attestation Provider access certificate. ISSU_33 For the verification of Attestation Provider access certificates, a Wallet Unit SHALL accept the trust anchors in all Attestation Provider Access Certificate Authority Trusted List(s). Note: Attestation Provider Access Certificate Authority Trusted Lists are explained in [Topic 27]. There may be separate Access Certificate Authority Trusted Lists for QEAA Providers, PuB-EAA Providers, and EAA Providers. ISSU_33a A Wallet Provider SHALL support all Attestation Providers, meaning that its Wallet Units SHALL be capable of requesting the issuance of a QEAA, PuB-EAA, or non-qualified EAA from these Providers at the User's request. ISSU_34 A Wallet Unit SHALL authenticate and validate the Attestation Provider access certificate before requesting the issuance of an attestation. The Wallet Unit SHALL verify that the access certificate is authentic and is valid at the time of validation, and that the issuer of the access certificate is a CA that is in the Attestation Provider Access Certificate Authority Trusted List, as documented in [Topic 27]. Note: PID Providers, QEAA Providers, and PuB-EAA Providers are trusted by other actors in the EUDI Wallet ecosystem to not fraudulently issue attestations (or PIDs) that they are not legally allowed to issue. This trust is warranted since these kinds of providers operate within a regulated framework and are regularly audited. However, non-qualified EAA Providers are unregulated and may not be completely trustworthy. Therefore, before requesting an EAA from a non-qualified EAA Provider, a Wallet Unit may need to verify that that EAA Provider is authorised or registered to issue the type of EAA the Wallet Unit is requesting. Such verification requirements, as well as the mechanisms allowing to do this, may be defined in the applicable Rulebook. ISSU_34a Before the issuance of a an Attestation, the Wallet Unit SHALL verify that the EAA issuer (Attestation Provider) is a registered QEAA Provider or PuB-EAA Provider or EAA Provider and its entitlements. This can be done with use of information contained in the Attestation Provider registration certificate, if available. If the registration certificate is not available, the Wallet Unit SHALL use the URL of the Registrar's on-line service, contained in the Attestation Provider access certificate, to obtain such information. In case the result of the verification is negative or indicates differences in the entitlements (eg. issuance concerns EAA type that was not registered before by this EAA Provider), the Wallet Unit SHALL display a warning to the user, and the User may accept or reject the issuance."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#d-hlrs-for-privacy-risks-and-mitigation","title":"D - HLRs for Privacy Risks and Mitigation","text":"<p>These HLRs were added as a result of the discussions of Topic A, Privacy risks and mitigation. For more background information on these requirements, please refer to Section 7.4.3.5 of the ARF main document and to the Discussion Paper for Topic A.</p> <p>Note: These requirements mention the WUA and the Wallet Provider. This is because it is assumed that the format of the WUA complies with either [ISO/IEC 18013-5] or [SD-JWT VC], like for PIDs and attestations. However, this assumption will be further discussed with Member States. If it turns out to be wrong, then these requirements will be adapted accordingly.*</p> Index Requirement specification ISSU_35 A PID Provider, Attestation Provider, or Wallet Provider SHALL ensure that all unique elements in a PID, attestation or WUA, including at least a) the salt used for hashing every attribute, b) the hash values of all attributes, c) the attestation identifier or index used for revocation purposes (if applicable), d) the attestation public key used for device binding, and e) the value of the Attestation Provider signature, have values that are unique across all PIDs, attestations, or WUAs issued by that Provider. Note: This can be achieved, for example, by ensuring that salt values and attestation identifiers are pseudo-random numbers generated by a cryptographically secure pseudo-random number generator (CSPRNG). ISSU_35a After issuing a PID, attestation, or WUA, a PID Provider, Attestation Provider or Wallet Provider SHALL discard the values of all unique elements, including at least the ones mentioned in requirement ISSU_35 above, as well as any timestamps, as soon as they are no longer needed. The Provider SHALL NOT communicate these values to any other party inside or outside the EUDI Wallet ecosystem. ISSU_36 When issuing PIDs, attestations, or WUAs in a batch to a Wallet Unit, a PID Provider, Attestation Provider, or Wallet Provider SHALL ensure that the timestamps in these PIDs, attestations, or WUAs do not enable Relying Parties to conclude that they are part of the same batch (and therefore belong to the same User). Note: This can be done, for example, by making timestamps sufficiently imprecise that a high number of batches, each issued to a different Wallet Unit, share the same timestamp values (herd privacy). ISSU_37 A Wallet Provider SHALL ensure that its Wallet Solution supports the following methods for limiting the number of times a User can present the same attestation to Relying Parties: Method A (Once-only attestations, as specified in requirement ISSU_43 - ISSU_47) and Method B (Limited-time attestations, as specified in requirement ISSU_48 - ISSU_50). In addition, a Wallet Provider MAY ensure that its Wallet Solution supports Method C (Rotating-batch attestations, as specified in requirement ISSU_51 - ISSU_54) or Method D (Per-Relying Party attestations, as specified in requirement ISSU_55 - ISSU_57). Note: Wallet Solutions, PID Providers, Attestation Providers, and Wallet Providers are free to define and use other methods as well. However, such other methods are out of scope of the ARF. ISSU_38 A PID Provider, Attestation Provider or Wallet Provider SHALL have a policy describing which of the methods A, B, C, or D it will use to limit the number of times a Wallet Unit may present a single PID, attestation, or WUA to relying Parties. For each supported method, the policy SHALL also specify how the values for respective parameters for that method, such as technical validity period and batch size, will be chosen. The goal of the policy SHALL be to ensure that the risk of Relying Party linkability is mitigated to an acceptable level, given the (expected) usage of the PID, attestation, or WUA by the User. To determine what an acceptable level of risk is, the PID Provider, Attestation Provider, or Wallet Provider SHALL carry out a risk analysis regarding Relying Party linkability. Note: If a PID Provider, Attestation Provider, or Wallet Provider issues multiple attestation types, these requirements apply for each type of attestation separately. ISSU_39 The Commission SHALL create or reference a profile or extension of the OpenID4VCI specification enabling a PID Provider, Attestation Provider, or Wallet Provider to indicate in their OpenID4VCI Issuer metadata which of the methods A, B, C, or D the Wallet Unit must use for the PID, attestation, or WUA issued. Indicated methods SHALL be ordered by preference. This profile or extension SHALL also enable the PID Provider, Attestation Provider, or Wallet Provider to set the value of parameters to be used by the Wallet Unit for each method (if applicable). Note: For example, the parameters to be set for method A include the lower limit for unused attestations and the batch size to be requested. ISSU_40 PID Providers, Attestation Providers and Wallet Providers SHALL indicate in their OpenID4VCI Issuer metadata at least that either method A or method B must be used for a given type of PID, attestation, or WUA. PID Providers, Attestation Providers, and Wallet Providers MAY additionally indicate that it prefers using method C and/or method D over method A or method B. In such a case, a Wallet Unit supporting method C and/or method D SHALL use that method, while a Wallet Unit not supporting these methods SHALL use method A or method B, as applicable. Example: An Attestation Provider indicates methods {D, C, A} in their metadata, in that order. A Wallet Unit that supports methods C and D (as well as A and B) then uses method D for this type of attestation. A Wallet Unit supporting methods A, B and C uses method C. A Wallet Unit supporting only methods A and B uses method A. ISSU_41 To the maximum extent possible, Wallet Providers, PID Providers, and Attestation Providers SHALL ensure that Users do not notice which of the methods A, B, C, or D is used for their PIDs, attestations, or WUAs. ISSU_42 To the maximum extent possible, Wallet Providers, PID Providers, and Attestation Providers SHALL ensure that no User action is needed for the re-issuance of PIDs or attestations. Note: For the topic of re-issuance, see also the Discussion Paper for Topic B."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#method-a-once-only-attestations","title":"Method A: Once-only attestations","text":"<p>The requirements in this subsection specify the Wallet Unit's behaviour when it is using Method A for a given type of PID, attestation, or WUA. For more information on this method, please refer to Section 3.2 of the Discussion Paper for Topic A.</p> Index Requirement specification ISSU_43 The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same technical validity period. ISSU_44 The Wallet Unit SHALL present each PID, attestation, or WUA only once to a Relying Party, except when it has fallen back to Method B as specified below, or to another available method. ISSU_45 The Wallet Unit SHALL have a lower limit for the number of unused PIDs, attestations, or WUAs it holds, and SHALL request the issuance of a new batch when this limit is reached. During the first issuance of a new PID, attestation, or WUA, see requirement ISSU_39, the PID Provider, Attestation Provider or Wallet Provider SHALL inform the Wallet Unit about the value of the lower limit and the size of the batch to be requested. ISSU_46 If the Wallet Unit must request a new batch of PIDs, attestations, or WUAs, but is not able to do so because it is offline, the Wallet Unit SHALL warn the User that they are about to lose the possibility to present this PID or attestation to a Relying Party (or any PID or attestation, in case of the WUA) and request them to connect their device to the internet. ISSU_47 If the Wallet Unit has run out of unused PIDs, attestations, or WUAs, but is not able to request a new batch because it is offline, it SHALL fall back to method B (see requirement 6), or another available method. This means that, when requested by a Relying Party, the Wallet Unit SHALL again present one of the already used PIDs, attestations or WUAs. The Wallet Unit SHALL return to using method A as soon as it is able to go online and request a new batch of PIDs, attestations or WUAs."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#method-b-limited-time-attestations","title":"Method B: Limited-time attestations","text":"<p>The requirements in this subsection specify the Wallet Unit's behaviour when it is using Method B for a given type of PID, attestation, or WUA. Section 3.2 of the Discussion Paper for Topic A.</p> Index Requirement specification ISSU_48 The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue a single PID, attestation, or WUA to the Wallet Unit. ISSU_49 The Wallet Unit SHALL present that PID, attestation or WUA multiple times to the same Relying Party, or to different Relying Parties, when requested to do so. ISSU_50 The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to re-issue a PID, attestation, or WUA some time before the one existing in the Wallet Unit expires. The PID Provider, Attestation Provider, or Wallet Provider SHALL inform the Wallet Unit about the moment at which the Wallet Unit must request the re-issuance of a PID, attestation, or WUA, relative to the expiration date of the existing one. Note: It is the responsibility of Relying Parties to validate whether a presented PID, attestation, or WUA is temporally valid. A Wallet Unit is allowed to present a PID, attestation, or WUA even if its expiration date is in the past."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#method-c-rotating-batch-attestations","title":"Method C: Rotating-batch attestations","text":"<p>The requirements in this subsection specify the Wallet Unit's behaviour when it is using Method C for a given type of PID, attestation, or WUA.</p> Index Requirement specification ISSU_51 The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same technical validity period. ISSU_52 When a presentation of attributes is requested by multiple Relying Parties, the Wallet Unit SHALL present each PID, attestation, or WUA in a batch once, in a random order. ISSU_53 When all PIDs, attestations, or WUAs in a batch have been presented once, the Wallet Unit SHALL reset the batch, and start presenting each PID, attestation, or WUA in the batch again in a random order. ISSU_54 The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to re-issue a batch of PIDs, attestations, or WUAs, some time before the batch in the Wallet Unit expires. The PID Provider, Attestation Provider, or Wallet Provider SHALL inform the Wallet Unit about the size of the batch and about the moment at which the Wallet Unit must request the re-issuance of a batch, relative to the expiration date of the existing one."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#method-d-per-relying-party-attestations","title":"Method D: Per-Relying Party attestations","text":"<p>The requirements in this subsection specify the Wallet Unit's behaviour when it is using Method D for a given type of PID, attestation, or WUA.</p> Index Requirement specification ISSU_55 The Wallet Unit SHALL present a different PID, attestation, or WUA to each different Relying Party upon their request. This means that it SHALL comply with Method A for such Relying Parties. ISSU_56 In case a given Relying Party requests attributes from a given type of PID, attestation, or WUA multiple times, the Wallet Unit MAY present the same PID, attestation or WUA to this Relying Party each time. If it does, it SHALL comply with Method B or Method C for such a Relying Party. ISSU_57 The Wallet Unit SHALL keep track of which PID, attestation, or WUA it has presented to which Relying Party, using the unique Relying Party identifier from the Relying Party access certificate."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#e-hlrs-for-re-issuance-and-batch-issuance-of-pids-attestations-and-wuas","title":"E - HLRs for re-issuance and batch issuance of PIDs, attestations and WUAs","text":"<p>These HLRs were added as a result of the discussions of Topic B, re-issuance and batch issuance of PIDs, attestations and WUAs. For more background information on these requirements, please refer to Sections 6.6.2.7 and 6.6.5.2 of the ARF main document, and to the Discussion Paper for Topic B.</p> Index Requirement specification ISSU_58 A Wallet Unit SHALL give its User the option to manually initiate a re-issuance process for any of the PIDs or attestations in their Wallet Unit. Note: This requirement does not apply for WUAs, since Users must not be involved in the management of WUAs. ISSU_59 After a successful re-issuance, a Wallet Unit SHALL compare the attribute values of the re-issued PID or attestation with those of the existing PID or attestation, and SHALL notify the User in case of any differences. Note: This requirement does not apply for WUAs, since Users must not be involved in the management of WUAs. ISSU_60 A Wallet Unit SHALL gracefully handle situations in which re-issuance of a PID,  attestation, or WUA is refused by the PID Provider, Attestation Provider, or Wallet Provider,for example by attempting a retry after an appropriate delay. ISSU_61 A Wallet Unit SHALL support PID or attestation first-time batch issuance with a single User authentication, regardless of the size of the batch. Notes: - See also requirement WIAM_14. - This requirement does not apply for WUAs, since Users must not be involved in the management of WUAs. ISSU_62 If a PID, attestation, or WUA was successfully re-issued because the value of one or more of its attributes was changed (including attributes being added or deleted), a Wallet Unit SHOULD delete the correct pre-existing PID, attestation, or WUA. Notes: - It is up to the Wallet Unit, possibly using metadata provided by the PID Provider, Attestation Provider, or Wallet Provider using the [OpenID4VCI] protocol, to determine the PID, attestation, or WUA to be deleted. - Additionally, per requirement VCR_09, the PID Provider, Attestation Provider, or Wallet Provider revokes the pre-existing PID, attestation, or WUA. ISSU_63 PID Providers, Attestation Providers, Wallet Providers, and Wallet Units SHALL support the features of [OpenID4VCI] enabling the re-issuance of all PIDs, attestations, and WUAs. ISSU_64 PID Providers, Attestation Providers, Wallet Providers, and Wallet Units SHALL support the features of [OpenID4VCI] enabling the batch issuance of all PIDs, attestations, and WUAs. ISSU_65 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider, Attestation Provider or Wallet Provider to verify that a re-issued PID, attestation, or WUA is bound to the same WSCD to which the existing PID, attestation, or WUA is bound. Note: This can be done, for instance, by requiring that OAuth 2.0 Demonstrating Proof of Possession (DPoP) [RFC 9449] is used for each Refresh Token, and that the public key in the DPoP proof is identical to the public key in the existing PID, attestation, or WUA issued to the Wallet Unit previously."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2311-topic-11-pseudonyms","title":"A.2.3.11 Topic 11 - Pseudonyms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_8","title":"Description","text":"<p>Wallet Units will support generating pseudonyms for Users in compliance with the W3C WebAuthn API specification, W3C WebAuthn. On a high level, this means that the WSCD in the Wallet Unit will be able to create key pairs. The public keys of these pairs function as pseudonyms for the User. Only the User can use these pseudonyms, since the WSCD authenticates the User before allowing a pseudonym to be used, see requirement WIAM_14. The Wallet Unit will keep an internal structure to associate each pseudonym (public key) with a specific Relying Party, based on the Relying Party unique identifier in the Relying Party Instance access certificate mentioned in requirement Reg_32.</p> <p>Pseudonyms were discussed with Member States in Topic E. These discussions included the use cases for which Wallet Units must support pseudonyms and the HLRs for the technical specification of how it must be implemented. The below HRLs are the result of this discussion. For more background information on these requirements, please refer to the Discussion Paper for Topic E.</p> <p>Note: As specified in requirement PA_21, the Commission will create or reference a technical specification containing a profile or extension of the [W3C WebAuthn] specification. The HLRs below are in fact requirements to be fulfilled by this technical specification.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-hlrs-related-to-use-cases","title":"A. HLRs related to Use Cases","text":"Index Requirement specification PA_01 A Wallet Unit SHALL enable a User to generate a Pseudonym and register it at a Relying Party. PA_02 A Wallet Unit SHALL enable a User to authenticate with a Pseudonym towards a Relying Party if the Wallet Unit was used previously to register the Pseudonym for the same Relying Party. PA_03 A Wallet Unit SHALL be able to perform the actions specified in the above two requirements independently of whether the interaction with the Relying Party is initiated on the same device hosting the Wallet Instance or on a device different from the one hosting the Wallet Instance. PA_04 A Wallet Unit SHALL enable the User to use multiple different Pseudonyms at a given Relying Party. PA_05 A Wallet Unit SHOULD enable a User to freely choose a User alias for each Pseudonym registered at a Relying Party. Setting an alias SHOULD be optional for the User. The User SHOULD be able to change the alias for any Pseudonym. PA_06 A Wallet Unit SHALL enable a User to choose which Pseudonym to authenticate with towards a Relying Party, if multiple Pseudonyms are registered for this Relying Party. The Wallet Unit SHOULD present the User with the aliases of the applicable Pseudonyms, if assigned, when making this choice. PA_07 A Wallet Unit SHOULD enable a User to delete a Pseudonym. PA_08 A Wallet Unit SHOULD enable to the User to manage pseudonyms within the Wallet Unit in a user-friendly and transparent manner. Users SHOULD be informed about when and with which Relying Party their pseudonyms were used and be able to view a complete transaction log (including canceled or unsuccessful transactions). PA_09 A Wallet Unit SHOULD enable the User to see all existing pseudonyms, including the associated Relying Party."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-hlrs-related-to-relying-parties","title":"B. HLRs related to Relying Parties","text":"Index Requirement specification PA_10 A Relying Party SHALL be able to verify that a User is registering a Pseudonym using a non-revoked Wallet Unit. PA_11 A Relying Party SHALL be able to verify that a User is authenticating with a Pseudonym using a non-revoked Wallet Unit. PA_12 If Wallet Unit is used to register a Pseudonym at a Relying Party in combination with a PID, attestation or WUA being presented to the same Relying Party, then this Relying Party SHALL be able to verify that the same User performed both actions. PA_13 The Relying Party SHALL be able to validate that the pseudonym presented to them belongs to the User presenting it."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-hlrs-related-to-privacy","title":"C. HLRs related to privacy","text":"Index Requirement specification PA_14 A Wallet Unit SHALL store the information necessary for authenticating with a Pseudonym in its WSCA/WSCD. PA_15 A Relying Party SHALL NOT be able to derive the User\u2019s true identity, or any data identifying the User, from the Pseudonym value received by the Relying Party. PA_16 A Wallet Unit SHALL NOT reveal the same Pseudonym to different Relying Parties unless the User explicitly chooses otherwise. PA_17 It SHALL NOT be possible to correlate Pseudonyms based on their values nor on other metadata sent by the Wallet Unit during registration and authentication, meaning that colluding Relying Parties SHALL NOT able to conclude that different Pseudonyms belong to the same User. PA_18 The Wallet Unit SHALL ensure that Pseudonyms contain sufficient entropy to make the chance of colliding Pseudonyms (meaning two Users having the same Pseudonym value for the same Relying Party) negligible. PA_19 A Wallet Unit SHALL NOT share the User's optionally assigned Pseudonym aliases with any Relying Party. PA_20 The Wallet Unit SHOULD be able to verify the identity of a Relying Party when a User registers a Pseudonym or authenticates with a Pseudonym."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#d-hlrs-related-to-interoperability","title":"D. HLRs related to interoperability","text":"Index Requirement specification PA_21 The Commission SHALL create or reference a technical specification containing a profile or extension of the [W3C WebAuthn] specification compliant with the HLRs specified in this Topic. This specification SHALL contain all details necessary for Wallet Units and Relying Parties to generate, register, and use Pseudonyms. PA_22 Wallet Providers SHALL ensure that their Wallet Solution supports the [W3C WebAuthn] specification and the technical specification meant in requirement PA_21."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2312-topic-12-attestation-rulebooks","title":"A.2.3.12 Topic 12 - Attestation Rulebooks","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_9","title":"Description","text":"<p>Article 45e of the [European Digital Identity Regulation] sets up the legal basis for the Commission to \"where necessary, establish specifications and procedures for the catalogue of attributes and schemes for the attestation of attributes and verification procedures for qualified electronic attestations of attributes\". As described in Section 5.6 of the ARF main document, these 'schemes for the attestation of attributes' will be described in so-called Attestation Rulebooks. A separate Rulebook will be created for each type of attestation. This Topic describes the high-level requirements for the Attestation Rulebooks that will specify the details of new types of attestations.</p> <p>Attestation Rulebooks will be written by Attribute Schema Providers, a role which can be assumed by different types of organisation. The goal of this Topic is to ensure that all Rulebooks that will be written in the future will contain the same type of information and the same level of detail, such that all attestations are interoperable.</p> <p>Attestation Rulebooks may be registered and published in a publicly accessible catalogue, as described in Topic 25.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_7","title":"HLRs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-requirements-regarding-attestation-formats","title":"A. Requirements regarding attestation formats","text":"Index Requirement specification ARB_01 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL specify that one or more of the following two common format(s) must be used for these attestations: - The format specified in ISO/IEC 18013-5, see [ISO18013-5]. - The format specified in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC]. ARB_01a The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHALL specify that one or more of the following three common format(s) must be used for these attestations: - The format specified in ISO/IEC 18013-5, see [ISO18013-5]. - The format specified in \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\", see [SD-JWT-VC]. - The format specified in \u201cW3C Verifiable Credentials Data Model\u201d, see [W3C VCDM v2.0]. ARB_01b The Schema Provider for an Attestation Rulebook describing attestations using the format specified in [SD-JWT VC] SHALL ensure that these attestations comply with the 'SD-JWT VCs' profile specified in [HAIP]. ARB_02 The Schema Provider for an Attestation Rulebook SHALL analyse whether it must be possible for a User to present that type of attestation when the Wallet Unit and the Relying Party are in proximity and attestations are presented without using the internet. If so, the Attestation Rulebook SHALL specify that the attestations must be issued in the ISO/IEC 18013-5-compliant mdoc format. Note: In theory, it is possible to use SD-JWT VC-compliant attestations in proximity use cases. In practice, however, the only protocol available to request and release SD-JWT VC-compliant attestations between a Wallet Unit and a Relying Party Instance is OpenID4VP. That protocol cannot be used without internet connectivity. ARB_03 The Schema Provider for an Attestation Rulebook MAY specify in the Attestation Rulebook that that type of attestation must be issued in the [SD-JWT VC]-compliant format, provided the [SD-JWT VC] specification has been approved by an EU standardisation body or by the European Digital Identity Cooperation Group established pursuant to Article 46e(1) of the [European Digital Identity Regulation]. ARB_04 If an Attestation Rulebook specifies that a type of attestation can be issued in a format compliant with [W3C VCDM v2.0], the Schema Provider for that Attestation Rulebook SHALL ensure the Rulebook references one or more documents specifying in detail how a Relying Party can request attributes from a such an attestation, and how a User can selectively disclose attributes from such an attestation. Moreover, these referenced documents SHALL be approved by an EU standardisation body or by the European Digital Identity Cooperation Group established pursuant to Article 46e(1) of the [European Digital Identity Regulation]."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-requirements-regarding-attestation-types","title":"B. Requirements regarding attestation types","text":"Index Requirement specification ARB_05 The Schema Provider for an Attestation Rulebook SHALL specify a value for the attestation type, which SHALL be unique within the scope of the EUDI Wallet ecosystem. Notes: - In ISO/IEC 18013-5, the attestation type is called 'document type' and is included as a \"docType\" key-value pair in both the mdoc request and the mdoc response. Also, a method for generating unique attestation type values is recommended. - In OpenID4VP, the attestation type is included in the \"id\" property of an Input Descriptor in a Presentation Request. - In [SD-JWT VC], the attestation type is called 'SD-JWT VC type' and is included as a 'vct' claim in the SD-JWT VC."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-requirements-regarding-attestation-attribute-schemas","title":"C. Requirements regarding attestation attribute schemas","text":"Index Requirement specification ARB_06 The Schema Provider for an Attestation Rulebook SHALL define all attributes that an attestation of that type may contain. This definition SHALL first describe the semantics of each attribute in an encoding-independent manner and SHALL subsequently for each attribute specify an ISO/IEC 18013-5-compliant format, an SD-JWT VC-compliant format, or both, as needed given the choices made according to ARB_01 - ARB_04. ARB_06a For ISO/IEC 1803-5-compliant attestations, the Attestation Rulebook SHALL define each attribute within an attribute namespace. An attribute namespace SHALL fully define the identifier, the syntax, and the semantics of each attribute within that namespace. An attribute namespace SHALL have an identifier that is unique within the scope of the EUDI Wallet ecosystem, and each attribute identifier SHALL be unique within that namespace. Note: In ISO/IEC 18013-5, namespaces are discussed and a method for generating unique namespace identifiers is recommended. ARB_06b For [SD-JWT VC]-compliant attestations, the Schema Provider for the Attestation Rulebook SHALL ensure that each claim name is either included in the IANA registry for JWT claims, or is a Public Name as defined in [RFC 7519]. Note: [SD-JWT VC] does not discuss how to avoid conflicting claim names. Since SD-JWTs are a special kind of JWTs, the methods specified in RFC 7519 are applicable. ARB_07 When determining the attributes to be included in a new attestation type, the Schema Provider for the applicable Attestation Rulebook SHOULD consider referring to attributes that are already included in the catalogue specified in Topic 25 + 26, rather than unnecessarily re-defining all attributes within a new namespace. ARB_08 The Schema Provider for an Attestation Rulebook SHOULD, when specifying a new attribute, take into consideration existing conventions for attribute identifier values and attribute syntaxes. Note: These conventions may depend on the format of the attestation, i.e., CBOR for ISO/IEC 18013-5-compliant attestations or JSON for SD-JWT VC-compliant attestations. ARB_09 The Schema Provider for an Attestation Rulebook SHALL specify, for each attribute in the attestation, whether the presence of that attribute is mandatory, optional, or conditional. ARB_10 The Schema Provider for an Attestation Rulebook for an ISO/IEC 18013-5 compliant attestation MAY define a domestic namespace to specify attributes that are specific to that Rulebook and are not included in the applicable EU-wide or sectoral namespace. All requirements for namespaces in this Topic also apply for domestic namespaces. ARB_11 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook an attribute as meant in Annex V point a) and Annex VII point a) of the [European Digital Identity Regulation]. This attribute SHALL reference the technical specification meant in ARB_25. ARB_12 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include an attribute in the Rulebook indicating that the attestation is an EAA. This attribute SHALL reference the technical specification meant in ARB_25. ARB_13 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA SHALL include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point b) of the [European Digital Identity Regulation]. ARB_14 The Schema Provider for an attestation Rulebook describing a type of attestation that is a PuB-EAA SHALL include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex VII point b) of the [European Digital Identity Regulation]. ARB_15 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point b) of the [European Digital Identity Regulation]. ARB_16 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook one or more attributes representing the set of data meant in Annex V point c) or Annex VII point c) of the [European Digital Identity Regulation]. ARB_17 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes representing the set of data meant in Annex V point c) of the [European Digital Identity Regulation]. ARB_18 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook one or more attributes or metadata representing the set of data meant in Annex V point e) or Annex VII point e) of the [European Digital Identity Regulation]. ARB_19 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes representing the set of data meant in Annex V point e) of the [European Digital Identity Regulation]. ARB_20 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL include in the Rulebook one or more attributes or metadata representing the location meant in Annex V point h) or Annex VII point h) of the [European Digital Identity Regulation]. For a QEAA, this location SHALL indicate at least the URL at which a machine-readable version of the trust anchor to be used for verifying the QEAA can be found or looked up. For a PuB-EAA, this location SHALL indicate at least the URL at which a machine-readable version of the qualified certificate that signed the PuB-EAA can be found or looked up. ARB_21 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD include in the Rulebook one or more attributes or metadata representing the location at which a machine-readable version of the trust anchor to be used for verifying the EAA can be found or looked up.Note: What this location indicates precisely is dependent on the nature of the mechanism used for distributing trust anchors; see requirement ARB_26."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#d-miscellaneous-requirements_1","title":"D. Miscellaneous requirements","text":"Index Requirement specification ARB_22 The Schema Provider for an Attestation Rulebook SHALL specify all technical details necessary to ensure interoperability, security, and privacy of that attestation. Note: An Attestation Rulebook may also specify requirements regarding how the Wallet Unit must display the attestation and the attributes in it to the User. ARB_23 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA or a PuB-EAA SHALL specify which of the revocation mechanisms specified in Topic 7 SHALL be supported by that attestation. ARB_24 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHALL specify whether that type of EAA must be revocable. If an EAA type must be revocable, the relevant Rulebook SHALL determine which of the revocation mechanisms specified in Topic 7 SHALL be supported by that attestation. ARB_25 The Commission SHALL take measures to ensure that the following information is included in a technical specification: - The identifier of the attribute containing the indication meant in Annex V point a) and Annex VII point a). - The syntax and semantics of this attribute in case the attestation is a QEAA, in case it is PuB-EAA, and in case it is a non-qualified EAA. ARB_26 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a non-qualified EAA SHOULD define in the Rulebook: - mechanisms allowing a Wallet Unit to verify that the EAA Provider is authorised or registered to issue this type of EAA. - mechanisms allowing a Relying Party to obtain, in a trustworthy manner, the trust anchor(s) of the EAA Providers issuing this type of EAA. ARB_27 The Schema Provider for an Attestation Rulebook describing a type of attestation that is a QEAA, PuB-EAA, or non-qualified EAA SHOULD specify in the Rulebook whether a Relying Party receiving the attestation must request and verify a PID. Note: Relying Parties can only do so in a trustworthy manner if Wallet Units are able to provide a proof that the private keys of the attestation and the PID are stored in the same WSCD, in accordance with the requirements in Topic 18."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2313-topic-13-developing-a-wallet-unit-architecture-based-on-secure-element","title":"A.2.3.13 Topic 13 - Developing a Wallet Unit architecture based on Secure Element","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2314-topic-14-developing-a-wallet-unit-architecture-based-on-external-token","title":"A.2.3.14 Topic 14 - Developing a Wallet Unit architecture based on External Token","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2315-topic-15-developing-a-wallet-unit-architecture-based-on-remote-hsm","title":"A.2.3.15 Topic 15 - Developing a Wallet Unit architecture based on Remote HSM","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2316-topic-16-signing-documents-with-a-wallet-unit","title":"A.2.3.16 Topic 16 - Signing documents with a Wallet Unit","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_10","title":"Description","text":"<p>A Wallet Unit SHALL enable its User to create qualified electronic signatures or seals. This goal can be reached by using signature or seal creation capabilities of the Wallet Unit as a part of a local QSCD, or by using a remote QSCD managed by a QTSP.</p> <p>This Topic contains high-level requirements related to the creation of Qualified Electronic Signatures using a Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_8","title":"HLRs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-requirement-for-wallet-providers","title":"A. Requirement for Wallet Providers","text":"Index Requirement specification QES_01 Wallet Providers SHALL ensure that each User has the possibility to receive a qualified certificate for Qualified Electronic Signatures, bound to a QSCD, that is either local, external, or remotely managed in relation to the Wallet Instance. QES_02 Wallet Providers SHALL ensure that each User who is a natural person has, at least for non-professional purposes, free-of-charge access to a Signature Creation Application which allows the creation of free-of-charge Qualified Electronic Signatures using the certificates referred to in QES_01. Wallet Providers SHALL ensure that: - The Signature Creation Application SHALL, as a minimum, be capable of signing or sealing User-provided data and Relying Party-provided data. - The Signature Creation Application SHALL be implemented as part of a Wallet Solution or external to it (by providers of trust services or by Relying Parties). - The Signature Creation Application SHALL be able to generate signatures or seals in formats compliant with at least the mandatory formats referred to in QES_08. Notes: - Signature Creation Application (SCA): see definition in the ETSI TS 119 432 standard. - If the SCA is external to the Wallet Solution, it may be for example a separate mobile application, or be hosted remotely, for instance by the QTSP or by a Relying Party. QES_03 For the use of the qualified certificate referred to in QES_01, Wallet Providers SHALL ensure that a Wallet Unit implements secure authentication of the User, as well as signature or seal invocation capabilities, as a part of a local, external or remote QSCD. QES_04 Wallet Providers SHALL enable their Wallet Units to interface with QSCDs using protocols and interfaces necessary for the implementation of secure User authentication and signature or seal functionality. Note: In a Relying Party-centric flow, the remote QTSP will likely be selected by the Relying Party, which implies the QSCD is managed by the remote QTSP. In a Wallet Unit-driven flow, the User should be able to choose the QSCD. QES_05 Wallet Providers SHALL enable their Wallet Units to be used for User enrolment to a remote QES Provider (i.e., a QTSP offering remote QES), except where the Wallet Unit interfaces with local or external QSCDs. QES_06 Wallet Providers SHALL ensure that their Wallet Solution supports at least one of the following options for remote QES signature creation: - remote QES creation through secure authentication to a QTSP signature web portal, - remote QES creation channelled by the Wallet Unit, - remote QES creation channelled by a Relying Party. QES_07 Wallet Providers SHALL ensure that, where a Signature Creation Application relies on a remote Qualified Signature Creation Device and where it is integrated into a Wallet Instance, it supports the Cloud Signature Consortium API Specification 2.0 [CSC API]. QES_08 Wallet Providers SHALL ensure that their Wallet Units are able to create signatures or seals in accordance with the mandatory PAdES format as specified in ETSI EN 319 142-1 V1.1.1 (2016-04). In addition, Wallet Providers SHOULD ensure that their Wallet Units are able to create signatures or seals in accordance with the following formats: - XAdES as specified in ETSI EN 319 132-1 V1.2.1 (2022-02), - JAdES as specified in ETSI TS 119 182-1 V1.2.1 (2024-07), - CAdES as specified in ETSI EN 3191 22-1 V1.3.1 (2023-06), and - ASiC as specified in ETSI EN 319 162-1 V1.1.1 (2016-04) and ETSI EN 319 162-2 V1.1.1 (2016-04). QES_09 Empty QES_10 Wallet Providers SHALL ensure that, where the Signature Creation Application is implemented as part of the Wallet Unit and is used to generate signatures or seals of the representation of the document or data to be signed or sealed, the Wallet Unit presents the representation of the document or data to be signed or sealed to the User. QES_11 Wallet Providers SHALL ensure that, where the Signature Creation Application is implemented as part of the Wallet Unit, a Wallet Unit computes the hash or digest of the document or data to be signed through a Signature Create Application component. QES_12 Wallet Providers SHALL ensure that a Wallet Unit is able to create the signature value of the document or data to be signed either using a local or a remote signing application. Note: a local signing application is on-device. It may either be embedded in the Wallet Unit or be an external application. QES_13 Wallet Providers SHALL ensure that a Wallet Unit provides a log of transactions related to qualified electronic signatures generated by or through the Wallet Unit, allowing the User to view the history of previously signed data or documents, according to the requirements in Topic 19. Note: If the signature is generated by a remote Signature Creation Application, the Wallet is at minimum used to authenticate the User to the remote QTSP and to obtain the User's consent for the usage of the private signing key. The logs then record information about these processes. QES_14 Wallet Providers SHALL ensure that the User will be able to explicitly authorise the creation of a qualified electronic signature or seal through their Wallet Unit. QES_15 Wallet Providers SHALL ensure that a Wallet Unit can verify, in remote signature creation scenarios, that the qualified electronic signature or seal creation device is part of a qualified service, which is carried out by a qualified trust service provider. QES_16 Wallet Providers SHOULD ensure that a Wallet Unit supports multiple-signing scenarios where multiple signatories are required to sign the same document or data. QES_17 Wallet Providers SHALL ensure that Wallet Units provide a signature creation confirmation upon the creation of a qualified electronic signature, informing the User about the outcome of the signature creation process. Note: See also QES_17a. QES_17a If the Signature Creation Application is external to the Wallet Unit, after the User authorises the usage of the private signing key, the Signature Creation Application SHALL return the outcome of the signature creation process to the Wallet Unit. QES_18 Wallet Providers SHALL configure at least one default qualified signing service in the Wallet Unit. QES_19 Wallet Providers SHALL ensure that, where the Signature Creation Application is implemented as part of the Wallet Unit, a Wallet Unit supports ETSI TS 119 101 (Electronic Signatures and Infrastructures (ESI); Policy and security requirements for applications for signature creation and signature validation) when using signing keys managed by the QSCD, whether locally, externally, or remotely in relation to the Wallet Instance. QES_20 Empty QES_21 Empty QES_22 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-requirements-for-qtsps","title":"B. Requirements for QTSPs","text":"Index Requirement specification QES_23 QTSPs providing the remote QES part of a Wallet Solution SHALL support: 1. ETSI TS 119 431-1 (Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 1: TSP service components operating a remote QSCD / SCDev), 2. ETSI TS 119 431-2 (Electronic Signatures and Infrastructures (ESI); Policy and security requirements for trust service providers; Part 2: TSP service components supporting AdES digital signature creation), 3. ETSI TS 119 432 (Electronic Signatures and Infrastructures (ESI); Protocols for remote digital signature creation). Wallet Providers and QTSPs providing the remote QES part of a Wallet Solution SHALL comply with Sole Control Assurance Level (SCAL) 2 as defined in CEN EN 419 241-1 (Trustworthy Systems Supporting Server Signing - Part 1: General System Security Requirements). QES_24 QTSPs providing the Signature Creation Application as part of the remote QES part of a Wallet Solution SHALL support ETSI TS 119 101 (Electronic Signatures and Infrastructures (ESI); Policy and security requirements for applications for signature creation and signature validation)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-requirements-for-relying-parties","title":"C. Requirements for Relying Parties","text":"Index Requirement specification QES_24a Relying Parties providing the Signature Creation Application in a Relying Party-centric flow SHALL support ETSI TS 119 101 (Electronic Signatures and Infrastructures (ESI); Policy and security requirements for applications for signature creation and signature validation)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#d-requirements-for-the-commission","title":"D. Requirements for the Commission","text":"Index Requirement specification QES_25 Empty QES_26 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2317-topic-17-identity-matching","title":"A.2.3.17 Topic 17 - Identity matching","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_11","title":"Description","text":"<p>Users would like to use their PID in their Wallet Unit to access their existing online account(s), even if their PID attribute values are not exactly the same as those in their account(s). Users regularly need to log in to cross-border services offered by public sector bodies. Identity matching enables them to use their Wallet Unit to do so.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_9","title":"HLRs","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2318-topic-18-combined-presentations-of-attributes","title":"A.2.3.18 Topic 18 - Combined presentations of attributes","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_12","title":"Description","text":"<p>This Topic discusses the combined presentation of attributes by a Wallet Instance to a Relying Party. 'Combined presentation' here refers to a transaction in which the Relying Party requests attributes of the same User from multiple attestations (PID and/or (Q)EAAs) in a single request and receives those attributes in a single response. These attestations can have been provided to the Wallet Unit by one or by multiple PID Providers or Attestation Providers.</p> <p>This Topic answers the following questions:</p> <ul> <li>How can a Relying Party request for a combined presentation of attributes?</li> <li>How can a Wallet Unit receiving such a request present the attributes in a combined manner?</li> <li>How can the Relying Party verify the authenticity of all released attributes in a combined response?</li> <li>How can the Relying Party verify whether all released attributes were issued to the same User?</li> </ul> <p>Regarding the last question:</p> <ul> <li>The subject may be either a natural person or a legal person.</li> <li>However, use cases such as delegation or legal representation, where  the Relying Party may request attributes that are originally part of  multiple distinct attestations that were not issued to the same User,  are not combined presentations and are out of scope of this Topic.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_10","title":"HLRs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-functional-requirements-for-ecosystem-components","title":"A. Functional requirements for ecosystem components","text":"Index Requirement specification ACP_01 Wallet Units SHALL support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_02 Relying Parties SHOULD support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_03 Empty ACP_04 If a Wallet Unit determines it must release multiple attestations to a Relying Party in a combined presentation of attributes, it SHOULD request a proof from the WSCA that the WSCA manages all of the private keys of these attestations. ACP_05 If, as a result of ACP_04, the Wallet Unit receives such a proof from the WSCA, it SHALL include this proof in the response message containing the combined presentation of attributes and send it to the Relying Party. ACP_06 If a Relying Party receives a combined presentation of attributes including a proof as meant in ACP_04, it SHOULD verify this proof to validate that the attestations in this presentation were issued to the same User."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-process-requirements","title":"B. Process requirements","text":"Index Requirement specification ACP_07 During issuance of an attestation, an Attestation Provider SHOULD be able to request that the private key for the new attestation is managed by the same WSCD as the private key of a PID or another attestation already existing on the Wallet Unit, provided that the Attestation Provider has verified during the issuance process that the new attestation indeed belongs to the User of that existing PID or attestation. Note: Also see requirement WUA_10 in Topic 09. ACP_08 When receiving a combined presentation of attributes, a Relying Party SHOULD NOT refuse the attestations solely because a proof as meant in ACP_04 is absent."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-miscellaneous","title":"C. Miscellaneous","text":"Index Requirement specification ACP_09 The common [ISO18013-5] and [OpenID4VP] protocols, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a proof as meant in ACP_04 to a Relying Party. The Commission SHALL take measures to ensure that this is the case."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2319-topic-19-user-navigation-requirements-dashboard-logs-for-transparency","title":"A.2.3.19 Topic 19 - User navigation requirements (Dashboard logs for transparency)","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_13","title":"Description","text":"<p>In this use case, the User is accessing a dashboard of the Wallet Unit, which provides a record of all transactions executed through the Wallet Unit. The User is concerned about data privacy, and thus the function of a dashboard ensures a higher degree of transparency, privacy and control of the User over their personal data.</p> <p>This Topic lists high-level requirements related to the functions of such a dashboard.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_11","title":"HLRs","text":"Index Requirement specification DASH_01 A Wallet Provider SHALL enable a User to access a dashboard functionality in their Wallet Unit. DASH_02 The Wallet Unit SHALL log all transactions executed through the Wallet Unit, including any transactions that were not completed successfully. This log SHALL include all types of transaction executed through the Wallet Unit: issuance and re-issuance transactions, presentation transactions, signature creation transactions (see Topic 16), attribute deletion requests sent to a Relying Party (see Topic 48), and complaints lodged with a Data Protection Authority (see Topic 50). Note: For the data to be logged for an attribute deletion request or a complaint, see Topic 48 and Topic 50, respectively. DASH_02a The Wallet Unit SHALL retain transactions in the log at least for the time period specified in applicable legislation. If the Wallet Unit must delete transactions from the log, for instance because of size limitations, the Wallet Unit SHALL notify the User via the dashboard before doing so and SHALL instruct the User how to export the transactions that are about to be deleted; see DASH_07. DASH_02b The dashboard SHALL include a functionality to display to the User an overview of all transactions in the log. DASH_03 For a presentation transaction executed through the Wallet Unit, the log SHALL contain at least: a) the date and time of the transaction, b) the name, contact details (if the registration certificate was available), and unique identifier of the corresponding Relying Party, and the Member State in which that Relying Party is established, or relevant information from the WUA of the Requestor Wallet Unit (see Topic 30), c) the name, contact details (if a registration certificate was available), and unique identifier of the intermediary, if an intermediary is involved in the transaction, d) the attestation type(s) and the identifier(s) of the attribute(s) that were requested, as well as those that were presented, e) in the case of non-completed transactions, the reason for such non-completion, f) URL address of the Registrar's on-line service.  Note: the URL address can be retrieved from the access certificate. DASH_04 For a signature creation transaction executed through the Wallet Unit, the log SHALL contain at least: a) the date and time of the transaction, b) the document or data signed (where possible), c) in the case of non-completed transactions, the reason for such non-completion. DASH_05 For an issuance or re-issuance transaction executed through the Wallet Unit, the log SHALL contain at least: a) the date and time of the transaction, b) the name, contact details (if the registration certificate was available), and unique identifier of the corresponding PID Provider or Attestation Provider, c) the attestation type requested, as well as the attestation type issued, d) the number of attestations requested and/or issued (i.e., the size of the batch in case of batch issuance). d) in the case of non-completed transactions, the reason for such non-completion. e) for a re-issuance transaction, whether it was triggered by the User or by the Wallet Unit without involvement of the User, f) URL address of the Registrar's on-line service. Note: the URL address can be retrieved from the access certificate. DASH_06 The Wallet Provider SHALL ensure the confidentiality, integrity, and authenticity of all transactions included in the log. DASH_06a Via the dashboard, the Wallet Unit SHALL enable the User to delete any transaction in the log. The Wallet Unit SHALL ensure that no other entity can delete transactions from the log, except possibly for the reason mentioned in DASH_02a. DASH_07 The dashboard SHALL allow the User to export the details of one or more transactions in the log to a file, while ensuring their confidentiality, authenticity and integrity. DASH_08 For a natural-person User, a Wallet Instance SHALL provide a User interface. DASH_09 The User interface referred to in DASH_08 SHALL display an EU Digital Identity Wallet Trust Mark complying with technical specifications. Note: The Commission will develop technical specifications for this Trust Mark. DASH_10 The Wallet Unit SHALL make the logs accessible to the Wallet Provider if this is necessary for the provisioning of the Wallet Unit, and only after obtaining explicit consent from the User via the dashboard. DASH_11 A Wallet Unit issued to a legal person SHALL allow the legal person to interact with the Wallet Unit in the appropriate interface provided by the Wallet Provider. DASH_12 The User interface referred to in DASH_08 SHALL enable the User, for each presentation transaction in the dashboard, to easily request the Relying Party to delete any or all attributes presented to it in that transaction, or to lodge a complaint about that particular transaction to a DPA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2320-topic-20-strong-user-authentication-for-electronic-payments","title":"A.2.3.20 Topic 20 - Strong User authentication for electronic payments","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_14","title":"Description","text":"<p>This topic deals with the requirement for Strong User (Customer) Authentication (SCA) in the context of authenticating a User as part of electronic payments.  </p> <p>Users would like to be able to authenticate themselves during online payments securely and conveniently using their Wallet Units, so that they can enjoy a seamless and protected shopping/ payment experience.  </p> <p>The goal is to implement Strong Customer Authentication (SCA) for electronic payments, ensuring a high level of security and compliance with Article 97 of the PSD2 (and with the future PSD3/PSR).</p> <p>Commission Delegated Regulation (EU) 2018/389 lays down the requirements for strong customer authentication (SCA), which needs to be complied with when accessing a payment account online and for initiating electronic payments, or carrying out any action through a remote channel which may imply a risk of payment fraud or other abuses. The use of the wallet for SCA will be in full compliance with those requirements.  </p> <p>In the future, a Wallet Unit could also be used for payments with Central Bank Digital Currencies.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_12","title":"HLRs","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2321-topic-21-diplomas-within-the-eudi-wallet-ecosystem","title":"A.2.3.21 Topic 21 - Diplomas within the EUDI Wallet ecosystem","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2322-topic-22-digital-travel-credentials-within-the-eudi-wallet-ecosystem","title":"A.2.3.22 Topic 22 - Digital Travel Credentials within the EUDI Wallet ecosystem","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2323-topic-23-pid-issuance-and-qeaa-issuance","title":"A.2.3.23 Topic 23 - PID issuance and (Q)EAA issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_15","title":"Description","text":"<p>See Topic 10.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_13","title":"HLRs","text":"<p>See Topic 10.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2324-topic-24-user-identification-in-proximity-scenarios","title":"A.2.3.24 Topic 24 - User identification in proximity scenarios","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_16","title":"Description","text":"<p>In this use case, the User is using their Wallet Unit for identification purposes in proximity scenarios. As explained in Section 4.4.2 of the ARF main document, in a proximity flow, the User and their Wallet Instance are physically near the Relying Part Instance. PIDs and attestations are exchanged using proximity technology (e.g., NFC, Bluetooth) between the Wallet Unit and the Relying Party Instance. Note that this definition does not imply that a Wallet Unit and a Relying Party have to use proximity technologies if they are close together. They are free to use a remote flow (according to Topic 1). However, there may be situations where either the Wallet Unit or the Relying Party Instance does not have an internet connection. In such cases, they must be able to use a proximity flow, if they are close together.</p> <p>The User is concerned about sharing personal data in proximity, while the User's objectives include identifying themselves to services requiring User identification and maintaining control over their personal data sharing.</p> <p>This topic lists high-level requirements related to User identification in proximity use cases where Users utilise their Wallet Units.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_14","title":"HLRs","text":"Index Requirement specification ProxId_01 To enable identification using proximity flows, Wallet Units SHALL support device retrieval as specified in ISO/IEC 18013-5 for presenting PID, attestation, or WUA attributes. Wallet Units SHALL comply with the requirements for mDLs in clause 6 and for mdocs in clauses 8 and 9 of ISO/IEC 18013-5. Note: Nominally, ISO/IEC 18013-5 is intended only for mDLs and mDL readers. The corresponding standard for mobile documents in general (including Wallet Units with the EUDI Wallet ecosystem) will be ISO/IEC 23220-4, which is based on ISO/IEC 18013-5. However, the latter standard is not finished yet and therefore cannot be referenced at the moment. To guarantee interoperability between Wallet Units and Relying Party Instances in proximity scenarios, it is necessary to make choices from among the possibilities specified in ISO/IEC 18013-5. Making the same choices as for mDLs ensure this. ProxId_01a If a Relying Party supports using proximity flows, its Relying Party Instances SHALL support device retrieval as specified in ISO/IEC 18013-5 for presenting PID, attestation, or WUA attributes. Such Relying Party Instances SHALL comply with the requirements for mDL readers in clause 6 and for mdoc readers in clauses 8 and 9. Note: See note to ProxId_01. Support for proximity flows by Relying Parties is not mandatory. ProxId_02 Wallet Solutions, PID Providers, Attestation Providers, Wallet Providers, and Relying Parties SHALL NOT support server retrieval as specified in ISO/IEC 18013-5 for requesting and presenting PID, attestation, or WUA attributes. Note: Using server retrieval, a Relying Party would request User attributes directly from a PID Provider or Attestation Provider, after having received an authentication and/or authorisation token from the User's Wallet Unit. ProxId_03 A Wallet Unit SHALL present the presentation request and the identity of the Relying Party to the User when processing the request. ProxId_04 A Wallet Unit SHALL request its User to approve the presentation of attributes from their Wallet Unit for proximity identification before presenting them to the Relying Party. ProxId_05 A Wallet Unit SHALL transmit the requested User attributes to the requesting Relying Party Instance securely in accordance with ISO/IEC 18013-5 for proximity flows. ProxId_06 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2325-topic-25-unified-definition-and-controlled-vocabularies-for-attributes","title":"A.2.3.25 Topic 25 - Unified definition and controlled vocabularies for attributes","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_17","title":"Description","text":"<p>Topic 12 describes the high-level requirements (HLR) for the Rulebooks that will specify the details of new types of attestations, including QEAAs, PuB-EAAs, and non-qualified EAAs. This Topic already touched and defined high-level requirements regarding the catalogue for Attestation Rulebooks.</p> <p>The following main concepts were defined in Topic 12 and developed in the current version of this Topic:</p> <ul> <li>Attestation Rulebooks for QEAAs and PuB-EAAs used within the EUDI Wallet ecosystem may be registered and published in a publicly accessible catalogue.</li> <li>The Attestation Rulebook catalogue may also include Attestation Rulebooks for non-qualified EAAs.</li> <li>The Commission will take measures to establish and maintain the Attestation Rulebooks catalogue.</li> <li>The Attestation Rulebooks catalogue will enable mainly Relying Parties, but also other actors in the EUDI Wallet ecosystem, to know which attestation types exist, and what is the identifier, syntax, and semantics of each attribute in a type of attestation.</li> </ul> <p>The following points are emphasised:</p> <ul> <li>Registration of an Attestation Rulebook in the attestation catalogue is not mandatory.</li> <li>Registration in the Attestation Rulebook catalogue does not create any obligation of acceptance of the attestation by any Relying Party, nor does it necessarily imply cross-border recognition of that attestation.</li> <li>The Attestation Rulebooks catalogue can be hosted in the same environment as the catalogue of attributes.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_15","title":"HLRs","text":"Index Requirement specification CAT_01 The Commission SHALL establish a catalogue of attributes used within the EUDI Wallet ecosystem. Note: The catalogue of attributes does not need to be a separate catalogue, but could be combined with the Attestation Rulebooks catalogue mentioned in CAT_05. CAT_01a The Commission SHALL enable any entity to request the registration in the catalogue of one or more attribute(s) of an attestation used within the EUDI Wallet ecosystem. CAT_01b The Schema Provider for an Attestation Rulebook that is a QEAA or PuB-EAA SHOULD request the registration of all attributes in that QEAA or PuB-EAA in the catalogue of attributes. The Schema Provider for an Attestation Rulebook that is a non-qualified EAA MAY request the registration of the attributes in that EAA in the catalogue. CAT_02 Empty CAT_03 The Commission SHALL make the catalogue of attributes publicly available and machine-readable. Note: The requirement for availability implies setting up the required means for high availability and avoiding a single point of failure. CAT_03b The Commission SHALL consider the following semantic artifacts for inclusion in the catalogue of attributes: - Representation Powers and Mandates (RPaM) Ontology - SEMPER | DE4A - SEMIC Core Vocabularies - IANA Registry for JSON Web Token Claims (for JSON-based attributes only) - ISO/IEC 23220-2 (for CBOR-based attributes only) CAT_04 The Commission SHALL make publicly available the existence and maintenance of the catalogue of attributes mentioned in CAT_01, including processes to propose the registration to public and private parties, allowing to register attributes, and conditions for updating and/or removing attributes. These processes SHALL include archiving and logging changes of the history of the catalogue of attributes in an appropriate way, including versioning. Note: There are layers on top of the attributes that need maintenance as well. So, maintenance in this case is more generic and encompasses more than just the attribute itself."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2326-topic-26-catalogue-of-attestations","title":"A.2.3.26 Topic 26 - Catalogue of attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_18","title":"Description","text":"<p>See Topic 25.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_16","title":"HLRs","text":"Index Requirement specification CAT_05 The Commission SHALL establish a catalogue of Attestation Rulebooks used within the EUDI Wallet ecosystem. Note: For Attestation Rulebooks, see Topic 12. CAT_05a The Commission SHALL enable any entity to register an Attestation Rulebook used within the EUDI Wallet ecosystem. CAT_05b The Schema Provider for an Attestation Rulebook that is a QEAA or PuB-EAA SHOULD register its Rulebook in the catalogue of Attestation Rulebooks. The Schema Provider for an Attestation Rulebook that is a non-qualified EAA MAY register its Rulebook. CAT_06 The Commission SHALL make the catalogue publicly available and machine-readable, by hosting the catalogue, or parts of it, including an e-discovery mechanism and/or by referencing to other catalogues. Note: The requirement for availability implies setting up the required means for high availability and avoiding a single point of failure. CAT_07 The Commission SHALL enable a self-registration process of Attestation Rulebooks, without pre-approval by the registry, for both public and private entities. CAT_08 Empty CAT_09 The Commission SHALL make publicly available the existence and maintenance of the Attestation Rulebooks catalogue mentioned in CAT_01, including processes to propose the registration to public and private parties, allowing to register an Attestation Rulebook, and conditions for updating and/or removing Attestation Rulebooks. These processes SHALL include archiving and logging changes of the history of the Attestation Rulebooks catalogue in an appropriate way, including versioning. CAT_10 The body registering an Attestation Rulebook SHALL include a unique reference to this body and the way to contact it, or how to find information for doing so. Notes: - Topic 12 describes an option for Member State-specific (i.e., domestic) Rulebooks, extending a EU-wide Rulebook. - Rulebooks may also be shared between interested parties in an out-of-band manner. CAT_11 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2327-topic-27-registration-of-pid-providers-providers-of-qeaas-pub-eaas-and-non-qualified-eaas-and-relying-parties","title":"A.2.3.27 Topic 27 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and non-qualified EAAs, and Relying Parties","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_19","title":"Description","text":"<p>PID Providers, QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers and Relying Parties SHALL register with a Registrar in their Member State. The main goal of the registration process is for the entity to receive an access certificate that Wallet Units can use to authenticate them.</p> <p>This Topic specifies high-level requirements related to the registration of the above mentioned entities.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_17","title":"HLRs","text":"<p>A. General requirements for Member State registration processes</p> Index Requirement specification Reg_01 Member States SHALL provide processes and mechanisms for PID Providers, QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers, and Relying Parties to register in a registry. Note: Member States may choose to implement a single registry for all these roles, or a separate registry for each of these roles. Reg_01a The Commission SHALL provide specifications for a common set of data to be registered about a) PID Providers, b) QEAA Providers, c) PuB-EAA Providers, d) non-qualified EAA Providers. and e) Relying Parties. Reg_01b For PID Providers, QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers, the common set of data meant in Reg_01a SHALL include the attestation type(s) that the provider intends to issue to Wallet Units. Reg_02 Member States SHALL make publicly available all necessary details and documentation about the registration processes for their registry. Reg_03 Member States SHALL publish the registry entries online, in a sealed or signed machine-readable common format suitable for automated processing, according to the [European Digital Identity Regulation] Article 5b 5, for the purpose of transparency to Users and other stakeholders. Reg_04 Member States SHALL make the registry available online, in a common human-readable format. Reg_05 The Commission SHALL establish a technical specification for the common formats mentioned in Reg_03 and Reg_04. Reg_06 The Commission SHALL provide specifications for a common API for retrieving registry entries from the Member States registries per Reg_03, defining the minimum requirements for interoperability. Note: Requirements for this API are defined in Reg_08 and Reg_09. Reg_07 The Commission SHALL provide specifications for a common user interface for accessing the Member State registries per Reg_04. Note: Requirements for this user interface are defined in Reg_08 and Reg_09. Reg_08 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL use a secure channel protecting the authenticity and integrity of the information in the registry during transport. Reg_09 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL NOT require authentication or prior registration and authorisation of any entity wishing to retrieve the information in the registry. <p>B. General requirements for the issuance of access certificates</p> Index Requirement specification Reg_10 A Member State SHALL ensure that an Access Certificate Authority notified according to [Topic 31] issues an access certificate to all PID Providers, QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers, and Relying Parties registered in one of the Member State's registries. Reg_11 A Member State SHALL ensure that the issuance process of access certificates by their notified Access Certificate Authority(s) complies with a common Certificate Policy for Access Certificate Authority. Reg_12 The Commission SHALL provide technical specifications establishing the common Access Certificate Authority Certificate Policy mentioned in Reg_11. Reg_13 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority logs all issued certificates for Certificate Transparency (CT). Note: This requirement is still under discussion and might be changed or removed in a future version of this ARF. Reg_14 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority provides one or more method(s) to revoke the access certificates it issued. Reg_15 The common Certificate Policy mentioned in Reg_12 SHALL include a policy for revocation, which SHALL require that an Access Certificate Authority revokes an access certificate at least when: - the certificate subject which is a Relying Party is de-registered by the respective Registrar, - the certificate subject which is a PID Provider, QEAA Provider, PuB-EAA Provider, or non-qualified EAA Provider is withdrawn or suspended by the respective Registrar, - on request of the certificate subject, or - on request of a competent national authority. Reg_16 The common Certificate Policy mentioned in Reg_12 SHALL specify the profile of access certificates in detail. Reg_17 The common Certificate Policy mentioned in Reg_12 SHALL require that an access certificate indicates whether its subject is a PID Provider, a QEAA Provider, a PuB-EAA Provider, a non-qualified EAA Provider, or a Relying Party Instance. Reg_18 The common Certificate Policy mentioned in Reg_12 SHALL define the minimum change history information to be stored for resolving possible disputes regarding registration. <p>C. Requirements for the registration of PID Providers</p> Index Requirement specification Reg_19 A Member State SHALL approve a PID Provider according to a well-defined policy before including it in its PID Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of PID Providers in its Registry. Reg_20 A Member State SHALL identify PID Providers at a level of confidence proportionate to the risk arising from the potential harm a fraudulent PID Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_20a A Registrar SHALL provide a method to suspend or withdraw a registered PID Provider. Reg_20b A Registrar SHALL have a policy for the suspension or withdrawal of a registered PID Provider, which SHALL specify that a PID Provider is suspended or withdrawn at least on request of the PID Provider or of a competent national authority. <p>D. Requirements for the registration of Attestation Providers</p> Index Requirement specification Reg_21 A Member State SHALL approve an Attestation Provider according to a well-defined policy before including it in its Attestation Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of Attestation Providers in its Registry. These processes and rules SHOULD consider any relevant differences between QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers. Reg_22 A Member State SHALL identify Attestation Providers (i.e., QEAA Providers, PuB-EAA Providers and non-qualified EAA Providers) at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Attestation Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_22a A Registrar SHALL provide a method to suspend or withdraw a registered Attestation Provider. Reg_22b A Registrar SHALL have a policy for the suspension or withdrawal of a registered Attestation Provider, which SHALL specify that an Attestation Provider is suspended or withdrawn at least on request of the PID Provider or of a competent national authority. <p>E. Requirements for the registration of Relying Parties</p> Index Requirement specification Reg_23 The Commission SHALL establish a technical specification for a common set of Relying Party information to be registered in Member State registries. This set SHALL include at least the information defined in [European Digital Identity Regulation] article 5b 2 \u00a9. Reg_24 A Member State SHALL enable a Relying Party to register remotely, using an API or user interface. Reg_25 A Member State SHALL identify a Relying Party at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Relying Party could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Reg_26 A Member State SHALL enable a Relying Party to update the information registered on it using a process comparable to the original registration process, and using the API or user interface mentioned in Reg_24. Reg_27 Relying Parties SHALL make any updates necessary to ensure the continued correctness of the registered information without undue delay. Reg_28 A Member State's Registry SHALL log all changes made on the information regarding a Relying Party, including at least initial registration, updates, deletion of information, and suspension or withdrawal. Reg_29 A Registrar SHALL have a policy for the withdrawal of a registered Relying Party, which SHALL specify that a Relying Party is withdrawn at least on request of the Relying Party or of a competent national authority. Reg_30 Empty <p>F. Requirements for the issuance of Relying Party Instance access certificates</p> Index Requirement specification Reg_31 The common Certificate Policy mentioned in Reg_12 SHALL require that a Relying Party Instance access certificate contains a name for the Relying Party, in a format suitable for presenting to a User. Note: A Wallet Unit needs such a name when requesting User approval according to [Topic 6]. Reg_32 The common Certificate Policy mentioned in Reg_12 SHALL require that a Relying Party Instance access certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Notes: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a composition of a unique identifier of the registrar, defined in the policy, and a unique identifier for the Relying Party allocated by this registrar. - This Relying Party identifier is identical in all Relying Party Instance access certificates issued to a given Relying Party."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2328-topic-28-wallet-unit-for-legal-persons","title":"A.2.3.28 Topic 28 - Wallet Unit for legal persons","text":"<p>Note to this Topic: Legal-person PIDs and Wallet Units for legal persons were added to the list of topics to be discussed with Member States in the future.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_20","title":"Description","text":"<p>This topic is focused on identifying high-level requirements for a legal-person Wallet Unit. All core capabilities of a Wallet Unit for a natural person are available for a legal person. There are some differences between a natural and legal person that accordingly leads to different requirements for issuing legal-person PIDs and the Wallet Units containing legal-person PIDs.</p> <p>Notes:</p> <ul> <li>A legal-person PID is issued under an eID scheme.</li> <li>A legal-person PID is described in a legal-person PID Rulebook,  which is different from the natural-person PID Rulebook in [PID  Rulebook]. A legal-person PID has a different attestation type than  a natural-person PID, and also contains different attributes. For  example, date of birth or age are not relevant information for legal  persons. Specifying a different Rulebook for legal-person PIDs  allows Relying Parties and other Wallet Units to request  these attributes.  </li> <li>A legal-person Wallet Solution may be implemented in the same  manner as a natural-person Wallet Solution, meaning chiefly that it  is implemented on a mobile device operated by a single User, who is  a natural person. However, a legal-person Wallet Solution may  also be implemented as a server-based (web-based) application. In  the latter case, a Wallet Unit can be used either by one or more  natural persons appointed by the legal person, or by information  systems of the legal persons that give an Wallet Unit  commands in accordance with rules defined by the legal person.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_18","title":"HLRs","text":"Index Requirement specification LP_01 The Commission SHALL develop a Legal-person PID Rulebook to specify the attribute scheme and other technical details applicable for legal-person PIDs. LP_02 The attestation type of a legal-person PID SHALL be different from the attestation type of a natural person PID. Note: See [Topic 12] for an explanation of the concept of attestation type. LP_03 A legal-person PID SHALL comply with all requirements in the Legal-person PID Rulebook mentioned in LP_02."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2329-topic-29-delegation-paradigm","title":"A.2.3.29 Topic 29 - Delegation paradigm","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_21","title":"Description","text":"<p>Topic 3 describes requirements for a rulebook of natural-person PIDs. Topic 28 does the same for legal-persons PIDs.</p> <p>Article 5a.5.(f) of the [European Digital Identity Regulation] also mentions the possibility of issuing eIDs that also could attest a natural person representing the natural or legal person.  At current time, this Topic proposes to not describe any requirements for such eID schemes without further Member State input for such eID schemes. The main reason is that there is no cross-border legal framework for mutual recognition of powers and mandates. Powers and mandates are generally legal system-specific and administrative system-specific.</p> <p>Another use case for delegation is where the recognition of the power for a person to represent another person occurs on an ad hoc basis, based on a decision by the represented User and in the context of a specific Relying Party. The basis for such decisions is outside the scope of eIDAS. Various scenarios can be considered:</p> <ol> <li>Natural person to natural person, based on the will of the  represented person: One individual authorises another individual to  represent them, for example:</li> <li>Picking up a prescription from the pharmacy or a package from  the post office for a family member.</li> <li>Empowering a person to vote on your behalf.</li> <li>Empowering a notary to sell your house on your behalf to a  certain party for a certain amount.</li> <li>Empowering your employer to apply for a residence permit on your  behalf.</li> <li>Natural person to natural person, based on some decision by an  authority, or also as a consequence of national, EU or international  law.</li> <li>Legal guardian being able to take decisions on behalf of child,  disabled person, or elderly person.</li> <li>Natural person to legal person: An individual authorising a legal  entity to represent them.</li> <li>A person empowering a law firm to be the executor of the trust upon their  death.</li> <li>A person empowering a bank to invest on their behalf.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_19","title":"HLRs","text":"<p>There are no specific requirements in this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2330-topic-30-interaction-between-wallet-units","title":"A.2.3.30 Topic 30 - Interaction between Wallet Units","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_22","title":"Description","text":"<p>A User can request another User to release an attestation of attributes, where both Users use their Wallet Unit. This can be done when their devices are close together (that is, in physical proximity) with internet connectivity for both devices (online), or without internet connectivity for either or both devices (offline).</p> <p>This Topic lists the high-level requirements related to the interaction between two Wallet Units. This topic will be further discussed with Member States.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_20","title":"HLRs","text":"Index Requirement specification W2W_01 A Wallet Unit SHALL support an interface and protocol for: - Establishing a connection with another Wallet Unit, - Receiving PID and (Q)EAA presentation requests from another Wallet Unit, - Validating such requests, - Responding to such requests in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_01a In addition to W2W_01, a Wallet Unit SHALL support an interface and protocol for: - Sending PID and (Q)EAA presentation requests to another Wallet Unit, - Receiving and validating the corresponding presentation response, in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_02 The Commission SHALL develop technical specifications for exchanging PIDs and attestations between two Wallet Units in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. W2W_03 The Requestor Wallet Unit SHALL authenticate its User prior to requesting attestations presentation from another Wallet Unit. W2W_04 The Requestee Wallet Unit SHALL request User approval, as specified in [Topic 6], before presenting requested attestations or attributes to another Wallet Unit. The Wallet Unit SHALL inform the User about the attributes that are being requested, and of the outcome of authentication and validation checks of the request and the requestor. W2W_05 The Requestor Wallet Unit SHOULD have pre-defined a list of attributes of PID or attestations that can be requested from the Requestee Wallet Unit. W2W_06 The Requestee Wallet Unit SHALL authenticate and validate the Requestor Wallet Unit, ensuring the validity of the Requestor Wallet Unit and the attribute request. W2W_07 The Requestor Wallet Unit SHALL display the received attributes to its User."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2331-topic-31-pid-provider-wallet-provider-attestation-provider-and-access-certificate-authority-notification-and-publication","title":"A.2.3.31 Topic 31 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_23","title":"Description","text":"<p>PID Providers, PuB-EAA Providers, Wallet Providers and Access Certificate Authorities must be notified by a Member State to the Commission. As part of the notification process, the trust anchors of these parties must be included in a Trusted List. A trust anchor is the combination of a public key and an identifier for the associated entity. Trust anchors are required for the verification of the signatures of PIDs, attestations, WUAs, and access certificates that are issued by these parties.</p> <p>This Topic contains High-Level Requirements for the notification of these parties by Member States, and for the publication of the notified information by the Commission.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_21","title":"HLRs","text":"<p>A. Generic requirements for notification</p> Index Requirement specification GenNot_01 The European Commission SHALL establish technical specifications for a common system enabling the notification of PID Providers, PuB-EAA Providers, Wallet Providers, Access Certificate Authorities and Registrars of Registration Certificates by Member States to the Commission. Note: Notification does not apply to QEAA Providers and (non-qualified) EAA Providers, as explained in Sections D and F below, respectively. GenNot_02 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the notification of a PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authorities or Registration Certificate Authorities to the Commission. Note: The outcome of the notification procedure is the publication of the information notified by the Member State according to Article 5a (18) in a machine and human readable manner using the common system mentioned in Section H, TLPub_01. GenNot_03 The common system mentioned in GenNot_01 SHALL enable: - A secure notification channel between Member States and the Commission for all notifications. - A notification, verification, and publication process and associated validation steps (with follow-up and monitoring) at the Commission side. - Collected data to be processed, consolidated, signed or sealed, and published in both a machine-processable Trusted List and in a human-readable format, manually and/or automatically using e.g. a web service and/or API. GenNot_04 As regard to GenNot_03, second bullet, the Commission SHALL verify whether the notified data is complete and meets the technical specifications, while the Member States SHALL be responsible for the correctness of the notified information. GenNot_05 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the suspension or cancellation of a PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authority or Registration Certificate Authority. These operating procedures SHALL include unambiguous conditions for suspension or cancellation. As an outcome of the suspension or cancellation procedure, the status of the suspended or cancelled PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authority or Registration Certificate Authority in the Trusted List SHALL be changed to Invalid. <p>B. Requirements for the notification of PID Providers</p> Index Requirement specification PPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about PID Providers. PPNot_02 The common set of information to be notified about a PID Provider SHALL include at least: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. A business registration number from an official record, b. Identification data from that official record. 2. PID Provider trust anchors, i.e., public keys and name as per point 1) ii) above, supporting the authentication of PIDs issued by the PID Provider, 3. PID Provider Access Certificate Authority trust anchors, i.e., public keys and CA name, supporting the authentication of the PID Provider by Wallet Units at the service supply point(s) listed per point 4. below. 4. Service supply point(s), i.e., the URL(s) at which a Wallet Unit can start the process of requesting and obtaining a PID. Notes: - Relating to point 3. above: PID Provider Access Certificate Authority trust anchors are notified separately from the Access Certificate Authority (see Section G below), since PID Providers are -legally speaking- not Relying Parties. - For the concept of an Access Certificate Authority, see also [Topic 27] and Section 6.3.2 of the ARF main document. PPNot_03 PID Providers SHALL ensure that all PIDs they issue can be authenticated using the PID Provider trust anchors notified to the Commission. PPNot_04 PID Providers SHALL ensure that their PID Provider access certificates can be authenticated using the PID Provider Access Certificate Authority trust anchors notified to the Commission. Note: [Topic 6] describes how access certificates will be used. PPNot_05 PID Provider trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled PID Provider Trusted List which is sealed by the Commission. PPNot_06 PID Provider Access Certificate Authority trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled PID Provider Access Certificate Authority Trusted List which is signed or sealed by the Commission. PPNot_07 The format of the PID Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. <p>C. Requirements for the notification of Wallet Providers</p> Index Requirement specification WPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about Wallet Providers. WPNot_02 The common set of information to be notified about a Wallet Provider SHALL include: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. Business registration number from an official record, and b. Identification data from the official record. 2. Wallet Provider trust anchors, i.e., public keys and name as per point 1. b. above, supporting the authentication of Wallet Unit Attestations issued by the Wallet Provider. Notes: - See [Topic 9] and [Topic 38] for the definition of the WUA. - A Wallet Provider does not need an access certificate to interact with Wallet Units. WPNot_03 Wallet Providers SHALL ensure that all WUAs they issue can be authenticated using the trust anchors notified to the Commission. WPNot_04 Wallet Provider trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled Wallet Provider Trusted List which is sealed by the Commission. WPNot_05 The format of the Wallet Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. WPNot_06 If a Wallet Provider is withdrawn (see requirement GenNot_05 above), that Wallet Provider SHALL immediately revoke all of its valid WUAs, in accordance with the requirements in Topic 38. If a Wallet Provider is suspended, that Wallet Provider and the Member State SHALL agree on the necessary precautionary measures that need to be taken, which MAY include the immediate revocation of all or some of its valid WUAs. <p>D. Requirements for the notification of QEAA Providers</p> <p>There is no notification of QEAA Provider foreseen by the [European Digital Identity Regulation], except for establishing the Art. 22 Trusted List once a qualified status is granted. QTSPs issuing QEAAs to Wallet Units SHALL abide by the Implementing Act to be adopted under Art. 45d(5).</p> <p>E. Requirements for the notification of PuB-EAA Providers</p> <p>This notification is pursuant to Art.45f(3) and to the implementing acts to be adopted pursuant to Art.45f(7). It should be noted that the purpose of this notification is mainly to the attention of QTSPs issuing qualified certificates for electronic signatures or seals to those public sector bodies referred to in Article 3, point (46), and identified as the issuer in the PuB-EAA. The Trusted List compiled by the Commission is deemed to be a constitutive list of such Art.3(46) bodies recognised for issuing PUB-EAAs. Consequently, QTSPs are expected to verify such lists prior to issuing a qualified certificate to any entity claiming to be a Art.3(46) body.</p> Index Requirement specification PuBPNot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about PuB-EAA Providers. PuBPNot_02 The common set of information to be notified by Member States about PuB-EAA Providers SHALL include at least: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. Registration number as in official record, and b. Official record identification data. iv. Identification data of the Union or national law under which a. Either the PuB-EAA Provider is established as the responsible body for the Authentic Source based on which the electronic attestation of attributes is issued, or b. The PuB-EAA Provider is the body designated to act on behalf of the responsible body referred to in point 1. iv. a. v.The conformity assessment report issued by a conformity assessment body, confirming that the requirements set out in paragraphs 1, 2 and 6 of Article 45f are met. 2. Service supply point(s), i.e., the URL(s) at which a Wallet Unit can start the process of requesting and obtaining a PuB-EAA from the PuB-EAA Provider. PuBPNot_03 The format of the PuB-EAA Provider Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. <p>F. Requirements for the notification of non-qualified EAA Providers</p> <p>There is no notification of non-qualified EAA Providers foreseen by the [European Digital Identity Regulation]. As stated in [Topic 12], the Schema Provider for an Attestation Rulebook describing a type of attestation that is an EAA defines in the Rulebook the mechanisms allowing a Relying Party to obtain, in a trustworthy manner, the trust anchor(s) of EAA Providers issuing this type of EAA.</p> <p>G. Requirements for the notification of Access  Certificate Authorities</p> <p>Relying Party Access Certificate Authorities (CA) are responsible for signing access certificates they issue to Relying Parties. Legally speaking, Relying Parties in this context also include QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers, but for clarity these roles are mentioned separately in the requirements below. Where these requirements use the term 'Access Certificate Authorities' without further qualifications, this includes Access Certificate Authorities for QEAA Providers, PuB-EAA Providers, non-qualified EAA Providers, and Relying Parties.</p> <p>For more information about Relying Party Access Certificate Authority, see [Topic 27].</p> Index Requirement specification RPACANot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about Access Certificate Authorities and Registrars of Registration Certificates. RPACANot_02 The common set of information to be notified about an Access Certificate Authority and Registrars of Registration Certificates SHALL include: 1. Identification data: i) MS/Country of establishment, ii) Name as registered in an official record, iii) Where applicable: - A business registration number from an official record, - Identification data from that official record. 2. Access Certificate Authority or Registration Certificate Authority trust anchors, i.e., public keys and name as per point 1) ii), supporting the authentication of Relying Parties by Wallet Units. RPACANot_03 Relying Parties, QEAA Providers, PuB-EAA Providers, and non-qualified EAA Providers SHALL ensure that their access certificates can be authenticated using the Access Certificate Authority trust anchors notified to the Commission. RPACANot_04 Access Certificate Authority and Registration Certificate Authority trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled Access Certificate Authority and Registration Certificate Authority Trusted Lists which are signed or sealed by the Commission. Note: The adopted version of the CIR for Relying Party registration will clarify how the Trusted List for Registrars of Registration Certificates are to be arranged, the certificates not being PKI/X.509 certificates as is the case with standard EU Trusted Lists. It is also to be clarified in the related technical specification if Access Certificate Authorities can sign other certificates than access certificates. RPACANot_05 The format of an Access Certificate Authority Trusted List SHALL comply with ETSI TS 119 612 v2.1.1 or with a suitable profile similarly derived from ETSI TS 102 231. RPACANot_06 If an Access Certificate Authority is suspended or cancelled (see requirement GenNot_05 above), that Access Certificate Authority SHALL immediately revoke all of its valid access certificates. Note: When the access certificates of an Intermediary that has its RPACs issued by said suspended or cancelled Access Certificate Authority are revoked, the End-Relying Parties depending on said Intermediary, while having valid registration certificates from a Registrar will have no access to transact with EUDI Wallet Users until the End-Relying Parties a) transit to another Intermediary that has RPAC issued by an active Access Certification Authority or b)the original Access Certificate Authority can continue its operations and re-issue earlier revoked certificates for the original Intermediary. RPACANot_07 If a Registrar of Relying Party Registration Certificates is suspended or cancelled (see requirement GenNot_05 above), that Registrar of Relying Party Registration Certificates SHALL immediately revoke all of its valid registration certificates. <p>H. Requirements for the publication of Trusted Lists compiled by the  Commission</p> Index Requirement specification TLPub_01 The European Commission SHALL establish technical specifications for the system enabling the publication by the Commission of the information notified by the Member States regarding PID Providers, Wallet Providers, PuB-EAA Providers, Access Certificate Authorities and Registrars of Registration Certificates. TLPub_02 The European Commission SHALL establish technical specifications for the set of information to be published about: PID Providers, Wallet Providers,PuB-EAA Providers, Access Certificate Authorities and Registrars of Registration Certificates based on the information notified by the Member States. Note: The information to be published MAY be different from the information to be notified per requirements PPNot_01, WPNot_01, PuBPNot_01, and RPACANot_01 above, respectively. TLPub_03 The publication of the information referred to in TLPub_01 SHALL take place over a secure channel protecting the authenticity and integrity of the published information. TLPub_04 The technical system mentioned in TLPub_01 SHALL NOT require authentication or prior registration and authorisation of any entity wishing to retrieve the published information. TLPub_05 The information referred to in TLPub_01 SHALL be published in an electronically signed or sealed form that is suitable for automated processing, and in a human-readable format, e.g., through introspection and display facilities, over an authenticated channel. TLPub_06 The Commission SHALL publish in the OJEU the locations of the Trusted Lists for PID Providers, Wallet Providers, PuB-EAA Providers, and Access Certificate Authorities. TLPub_07 The Commission SHALL publish in the OJEU the trust anchors to be used for verifying the signature or seal mentioned in TLPub_05. TLPub_08 As part of the specifications referred to in TLPub_01, the European Commission SHALL establish technical specifications for ensuring the availability and authenticity of the full history regarding the information notified about PID Providers, Wallet Providers, PuB EAA Providers, Access Certificate Authorities and Registrars of Registration Certificates."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2332-topic-32-pid-interoperability","title":"A.2.3.32 Topic 32 - PID interoperability","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2333-topic-33-wallet-unit-backup-and-restore","title":"A.2.3.33 Topic 33 - Wallet Unit backup and restore","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_24","title":"Description","text":"<p>Backup and restore functionality is needed in case the User has lost access to their current Wallet Unit, for example in case of loss, theft, or breakdown. It is also needed if the User wants to start using another Wallet Unit, for example because they have bought a new device, need to factory-reset their existing device, or want to migrate to another Wallet Solution. In all of these cases, the User wants to restore the PIDs and attestations in their existing Wallet Unit on their new Wallet Unit, with as minimal an effort as possible.</p> <p>The [European Digital Identity Regulation] does not contain a requirement mandating backup and restore functionality in the Wallet. However, Wallet Providers should implement backup and restore functionality nevertheless, because it will be expected by Users. In fact, the requirements in Topic 34 also ensure the possibility of backup and restore.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_22","title":"HLRs","text":"<p>There are no specific requirements in this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2334-topic-34-migrate-to-a-different-wallet-solution","title":"A.2.3.34 Topic 34 - Migrate to a different Wallet Solution","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_25","title":"Description","text":"<p>Article 5a 4 (g) of the [European Digital Identity Regulation] ensures the User's rights to data portability. Data portability means that a User can migrate to a different Wallet Solution. The User installs an instance of the new Wallet Solution, and then wants to restore the PIDs and attestations in their existing Wallet Unit to their new Wallet Unit. This should be possible with as minimal an effort as possible, and independent of whether the User still has access to their existing Wallet Unit.</p> <p>The solution described in this Topic is to introduce a Migration Object in each Wallet Unit. This object is a list of PIDs and attestations contained in the Wallet Unit, together with the information needed to request (re-)issuance of that PID or attestation. Note that the Migration Object does not contain any private keys of PIDs or attestations. In most security architectures for a Wallet Solution described in Section 4.5 of the ARF main document, this is impossible, since the WSCA/WSCD that contains these private keys does not allow their extraction under any circumstances. An exception may be architectures in which attestation private keys are managed in a remote HSM and the migration is to a new Wallet Unit of the same Wallet Provider. However, in such cases, restoring functionality of the PIDs and attestations in a new Wallet Unit does not necessitate that private keys must be exported to another HSM. Rather, it implies the User must be able to authenticate towards the existing HSM from the new Wallet Unit, and be recognised as an existing User.</p> <p>The fact that the Migration Object does not contain private keys means that PIDs and attestations cannot be backed up and restored from the object in such a way that they are usable in a new Wallet Unit without involvement of the PID Provider or Attestation Provider. Instead, the User must ask the respective PID Provider(s) or Attestation Provider(s) to re-issue the PID(s) or attestation(s) to the new Wallet Unit. The only function of the Migration Object is to simplify this process by listing the PIDs and attestations present in the existing Wallet Unit, together with the information needed by the new Wallet Unit to start the re-issuance process.</p> <p>The Migration Object does not contain attribute values or attribute identifiers, as that data is considered sensitive and is not useful anyway because of the limitations explained above. Instead, the object only contains a list of attestation types and the related Attestation Providers. However, even this limited information may be considered sensitive in some cases. Therefore, the Migration Object is stored in such a way that its confidentiality is ensured and that it can be used only by the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_23","title":"HLRs","text":"<p>A. Back-up requirements</p> Index Requirement specification Mig_01 A Wallet Unit SHALL include and keep up-to-date a Migration Object, containing the following information: - The contents of the log for all transactions executed through the Wallet Unit, as listed in requirement DASH_02. - A list of PIDs and attestations present in the Wallet Unit, according to the requirements in this Topic. Mig_02 The Commission SHALL define a technical specification of the Migration Object. Mig_03 For each PID or attestation that is issued to it, a Wallet Unit SHALL add all data that is necessary to request re-issuance of that PID or attestation to the Migration Object. This SHALL include at least the attestation type and the PID Provider or Attestation Provider that issued the PID or attestation, as well as their service supply points. However, the Migration Object SHALL NOT contain attribute identifiers or attribute values, and SHALL NOT contain any private keys of the PID or attestation. Mig_03b If the User deletes a PID or attestation from their Wallet Unit, the Wallet Unit SHALL delete the corresponding entry from the Migration Object. Mig_04 The Wallet Unit SHALL store the Migration Object in an external storage or remote location of the User's choice, in such a way that the User can still retrieve the object from a new Wallet Unit in case the existing Wallet Unit becomes unavailable. Note: The new Wallet Unit may be either an instance of the same Wallet Solution as the old one, or an instance of a different Wallet Unit. Mig_05 The Wallet Unit SHALL store the Migration Object in such a way that its confidentiality is protected and that it is protected against use by others than the User. Note: This could be done, for example, by using password-based cryptography to encrypt the object. <p>B. Restore Requirements</p> Index Requirement specification Mig_06 Directly after installation of a new Wallet Instance, the Wallet Instance SHALL enable the User to import a Migration Object from an external storage or remote location indicated by the User. Mig_07 For each PID and attestation listed in the Migration Object, the Wallet Unit SHALL enable the User to select that PID or attestation. When selected, the Wallet Unit SHALL request the respective PID Provider or Attestation Provider to re-issue that PID or attestation. If the Migration Object lists a PID, the PID SHALL be the first to be restored. Mig_07a The Wallet Unit SHALL ask the User whether they want to restore the log from the Migration Object. When the User agrees, the Wallet Unit SHALL restore the log, and SHALL append future transactions to this log according to the requirements in Topic 19. Mig_08 Empty Mig_09 Empty Mig_10 Empty Mig_11 The processes and interfaces used for re-issuance of a PID or attestation (as part of a migration process) SHALL be the same as those used for their issuance, as specified in Topic 10. Mig_12 Empty Mig_13 Empty Mig_14 Empty Mig_15 Empty Mig_16 Empty"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2335-topic-35-pid-issuance-service-blueprint","title":"A.2.3.35 Topic 35 - PID issuance service blueprint","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_26","title":"Description","text":"<p>This Topic analyses the User journeys for PID issuance to a Wallet Unit. This Topic focuses on natural persons only.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_24","title":"HLRs","text":"<p>No HLRs are present for this Topic. Note that issuance of PID is discussed in Topic 10; relevant HLRs can be found there.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2336-topic-36-risk-analysis-of-the-wallet-usage","title":"A.2.3.36 Topic 36 - Risk Analysis of the Wallet usage","text":"<p>There are no HLRs for this Topic.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2337-topic-37-qes-remote-signing-technical-requirements","title":"A.2.3.37 Topic 37 - QES -- Remote Signing - Technical Requirements","text":"<p>See Topic 16.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2338-topic-38-wallet-unit-revocation","title":"A.2.3.38 Topic 38 - Wallet Unit revocation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_27","title":"Description","text":"<p>This Topic discusses Wallet Unit revocation. In particular, it answers the following questions: - How can a Wallet Provider revoke a Wallet Unit? - During issuance of an attestation, how can an Attestation Provider verify whether a Wallet Unit has been revoked? - When requesting attributes from an attestation, how can a Relying Party verify whether a Wallet Unit has been revoked?</p> <p>In case of a security issue, Article 5e of the [European Digital Identity Regulation] requires Wallet Providers to first suspend a Wallet Unit and to revoke it only if the issue cannot be solved within three months. However, the suspension of a Wallet Unit is an administrative process, which does not imply that the WUAs of that Wallet Unit need to be suspended, as opposed to being revoked. Instead, if the Wallet Provider administratively suspends a Wallet Unit, it will immediate revoke all corresponding WUAs. If (within three months) the situation is remedied and the Wallet Unit can be re-instated, the Wallet Provider will issue one or more new WUAs to the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_25","title":"HLRs","text":"<p>A. Issuing a Wallet Unit Attestation</p> Index Requirement specification WURevocation_01 To enable a Relying Party or an Attestation Provider to verify the authenticity and (if necessary, see requirement VCR_01) the revocation status of a Wallet Unit it is interacting with, a Wallet Provider SHALL issue one or more Wallet Unit Attestations to the Wallet Unit, as specified in Topic 9. Note: The first of these WUAs will be issued during the activation phase of a Wallet Unit. During the lifetime of the Wallet Unit, the Wallet Provider will re-issue WUAs as needed. WURevocation_02 During the lifetime of the Wallet Unit, the Wallet Provider SHALL ensure that the Wallet Unit at all times is able to respond with a valid WUA to a presentation request from a Relying Party. WURevocation_03 Empty WURevocation_04 Empty WURevocation_05 Empty <p>A. Revoking a Wallet Unit</p> Index Requirement specification WURevocation_06 Empty WURevocation_07 A Wallet Provider SHALL be able to revoke a Wallet Unit by revoking its WUA(s), as specified in [Topic 7]. Note: Topic 7 also allows the use of short-lived (i.e., valid for less than 24 hours) WUAs that do no need to be revoked. In that case, the Wallet Provider revokes the Wallet Unit by no longer issuing WUAs to it. WURevocation_08 Empty WURevocation_09 During the lifetime of a Wallet Unit, the Wallet Provider SHALL regularly verify that the security of the Wallet Unit is not breached or compromised. If the Wallet Provider detects a security breach or compromise, the Wallet Provider SHALL analyse its cause(s) and impact(s). If the breach or compromise affects the trustworthiness or reliability of the Wallet Unit, the Wallet Provider SHALL administratively revoke or suspend the Wallet Unit and SHALL immediately revoke the corresponding WUA(s) if they have a remaining validity period of 24 hours or longer. The Wallet Provider SHALL do so at least in the following circumstances: - If the security of the Wallet Unit, or the security of the mobile device and OS on which the corresponding Wallet Instance is installed, or the security of a WSCA it uses for managing cryptographic keys and sensitive data, is breached or compromised in a manner that affects its trustworthiness or reliability. - If the security of the Wallet Solution is breached or compromised in a manner that affects the trustworthiness or reliability of all corresponding Wallet Units. - If the security of the common authentication and data protection mechanisms used by the Wallet Unit is breached or compromised in a manner that affects their trustworthiness or reliability. - If the security of the electronic identification scheme under which the Wallet Unit is provided is breached or compromised in a manner that affects its trustworthiness or reliability. WURevocation_9b If within three months from an administrative suspension of a Wallet Unit the security breach or compromise is remedied, the Wallet Provider SHALL issue one or more WUAs to the Wallet Unit, such that the User can again use it. WURevocation_10 A Wallet Provider SHALL revoke a Wallet Unit upon the explicit request of the User registered during the Wallet Unit activation process, see Topic 40. To do so, the Wallet Provider SHALL revoke all valid WUA(s) for that Wallet Unit, if they have a remaining validity period of 24 hours or longer. The Wallet Provider SHALL authenticate the User before accepting a request to revoke the Wallet Unit. WURevocation_11 A Wallet Provider SHALL revoke a Wallet Unit upon the explicit request of a PID Provider, in case the natural person using the Wallet Unit has died or the legal person using the Wallet Unit has ceased operations. To do so, the Wallet Provider SHALL revoke all valid WUA(s) for that Wallet Unit, if they have a remaining validity period of 24 hours or longer. To identify the Wallet Unit that is to be revoked, the PID Provider SHALL use the Wallet Unit identifier provided by the Wallet Provider in the WUA during PID issuance. WURevocation_12 Before revoking a Wallet Unit per WURevocation_11, the Wallet Provider SHALL verify that the party requesting revocation is indeed a valid PID Provider listed in the Trusted List of PID Providers. WURevocation_13 Before requesting a Wallet Provider to revoke a Wallet Unit per WURevocation_11, the PID Provider SHALL ensure that the revocation does not harm the interests of any of the stakeholders. The PID Provider SHALL have (and follow) a documented policy to ensure that this is the case. <p>B. Informing the User</p> Index Requirement specification WURevocation_14 A Wallet Provider SHALL inform a User without delay, and within 24 hours at most, in case the Wallet Provider decided to revoke the User's Wallet Unit. The Wallet Provider SHALL also inform the User about the reason(s) for the revocation. This information SHALL be understandable for the general public. It SHALL include (a reference to) technical details about any security breach if applicable. WURevocation_15 Empty WURevocation_16 To inform a User about the revocation of their Wallet Unit, the Wallet Provider SHALL use a communication channel that is independent of the Wallet Unit. In addition, the Wallet Provider MAY use the Wallet Unit itself to inform the User. <p>C. Verifying the revocation status of a Wallet Unit</p> Index Requirement specification WURevocation_17 Empty WURevocation_18 A PID Provider or Attestation Provider SHOULD, for each of its valid PIDs or attestations, regularly verify whether the Wallet Provider revoked the Wallet Unit on which that PID or attestation is residing. If it turns out that the Wallet Unit is revoked, the PID Provider or Attestation Provider SHOULD immediately revoke the respective PID or attestation in accordance with all requirements in [Topic 7]. Notes: - How the PID Provider or Attestation Provider can do this verification depends on the details of the WUA and on WUA management. This is a topic that will be further discussed. - The reverse is not true: When a PID is revoked, this does not imply that the Wallet Unit on which it is residing should also be revoked. Instead, the Wallet Unit moves to the Operational state. See ARF main document Section 4.6.3. WURevocation_19 A Relying Party SHOULD verify the revocation status of the Wallet Unit by requesting and verifying a WUA and subsequently verifying the revocation status of the WUA following the steps specified per VCR_11. WURevocation_19a To safeguard User privacy, a Relying Party Instance SHOULD request only the data from the WUA that is necessary for carrying out a revocation check for the Wallet Unit. Note: The format of the WUA will be further discussed with Member States. However, the WUA contains information about the Wallet Instance and the related WSCD(s) that are only relevant for PID Providers and Attestation Providers, and that a Relying Party should not know. WURevocation_19b To safeguard User privacy, a Wallet Unit SHALL present to a Relying Party only the data in the WUA that is necessary for carrying out a revocation check for the Wallet Unit. Note: See note to requirement WURevocation_19a. In addition, this requirement implies that the format of the WUA must enable the selective disclosure of attributes. WURevocation_20 For the verification of WUAs, a Relying Party SHALL accept the trust anchors in the Wallet Provider Trusted List. Note: The Wallet Provider Trusted List is explained in [Topic 31]. WURevocation_21 When no reliable information regarding the revocation status of a WUA is available, a Relying Party SHOULD perform a risk analysis considering all relevant factors for the use case, before taking a decision to accept or refuse the Wallet Unit."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2339-topic-39-wallet-to-wallet-technical-topic","title":"A.2.3.39 Topic 39 - Wallet to wallet technical Topic","text":"<p>See Topic 30.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2340-topic-40-wallet-instance-installation-and-wallet-unit-activation-and-management","title":"A.2.3.40 Topic 40 - Wallet Instance installation and Wallet Unit activation and management","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_28","title":"Description","text":"<p>This Topic discusses requirements related to the installation of a Wallet Instance by the User, the subsequent activation of the Wallet Unit by the User and the Wallet Provider, and the management of the Wallet Unit throughout its lifetime.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a-hlrs-for-wallet-instance-installation","title":"A - HLRs for Wallet Instance installation","text":"Index Requirement specification WIAM_01 To ensure that the User can trust the Wallet Solution, a Wallet Provider SHOULD make its certified Wallet Solution available for installation only via the official app store of the relevant operating system (e.g., Android, iOS). Note: This allows the operating system of the device to perform relevant checks regarding the authenticity of the Wallet Unit. WIAM_02 If a Wallet Provider makes its certified Wallet Solution available for installation through other means than the official OS app store, it SHALL implement a mechanism allowing the User to verify the authenticity of the Wallet Unit. Moreover, it SHALL provide clear instructions to the User on how to install the Wallet Instance, including at least: - instructions on the verification of the authenticity of the Wallet Instance to be installed, - instructions on bypassing of any operating system limitations on side-loading of apps, if applicable, and ensuring that these limitations are restored after the Wallet Instance has been installed. Note: This requirement also applies for the installation of a Wallet Instance on a User device that is not a mobile device, and for which no official operating system app store may exist."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#b-hlrs-for-wallet-unit-activation","title":"B - HLRs for Wallet Unit activation","text":"Index Requirement specification WIAM_03 A Wallet Provider SHALL ensure that a Wallet Instance starts a process to activate the new Wallet Unit with the Wallet Provider immediately after installation or when the User first opens the Wallet Instance. The Wallet Provider SHALL ensure that the Wallet Instance starts this process only with a secure backend of the Wallet Provider. WIAM_04 During the activation process of a new Wallet Unit, the Wallet Provider SHALL verify that the new Wallet Instance is a genuine instance of its Wallet Solution. WIAM_05 During the activation process of a new Wallet Unit, the Wallet Provider SHALL process information about the User device and the available WSCAs and WSCDs, as far as necessary to issue a Wallet Unit Attestation to the Wallet Unit conform all requirements in Topic 9 section A. The Wallet Provider MAY process additional information necessary for managing the Wallet Unit, but it SHALL NOT process more information than it reasonably needs for legitimate purposes. The Wallet Provider SHALL request User consent (through the Wallet Instance) for all information and data it will process, both during activation and throughout the lifetime of the Wallet Unit. The Wallet Provider SHALL inform the User about the purposes of data processing, in accordance with the General Data Protection Regulation. WIAM_06 The Wallet Provider SHALL request the User, through the new Wallet Instance, to set up a User account at the Wallet Provider. The Wallet Provider SHALL explain to the User that this is necessary to enable the User to request revocation of the Wallet Unit in case of theft or loss. The Wallet Provider SHALL register one or more User authentication methods that the Wallet Provider will use to authenticate the User in the future. These methods SHALL be independent of the Wallet Unit and the User device. The Wallet Provider SHALL allow the User to register using an alias instead of true identity data. The Wallet Provider SHALL NOT use any registered User data for purposes other than User authentication, unless the User gives explicit consent to do so. The Wallet Provider SHALL register the relationship between the Wallet Unit and the corresponding User account. WIAM_07 A Wallet Provider SHALL activate a new Wallet Unit before a User can use it to have issued an PID or attestation. Note: The WUA is issued as part of the activation. WIAM_08 A Wallet Provider SHALL only activate a new Wallet Unit if it has verified that: - The Wallet Unit includes at least one WSCA that is certified to be compliant with applicable requirements in this Topic, for Level of Assurance High in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. In addition, the Wallet Unit MAY include one or more other WSCAs, which SHALL be certified to be compliant with applicable requirements for Level of Assurance Substantial or High. - The private key corresponding to the public key in the WUA (see WUA_07) is protected by the respective WSCA under control of the User. WIAM_09 If a WSCA/WSCD contains cryptographic keys related to multiple Wallet Units, the Wallet Provider SHALL ensure that a Wallet Unit can only access keys that are related to that Wallet Unit. WIAM_10 During the activation of a new Wallet Unit, a Wallet Provider SHALL create and sign at least one Wallet Unit Attestation, and issue them to the Wallet Unit."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#c-hlrs-for-wallet-unit-management","title":"C - HLRs for Wallet Unit management","text":"Index Requirement specification WIAM_11 During the lifetime of the Wallet Unit, the Wallet Provider SHALL update the Wallet Unit as necessary to ensure its continued security and functionality. WIAM_12 All communication between the Wallet Provider and the Wallet Unit SHALL be mutually authenticated and SHOULD be encrypted. WIAM_13 If the User uninstalls the Wallet Unit, the Wallet Unit SHALL ensure that all cryptographic key material in the WSCA(s) related to the Wallet Unit is securely destroyed. This includes all keys of the WUAs, PIDs and attestations stored in the Wallet Unit. Note: Key deletion is a cryptographic key operation and requires User authentication, as specified in requirement WIAM_14. WIAM_13a If a Wallet Unit supports the [W3C Digital Credentials API] and the User uninstalls the Wallet Unit, the Wallet Unit SHALL disclose the fact that it no longer stores any PID(s) or attestation(s) to the Digital Credentials API framework. WIAM_14 A WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of a Wallet Unit (i.e., a WUA key) or of a PID or an attestation stored in a Wallet Unit. For a PID key (which is part of the EUDI Wallet eID means), this WSCA SHALL be certified to be compliant with applicable requirements for Level of Assurance High in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. Note: Many actions of the Wallet Unit, such as processing a Relying Party request and presenting an attestation, require multiple cryptographic operations, for example ephemeral key generation followed by key agreement and message encryption. This requirement does not imply that separate User authentication is necessary before each of these. Rather, a successful User authentication will be valid for all cryptographic operations necessary for a Wallet Unit action. It is up to the Wallet Provider to determine what constitutes a 'Wallet Unit action', finding a balance between security (more User authentications) and User convenience (fewer User authentications). During certification of the Wallet Solution, it will be verified that the solution provides an adequate level of security. WIAM_15 A Wallet Unit SHALL authenticate the User before performing any operation. The Wallet Unit SHOULD rely on a WSCA to do so, per WIAM_14. If this is infeasible, the Wallet Unit SHOULD use a User authentication mechanism implemented on OS level, such as a lock screen, but, if this is infeasible, it MAY also use a separate User authentication mechanism implemented in the Wallet Instance. Notes: - The goal of this requirement is to prevent any User interaction without User authentication. User interaction includes, for example, using the user interface to see which attestations are present in the Wallet Unit or what are the values of specific User attributes. - An example where using a WSCA for User authentication is not feasible is a Wallet Unit using a remote HSM as its WSCA and being without internet connection. - In general, using an OS-level User authentication mechanism instead of a separate mechanism implemented in the Wallet Instance is beneficial for security and User experience. Please note that this ARF assumes that a User device is a personal device, meaning that the User will not share it with other people. - An example where using an OS-level User authentication mechanism is not feasible is where the User has disabled such mechanisms (i.e., no lock screen is used). In that case, a Wallet Unit that is not able to use a WSCA for User authentication must use a separate authentication mechanism implemented in the Wallet Instance as a fallback. WIAM_16 For User authentication according to WIAM_15, a Wallet Unit SHALL implement an idle timeout, after which User authentication SHALL again be required. The Wallet Unit SHOULD provide the User with the option to set the idle timeout to a duration shorter than the default timeout. WIAM_17 A WSCA SHALL be able to authenticate a User, in accordance with the requirements in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. WIAM_18 A WSCA SHALL be able to generate a new key pair on request of the Wallet Provider via the Wallet Instance. WIAM_19 A WSCA SHALL be able to prove possession of the private key corresponding to a public key on request of a Wallet Instance, for example by signing a challenge with that private key. WIAM_20 A WSCA SHALL protect a private key it generated during the entire lifetime of the key. This protection SHALL at least imply that the WSCA prevents the private key from being extracted in the clear. If a WSCA is able to export a private key in encrypted format, the resulting level of protection SHALL be equivalent to the protection level of the private key when stored in the WSCA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2341-topic-41-minimum-requirements-on-pub-eaas-rulebooks","title":"A.2.3.41 Topic 41 - Minimum requirements on PuB-EAAs rulebooks","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2342-topic-42-requirements-for-qtsps-to-access-authentic-sources","title":"A.2.3.42 Topic 42 - Requirements for QTSPs to access Authentic Sources","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_29","title":"Description","text":"<p>This Topic discusses the ability of QTSPs issuing electronic attestations of attributes to verify those attributes by electronic means at the request of the User, wherever those attributes rely on Authentic Sources within the public sector.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_26","title":"HLRs","text":"Index Requirement specification QTSPAS_01 In accordance with technical specifications referred to in QTSPAS_07, Member States SHALL define: - discovery mechanisms that enable QTSPs to request information about Authentic Sources or designated intermediaries recognised at the national level. This includes information regarding the attributes of a natural or legal person for which the Authentic Source or designated intermediary is considered a primary source, or for which it is recognised as authentic in accordance with Union law or national law, including administrative practices. - procedures for QTSPs to request the verification of attributes from Authentic Sources. QTSPAS_02 An Authentic Source in the public sector, or its designated intermediary, SHALL implement an interface complying with the technical specification mentioned in QTSPAS_07 for receiving verification requests and sending responses. For each received request, the Authentic Source SHALL - identify and authenticate the requestor in such a way that it can subsequently determine whether the requestor is a QTSP issuing qualified electronic attestation of attributes, for example by means of a lookup in the QTSP Trusted List. - authenticate the User and obtain their approval, if it is legally obliged to do so, in addition to the User authentication and approval already performed by the QTSP according to QTSPAS_08. - verify whether the attribute values claimed by the QTSP match the values held by the Authentic Source; and, finally, - respond with one of the following for each attribute: +'match', if the attribute value held for this User by the Authentic Source is identical to the value claimed by the QTSP, + 'no match', if the attribute value held for this User by the Authentic Source is not identical to the value claimed by the QTSP, including if the Authentic Source is the authentic source for this attribute but does not hold a value for this User, +'unknown', if the Authentic Source is not the authentic source for this attribute. QTSPAS_03 An Authentic Source or designated intermediary SHALL respond to a verification request for attributes by any QTSP issuing qualified electronic attestation of attributes. QTSPAS_04 An Authentic Source or designated intermediary SHALL implement the technical specifications mentioned in QTSPAS_01, so that the QTSP will receive the result of the verification of the requested attributes as described in QTSPAS_02. If the verification is deferred, the response to the QTSP SHALL include the maximum time that it will take to verify the requested attributes, and a unique identifier that the QTSP SHALL use to obtain the result of the verification. QTSPAS_05 A QTSP SHALL send an attribute verification request directly to the Authentic Source or designated intermediary recognised at national level, after discovering it using the mechanisms mentioned in QTSPAS_01. QTSPAS_06 Member States SHALL specify the processes and mechanisms to designate the Authentic Sources or intermediaries recognised at national level in accordance with Union or national law, allowing these Authentic Sources or intermediaries to verify the attributes presented to them by QTSPs. QTSPAS_07 The Commission SHALL publish, in cooperation with the European Digital Identity Cooperation Group, a technical specification, referring to applicable standards, specifications and procedures, that will cover at least the attributes specified in Annex VI, wherever those attributes rely on Authentic Sources within the public sector, for which Member States must ensure that measures are taken to allow qualified providers of electronic attestations of attributes to verify by electronic means, at the request of the User, their authenticity against the relevant authentic source. QTSPAS_07a The standards and procedures mentioned in QTSPAS_07 SHOULD, whenever possible, be aligned and compatible with those used for the platforms implementing the Once Only Technical System (OOTS). Note: There is a clear synergy of both of these data exchange approaches. In fact, the national OOTS node would be a candidate for acting as an intermediary between QTSPs issuing QEAAs and the Authentic Sources. QTSPAS_08 A QTSP SHALL obtain approval from the User to verify the authenticity of the attributes, before requesting the verification of those attributes by the relevant Authentic Source or designated intermediary."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2343-topic-43-embedded-disclosure-policies","title":"A.2.3.43 Topic 43 - Embedded disclosure policies","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_30","title":"Description","text":"<p>This topic is focused on identifying high-level requirements for disclosure policies which may be embedded in an attestation. Such a policy may be created by the Attestation Provider, and allows the Wallet Unit, using data obtained from the Relying Party, to determine whether the Attestation Provider agrees with releasing attributes from the attestation to the Relying Party. Note that an embedded disclosure policy, if present, is applicable for any attribute in the attestation.</p> <p>Note that embedded disclosure policies do not apply to Wallet-to-Wallet interactions as described in Topic 30.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_27","title":"HLRs","text":"Index Requirement specification EDP_01 A Wallet Unit SHALL enable an Attestation Provider to optionally express an embedded disclosure policy for a QEAA, PuB-EAA, or non-qualified EAA. Note: The [European Digital Identity Regulation] does not contain a requirement for PIDs to be able to contain an embedded disclosure policy. EDP_02 A Wallet Unit SHALL support embedded disclosure policies implementing the 'Authorised relying parties only policy' described in Annex III of Implementing Regulation (EU) 2024/2979. Such an embedded disclosure policy SHALL contain a list of EU-wide unique identifiers of Relying Parties as specified in Reg_32. The Wallet Unit SHALL retrieve the identifier from the Relying Party access certificate presented by the Relying Party, and compare it to the list of authorised identifiers in the policy. Note: If the Relying Party is an intermediary, see EDP_2a EDP_2a If the Relying Party is an intermediary, the Wallet Unit SHALL retrieve the name and the unique identifier of the 'end' Relying Party from the presentation request and use them to obtain information from the Registrar's on-line service on the 'end' Relying Party and an intermediary it is linked to (to check if it is the same entity as in the access certificate). EDP_03 A Wallet Unit SHALL support embedded disclosure policies implementing the 'Specific root of trust' policy described in Annex III of Implementing Regulation (EU) 2024/2979. Such an embedded disclosure policy SHALL contain a list of root or intermediate certificates used for signing Relying Party access certificates. The Wallet Unit SHALL compare the certificate chain that was used to sign the access certificate provided by the Relying Party to the list of authorised root or intermediate certificates in the policy. EDP_04 Empty EDP_05 An embedded disclosure policy SHOULD contain a link to a website of the Attestation Provider explaining the disclosure policy in layman's terms. If this is the case, the Wallet Unit SHALL display the link to the User and allow them to navigate to that website. EDP_06 The Wallet Unit SHALL evaluate an embedded disclosure policy in conjunction with the information received from the requesting Relying Party, in order to determine if the Relying Party has permission from the Attestation Provider to access the requested attestation. EDP_07 The Wallet Unit SHALL enable the User, based on the outcome of the evaluation of the applicable embedded disclosure policy(s), to deny or allow the presentation of the requested attestation to the Relying Party. EDP_08 The Commission SHALL take measures to ensure a technical specification is created establishing common mechanisms for the specification of embedded disclosure policies by Attestation Providers, and for the evaluation of such policies by Wallet Units. EDP_09 An Attestation Provider SHALL include an embedded disclosure policy (if any) by value in the Issuer metadata related to the attestation, in compliance with the [OpenID4VCI] issuance protocol or an extension thereof specified in the technical specification mentioned in EDP_08. EDP_10 During attestation issuance, a Wallet Unit SHALL retrieve and store locally the corresponding embedded disclosure policy, if any. EDP_11 An Attestation Provider SHALL revoke an attestation if a corresponding embedded disclosure policy is added, changed, or deleted."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2344-topic-44-relying-party-registration-certificates","title":"A.2.3.44 Topic 44 - Relying Party registration certificates","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_31","title":"Description","text":"<p>This topic identifies high-level requirements for Relying Party registration certificates, which were introduced in Commission Implementing Regulation 2024/2982 [2024/2982]. A registration certificate may be is issued by a Relying Party Registrar to a Relying Party during the registration process described in Topic 27. It contains mainly the list of attributes registered by the Relying Party according to Article 5b 2 \u00a9 of the [European Digital Identity Regulation]. A registration certificate is signed by the Registrar.  As a Relying Party is obliged to register for each purpose (\"intended use\") separately, a single Relying Party may possess multiple registration certificates.  </p> <p>Commission Implementing Regulation 2024/2982 requires a Wallet Unit to authenticate and validate the registration certificate (if available), and to display to the User the information on the Relying Party as registered by the Registrar (information can be retrieved from the registration certificate or from the Registrar's on-line service). This enables Users to verify that the attributes being requested by the Relying Party are within the scope of their registered attributes (\"intended use\"), providing assurance that the request is legitimate and trustworthy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_28","title":"HLRs","text":"<p>A. Issuance of Relying Party registration certificates</p> Index Requirement specification RPRC_01 During the registration process for Relying Parties, as specified in Topic 27, the Member State Registrar SHALL create and sign or seal a registration certificate and issue it to the Relying Party for each intended use requested to be registered by the Relying Party. The registration certificate SHALL comply with the applicable requirements in the technical specification mentioned in RPRC_02. Note: See Topic 52. RPRC_02 The Commission SHALL ensure that a technical specification is created, describing at least 1. the contents and format of registration certificates, 2. the signing method(s) used to ensure the authenticity of the registration certificates. 3. the trust infrastructure necessary for signing registration certificates and for verifying these signatures, including, if necessary, the use of Trusted Lists to establish trust in Member States Registrars and to distribute their trust anchors to Wallet Units. 4. the method used for binding each registration certificate to the Relying Party Instance access certificate that will be used during the same transaction. This binding method SHALL enable a Wallet Unit to verify that the registration certificate is bound to the Relying Party that authenticated itself using the access certificate. The binding method SHALL consider situations in which the Relying Party uses the services of an intermediary (see Topic 52) to connect to the Wallet Unit. 5. whether or not a registration certificate must have a validity period. 6. the method to be used for revocation of registration certificates. Moreover, the technical specification SHALL describe the impact of revocation, especially compared to the impact of revocation of the Relying Party Instance access certificates. RPRC_03 The contents of a registration certificate issued per registered intended use of the Relying Party SHALL include at least information required in Annex V of the CIR for Relying Party Registration. If the Relying Party uses the services of an intermediary (see Topic 52): the fact that this is the case, plus the user-friendly (common) name and unique identifier (as meant in RPRC_03a and RPRC_03b) of this intermediary. RPRC_03a The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration instance certificate contains a common name for the Relying Party instance, in a format suitable for presenting to a User. Notes: - A Wallet Unit needs such a name when requesting User approval according to [Topic 6] , - If Relying Party uses an Intermediary, both Intermediary and End-Relying Party common names need to be shown when requesting User approval and the User should be informed that the Intermediary is representing/acting on behalf of the End-Relying Party. RPRC_03b The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Notes: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a concatenated list of one or more registered official wallet-relying party identifiers listed in Annex I(3) of the [Draft of the CIR for RP-Registration], expressed in semantic form defined in [ETSI EN319 412-1] sections 5.1.4 or 5.1.5 and used as the Distinguished Name (DN) of the certificate subject in both access and registration certificates of the Relying Party. Exact specification is left for the technical specifications to be developed by the European Commission. <p>B. Presentation and verification of Relying Party registration certificates</p> Index Requirement specification RPRC_04 In both proximity and remote presentation flows, the Relying Party Instance SHALL transfer a Relying Party registration certificate to the Wallet Unit in the presentation request, according to the applicable standard's extension mentioned in RPRC_05. The registration certificate SHALL be included in the request by value, not by reference. Note: This ensures that no external requests are necessary to validate the request, and that transactions are atomic and self-contained. RPRC_05 The Commission SHALL ensure that extensions are specified for [ISO/IEC 18013-5] and for [OpenID4VP], allowing a Relying Party to transfer a Relying Party registration certificate to a Wallet Unit. These extensions SHALL comply with applicable requirements in these standards. RPRC_06 The Wallet Unit SHALL verify the authenticity and validity of the registration certificate according to the technical specification meant in RPRC_02. If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User that it could not verify whether the Relying Party registered the requested attributes with the competent authorities. RPRC_07 The Wallet Unit SHALL verify that all attributes requested in the presentation request are included in the list of attributes in the registration certificate (if available) or registered in the Relying Party registry (available through the Registrar's on-line service). If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User about the requested attributes that the Relying Party did not register. RPRC_08 A Wallet Unit SHOULD enable its User to set their preference for showing or hiding the notifications meant in RPRC_06 and RPRC_07. By default, the Wallet Unit SHALL show the notifications. RPRC_09 The EU-wide unique identifier SHALL be identical in all registration certificates issued for a given Relying Party. Note: In case the registration certificates issued to an End-Relying Party are held and presented by an Intermediary (Relying Party), the given Relying Party meant in the text is the End-Relying Party. An Intermediary will obtain and hold registration certificates with non-identical unique identifiers. RPRC_10 The Commission SHALL provide technical specifications establishing common Certificate Policy for registration certificates, covering at least management and selection of signing keys, revocation and lifecycle management of RPRCs on individual intended use level. Note: The TS could set the provider of RPRCs to follow applicable parts of technical standards such as EN 319 401 (for General Policy Requirements for TSPs) and TS 119 461 (for identity proofing of Relying Party representatives). PRRC 11 There SHALL be only one valid registration certificate present in a presentation request for given intended use of a Relying Party. An error SHALL be reported (logged and shown for the User) by the Wallet Unit if it receives multiple registration certificates for the same intended use within same presentation request."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2345-topic-45-qeaa-rulebook","title":"A.2.3.45 Topic 45 - QEAA Rulebook","text":"<p>See Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2346-topic-46-protocols-and-interfaces-for-presentation-of-pid-and-qeaa-with-relying-parties","title":"A.2.3.46 Topic 46 - Protocols and interfaces for Presentation of PID and (Q)EAA with Relying Parties","text":"<p>See Topic 1 and Topic 12.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2347-topic-47-protocols-and-interfaces-for-pid-and-qeaa-issuance-and-non-qualified-certificates-issuance","title":"A.2.3.47 Topic 47 - Protocols and interfaces for PID and (Q)EAA issuance, and (non-)qualified certificates issuance","text":"<p>See Topic 10/23.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2348-topic-48-blueprint-for-requesting-data-deletion-to-relying-parties","title":"A.2.3.48 Topic 48 - Blueprint for requesting data deletion to Relying Parties","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_32","title":"Description","text":"<p>In this use case, a User requests the deletion of their personal attributes from Relying Parties with which they have interacted through their Wallet Unit.</p> <p>Users are concerned about having control over their personal data, thus the function of requesting data deletion ensures a higher degree of transparency, privacy and control of the Users over their personal data.</p> <p>This Topic lists high-level requirements related to the function of Users requesting the deletion of their personal data from Relying Parties through their Wallet Unit.</p> <p>Note: A Relying Party may use the services of an intermediary to request data from a Wallet Unit, see Topic 52. However, such intermediaries are required to delete any data they obtain from a Wallet Unit immediately after sending it to the Relying Party. Data deletion requests are therefore always sent to the Relying Party, not the intermediary.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_29","title":"HLRs","text":"Index Requirement specification DATA_DLT_01 A Wallet Provider SHALL ensure that its Wallet Units support the technical specifications mentioned in DATA_DLT_02, allowing a User to request from a Relying Party the erasure of their attributes that were presented by that Wallet Unit to that Relying Party, in accordance with Regulation (EU) 2016/679. DATA_DLT_02 The Commission SHALL, in cooperation with the Member States, develop technical specifications for a Wallet Unit interface allowing a Wallet Unit to send attribute deletion requests to Relying Parties with whom it has interacted in the past. DATA_DLT_03 A Wallet Instance SHALL provide a function where the User may select one Relying Party or multiple Relying Parties for which an attribute deletion request must be submitted. DATA_DLT_04 A Wallet Instance SHALL be able to display the attribute deletion requests previously submitted through the Wallet Unit. DATA_DLT_05 A Wallet Unit SHALL include attribute deletion requests in a log so they can be presented to the User via the dashboard (as specified in Topic 19). DATA_DLT_06 The log SHALL include as a minimum: - Date of attribute deletion request, - Relying Party to which the request was made, - Attributes requested to be removed."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2349-topic-49-protocol-and-interfaces-for-requesting-data-deletion-to-relying-parties","title":"A.2.3.49 Topic 49 - Protocol and interfaces for requesting data deletion to relying parties","text":"<p>Deleted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2350-topic-50-blueprint-to-report-unlawful-or-suspicious-request-of-data","title":"A.2.3.50 Topic 50 - Blueprint to report unlawful or suspicious request of data","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_33","title":"Description","text":"<p>In this use case, a User reports a Relying Party to the competent national data protection authority, because the User claims that this Relying Party sent an unlawful or inappropriate request for attribute to the Wallet Unit. Users are concerned about having control over their personal data, and specifically about a Relying Party over-asking for personal information, thus the function of reporting suspicious or inappropriate requests ensures a higher degree of transparency, privacy and control of the Users over their personal data.</p> <p>This topic lists high-level requirements related to the function of Users reporting unlawful or inappropriate attribute requests from Relying Parties.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_30","title":"HLRs","text":"Index Requirement specification RPT_DPA_01 A Wallet Unit SHALL provide an interface to lodge a complaint of suspicious Relying Party presentation requests to the DPA of the Member State that provided the Wallet Unit. RPT_DPA_02 The User interface enabling a User to start the process of lodging a complaint SHALL be accessible via the Wallet Instance. RPT_DPA_03 A Wallet Provider SHALL implement the interface in compliance with national procedural law and administrative practices. RPT_DPA_04 A Wallet Unit SHALL enable the lodged complaint to be substantiated, including information to identify the Relying Party, their presentation request, and the User's allegation. RPT_DPA_05 A Wallet Unit SHALL keep reports sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2351-topic-51-pid-or-attestation-deletion","title":"A.2.3.51 Topic 51 - PID or attestation deletion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_34","title":"Description","text":"<p>This topic lists high-level requirements related to a User deleting a PID or attestation from their Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_31","title":"HLRs","text":"Index Requirement specification PAD_01 A Wallet Unit SHALL at any time enable the User to delete any PID or attestation from their Wallet Unit. PAD_02 If the User indicates that a PID or attestation must be deleted, and the Wallet Unit contains multiple PIDs or attestation having the corresponding attestation type and Provider, a Wallet Unit SHALL delete all of these PIDs and attestations simultaneously. Note: This situation may occur if the PID Provider or Attestation Provider issued a batch of attestations to the Wallet Unit, rather than a single one. PAD_03 If the Wallet Unit deletes a PID or attestation on the User's request, the Wallet Unit SHALL NOT notify the respective PID Provider or Attestation Provider. Note: This is a matter of User privacy. PAD_04 If the Wallet Unit deletes a PID or attestation on the User's request, the Wallet Unit SHALL ensure that all cryptographic key material in the WSCA related to this PID or attestation is securely destroyed. Note: Key deletion is a cryptographic key operation and requires User authentication, as specified in requirement WIAM_14. PAD_05 If a Wallet Unit supports the [W3C Digital Credentials API] and it deletes a PID or attestation on the User's request, the Wallet Instance SHALL disclose the fact that it no longer stores this PID or attestation to the Digital Credentials API framework."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2352-topic-52-relying-party-intermediaries","title":"A.2.3.52 Topic 52 Relying Party intermediaries","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_35","title":"Description","text":"<p>This topic lists high-level requirements regarding so-called intermediaries, which form a special class of Relying Party. Article 5b (10) of the [European Digital Identity Regulation] states \"Intermediaries acting on behalf of relying parties shall be deemed to be relying parties and shall not store data about the content of the transaction\". Such an intermediary is a party that offers services to Relying Parties to, on their behalf, connect to Wallet Units and request the User attributes that these Relying Parties need. The intermediary then performs all necessary verifications, and, if successful, sends the presented attributes to the intermediated Relying Party. This implies that an intermediary performs all tasks assigned to a Relying Party in this ARF on behalf of the intermediated Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_32","title":"HLRs","text":"Index Requirement specification RPI_01 An intermediary SHALL register as a Relying Party, in accordance with all requirements in Topic 27. Note: This implies that an intermediary obtains an access certificate containing its own name and unique Relying Party identifier. RPI_02 An intermediary is acting only on behalf of another RP, but from the Registrar and the regulation's point of view is considered as a Relying Party and may obtain a registration certificate according to Topic 44, containing its name and identifier. RPI_03 An intermediary SHALL register at the Registrar each Relying Party it is acting on behalf, as well as each intended use separately related to a given Relying Party. Depending on Registrar's policy, the intermediary may receive registration certificates related to each registration, according to the requirements in Topic 44. The registration certificate SHALL contain intermediated Relying Party's name and unique identifier, as well as the list of attributes registered for that Relying Party's intended use. RPI_04 When issuing a registration certificate for a Relying Party via an intermediary, the Registrar SHALL verify, in a manner to be decided by Registrar's Member State, that the Relying Party will indeed use the services of the intermediary to interact with Wallet Units. RPI_05 When issuing a registration certificate for a Relying Party via an intermediary, the Registrar SHALL include in the registration certificate the attributes meant in RPRC_03a and RPRC_03b containing the name and unique identifier of the Relying Party, as well as of the intermediary. RPI_06 When requested by a Relying Party, an intermediary SHALL request presentation of attributes from a specific Wallet Unit, using the intermediary's access certificate meant in requirement RPI_01, and the registration certificate of the Relying Party, as meant in RPI_03. RPI_07 In case a Wallet Unit receives a presentation request from an intermediary on behalf of a Relying Party, during the Relying Party authentication it SHALL verify the name of the intermediary and display this name to the User when asking for User consent for the presentation, as described in the requirements RPA_06a and RPA_06d. RPI_08 When a Wallet Unit presents to an intermediary any User attributes from a PID or attestation, the intermediary SHALL, after successfully carrying out the verifications in RPI_09, forward these attributes (only) to the Relying Party on behalf of which the presentation request was made. If any of the verifications in RPI_09 fail, the intermediary SHALL NOT forward any attributes to the Relying Party. RPI_09 When a Wallet Unit presents to an intermediary any attributes from a PID or attestation, the intermediary SHALL verify the authenticity of the PID or attestation, its revocation status, device binding, and User binding, as well as any combined presentation of attributes, if applicable, as specified in this ARF and if agreed with the Relying Party. Furthermore, the intermediary SHALL verify the authenticity of the Wallet Unit and its revocation status, as specified in this ARF - if agreed with the Relying Party. Note: This ARF does not mandate that a Relying Party must carry out all of these verifications. Therefore, the intermediary and any Relying Party using its services must agree on what verifications the intermediary will carry out. RPI_10 The intermediary SHALL delete any PIDs, attestations, or WUAs it obtained from the Wallet Unit, including any User attributes, completely and immediately after it has sent the User attributes to the intermediated Relying Party. If the intermediary does not send any User attributes to the intermediated Relying Party, for example because one of the verifications in the previous step failed, the intermediary SHALL delete the PIDs, attestations, or WUAs completely and immediately as soon as it has completed all necessary verifications."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#a2353-topic-53-zero-knowledge-proofs","title":"A.2.3.53 Topic 53 Zero-Knowledge Proofs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#description_36","title":"Description","text":"<p>This topic lists high-level requirements for a Zero-Knowledge Proof scheme to be used within the EUDI Wallet ecosystem as a proof mechanism for PIDs and attestations. A Zero-Knowledge Proof (ZKP) is a cryptographic protocol that allows one party (the prover) to convince another party (the verifier) that a given statement is true without revealing any additional information beyond the validity of the statement itself. This ensures that the verifier gains no knowledge about how the prover knows the statement to be true, preserving privacy while enabling trust.</p> <p>The topic of ZKPs for the EUDI Wallet ecosystem was introduced in the Discussion Paper for Topic G. The high-level requirements in this Topic were taken from that discussion paper.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-2/annex-2-high-level-requirements/#hlrs_33","title":"HLRs","text":"Index Requirement specification ZKP_01 A ZKP scheme SHALL provide support for the following generic functions, while hiding all attributes of PIDs or attestations: (i) generation of a proof that an (some) attribute(s) having a specific value is (are) included in a PID or attestation, (ii) generation of a proof that a PID or attestation is within its validity period, (iii) generation of a proof that a PID or attestation has not been revoked, and (iv) generation of a proof that a PID or attestation is bound to a key stored in the WSCD of the Wallet Unit. Additionally, a ZKP scheme SHOULD provide support for the following function, which SHOULD  be used only when hiding the PID Provider or Attestation Provider is necessary: (v) generation of a proof that a PID or attestation has been issued by a trusted PID Provider or Attestation Provider, without revealing the PID Provider or Attestation Provider. Notes: - See section 4.1.1 of the Discussion Paper for Topic G. ZKP_02 A ZKP scheme SHALL support proving possession of attestation of a given type. Note: See section 4.1.2 and 4.1.3 of the Discussion Paper for Topic G. ZKP_03 A ZKP scheme SHOULD support the privacy-preserving binding of an attestation to a PID. In addition to the generic functions defined in ZKP_01, for this use case, a ZKP scheme SHALL provide support for the following functions: (i) generation of a proof that the Wallet Unit stores an attestation and a PID and that the attestation includes a specific attribute, having a specific value, which is also present in the PID. Note: See section 4.1.4 of the Discussion Paper for Topic G. ZKP_04 A ZKP scheme SHOULD support the derivation of a verifiable User pseudonym, by combining an attribute value that is unique for the User with Relying Party-specific context (e.g., the Relying Party identifier) In addition to the generic functions defined in ZKP_01, for this use case, a ZKP scheme SHALL provide support for the following functions: (i) generation of a request for the issuance of an attestation that includes a secret attribute unique to the User, without revealing this attribute to the Attestation Provider, (ii) generation of an attestation presentation that includes a verifiable pseudonym derived from the secret attribute, a Relying Party identifier, and context-related information. Note: See section 4.1.5 of the Discussion Paper for Topic G. ZKP_05 A ZKP scheme SHALL be usable in both remote and proximity presentation flows. While the inclusion of ZKP will introduce computational and verification delays, these delays SHALL NOT critically undermine or defeat the purpose of the Relying Party service (e.g. because of a critical impact on the User experience of the Wallet Unit). ZKP_06 A ZKP scheme SHOULD be able to generate proofs for already issued PIDs and attestations in the formats specified in [ISO/IEC 18013-5] or [SD-JWT VC]. ZKP_07 A ZKP scheme SHALL NOT introduce any additional communication or information that could be used to track or link User activity during, before, or after proof generation. ZKP_08 A ZKP scheme SHALL rely solely on algorithms standardised by a standardisation organisation recognised by the Commission or in a standard recognised by the Commission. ZKP_09 Use of a ZKP scheme SHALL NOT prevent the Wallet Unit's ability to provide User authentication with Level of Assurance High."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/#index-of-eudi-doc-architecture-and-reference-frameworkdocsannexesannex-3","title":"Index of eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3","text":"<ul> <li>annex-3.01-pid-rulebook</li> <li>annex-3.02-mDL-rulebook</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/","title":"European Digital Identity Wallet","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#annex-301-pid-rulebook","title":"ANNEX 3.01 - PID Rulebook","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#11-document-scope","title":"1.1 Document scope","text":"<p>This document is the natural-person Person Identification Data (PID) Rulebook and is part of the Architecture Reference Framework (ARF). It specifies how the mandatory and optional person identification data for the natural person, as defined in Tables 1 and 2 in the Annex of the Commission Implementing Regulation on PID and EAA [CIR 2024/2977], as well as the metadata specified in Table 5 of that CIR, will be encoded within the EUDI Wallet ecosystem. Additionally, this document specifies further optional PID attributes that are not included in the CIR.</p> <p>This document also specifies how a PID and all attributes in it are encoded if the PID complies with [ISO/IEC 18013-5] and if it complies with [SD-JWT VC].</p> <p>Person identification data for the legal person is out of scope of this document.</p> <p>This PID Rulebook complies with all applicable requirements in Topic 12 (Attestation Rulebooks) in Annex 2 of the Architecture Reference Framework.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#12-document-structure","title":"1.2 Document structure","text":"<p>This PID Rulebook is structured as follows:</p> <ul> <li>Chapter 2 describes the PID attributes and metadata on a generic level, regardless of the encoding used for the PID. Most of the content of this chapter is a direct copy of the Annex of Commission Implementing Regulation 2024/2977 on PID and EAA. However, a few additional attributes are specified in this chapter.</li> <li>Chapter 3 specifies how the PID attributes and metadata are encoded in case the PID complies with [ISO/IEC 18013-5].</li> <li>Chapter 4 specifies how the PID attributes and metadata are encoded in case the PID complies with [SD-JWT VC].</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in [RFC 2119], i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, i.e., a requirement that is not mandated by this document, but, for instance, by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#14-terminology","title":"1.4 Terminology","text":"<p>This document uses the terminology specified in Annex 1 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#2-pid-attributes-and-metadata","title":"2 PID attributes and metadata","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#21-introduction","title":"2.1 Introduction","text":"<p>Sections 2.2, 2.3, 2.4 and 2.5 of this chapter list the mandatory and optional PID attributes and PID metadata defined in CIR 2024/2977. Section 2.6 lists the optional PID attributes additionally defined in this PID Rulebook.</p> <p>Note that, when requesting PID attributes from a Wallet Unit, a Relying Party is not required to request all mandatory attributes. Also, a User is allowed to refuse to present a mandatory attribute, if it is requested by a Relying Party.</p> <p>The data identifiers and definitions given in Sections 2.2, 2.3, 2.4, and 2.5 are identical to those in CIR 2024/2977, except where explicitly indicated that some further explanations have been added in this Rulebook.</p> <p>All data identifiers and definitions in this chapter are independent of any encoding used. Consequently,</p> <ul> <li>the data identifiers in these tables are not necessarily the same as the attribute identifiers used for PIDs complying with [ISO/IEC 18013-5]. Chapter 3 specifies the data element identifiers to be used for PIDs in [ISO/IEC 18013-5] format</li> <li>the data identifiers in these tables are not necessarily the same as the claim names used for PIDs complying with [SD-JWT VC]. Chapter 4 specifies the attribute identifiers to be used for such PIDs.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#22-mandatory-attributes-specified-in-cir-20242977","title":"2.2 Mandatory attributes specified in CIR 2024/2977","text":"Data Identifier Definition family_name Current last name(s) or surname(s) of the user to whom the person identification data relates. given_name Current first name(s), including middle name(s) where applicable, of the user to whom the person identification data relates. birth_date Day, month, and year on which the user to whom the person identification data relates was born. birth_place The country as an alpha-2 country code as specified in ISO 3166-1, or the state, province, district, or local area or the municipality, city, town, or village where the user to whom the person identification data relates was born. nationality One or more alpha-2 country codes as specified in ISO 3166-1, representing the nationality of the user to whom the person identification data relates."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#23-optional-attributes-specified-in-cir-20242977","title":"2.3 Optional attributes specified in CIR 2024/2977","text":"Data Identifier Definition resident_address The full address of the place where the user to whom the person identification data relates currently resides or can be contacted (street name, house number, city etc.). resident_country The country where the user to whom the person identification data relates currently resides, as an alpha-2 country code as specified in ISO 3166-1. resident_state The state, province, district, or local area where the user to whom the person identification data relates currently resides. resident_city The municipality, city, town, or village where the user to whom the person identification data relates currently resides. resident_postal_code The postal code of the place where the user to whom the person identification data relates currently resides. resident_street The name of the street where the user to whom the person identification data relates currently resides. resident_house_number The house number where the user to whom the person identification data relates currently resides, including any affix or suffix. personal_administrative_number A value assigned to the natural person that is unique among all personal administrative numbers issued by the provider of person identification data. Where Member States opt to include this attribute, they shall describe in their electronic identification schemes under which the person identification data is issued, the policy that they apply to the values of this attribute, including, where applicable, specific conditions for the processing of this value. portrait Facial image of the wallet user compliant with ISO 19794-5 or ISO 39794 specifications. Further clarification added in this PID Rulebook: The detailed format of the portrait is specified in requirement PID_03 in Annex 2, Topic 3. family_name_birth Last name(s) or surname(s) of the User to whom the person identification data relates at the time of birth. given_name_birth First name(s), including middle name(s), of the User to whom the person identification data relates at the time of birth. sex Values shall be one of the following: 0 = not known; 1 = male; 2 = female; 3 = other; 4 = inter; 5 = diverse; 6 = open; 9 = not applicable. For values 0, 1, 2 and 9, ISO/IEC 5218 applies. email_address Electronic mail address of the user to whom the person identification data relates, in conformance with [RFC 5322]. mobile_phone_number Mobile telephone number of the User to whom the person identification data relates, starting with the '+' symbol as the international code prefix and the country code, followed by numbers only."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#24-mandatory-metadata-specified-in-cir-20242977","title":"2.4 Mandatory metadata specified in CIR 2024/2977","text":"Data Identifier Definition expiry_date Date (and if possible time) when the person identification data will expire. Further clarification added in this PID Rulebook: This attribute, as well as the optional issuance_date attribute specified in Section 2.6, pertains to the administrative validity period of the PID. It is up to the PID Provider to decide whether a PID has an administrative validity period. However, if present, it in general is different from the technical validity period of a PID. The technical validity period is a mandatory element of all PIDs (and also attestations) in the EUDI Wallet ecosystem. It typically is short, a few days or weeks at most, if not shorter, to mitigate challenges regarding tracking of Users by malicious Relying Parties based on the repeated presentation of the same PID. On the other hand, the administrative validity period is typically at least a few years long. During the administrative validity period of a PID, the PID Provider will therefore provide multiple successive PIDs to a User, typically without any actions being expected from the User. However, when the administrative validity period of a PID ends, typically the User has to apply for an entirely new PID. issuing_authority Name of the administrative authority that issued the person identification data, or the ISO 3166 alpha-2 country code of the respective Member State if there is no separate authority entitled to issue person identification data. issuing_country Alpha-2 country code, as specified in ISO 3166-1, of the country or territory of the provider of the person identification data."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#25-optional-metadata-specified-in-cir-20242977","title":"2.5 Optional metadata specified in CIR 2024/2977","text":"Data Identifier Definition document_number A number for the person identification data, assigned by the provider of person identification data. issuing_jurisdiction Country subdivision code of the jurisdiction that issued the person identification data, as specified in ISO 3166-2:2020, Clause 8. The first part of the code shall be the same as the value for the issuing country. location_status The location of validity status information on the person identification data where the providers of person identification data revoke person identification data."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#26-additional-optional-attributes-specified-in-this-rulebook","title":"2.6 Additional optional attributes specified in this Rulebook","text":"Data Identifier Definition issuance_date Date (and if possible time) when the person identification data was issued and/or the administrative validity period of the person identification data began. See also the clarification for expiry_date in Section 2.4. age_over_18 Attesting whether the User to whom the person identification data relates is currently an adult (true) or a minor (false). If present, the requirements in clause 7.2.5 of ISO/IEC 18013-5 are applicable for this attribute. age_over_NN Attesting whether the User to whom the person identification data relates is at least NN years old. N &lt;&gt; 18. Multiple instances of this attribute may be present, provided the value of NN is different in each of them. If present, the requirements in clause 7.2.5 of ISO/IEC 18013-5 are applicable for these attributes. age_in_years The current age of the User to whom the person identification data relates in years. age_birth_year The year when the User to whom the person identification data relates was born. trust_anchor This attribute indicates at least the URL at which a machine-readable version of the trust anchor to be used for verifying the PID can be found or looked up. Note: This attribute corresponds to the location meant in Annex V point h) or Annex VII point h) of the [European Digital Identity Regulation], which is mandatory for QEAAs. This PID Rulebook adds this as an optional attribute for PIDs as well, so PID Providers are able to ensure that PIDs can be validated by Relying Parties in the same manner as QEAAs."},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#3-isoiec-18013-5-compliant-encoding-of-pid","title":"3 ISO/IEC 18013-5-compliant encoding of PID","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#31-encoding-of-pid-attributes-and-metadata","title":"3.1 Encoding of PID attributes and metadata","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#311-overview","title":"3.1.1 Overview","text":"<p>The ISO/IEC 18013-5-compliant encoding of PID attributes and metadata is specified in the table below. The table contains the following information for all attributes:</p> <ul> <li>The first column lists the data identifier specified in Chapter 2 above.</li> <li>The second column lists the corresponding attribute identifier to be used in presentation requests and responses according to [ISO/IEC 18013-5].</li> <li>The third column indicates the encoding of each attribute. This column uses CDDL representation types defined in [RFC 8610]. The following notes and requirements apply:<ul> <li>tstr, uint, bstr, bool and tdate are CDDL representation types defined in   [RFC 8610].</li> <li>Regarding type tstr: this document confirms that, as specified in RFC 8949, a tstr SHALL be encoded in UTF-8 and SHALL support the full Unicode range.</li> <li>All attributes having encoding type tstr SHALL have a maximum length of 150 characters.</li> <li>This document specifies full-date as full-date = #6.1004(tstr), where tag 1004 is specified in [RFC 8943].</li> <li>In accordance with [RFC 8949], section 3.4.1, a tdate attribute SHALL contain a date-time string as specified in [RFC 3339]. In accordance with [RFC 8943], a full-date attribute SHALL contain a full-date string as specified in [RFC 3339].</li> <li>The following requirements apply to the representation of dates in attributes, unless otherwise indicated:<ul> <li>Fractions of seconds SHALL NOT be used;</li> <li>A local offset from UTC SHALL NOT be used; the time-offset defined in [RFC 3339] SHALL be to \"Z\".</li> </ul> </li> <li>RFC 8949, section 4.2, describes four rules for canonical CBOR. Three of those rules SHALL be implemented for all CBOR structures in PIDs, as follows:<ul> <li>integers (major types 0 and 1) SHALL be as small as possible;</li> <li>the expression of the length in a bstr, tstr, array or map SHALL be as short as possible;</li> <li>indefinite-length items SHALL be made into definite-length items.</li> </ul> </li> </ul> </li> </ul> Data Identifier Attribute identifier Encoding format family_name family_name tstr given_name given_name tstr birth_date birth_date full-date, see Section 3.1.4. birth_place place_of_birth See Section 3.1.5. nationality nationality nationalities, see Section 3.1.2. resident_address resident_address tstr resident_country resident_country tstr resident_state resident_state tstr resident_city resident_city tstr resident_postal_code resident_postal_code tstr resident_street resident_street tstr resident_house_number resident_house_number tstr personal_administrative_number personal_administrative_number tstr portrait portrait bstr family_name_birth family_name_birth tstr given_name_birth given_name_birth tstr sex sex uint email_address email_address tstr mobile_phone_number mobile_phone_number tstr expiry_date expiry_date tdate or full-date issuing_authority issuing_authority tstr issuing_country issuing_country tstr document_number document_number tstr issuing_jurisdiction issuing_jurisdiction tstr location_status - See Section 3.1.3. issuance_date issuance_date tdate or full-date age_over_18 age_over_18 bool age_over_NN age_over_NN bool age_in_years age_in_years uint age_birth_year age_birth_year uint trust_anchor trust_anchor tstr"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#312-attribute-nationality","title":"3.1.2 Attribute nationality","text":"<p>The attribute nationality takes as its value an array of Alpha-2 country codes as specified in ISO 3166-1. Using CDDL notation as specified in RFC 8610, the encoding of this data element is:</p> <pre><code>nationalities = [\n  \\+ CountryCode\n]\n\nCountryCode = tstr ; Alpha-2 country code specified in ISO 3166-1\n</code></pre> <p>Note: If the User to whom the person identification data relates has multiple nationalities (and the PID Provider is willing to attest to these multiple nationalities), the PID Provider can include all of the nationalities in the nationalities array. A potential drawback of this solution is that the User cannot selectively disclose only one of these nationalities, since for ISO/IEC 18013-5-compliant attestations, always the entire array will be presented if the User approves the presentation of the nationality attribute. A potential solution to this challenge is for the PID Provider to include only one nationality in the nationality attribute, and for the remaining nationalities use one or more domestic data attributes specified according to requirement PID_06 in Annex 2, Topic 3.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#313-attribute-location_status","title":"3.1.3 Attribute location_status","text":"<p>For ISO/IEC 18013-5-compliant PIDs, the attribute location_status is absent, since the PID issuer will add revocation information, if needed, to the MSO as specified in [ISO/IEC 18013-5].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#314-attribute-birth_date","title":"3.1.4 Attribute birth_date","text":"<p>For PIDs compliant with ISO/IEC 18013-5, dates are encoded as specified in RFC 8943. This encoding does not contain provisions for encoding partial dates. This may cause challenges in case the birth date of a User is not (fully) known. To deal with such cases, a PID Provider could adopt a policy to choose appropriate values for the unknown date elements. However, mandating such a policy is out of scope of this document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#315-attribute-place_of_birth","title":"3.1.5 Attribute place_of_birth","text":"<p>The attribute place_of_birth SHALL contain at least one of the following key-value pairs: country, region, locality. Using CDDL notation as specified in RFC 8610, the encoding of this data element is:</p> <pre><code>place_of_birth =\n{\n  ? country: tstr ; a single alpha-2 country code as specified in ISO 3166-1\n  ? region: tstr ; the name of a state, province, district, or local area\n  ? locality: tstr ; the name of a municipality, city, town, or village\n}\n</code></pre>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#4-sd-jwt-vc-based-encoding-of-pid","title":"4 SD-JWT VC-based encoding of PID","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#41-encoding-of-pid-attributes-and-metadata","title":"4.1 Encoding of PID attributes and metadata","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#411-overview","title":"4.1.1 Overview","text":"<p>Following requirement ARB_06b, SD-JWT VC-encoded PIDs use claim names that are either registered in the JSON Web Token Claims Registry [IANA-JWT-Claims], are Public Names as defined in [RFC 7519], or are Private Names specific to the attestation type. The tables below map the data identifiers defined above to the corresponding claim names and specify the encoding format of the claim value.</p> <p>A JSON string used in an SD-JWT VC-encoded PID SHALL be encoded in UTF-8 and SHALL support the full Unicode range, unless explicitly specified otherwise in the tables below or the references therein.</p> <p>Note that a hierarchical claim name structure can be used in SD-JWT VC encoded PIDs as SD-JWT allows for individual selective disclosure of objects and their properties. A hierarchical claim name structure is indicated by the notation <code>parent.child</code> in the tables below.</p> <p>The following IANA registered claim names are to be used for PIDs:</p> Data Identifier Attribute identifier Encoding format Reference/Notes family_name family_name string Section 5.1 of [OIDC] given_name given_name string Section 5.1 of [OIDC] birth_date birthdate string, ISO 8601-1 [ISO8601\u20111] YYYY-MM-DD format Section 5.1 of [OIDC] birth_place place_of_birth JSON structure Section 4.1 of [EKYC];  At least one of the members (country, region or locality) SHALL be present in the JSON structure nationality nationalities array of strings Section 4.1 of [EKYC]; using alpha-2 country codes as defined in Section 2.2 resident_address address.formatted string Section 5.1 of [OIDC] resident_country address.country string Section 5.1 of [OIDC] resident_state address.region string Section 5.1 of [OIDC] resident_city address.locality string Section 5.1 of [OIDC] resident_postal_code address.postal_code string Section 5.1 of [OIDC] resident_street address.street_address string Section 5.1 of [OIDC] resident_house_number address.house_number string Section 5.1 of [OIDC] family_name_birth birth_family_name string Section 4.1 of [EKYC] given_name_birth birth_given_name string Section 4.1 of [EKYC] email_address email string Section 5.1 of [OIDC] mobile_phone_number phone_number string Section 5.1 of [OIDC] portrait picture string; data URL containing the base64-encoded portrait in JPEG format according to PID_03 in Annex 2, Topic 3 Section 5.1 of [OIDC] <p>Note: The standard JWT claims nbf and exp are used to express the technical validity period of a SD-JWT VC-compliant PID.</p> <p>The following Private Names specific to the attestation type defined in this document are to be used for PIDs:</p> Data Identifier Attribute identifier Encoding format Notes expiry_date date_of_expiry string ISO 8601-1 [ISO8601\u20111] YYYY-MM-DD format, as defined in Section 5.4.4.2 of [EKYC Schema] issuance_date date_of_issuance string ISO 8601-1 [ISO8601\u20111] YYYY-MM-DD format, as defined in Section 5.4.4.2 of [EKYC Schema] personal_administrative_number personal_administrative_number string sex sex number numeric encoding as described in Section 2.3; gender from [OIDC] uses a different value range and is therefore not used issuing_authority issuing_authority string issuing_country issuing_country string document_number document_number string issuing_jurisdiction issuing_jurisdiction string location_status - See Section 4.1.2 age_over_18 age_equal_or_over.18 boolean (see note below) age_over_NN age_equal_or_over.NN boolean (see note below) age_in_years age_in_years number age_birth_year age_birth_year number trust_anchor trust_anchor string <p>Note: Instead of separate claims for (for example) age_over_16, age_over_18, age_over_65, etc., a single claim age_equal_or_over is used. This claim is an object with properties for each age as follows:</p> <pre><code>\"age_equal_or_over\": {\n    \"16\": true,\n    \"18\": true,\n    \"65\": false\n}\n</code></pre>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#412-attribute-location_status","title":"4.1.2 Attribute location_status","text":"<p>For SD-JWT VC-compliant PIDs, the PID issuer will add validity status information, if needed, as specified in [SD-JWT VC]. This PID Rulebook does not specify a separate attribute for including the location of validity status information.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#42-note-on-vct","title":"4.2 Note on VCT","text":"<p>SD-JWT VC defines the Verifiable Credential Type (<code>vct</code>). A type comes with associated metadata that, for instance, provides information about the type itself, outlines a schema detailing the claims that are optional or mandatory in the SD-JWT VC, and specifies their display methods. Additionally, a type can extend another type, enabling the creation of domestic types based on a common EU-wide type, while preserving the mandatory claims from the base type. Domestic types MAY however define additional claims and display information. Details are defined in [SD-JWT VC].</p> <p>This document defines the base type to be \"urn:eudi:pid:1\". As a convention, all PIDs must use types in the namespace \"urn:eudi:pid:\".</p> <p>SD-JWT VC specifies Type Metadata as a machine-readable format for information regarding a type, including the information on claims such as what is contained in this document. Requirement PID_15 in Annex 2, Topic 3 requires that the information on the common EU-wide type as well as on any domestic types is published and accessible in a catalog.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#43-example","title":"4.3 Example","text":"<p>EXAMPLE: The following example shows the payload of a PID in SD-JWT VC format before the encoding into the SD-JWT format.</p> <pre><code>{\n    \"vct\": \"urn:eudi:pid:de:1\",\n\n    \"given_name\": \"Jean\",\n    \"family_name\": \"Dupont\",\n    \"birthdate\": \"1980-05-23\",\n\n    \"age_equal_or_over\": {\n        \"12\": true,\n        \"14\": true,\n        \"16\": true,\n        \"18\": true,\n        \"21\": true,\n        \"65\": false\n    },\n    \"age_in_years\": 44,\n    \"age_birth_year\": 1980,\n\n    \"address\": {\n        \"street_address\": \"123 Via Appia\",\n        \"locality\": \"Rome\",\n        \"region\": \"Lazio\",\n        \"postal_code\": \"00100\",\n        \"country\": \"IT\"\n    },\n\n    \"nationalities\": [\"FR\"],\n\n    \"sex\": 5,\n\n    \"place_of_birth\": {\n        \"country\": \"DD\"\n    },\n\n    \"cnf\": {\n        \"jwk\": {\n            \"kty\": \"EC\",\n            \"crv\": \"P-256\",\n            \"x\": \"52aDI_ur05n1f_p3jiYGUU82oKZr3m4LsAErM536crQ\",\n            \"y\": \"ckhZ-KQ5aXNL91R8Eufg1aOf8Z5pZJnIvuCzNGfdnzo\"\n        }\n    },\n\n    \"issuing_authority\": \"DE\",\n    \"issuing_country\": \"DE\"\n}\n</code></pre> <p>Note: The <code>cnf</code> claim is used for expressing key binding in SD-JWT VCs. The example above shows a public key in JWK format.</p> <p>Note: Additional technical claims are not shown here, including references to the issuer, validity status information, and more.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.01-pid-rulebook/#5-references","title":"5 References","text":"<p>See Chapter 9 of the ARF main document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/","title":"European Digital Identity Wallet","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#annex-302-mdl-rulebook","title":"ANNEX 3.02 - mDL Rulebook","text":"<p>This is a working document that holds no legal value and does not reflect any common agreement or position of the co-legislators. It presents a state-of-play of ongoing work of the European Digital Identity Cooperation Group. This document is being continuously updated and should not be considered final.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#1-introduction","title":"1 Introduction","text":"<p>This document is the mobile driving licence (mDL) Rulebook. It is part of the Architecture and Reference Framework for the EUDI Wallet ecosystem. It contains requirements specific to mDL attestations with the EUDI Wallet ecosystem.</p> <p>This mDL Rulebook contains the following topics:</p> <ul> <li>Chapter 2 specifies the mDL attribute schema. This describes the structure, the type, the entity identifiers, and the logical organisation of the mandatory and optional attributes of the mDL. It also describes how Member States can specify any possible national attributes.</li> </ul> <p>Further topics will be added if and when they are identified.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#2-mdl-attribute-schema","title":"2 mDL attribute schema","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#21-introduction","title":"2.1 Introduction","text":"<p>This document describes the structure, type, data element identifiers, and logical organisation of the mandatory and optional attributes of the mobile driving licence (mDL) attestation within the EUDI Wallet. It also describes how Member States can specify any possible national attributes.</p> <p>Mobile driving licences are legally specified in the proposed EC Regulation 2023_127 (4<sup>th</sup> Driving Licence Regulation). This Regulation specifies that mDLs shall comply with the ISO/IEC 18013-5 standard. It does not mention any other standards, in particular not [SD-JWT VC]. Consequently, mDLs issued to a Wallet Unit SHALL NOT be implemented as [SD-JWT VC]-compliant attestations. This document therefore specifies only an ISO/IEC 18013-5-compliant encoding.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#22-isoiec-18013-5-compliant-encoding","title":"2.2 ISO/IEC 18013-5 compliant encoding","text":"<p>The data model for ISO/IEC 18013-5-encoded mDLs is fully specified in ISO/IEC 18013-5. No changes need to be made to this data model for an mDL attestation within the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/annexes/annex-3/annex-3.02-mDL-rulebook/#4-references","title":"4 References","text":"<p>See Chapter 9 of the main ARF document.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/#index-of-eudi-doc-architecture-and-reference-frameworkdocsdiscussion-topics","title":"Index of eudi-doc-architecture-and-reference-framework/docs/discussion-topics","text":"<ul> <li>README</li> <li>a-privacy-risks-and-mitigations</li> <li>b-re-issuance-and-batch-issuance-of-pids-and-attestations</li> <li>c-wallet-unit-attestation</li> <li>d-embedded-disclosure-policies</li> <li>e-pseudonyms-including-user-authentication-mechanism</li> <li>f-digital-credential-api</li> <li>g-zero-knowledge-proof</li> <li>i-natural-person-representing-another-natural-person</li> <li>img</li> <li>j-wallet-to-wallet-interactions</li> <li>k-combined-presentation-of-attestations</li> <li>l+m-data-deletion-and-dpa-complaint</li> <li>n-export-and-data-portability</li> <li>v-pid-rulebook</li> <li>w-transactional-data-for-payments-and-other-use-cases</li> <li>x-relying-party-registration</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/","title":"A privacy risks and mitigations","text":"<p>Home Version 1.0, updated 14 January 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#a-privacy-risks-and-mitigation","title":"A - Privacy risks and mitigation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for eIDAS Coordination Group regarding Topic A: Privacy risks and mitigation.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Starting from the risk registry, review and enhance the privacy requirements related to tracking and tracing. This includes evaluating current mitigations for privacy risks, identifying additional measures to further minimise these risks, and exploring alternative solutions, such as Zero-Knowledge Proofs (ZKP).</p> <p>A section will be added to the ARF to discuss:</p> <ol> <li> <p>the risks for User privacy due to possible collusion and/or data breaches involving Relying Parties and/or Attestation Providers</p> </li> <li> <p>the countermeasures taken in the current version of the ARF</p> </li> <li> <p>the ways in which Attestation Providers can further reduce these  risks, for example by issuing short-lived attestations.</p> </li> <li> <p>the ways in which these risks may be fully mitigated in the future,  e.g. by means of ZKP-based proof mechanisms for attestations.</p> </li> <li> <p>the risks for User privacy related to revocation checking.</p> </li> </ol> <p>In this version of the document, the feedback of Member States during the meetings on 4 and 11 December 2024 was processed, including the comments up until 8 January 2025.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks regarding User tracking as a result of collusion between Relying Parties or between a Relying Party and an Attestation Provider or of a data breach of the parties:</p> Risk type\u00a0 Risk ID\u00a0 Related risk titles\u00a0 High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R12 Transaction data disclosure High-level risks to the wallets R14 Surveillance System-related risks SR1\u00a0 Wholesale surveillance\u00a0 <p>Most of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III) are also relevant threats to consider in the context of preventing tracking and tracing. These threats may belong to attack chains leading to the risks expressed in the table above.</p> R6. Data Disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R12. Transaction data disclosure Transaction data disclosure is defined as the disclosure of information related to information on a transaction between stakeholders. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats to a Wallet:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR36 The electronic attestation of attributes about a person that is presented in multiple transactions with a relying party, or across different relying parties, unintentionally allows them to link multiple transactions to the relevant person. Data disclosure (R6) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers. Data disclosure (R6) and Surveillance (R14) TR84 A group of colluding relying parties or PID providers can derive the user's identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) <p>Threads related to data breaches including those involving attackers, are also be taken into account. See [Risk Register] on threads TR27, TR28, TR29, TR30, TR31, TR33, TR34, TR35, TR37, TR40, TR50 to TR52, TR54, TR61, TR83, TR102, TR103, TR105, TR107, TR110, TR130.</p> <p>Note that other threats, such as TR25, TR26, TR32, TR53, TR111 to TR117, TR119, TR121, TR127, and TR133 from the [Risk Register] are also relevant for scenarios where the wallet itself is compromised.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li> <p>Chapter 2 explains in detail the risks for User privacy due to collusion  and/or data breaches involving Relying Parties and/or Attestation Providers.</p> </li> <li> <p>Chapter 3 discusses possible mitigation measures for Relying Party  linkability.</p> </li> <li> <p>Chapter 4 discusses linkability threats related to revocation  checking.</p> </li> <li> <p>Chapter 5 briefly discusses Zero-Knowledge Proofs as an alternative  way to mitigate these risks. This topic will be discussed with the  Cooperation Group later in more detail.</p> </li> <li> <p>Chapter 6 proposes a few High-Level Requirements to be added to the  ARF. These are for discussion.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#2-risks-for-user-privacy-due-to-collusion","title":"2 Risks for User privacy due to collusion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#21-linkability","title":"2.1 Linkability","text":"<p>This chapter describes in detail how the attestation formats relying on salted hashed attributes for use in the EUDI Wallet ecosystem could be misused for tracking the User's behaviour.</p> <p>The attestation formats required to be supported in the ARF are specified in ISO/IEC 18013-5 [ISO18013-5], \"SD-JWT-based Verifiable Credentials (SD-JWT VC)\" [SD-JWT VC] and \u201cW3C Verifiable Credentials Data Model\u202f1.1 (W3C VCDM 1.1)\u201d [W3C VCDM 1.1]. Selective disclosure of attributes is achievable, in particular by making use of so-called salted-attribute hashes. For more information on this technique, see [ETSI 119476]. In a nutshell, the idea is that an Attestation Provider does not sign the attribute values directly, but instead signs a collection of hash values, where each hash is calculated over the concatenation of an attribute value and a unique salt. This allows the User to present only a single attribute value (plus the associated salt), while enabling the Relying Party to verify the Attestation Provider signature and the fact that the presented attribute value is indeed included in the signature via its hash.</p> <p>A property of these attestation formats is that every attestation that is presented to a Relying Party contains a number of elements having a unique value. These elements include:</p> <ul> <li> <p>The salt of every attribute that is presented,</p> </li> <li> <p>The hash values of all attributes, that were signed by the  Attestation Provider,</p> </li> <li> <p>The attestation identifier or index used for revocation purposes (if  applicable),</p> </li> <li> <p>The attestation public key used for device binding and User binding,</p> </li> <li> <p>The attestation public key used for device binding and User binding,</p> </li> <li> <p>The value of the Attestation Provider signature.</p> </li> <li>The value of the Attestation Provider signature.</li> </ul> <p>In addition, also timestamps, such as the signing or issuing time of the attestation and the 'valid from' and 'valid until' timestamps may be unique, if they are precise enough. For example, if the timestamps include milliseconds, this will almost always be the case.</p> <p>Apart from being unique in the whole EUDI Wallet ecosystem, the values of these elements also are fixed, meaning that when the same attestation is presented again, the Relying Party will receive the same values. This fact enables malicious Relying Parties and Attestation Providers, or, in case of a data breach, any malicious party (including third-parties) with access to the corresponding data, to link attribute values that were presented to different Relying Parties in different transactions. If this happens, the reasonable expectation of Users that their separate activities involving the EUDI Wallet will not be combined into a single profile of their behaviour, is violated.</p> <p>Linkability comes in two varieties, Relying Party linkability and Attestation Provider linkability. These are discussed in the next sections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#22-relying-party-linkability","title":"2.2 Relying Party linkability","text":"<p>Relying Party linkability means that a link can be established between multiple presentations of attestations by the same User to one or more Relying Party. For example, a Relying Party that requests and receives age_over_18 attributes from multiple PIDs may store the salt it receives. By comparing the received salt values, the Relying Party may find matching salt values. It can then conclude that the corresponding attestations must have been the same, and hence that it must have been interacting with the same person.</p> <p>The same principle also works with other elements, for example with one of the hash values in the attestation proof. If the Relying Party uses one of these elements, it will be able to see that it has received the same attestation multiple times even if it requested (and received) different attributes in each of these interactions.</p> <p>The same mechanisms can obviously also be applied by multiple colluding Relying Parties. By collecting and sharing values of unique attestation elements, they will be able to recognise that the same attestation was used at multiple Relying Parties. By combining the attribute values that were presented during each of these interactions, they will be able to build a profile of the User.</p> <p>Also note that linkability of attestations can be a danger to the User's privacy even if Relying Parties are not actively trying to track Users. If a Relying Party (or multiple Relying Parties) is the victim of a data breach by an attacker, and the data breach includes unique attestation values, the attacker may be able to track Users based on these.</p> <p>As will be made clear in the next chapter, an (honest) Attestation Provider can partly or fully prevent Relying Party linkability of the attestations it issues, at the cost of issuing multiple attestations to the same User.</p> <p>In addition, it should be noted that apart from technical and preventive measures, also organisational and repressive measures can be used to discourage Relying Parties from colluding and tracking Users. In particular, Relying Parties found offending can have their access certificate revoked, after which they will not be able to interact with Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#23-attestation-provider-linkability","title":"2.3 Attestation Provider linkability","text":"<p>Attestation Provider linkability happens when a link can be established between the User and their attestation presentations, or several attestation presentations without the User, by combining the data stored by the Attestation Provider, data collected by Relying Parties or other third-parties accessing to data (including in case of a data breach or eavesdropping from one of the legitimate parties). In this scenario, the Attestation Provider stores all of the unique element values (i.e., salts, hashes, public key, signature value) in all attestations it issues, together with the user to which each of these values was issued.</p> <p>Then, after it has received an attestation, a Relying Party notifies the Attestation Provider about the value of any of the unique elements in that attestation. This allows the Attestation Provider to identify the corresponding User, and to track at which Relying Parties the User presents their attestations.</p> <p>Unlike for Relying Party linkability, Attestation Provider linkability cannot be technically prevented for attestations using salted-attribute hashes. The only way to technically mitigate this risk is by using Zero-Knowledge Proofs instead, as described in section 5. However, like for Relying Party linkability, organisational preventive, detective, and repressive measures can be used to discourage Attestation Providers from colluding and tracking Users and to mitigate Attestation Provider linkability. For example, Attestation Providers may purposely discard the unique values of an attestation after it has been issued, or remove any links to the User to whom it has been issued. In addition, many Attestation Providers are subject to regular audits, which means that collusion and tracking can more easily be detected by relevant authorities. Finally, Attestation Providers that are found to be tracking their Users in an illegal manner can be fined, have their access certificates revoked, or be otherwise punished.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#24-wuas-and-wallet-providers","title":"2.4 WUAs and Wallet Providers","text":"<p>The Wallet Unit Attestation (WUA) is an attestation issued to the Wallet Unit by the Wallet Provider. In the context of this discussion paper, there is no difference between WUAs and other types of attestations (including PIDs). The same risks of linkability apply for all of them, and the mitigation measures for Relying Party linkability described in the next chapter can also be used by Wallet Provider to mitigate the Relying Party linkability risks associated with presenting WUAs.</p> <p>Therefore, in this discussion paper the term 'Attestation Provider' includes Wallet Providers, in their specific responsibilities as issuers of WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#3-possible-mitigation-measures-for-relying-party-linkability-within-the-current-arf","title":"3 Possible mitigation measures for Relying Party linkability within the current ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#31-introduction","title":"3.1 Introduction","text":"<p>An (honest) Attestation Provider can mitigate Relying Party linkability mitigated partly or fully by the following two measures:</p> <ol> <li> <p>Ensuring that all attestation unique elements discussed in section  2.1 are unique across all attestations issued by the Attestation  Provider (and not only per attestation). This can be achieved, for  example, by ensuring that salt values and attestation identifiers  are pseudo-random numbers generated by a cryptographically secure  pseudo-random number generator (CSPRNG).</p> </li> <li> <p>Limiting the number of times a Wallet Unit may present a single  attestation.</p> </li> </ol> <p>Regarding the second point above: An Attestation Provider can employ and possibly combine Regarding the second point above: An Attestation Provider can employ and possibly combine at least four different methods to achieve this:</p> <ul> <li>Method A: Once-only attestations,</li> <li> <p>Method A: Once-only attestations,</p> </li> <li> <p>Method B: Limited-time attestations,</p> </li> <li> <p>Method B: Limited-time attestations,</p> </li> <li> <p>Method C: Rotating batches of attestations,</p> </li> <li> <p>Method C: Rotating batches of attestations,</p> </li> <li> <p>Method D: Per-Relying Party attestations.</p> </li> <li>Method D: Per-Relying Party attestations.</li> </ul> <p>These methods are discussed in the next sections of this chapter. Based on these discussions and an inventory of the opinion of Member States, Chapter 6 contains a number of changes that will be made to the ARF.</p> <p>Note: other methods were discussed on batch attestations: provide attestations with different validity period within the batch, also including f.i. valid in future. These methods are not included in the High Level Requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#32-method-a-once-only-attestations","title":"3.2 Method A: Once-only attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#321-description","title":"3.2.1 Description","text":"<p>In this approach, the Attestation Provider requires the Wallet Unit to present each attestation only once.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#322-advantages","title":"3.2.2 Advantages","text":"<p>If this approach is used, none of the unique values in the attestation will be presented twice or more times to a Relying Party. Therefore, this method fully mitigates Relying Party linkability.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#323-technical-impacts-on-wallet-unit","title":"3.2.3 Technical impacts on Wallet Unit","text":"<p>If an attestation may be presented only once, in theory the Wallet Unit could request a new attestation as soon as possible after an attestation was presented to a Relying Party. However, this has obvious drawbacks for both operational and privacy reasons. Therefore, the Wallet Unit must store a batch of attestations, such that the User will be able to use their Wallet Unit several times in (quick) succession, without the need for the Wallet Unit to request fresh attestations from the Attestation Provider in between.</p> <p>To prevent the Wallet Unit from running out of unused attestations, it must have a lower limit for the number of unused attestations it holds and request a new batch from the Attestation Provider when the number of unused attestations goes below this limit, as soon as it is able to. This is called the 'saw-tooth model' in inventory management.</p> <p>If this approach is used and the Wallet Unit is offline for a prolonged period of time, the Wallet Unit may run out of unused attestations. To prevent this, the Wallet Unit will warn the User that they should connect their device to the internet, such that new attestations can be issued.</p> <p>If the Wallet Unit is not able to go online even after prompting the User, it will finally run out of unused attestations. This means that the User will no longer be able to present any attributes from that attestation, which may be a much higher risk for the User than the risk of being tracked. To prevent this, the Wallet Unit will use Method B, C or D (if supported, see below) as a fallback. The fallback means that if the Wallet Unit has run out of unused attestations and is not able to request new ones, it will start re-using either a single attestation or a batch of attestations, as described for these methods.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#324-drawbacks","title":"3.2.4 Drawbacks","text":"<p>A drawback of this method is that the number of attestations to be issued depends on the frequency of use. This has two effects:</p> <ol> <li> <p>The Attestation Provider probably gets a fairly accurate idea of how  often the User uses their attestation, including how such usage is  spaced in time. In other words, while this method prevents leakage  of information to Relying Parties, it in fact leaks information on  the use of the attestation to the Attestation Provider.</p> </li> <li> <p>This method may imply unpredictability regarding the load on  the Attestation Provider's systems. If a User uses their attestation  frequently, the Attestation Provider will have to issue many  attestations. On the flip side, if an attestation is seldom used,  the Attestation Provider will have to issue very few attestations  per year. This is because the validity period of the attestation can  be chosen very long if an attestation is presented at most once  anyway, without negative effects to the User's privacy.</p> </li> </ol> <p>Another drawback of this method is that the Attestation Provider is dependent on the correct implementation by the Wallet Unit to ensure that it is used correctly.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#33-method-b-limited-time-attestations","title":"3.3 Method B: Limited-time attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#331-description","title":"3.3.1 Description","text":"<p>In another approach, a Wallet Unit may present each attestation multiple times, but only as long as it is valid. Moreover, the Wallet Provider limits the length of the attestation validity to such an extent that it is statistically unlikely that any of the unique values in the attestation can be effectively used by colluding Relying Parties to correlate and track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#332-advantages","title":"3.3.2 Advantages","text":"<p>The biggest advantages of this method are:</p> <ul> <li> <p>The Wallet Unit does not need to support any dedicated  functionality, like it must for once-only attestations,  rotating-batch attestations, or per-RP attestations. This also  implies that, to implement this method, the Attestation Provider is  not dependent in any way on the Wallet Unit, which may also be seen  as an advantage.</p> </li> <li> <p>This method will result in the issuance of a fixed number of  attestations per year, regardless of usage. This means a predictable  load for the Attestation Provider,</p> </li> <li> <p>Finally, the fixed number of attestations per year also implies that  the Attestation Provider does not get any information about the  frequency of use of their attestations.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#333-technical-impacts-on-wallet-unit","title":"3.3.3 Technical impacts on Wallet Unit","text":"<p>None, as described above.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#334-drawbacks","title":"3.3.4 Drawbacks","text":"<p>The main drawbacks of this method are</p> <ul> <li> <p>The risk of Relying Party linkability is not zero, however short the  attestation validity period is chosen. This may a both a real  (technical) risk and a reputational risk, in the sense that it may  be hard to counter accusations of a lack of privacy.</p> </li> <li> <p>It may be hard to estimate how often the User will present their  attestation, or to determine what an acceptable level of risk to  User privacy is. This is essentially a risk analysis to be done by  the Attestation Provider, considering the average usage of their  attestations.</p> </li> <li> <p>Since the Attestation Provider will not have usage information per  User, it can only use estimated averages. However, there always will  be Users will an above-average attestation usage. These Users will  therefore be subject to a higher level of risk of tracking.</p> </li> <li> <p>The Attestation Provider may have to issue many attestations that  will never get used, especially if the attestation validity period is short.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#34-method-c-rotating-batch-attestations","title":"3.4 Method C: Rotating-batch attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#341-description","title":"3.4.1 Description","text":"<p>Using this method, the Attestation Provider issues attestations in batches to the Wallet Unit, like when using once-only attestations (method A). However, in method C a Wallet Unit uses the attestations from a batch in a random order, until it has used all attestations in the batch once. Then it 'resets' the batch and starts using them again in a random order.</p> <p>A batch may consist, for instance, of 20 attestations. If so, any attestation given will be presented unpredictably in 5% of all transactions between a User and a Relying Party. This makes tracking difficult as long as only a minority of Relying Parties is colluding or breached. The level of privacy can be increased by issuing larger batches, at the expense of having to generate more attestations.</p> <p>In addition, the attestations in the batch have a validity period, and cannot be used after the validity period is over. This means that the Attestation Provider will need to replace the entire batch some time before the validity period ends. By decreasing the length of the validity period, the Attestation Providers increases the level of protection against Relying Party linkability.in a manner that is independent of the batch size.</p> <p>This approach has been used, for example, in Cooperative Intelligent Transport Systems (C-ITS).</p> <p>The OpenID4VCI specification used for attestation issuance in the EUDI Wallet ecosystem supports batch issuance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#342-advantages","title":"3.4.2 Advantages","text":"<p>If this approach is used, the number of attestations to be issued is constant over time and does not depend on usage. Therefore, like method B, this method does not leak information to the Attestation Provider and ensures a constant and predictable load for the Attestation Provider's systems.</p> <p>Moreover, compared to method B this method increases the level of privacy, especially for attestations that are used quite frequently. Or, to put the same thing in a different way, if a batch of attestations is used in a rotating fashion, the validity period of an attestation can be longer without impacting the User's privacy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#343-technical-impacts-on-wallet-unit","title":"3.4.3 Technical impacts on Wallet Unit","text":"<p>The Wallet Unit must implement dedicated functionality to support this method, for example to keep track of which attestations are used and unused, and when a batch is fully used and must be reset.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#344-drawbacks","title":"3.4.4 Drawbacks","text":"<p>This method has the following drawbacks:</p> <ul> <li> <p>The risk of Relying Party linkability is not zero, however big the  batch size and however short the attestation validity period is  chosen. This may a both a real (technical) risk and a reputational  risk, in the sense that it may be hard to counter accusations of a  lack of privacy.</p> </li> <li> <p>The Attestation Provider is dependent on the correct implementation  by the Wallet Unit to ensure that this method is used correctly.</p> </li> <li> <p>Also, the Attestation Provider must take a decision regarding batch  size and validity period, balancing User privacy against load on  their systems. Like for method B, this may be a difficult exercise,  and the chosen sizes and validity periods will not fully guarantee  the privacy of all Users.</p> </li> <li> <p>Moreover, every time the attestations expire, the Provider will need  to issue a full batch of attestations, instead of just a single one.  This is regardless of whether all attestations in the batch have  actually been used or not. Therefore, this approach seems suitable  only if the User presents attributes to Relying Parties frequently.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#35-method-d-per-relying-party-attestations","title":"3.5 Method D: Per-Relying Party attestations","text":"<p>When this method is used, the Wallet Unit will present different attestations to different Relying Parties. However, in case a Relying Party requests attributes from this attestation multiple times, the Wallet Unit SHALL present the same attestation to this Relying Party each time.</p> <p>In fact, this method can be seen as a mixture of methods A and B described above: it uses method A for different Relying Parties, and method B for recurring Relying Parties. This implies that all of the respective advantages and disadvantages of these methods apply also for this method. The 'weight' of these advantages and disadvantages will depend on whether the User interacts a few times with a large number of different Relying Parties, or, on the contrary, tends to interact a larger number of times with only a small number of Relying Parties.</p> <p>Regarding the technical impacts on the Wallet Unit, there is one additional requirement compared to the ones listed above for method A. This is that the Wallet Unit must keep track of which attestation it has presented to which Relying Party. It is possible to do so, since according to the ARF, the access certificates used by Relying Party to authenticate themselves to Wallet Units contain a unique identifier of the Relying Party. However, it represents an extra effort for the Wallet Unit, and it may complicate attestation inventory management.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#36-general-note-diminishing-the-costs-of-issuing-multiple-attestations","title":"3.6 General note: Diminishing the costs of issuing multiple attestations","text":"<p>The mitigation measures discussed in this chapter all imply that the Wallet Unit must manage multiple attestations. The operational costs of issuing and managing an attestation are determined to some extent by the requirement that, for security reasons, the Wallet Unit must generate a new cryptographic key pair for each attestation. It stores the private key in its WSCA/WSCD and sends the public key to the Attestation Provider for inclusion in the attestation. Key generation is an expensive operation for many WSCDs, and for some types of WSCD, the number of private keys that can be managed simultaneously is limited.</p> <p>These operational challenges can be lessened in (at least) two ways:</p> <ul> <li> <p>By allowing re-use of existing key pairs (under specific  conditions).</p> </li> <li> <p>By relying on a Hierarchical Deterministic Key (HDK) function as  described in clause 4.4.4.2 of [ETSI 119476]. Using a HDK  function, the Attestation Provider only needs to keep track of a  single public key and use it to derive unique per-attestation public  keys. Each public key is then sent to the Wallet Unit, and the  Wallet Unit can derive the corresponding private key in the  WSCA/WSCD.</p> </li> </ul> <p>These two possibilities will be discussed in Topic B (Re-issuance and batch issuance of PIDs and Attestations) and Topic C (Wallet Unit Attestation (WUA) and key attestation), respectively. They will therefore not be further discussed here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#37-non-technical-mitigation-measures","title":"3.7 Non-technical mitigation measures","text":"<p>The technical mitigation measures discussed in this chapter aim to fully or partially prevent Relying Parties from linking attestations and thus track Users. However, in addition to preventive measures, it is also important to look at measures that can help to detect any such tracking by Relying Parties and Attestation Providers, to correct it insofar possible, and to repress it by appropriately punishing any party that is found to have broken applicable laws. In fact, this was already mentioned in sections 2.2 and 2.3. However, defining such measures is outside the scope of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#4-ensuring-user-privacy-when-checking-the-revocation-status-of-attestations","title":"4 Ensuring User privacy when checking the revocation status of attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#41-introduction","title":"4.1 Introduction","text":"<p>For the revocation of PIDs and attestations (including WUAs), the ARF specifies three methods:</p> <ul> <li> <p>Only issue short-lived attestations having a validity period of 24  hours or less, such that revocation will never be necessary,</p> </li> <li> <p>Use an Attestation Status List mechanism specified.</p> </li> <li> <p>Use an Attestation Status List mechanism specified.</p> </li> <li> <p>Use an Attestation Revocation List mechanism specified.</p> </li> <li>Use an Attestation Revocation List mechanism specified.</li> </ul> <p>The latter two methods imply that a Relying Party must regularly download an Attestation Status List or Attestation Revocation List, to be able to verify that the Attestation Provider has not revoked the attestation. When discussing the risk of tracking Users, particular attention should be given to this process.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#42-general-requirements","title":"4.2 General requirements","text":"<p>To the maximum extent feasible given operational constraints, the Attestation Provider should not be able to learn anything about the User's use of an attestation based upon interactions between Relying Parties and the Attestation Provider related to attestation revocation checking.</p> <p>A Relying Party Instance therefore should not request the relevant Attestation Status List or Attestation Revocation List each time an attestation is presented to it by a Wallet Unit. Rather, the Relying Party operating the Relying Party Instance should download each new version of the list once, at a time and from a location unrelated to the presentation of an attestation by a User. The Relying Party should then distribute it to all of its Relying Party Instances using an Relying Party-internal distribution mechanism (1).</p> <p>(1) Note that strict compliance to this recommendation would imply that Relying Party Instances must always have locally available the latest version of the complete ASL. This may not always be technically feasible. Relying Parties must find a balance between User privacy and optimisation of resource usage.</p> <p>Downloading an Attestation Status List or Attestation Revocation List SHALL NOT require the Relying Party or Relying Party Instance to authenticate itself in any way.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#43-requirements-specific-for-attestation-status-lists","title":"4.3 Requirements specific for Attestation Status Lists","text":"<p>To ensure User privacy specifically when the Attestation Provider uses Attestation Status Lists to enable revocation checking, this document recommends the following:</p> <ul> <li> <p>To ensure the privacy of the User, the Attestation List Provider  should randomly assign the index for each attestation. Note that  randomly assigning indices within a bitstring or byte array is more  complicated than creating random identifiers (e.g. serial numbers)  for attestations, as is needed to implement an Attestation  Revocation List. This is because duplicate indices and unnecessarily  long bitstrings or byte arrays should be prevented.</p> </li> <li> <p>An Attestation List Provider should represent a sufficiently large  number of attestations on each Attestation Status List to ensure  herd privacy. In this context, herd privacy means that if a Relying  Party requests a particular ASL, the Attestation List Provider is  not able to deduce which attestation (likely) was presented to that  Relying Party.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#5-mitigating-linkability-by-using-zero-knowledge-proofs","title":"5 Mitigating linkability by using Zero-Knowledge Proofs","text":"<p>Zero-Knowledge Proofs (ZKP) offer strong potential as a privacy-enhancing technique. This topic will be revisited in Topic G to determine the foundational requirements needed for its future integration, particularly focusing on defining specific requirements for implementing ZKPs by using any type of WSCD/WSCA.</p> <p>For further details, please see the 'Cryptographers' Feedback on the EU Digital Identity's ARF' (here), and the Commission's response to it here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#6-additions-to-the-arf","title":"6 Additions to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#61-high-level-requirements-to-be-added-to-annex-2","title":"6.1 High-Level Requirements to be added to Annex 2","text":"<p>The High-Level Requirements in this section will be added to Annex 2 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#611-requirements-to-be-added-likely-to-topic-1023","title":"6.1.1 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-1","title":"REQUIREMENT 1","text":"<p>A PID Provider, Attestation Provider, or Wallet Provider SHALL ensure that all PID, attestation or WUA unique elements, including at least</p> <ul> <li> <p>the salt used for hashing every attribute,</p> </li> <li> <p>the hash values of all attributes,</p> </li> <li> <p>the attestation identifier or index used for revocation purposes  (if applicable),</p> </li> <li> <p>the attestation public key used for device binding and User  binding,</p> </li> <li> <p>the value of the Attestation Provider signature,</p> </li> <li>the value of the Attestation Provider signature,</li> </ul> <p>have values that are unique across all PIDs, attestations, or WUAs issued by that Provider.</p> <p>Note: This can be achieved, for example, by ensuring that salt values and attestation identifiers are pseudo-random numbers generated by a cryptographically secure pseudo-random number generator (CSPRNG).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-2","title":"REQUIREMENT 2","text":"<p>When issuing PIDs, attestations, or WUAs in a batch to a Wallet Unit, a PID Provider, Attestation Provider or Wallet Provider SHALL ensure that the timestamps in these PIDs, attestations, or WUAs do not enable Relying Parties to conclude that they are part of the same batch (and therefore belong to the same User).</p> <p>Note: This can be done, for example, by ensuring that a sufficiently high number of batches, each issued to a different Wallet Unit, share the same timestamp values (herd privacy).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-3","title":"REQUIREMENT 3","text":"<p>A Wallet Provider SHALL ensure that its Wallet Solution supports the following methods for limiting the number of times a User can present the same attestation to Relying Parties:</p> <ul> <li> <p>Method A: Once-only attestations, as specified in requirement 5  below.</p> </li> <li> <p>Method B: Limited-time attestations, as specified in requirement  6 below.</p> </li> </ul> <p>In addition, a Wallet Provider MAY ensure that its Wallet Solution supports the following methods:</p> <ul> <li> <p>Method C: Rotating-batch attestations, as specified in requirement 7  below.</p> </li> <li> <p>Method D: Per-Relying Party attestations, as specified in  requirement 8 below.</p> </li> </ul> <p>Note: Wallet Solutions, PID Providers, Attestation Providers, and Wallet Providers are free to define and use other methods as well. However, such other methods are out of scope of the ARF. For example, Member States have discussed adding a variation of method B where attestations are issued in a batch, but with overlapping validity periods rather than identical ones. Some of these attestations would then become valid in the future. This could help reduce the risk of a Wallet Unit not having a valid attestation after having been offline for a (long) time. However, it was decided to not add this method.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-4","title":"REQUIREMENT 4","text":"<p>To the maximum extent possible, Wallet Providers, PID Providers, and Attestation Providers SHALL:</p> <ul> <li>ensure that Users do not notice which of the methods referenced in requirement 3  is used for their PIDs, attestations, or WUAs,</li> <li>ensure that no User action is needed for the re-issuance of PIDs or attestations.</li> </ul> <p>Note: The topic of re-issuance will be further discussed with Member States in Topic B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-5","title":"REQUIREMENT 5","text":"<p>When using Method A for a given type of PID, attestation, or WUA,</p> <p>a. the Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same validity period.</p> <p>b. the Wallet Unit SHALL present each PID or, attestation, or WUA only once to a Relying Party, except when it has fallen back to Method B as specified below, or to another available method.</p> <p>c. the Wallet Unit SHALL have a lower limit for the number of unused PIDs, attestations, or WUAs it holds, and SHALL request the issuance of a new batch when this limit is reached. During the first issuance of a new PID, attestation, or WUA, see requirement 10, the PID Provider, Attestation Provider or Wallet Provider SHALL inform the Wallet Unit about the value of the lower limit and the size of the batch to be requested.</p> <p>d. if the Wallet Unit must request a new batch of PIDs, attestations, or WUAs, but is not able to do so because it is offline, the Wallet Unit SHALL warn the User that they are about to lose the possibility to present this PID or attestation to a Relying Party (or any PID or attestation, in case of the WUA) and request them to connect their device to the internet.</p> <p>e. if the Wallet Unit has run out of unused PIDs, attestations, or WUAs, but is not able to request a new batch because it is offline, it SHALL fall back to method B (see requirement 6), or another available method. This means that, when requested by a Relying Party, the Wallet Unit SHALL again present one of the already used PIDs, attestations of WUAs. The Wallet Unit SHALL return to using method A as soon as it is able to go online and request a new batch of PIDs, attestations or WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-6","title":"REQUIREMENT 6","text":"<p>When using Method B for a given type of PID, attestation, or WUA,</p> <p>a. the Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue a single PID, attestation, or WUA to the Wallet Unit.</p> <p>b. when requested to do so, the Wallet Unit SHALL present that PID, attestation or WUA multiple times to the same Relying Party, or to different Relying Parties.</p> <p>c. the Wallet Unit SHALL request the PID Provider or Attestation Provider to issue a new PID, attestation , or WUA some time before the one existing in the Wallet Unit expires. The PID Provider, Attestation Provider, or Wallet Provider SHALL inform the Wallet Unit about the moment at which the Wallet Unit must request the issuance of a new PID, attestation, or WUA, relative to the expiration date of the existing one.</p> <p>Notes:</p> <ul> <li> <p>If method B is used with a batch instead of a single PID,  attestation, or WUA, it may become method C (see requirement 7)  or Method D (see requirement 8).</p> </li> <li> <p>It is the responsibility of Relying Parties to validate whether a  presented PID, attestation, or WUA is temporally valid. There is no  requirement that a Wallet Unit must not present a PID, attestation,  or WUA if it is no longer valid.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-7","title":"REQUIREMENT 7","text":"<p>When using Method C for a given type of PID, attestation, or WUA,</p> <p>a. The Wallet Unit SHALL request the PID Provider, Attestation Provider, or Wallet Provider to issue PIDs, attestations, or WUAs in batches to the Wallet Unit. All PIDs, attestations, or WUAs in a batch SHALL have the same attribute values and the same validity period.</p> <p>b. When a presentation of attributes is requested by Relying Parties, the Wallet Unit SHALL present each PID, attestation, or WUA in a batch once, in a random order.</p> <p>c. When all PIDs, attestations, or WUAs in a batch have been presented once, the Wallet Unit SHALL reset the batch, and start presenting each PID, attestation, or WUA in the batch again in a random order.</p> <p>d. The Wallet Unit SHALL request the PID Provider, Attestation Provider or Wallet Provider to issue a new batch of PIDs, attestations, or WUAs, some time before the batch in the Wallet Unit expires. The PID Provider, Attestation Provider or Wallet Provider SHALL inform the Wallet Unit about the size of the batch and about the moment at which the Wallet Unit must request the issuance of a new batch, relative to the expiration date of the existing one.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-8","title":"REQUIREMENT 8","text":"<p>When using Method D for a given type of PID, attestation, or WUA,</p> <p>a. The Wallet Unit SHALL present different PIDs, attestations, or WUAs to different Relying Parties upon their request. This means that it SHALL comply with requirement 5 (method A) for such Relying Parties.</p> <p>b. In case a given Relying Party requests attributes from a given type of PID, attestation, or WUA multiple times, the Wallet Unit MAY present the same PID, attestation or WUA to this Relying Party. This means that it SHALL comply with requirement 6 (method B) or requirement 7 (method C) for such a Relying Party.</p> <p>c. The Wallet Unit SHALL keep track of which PID, attestation, or WUA it has presented to which Relying Party, using the unique Relying Party identifier from the Relying Party access certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-9","title":"REQUIREMENT 9","text":"<p>A PID Provider, Attestation Provider or Wallet Provider SHALL have a policy describing which of the methods specified in requirement 3 it will use to limit the number of times a Wallet Unit may present a single PID, attestation, or WUA to Relying Parties. For each supported method, the policy SHALL also specify how the values for respective parameters for that method, such as validity period and batch size, will be chosen. The goal of the policy SHALL be to ensure that the risk of Relying Party linkability is mitigated to an acceptable level, given the (expected) usage of the PID, attestation, or WUA by the User. To determine what an acceptable level of risk is, the PID Provider, Attestation Provider, or Wallet Provider SHALL carry out a risk analysis regarding Relying Party linkability.</p> <p>Note: If a PID Provider, Attestation Provider or Wallet Provider issues multiple attestation types, these requirements apply for each type of attestation separately.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-10","title":"REQUIREMENT 10","text":"<p>The Commission SHALL create or reference a profile or extension of the OpenID4VCI specification enabling a PID Provider, Attestation Provider, or Wallet Provider, to indicate in their OpenID4VCI Issuer metadata which of the methods listed in requirement 3 the Wallet Unit must use for the PID, attestation, or WUA issued. Indicated methods SHALL be ordered by preference. This profile or extension SHALL also enable the PID Provider, Attestation Provider, or Wallet Provider to set the value of parameters to be used by the Wallet Unit for each method (if applicable).</p> <p>Note: For example, the parameters to be set for method A include the lower limit for unused attestations and the batch size to be requested (see requirement 5b).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-11","title":"REQUIREMENT 11","text":"<p>PID Providers and Attestation Providers SHALL indicate in their OpenID4VCI Issuer metadata at least that either method A or method B must be used for this type of attestation. PID Providers and Attestation Providers MAY additionally indicate that it prefers using method C and/or method D over method A or method B. In such a case, a Wallet Unit supporting method C and/or method D SHALL use that method, while a Wallet Unit not supporting these methods SHALL use method A or method B, as applicable.</p> <p>Example: An Attestation Provider indicates methods {D, C, A} in their metadata, in that order. A Wallet Unit that supports methods C and D (as well as A and B) then uses method D for this type of attestation. A Wallet Unit supporting methods A, B and C uses method C. A Wallet Unit supporting only methods A and B uses method A.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#612-requirements-to-be-added-likely-to-topic-1","title":"6.1.2 Requirements to be added (likely) to Topic 1","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-12","title":"REQUIREMENT 12","text":"<p>When receiving a PID, attestation, or WUA a Relying Party Instance SHALL discard the values of all unique elements, including at least the ones mentioned in requirement 1 above, as well as any timestamps, as soon as they are no longer needed. The Relying Party Instance SHALL NOT communicate these values to the Relying Party or to any other party inside or outside the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#613-requirements-to-be-added-likely-to-topic-7","title":"6.1.3 Requirements to be added (likely) to Topic 7","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-13","title":"REQUIREMENT 13","text":"<p>A Relying Party Instance SHOULD NOT request the relevant Attestation Status List or Attestation Revocation List each time an attestation is presented to it by a Wallet Unit. Rather, the Relying Party operating the Relying Party Instance SHOULD download each new version of the list once, at a time and from a location unrelated to the presentation of a PID or attestation by a User. The Relying Party SHOULD then distribute the list to all of its Relying Party Instances, using an Relying Party-internal distribution mechanism.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-14","title":"REQUIREMENT 14","text":"<p>A PID Provider, Attestation Provider or Wallet Provider SHALL NOT require the Relying Party or Relying Party Instance to authenticate itself before downloading an Attestation Status List or Attestation Revocation List.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-15","title":"REQUIREMENT 15","text":"<p>When using an Attestation Status List for revocation, the Attestation List Provider SHALL randomly assign the index for each PID or attestation, to prevent this index from becoming a correlator.</p> <p>Note: Randomly assigning indices within a bitstring or byte array is more complicated than creating random identifiers (e.g. serial numbers) for attestations, as is needed to implement an Attestation Revocation List. This is because duplicate indices and unnecessarily long bitstrings or byte arrays must be prevented.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-16","title":"REQUIREMENT 16","text":"<p>When using an Attestation Status List for revocation, the Attestation List Provider SHALL represent a sufficiently large number of PIDs, attestations, or WUAs on each Attestation Status List to ensure herd privacy.</p> <p>Note: In this context, herd privacy means that if a Relying Party requests a particular ASL, the Attestation List Provider is not able to deduce which PID or attestation (likely) was presented to that Relying Party.</p> <p>Note: Complying with this requirement may be difficult in case the number of PIDs, attestations, or WUAs to be represented on the list is small. In such a case, as suggested in [RFC_ASL], decoy entries can be added to the list to obfuscate the real number of referenced PIDs, attestations, or WUAs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#614-requirements-to-be-added-likely-to-topic-10","title":"6.1.4 Requirements to be added (likely) to Topic 10","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#requirement-17","title":"REQUIREMENT 17","text":"<p>After issuing a PID, attestation, or WUA a PID provider, Attestation Provider or Wallet Provider SHALL discard the values of all unique elements, including at least the ones mentioned in requirement 1 above, as well as any timestamps, as soon as they are no longer needed. The Provider SHALL NOT communicate these values to any other party inside or outside the EUDI Wallet ecosystem.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#62-high-level-requirements-to-be-deleted","title":"6.2 High-Level Requirements to be deleted","text":"<p>WUA_09: A Wallet Provider SHALL consider all relevant factors, including the risk of a WUA public key becoming a vector to track the User, when deciding on the validity period of a WUA. A Wallet Provider MAY use short-lived WUAs to mitigate such risks.</p> <p>WU_Revocation_04: The Wallet Provider SHALL manage the issuance processes for WUAs in such a way that the WUAs cannot be misused by colluding Relying Parties (and Attestation Providers) to track a User.</p> <p>These two requirements can be deleted if the ones proposed in section 6.1 are added, because the proposed requirements include the Wallet Provider and are much more detailed than the above two requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#63-descriptions-to-be-added-to-the-arf-main-document","title":"6.3 Descriptions to be added to the ARF main document","text":"<p>A summary of the descriptions in chapter 2 will be added to section 6.1.3 of the ARF main document, version 1.7. A summary of the descriptions in chapter 3 will be added to section 6.6.5 of the ARF main document, version 1.7.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/a-privacy-risks-and-mitigations/#7-references","title":"7 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [ISO18013-5] ISO/IEC 18013-5, Personal identification \u2014 ISO-compliant driving licence \u2014 Part 5: Mobile driving licence (mDL) application, First edition, 2021-09 [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC), draft-terbu-sd-jwt-vc-06, O. Terbu et al., 13 November 2024, draft [ETSI 119476] ETSI TR 119 476, Analysis of selective disclosure and zero-knowledge proofs applied to Electronic Attestation of Attributes, v1.2.1, 2024-07 [W3C VCDM 1.1] W3C Verifiable Credentials Data Model\u202f1.1, 2024-07 [RFC_ASL] Token Status List, draft-ietf-oauth-status-list-06, T. Looker et al., 3 December 2024, draft"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/","title":"B re issuance and batch issuance of pids and attestations","text":"<p>Home Version 0.9, updated 17 February 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#b-re-issuance-and-batch-issuance-of-pids-and-attestations","title":"B - Re-issuance and batch issuance of PIDs and Attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic B: Re-issuance and batch issuance of PIDs and Attestations.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>High-level requirements on re-issuance and batch issuance need to be discussed, as this topic is currently not addressed in the ARF. For example, requirements around authentication of the User and re-use of existing private keys may be different for first-time issuance and re-issuance, batch issuance or synchronous issuance of an attestation</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains no risks regarding re-issuance. This is because the risk register focuses on risks related to security and privacy, not on operational issues such as the difference between first-time issuance and re-issuance of attestations.</p> <p>However, the risks mentioned in [Topic A] are related to the topic of this document as well. This is because regular re-issuance of PIDs and attestations can prevent Relying Party linkability risks discussed in [Topic A].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#14-definitions","title":"1.4 Definitions","text":"<p>For the purpose of this document, the following definitions apply:</p> <ul> <li>Administrative validity period of an attestation: the dates from and/or up to which the attributes in the attestation are valid, which are represented as attribute(s) in the attestation.</li> </ul> <p>Note: some attestations do not have an administrative validity period (e.g., a diploma).</p> <ul> <li>Technical validity period of an attestation: the dates (and possibly times) from and up to which the attestation is valid, which are represented as metadata of the attestation.</li> </ul> <p>Note: All PIDs and attestations have a technical validity period, which is chosen based on a risk analysis, e.g. with regard to User privacy.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#15-document-structure","title":"1.5 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li> <p>Chapter 2 discusses batch issuance and re-issuance of PIDs and  attestations, as well as how these processes are supported by the  [OpenID4VCI] specification.</p> </li> <li> <p>Chapter 3 discusses some of the reasons for re-issuance.</p> </li> <li> <p>Chapter 4 discusses some of the differences between first-time  issuance and re-issuance, especially regarding User authentication  towards PID Provider and Attestation Provider, regarding User  authentication and key management by WSCAs, and regarding triggers  for the re-issuance process.</p> </li> <li> <p>Chapter 5 lists the additions and changes that will be made to the  ARF as a result of discussing this topic with Member States.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#2-re-issuance-and-batch-issuance-of-pids-and-attestations","title":"2 Re-issuance and batch issuance of PIDs and attestations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#21-description","title":"2.1 Description","text":"<p>The ARF contains a large number of requirements regarding the issuance of PIDs and attestations, primarily in Topic 10/23 and also in Topic 9. These requirements do not distinguish between the first time a PID or attestation is issued and re-issuance of a PID or attestation that is already present in a Wallet Unit. Neither do these requirements explicitly address the topic of batch issuance.</p> <p>Re-issuance means the replacement of a PID or attestation that already exists in a Wallet Unit by a PID or attestation having the same document type. Re-issuance is always performed by the same PID Provider or Attestation Provider that issued the existing PID or attestation and it is initiated by the Wallet Unit. The value of the attributes in the new attestation will typically be the same as in the original attestation. However, this is not required; the PID Provider or Attestation Provider may change one or more attribute values. Re-issuance, as described in this document, is only applied within the administrative validity period of a document. As an example, a mobile driving licence (mDL) is issued in the form of attestations which have a technical validity period shorter than the administrative validity period of the licence itself. Re-issuance is used for obtaining fresh attestations as needed during the administrative validity period, to ensure that the User can always share a valid mDL. However, when the administrative validity period ends, there will be a process for obtaining a new administrative driving license. This is however out of scope of this document.</p> <p>Batch issuance means that instead of issuing a single PID or attestation to a Wallet Unit, a PID Provider or Attestation Provider issues a batch of them. All PIDs or attestations in a batch have the same document type, attribute values and validity period. In general, if the original PID or attestation was issued in a batch, then the PID Provider or Attestation Provider will re-issue that PID or attestation in a batch as well.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#22-support-by-openid4vci","title":"2.2 Support by OpenID4VCI","text":"<p>The ARF requires that Wallet Units, PID Providers, and Attestation Providers use the [OpenID4VCI] specification for issuance of PIDs and attestations (See requirement ISSU_01 in Annex 2). [OpenID4VCI] supports re-issuance of attestations through so-called Refresh Tokens. These are tokens that are optionally issued during the first-time issuance of a PID or attestation, next to the Access Tokens used in OpenID4VCI to protect access to the PID Provider or Attestation Provider. When the Wallet Unit needs to request re-issuance of a PID or attestation, it must start the process by exchanging the Refresh Token for a new Access Token.</p> <p>Given the reasons for re-issuance discussed in the next chapter, it seems reasonable to assume that re-issuance shall be possible for any PID or attestation issued to a Wallet Unit.</p> <p>The [OpenID4VCI] specification also supports batch issuance of attestations, by optionally including multiple public keys and proofs of possession in the proofs parameter in the Credential Request. The ARF explicitly requires support for this functionality (ISSU_04).</p> <p>Given the discussions in [Topic A], it seems reasonable to assume that batch issuance is in many cases desirable. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#3-reasons-for-re-issuance","title":"3 Reasons for re-issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#31-overview","title":"3.1 Overview","text":"<p>There may be different reasons for re-issuing a PID or attestation, for example:</p> <ul> <li> <p>The current PID(s) or attestation(s) are near the end of their  technical validity period, or the Wallet Unit is running out of once-only  attestations. See section 3.2.</p> </li> <li> <p>The value of one or more of the attributes in the PID or attestation  has changed. See section 3.3.</p> </li> <li> <p>The security architecture of the Wallet Solution may use PIDs and/or  attestations that are issued just-in-time, at the moment that PID or  attestation is being requested by a Relying Party. This is sometimes  called synchronous issuing. See section 3.4.</p> </li> </ul> <p>The main reason for batch issuance of PIDs or attestations within the EUDI Wallet ecosystem is to (partly) mitigate Relying Party linkability. For this, see [Topic A].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#32-pid-or-attestation-nearing-its-end-of-technical-validity-or-wallet-unit-running-out-of-pids-or-attestations","title":"3.2 PID or attestation nearing its end of technical validity or Wallet Unit running out of PIDs or attestations","text":"<p>As specified in [ISO/IEC 18013-5] or [SD-JWT VC], each PID or attestation contains metadata indicating its technical validity period. Determining the length of the technical validity period is the responsibility of the PID Provider or the Attestation Provider; neither these standards, nor the ARF, nor the PID Rulebook specify anything about this. The technical validity period chosen by the PID Provider or Attestation Provider will depend on several factors, primarily the security architecture of the Wallet Solution and the strategy chosen to mitigate Relying Party linkability, as discussed in [Topic A].</p> <p>Given the above factors, it can generally be assumed that the technical validity period of a PID or attestations will be much shorter than the lifetime of the corresponding document, meaning the period of time that a User wants to keep that PID or attestation in their Wallet Unit. That implies that new PIDs and attestations will need to be issued periodically, to replace the ones that are reaching their end of technical validity.</p> <p>A similar reason for re-issuing PIDs and attestations occurs when the PID Provider or Attestation Provider uses once-only attestations (as defined in [Topic A]), which can be presented only once to a Relying Party. In that case, the Wallet Unit, or rather the User, will regularly need new PIDs or attestations to avoid running out.</p> <p>Re-issuance of PIDs or attestations for these reasons is a purely technical matter. To the maximum extent possible, the User should not notice that a PID or attestation has been re-issued, nor should they have to take any action to ensure that re-issuance happens in time. Nevertheless, re-issuance events should be logged as stated in DASH_02, and a User should be able to access this log (DASH_02b). Additionally a Wallet Unit may offer the user the option to receive a notification of re-issuance.</p> <p>These conditions are very different from a first-time issuance of a PID or attestation, where the User must take the initiative to request the PID or attestation, and is potentially involved in the process in other ways as well. These aspects are discussed in chapter 4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#33-a-change-in-attribute-values","title":"3.3 A change in attribute values","text":"<p>During the lifetime of a PID or attestation, the value of some of the attributes may change. For example, at the date of birth of the User, an age attestation attribute (i.e., an attribute indicating whether the User has reached a certain age) may have to be changed from value False to value True. In another example, the User of a mobile driving licence may have passed the examination for a different vehicle category. In this case, the PID Provider or Attestation Provider shall re-issue the PID or attestation with the correct attribute values, and shall revoke the existing attestation.</p> <p>Re-issuance of a PID or attestation for this reason will have an impact on the User, because they will notice that their attribute values have been changed. In this case Users should be informed. Additionally, an Attestation Provider may state in their terms of conditions that re-issuance of an attestation may be used.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#34-synchronous-issuing","title":"3.4 Synchronous issuing","text":"<p>A third reason for re-issuing a PID or attestation is where the PID Provider or Attestation Provider uses synchronous issuing. In such an architecture, the Wallet Unit requests the issuance of a new PID or attestation after it has received a request for that PID or attestation from a Relying Party. In such an architecture, the PID or attestation is very short-lived and is used only once.</p> <p>Within the scope of this document, this reason for re-issuance is very similar to the reasons discussed in section 3.2. Users should not notice that a PID or attestation is being re-issued, nor should they have to take any action to ensure that re-issuance happens. However, they may be offered the option to receive notifications. Similarly, re-issuance events should be logged.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#4-differences-between-first-time-issuance-and-re-issuance-or-batch-issuance","title":"4 Differences between first-time issuance and re-issuance or batch issuance","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#41-user-authentication-by-pid-provider-or-attestation-provider","title":"4.1 User authentication by PID Provider or Attestation Provider","text":"<p>In [Topic A] a high-level requirement was established that, to the maximum extent possible, Users will not be involved in managing the re-issuance of new attestations. This is an important principle. Requiring that the User is involved in re-issuance processes would mean that a User is requested to perform actions that they did not initiate, and for which they probably don't understand the reason. This would lead at least to a bad user experience, and most likely also to operational problems, such as Users not cooperating. Users may start to distrust their Wallet Unit if it unexpectedly keeps asking the User to authenticate, or if they are not able to present their PIDs or attestations because they (perhaps unknowingly) blocked a request for re-issuance.</p> <p>The requirement of non-involvement of Users in re-issuance processes has implications for PID Providers and Attestation Providers. One of these implications is that the requirements regarding User authentication will be different for first-time issuance and re-issuance. At least for PID Providers, and for many Attestation Providers as well, it is required to identify and authenticate the User during a first-time issuance process. For PID Providers, it is even required to authenticate the User on Level of Assurance High. However, for re-issuance process, performing User authentication is not possible if the User must not be involved.</p> <p>If the User is not authenticated during re-issuance process, there is a risk that the PID Provider or Attestation Provider issue the new PID or attestation to the wrong person. To prevent this, they will have to implement alternative security mechanisms. One option for this is to require that the Refresh Tokens used by [OpenID4VCI] are bound to the same WSCA to which the existing PID or attestation is bound. This can be done by requiring that OAuth 2.0 Demonstrating Proof of Possession (DPoP) [RFC 9449] is used for these tokens, and that the public key in the DPoP proof matches the public key in (one of) the PID(s) or attestation(s) issued to the Wallet Unit previously.</p> <p>Such a mechanism is common in managing certificate signing requests in Public Key Infrastructures. It means that PID Providers or Attestation Providers can be sure that the new PID or attestation will be bound to the same WSCA, and thus to the same User, as the existing one.</p> <p>For first-time batch issuance of PIDs or attestations, it seems reasonable to require that the User needs to authenticate towards the PID Provider or attestation provider only once, regardless of the size of the batch, i.e., the number of PIDs or attestations issued simultaneously to the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#42-user-authentication-and-key-management-by-the-wsca","title":"4.2 User authentication and key management by the WSCA","text":"<p>The ARF v1.5 contains a requirement (WUA_02) stating that \"a WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of (...) a PID or an attestation in a Wallet Unit.\"</p> <p>If Users must not be aware of re-issuance processes for their existing PIDs and attestations, this requirement may be problematic. This is because the ARF assumes that each PID or attestation is bound to a key pair that is generated by the WSCA. Therefore, for every new PID or attestation, the WSCA must generate a new key pair. And key pair generation is a cryptographic operation that, per the requirement above, requires User authentication.</p> <p>A solution for this challenge could be sought in several directions:</p> <ol> <li> <p>By changing requirement WUA_02, such that it does not apply to key  generation operations.</p> </li> <li> <p>By allowing re-use of existing key pairs, meaning that the PID  Provider or Attestation uses the same public key in multiple PIDs or  attestations.</p> </li> <li> <p>By relying on a Hierarchical Deterministic Key (HDK) function as  described in clause 4.4.4.2 of [ETSI 119476].  Using a HDK function, the PID Provider or Attestation Provider only  needs to obtain a single public key from the WSCA, along with  non-sensitive metadata required to apply HDK. This happens during  first-time issuance of a first PID or attestation, where the User is involved in  the process anyway and a request to authenticate will not come unexpectedly.  During re-issuance or (batch) issuance of associated PID or attestations,  the PID Provider or Attestation Provider then uses this public  key to derive unique per-attestation public keys from the received public key,  without involvement of the Wallet Unit or the WSCA. These newly derived  public keys are then sent to the Wallet Unit, along with non-sensitive  metadata required to apply HDK, and the WSCA can effectively derive  the corresponding private keys from the existing private  key (i.e. the one generated during first-time issuance). The WSCA then  uses these private keys as normal during a presentation of  attributes.</p> </li> <li> <p>By using WSCA to authenticate Users before using the Wallet Unit. Requirement WUA_03 states that \"A Wallet Unit SHALL authenticate the User before performing any operation excluding cryptographic operations. The Wallet Unit MAY rely on a WSCA to do so (...)\". Therefore, the WSCA may perform the necessary cryptographic operations immediately after authenticating the user on the Wallet Unit behalf.</p> </li> </ol> <p>Option 1 may not count as a good solution. Cryptographic key generation by the WSCA is a sensitive operation, and it seems unwise to allow this to happen without User authentication, if we can avoid that. Also, it is not clear whether all types of WSCA (such a remote HSMs but also embedded secure element) can be made to operate in such a way that they require User authentication before signing and key agreement operations, but not before key generation operations.</p> <p>Option 2 entails multiple risks and should be avoided.</p> <p>Option 3 seems promising, but Hierarchical Deterministic Keys have not been part of the ARF before. If we want to require support from Wallet Units and Attestation Providers for this technology, it needs to be further investigated. High Level Requirements for this option will be provided in a future specification.</p> <p>Option 4 is not achievable if the WSCA/WSCD is a remote HSM and the Wallet Unit does not have internet connection. That means that a User would not be able to open their Wallet Unit in such case. However, these conditions will probably not occur very often, relatively speaking. This paper therefore recommends Wallet Providers to implement this approach.</p> <p>Requirement WUA_02 may also be problematic for batch issuance, if it means that User authentication is required before generation of an individual key pair. That would mean that for a batch of 20 PIDs or attestations, the User would be required to authenticate 20 times. This is clearly not acceptable from a user experience point of view, especially not since the User is not even aware of the concept of batch issuance, nor of the reasons for it.</p> <p>However, ARF 1.5.0 already contains the following note to requirement WUA_02: \"Many actions of the Wallet Instance, such as processing a Relying Party request and presenting an attestation, require multiple cryptographic operations, for example ephemeral key generation followed by key agreement and message encryption. This requirement does not imply that separate User authentication is necessary before each of these operations. Rather, a successful User authentication will be valid for all cryptographic operations necessary for a Wallet Unit action. It is up to the Wallet Provider to determine what constitutes a 'Wallet Unit action', finding a balance between security (more User authentications) and User convenience (fewer User authentications). During certification of the Wallet Solution, it will be verified that the solution provides an adequate level of security.\"</p> <p>This Discussion Paper adds the additional requirement that (first-time) batch issuance of PIDs or attestations shall require only a single User authentication</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#43-triggers-for-the-issuance-process","title":"4.3 Triggers for the issuance process","text":"<p>The process of first-time issuance of a PID or attestation is triggered by the User, who wants to obtain a PID or attestation and triggers the Wallet Unit to start the process specified in [OpenID4VCI]. If we take the requirement that Users are not involved in re-issuance processes absolutely, trusting on the User to trigger re-issuance is not an option. That leaves two parties that could potentially do this: the PID Provider or Attestation Provider, or the Wallet Unit.</p> <p>However, it is not clear how the PID Provider or Attestation Provider can trigger the Wallet Unit to start the re-issuance processes. A Wallet Provider will typically be able to send a push message to a Wallet Unit, which will cause the Wallet Unit to contact the Wallet Provider's backend to look for any updates or other actions. But PID Providers and Attestation Providers are different from Wallet Providers, generally speaking, and will typically not have this option.</p> <p>Therefore, it seems better to require that the Wallet Unit triggers the process of re-issuing a PID or attestation, for example when the existing PID or attestation is near the end of its validity period, or when the Wallet Unit is running out of once-only PIDs or attestations. [Topic A] already contains the appropriate requirements.</p> <p>A Wallet Unit shall also give the User the option to manually initiate a re-issuance process for any of the PIDs or attestations in their Wallet Unit. This may be useful, for example, if the User knows that their Wallet Unit will go offline for an extended period of time.</p> <p>Note that these requirements do not apply when synchronous issuance is used. In that case, the Wallet Unit triggers the re-issuance of a PID or attestation when attributes from that PID or attestation are requested by a Relying Party.</p> <p>Finally, there are situations where re-issuance of a PID or attestation is necessary because of a change in the value of one or more of the attributes. This is more complicated, because the Wallet Unit does not have a way to know when this happens. There basically seem to be three options:</p> <ol> <li> <p>The Wallet Unit sends at regular intervals a request to the PID  Provider or Attestation Provider, to see if an updated version of  the PID or attestation is available.</p> </li> <li> <p>The PID Provider or Attestation Provider contacts the Wallet  Provider to trigger the Wallet Unit to request re-issuance of the  PID or attestation.</p> </li> <li> <p>The PID Provider or Attestation Provider contacts the User via an  out-of-band communication channel to inform them that they need to  request an update of their PID or attestation.</p> </li> <li> <p>A PID Provider or Attestation Provider revokes the attestation if attribute values  are out-of-date. Thus the Wallet Unit should monitor the revocation status  of its PIDs and attestations and notify the User if a PID or attestation is revoked. This enable the User to trigger a re-issuance process.</p> </li> </ol> <p>Option 1 has obvious drawbacks, in particular:</p> <ul> <li>(Potentially) millions of Wallet Units sending such information  requests, in most cases probably for nothing.</li> <li>Moreover, the PID Provider or Attestation Provider would have to determine  the frequency of such requests, which is not trivial. Too low a  frequency may mean that the User does not receive the updated  version of their PID or attestation in time, i.e., before the new  values become valid. Too high a frequency increases the load on the  systems of the PID Provider or Attestation Provider unnecessarily.</li> <li>Finally, such a request, and also the PID Provider or Attestation  Provider endpoint to which it can be addressed, have not been  specified yet.</li> </ul> <p>Note that Option 4 is probably a solution to these drawbacks.</p> <p>Option 2 requires direct communication between the Wallet Provider and the PID Provider or Attestation Provider. The ARF does not foresee such communication, primarily since it means that the Wallet Provider gets information about the PIDs and attestations present on each of their Wallet Units. From an architecture point of view, this would therefore be a major change. Furthermore, this option introduces privacy risks. On the other hand, the Commission has received feedback stating that in the long run, when the EUDI Wallet ecosystem is successful and a PID Provider or Attestation Provider will have millions of subscribers, the current issuance model will be unsustainable anyway. This is because remotely issuing and managing millions of attestations, residing on mobile devices that are controlled by their User, requires specialised knowledge and a dedicated infrastructure that will not be easy to deploy for many PID Providers or Attestation Providers. If true, this would mean that these Providers will outsource this task to the Wallet Providers. They will send the PIDs or attestations containing the new attribute values to the Wallet Provider, and the Wallet Provider would be responsible for delivering these PIDs or attestations to the respective Wallet Unit in time. Obviously, the attribute values would be encrypted, such that the Wallet Provider cannot read them.</p> <p>In conclusion, this option should not yet be considered. It should be re-examined at a later stage if such an interface is needed.</p> <p>Option 3 violates the principle that the User is not involved in the re-issuance of PIDs or attestations. In this case, however, that is defensible, since the User will (have to) note the changed attribute value anyway. This approach nevertheless has some drawbacks as well:</p> <ul> <li>It is only usable if during the first-time issuance of the PID or  attestation, the PID Provider or Attestation Provider captured  contact information of the User, such as a telephone number or  e-mail address. This may not be the case for all attestations.</li> <li>The User may have objections to the update of their PID or  attestation. For example, a User may have  lost the right to drive because of medical reasons or severe traffic  violations. Such a User may refuse to trigger the re-issuance  process because they want to continue using their existing PID or  attestation with the 'old' values. Obviously, the PID Provider or  Attestation Provider can (and shall) revoke the existing PID or  attestation.</li> </ul> <p>The use of this option, as long as it does not involve the Wallet Unit for delivering such a notification, is left to PID Providers and Attestation Providers as an implementation choice.</p> <p>Option 4 is the recommended approach. Option 4 is similar to Option 1 but it does not suffer from the absence of an appropriate PID Provider or Attestation Provider endpoint. However, depending on the revocation reason, re-issuance of an attestation may not succeed. Wallet Units should be able to handle this condition.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#44-handling-existing-pids-or-attestations-after-re-issuance-of-new-ones","title":"4.4 Handling existing PIDs or attestations after re-issuance of new ones","text":"<p>In general, re-issuance of a PID or attestation will take place when the existing PID or attestation is still valid. If that were not the case, there would be a time window where User does not have any valid PIDs or attestations that they can present to Relying Parties.</p> <p>After successful re-issuance of a PID or attestation, the Wallet Unit must delete the existing PID or attestation, meaning the one that the re-issued PID or attestation intends to replace. This is for a simple reason: the value of some of the attributes in the new PID or attestation may be different from the value in the existing one. And obviously, the Wallet Unit must not present attestations containing attribute values that the Wallet Provider no longer wants to attest to. The Wallet Unit shall ensure that the correct attestation is replaced.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#5-additions-and-changes-to-the-arf","title":"5 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#51-high-level-requirements-to-be-added-to-annex-2","title":"5.1 High-Level Requirements to be added to Annex 2","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#511-requirements-to-be-added-likely-to-topic-1023","title":"5.1.1 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-1","title":"Requirement 1","text":"<p>A Wallet Unit SHALL give its User the option to manually initiate a re-issuance process for any of the PIDs or attestations in their Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-2","title":"Requirement 2","text":"<p>After a successful re-issuance, a Wallet Unit SHALL compare the attribute values of the re-issued PID or attestation with those of the existing PID or attestation, and SHALL notify the User in case of any differences.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-3","title":"Requirement 3","text":"<p>The Wallet Unit SHALL gracefully handle situations in which re-issuance of a PID or attestation is refused by the PID Provider or Attestation Provider, for example by attempting a retry after an appropriate delay.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-4","title":"Requirement 4","text":"<p>A Wallet Provider SHALL ensure that its Wallet Solution supports PID or attestation first-time batch issuance with a single User authentication.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-5","title":"Requirement 5","text":"<p>A Wallet Provider SHALL ensure that a Wallet Unit, after successful re-issuance of a PID or attestation, deletes the correct pre-existing PID or attestation, meaning the one that the re-issued PID or attestation intends to replace.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-6","title":"Requirement 6","text":"<p>PID Providers, Attestation Providers, and Wallet Units SHALL support the features of [OpenID4VCI] enabling the re-issuance of all PIDs and attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-7","title":"Requirement 7","text":"<p>PID Providers, Attestation Providers, and Wallet Units SHALL support the features of [OpenID4VCI] enabling the batch issuance of all PIDs and attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-8","title":"Requirement 8","text":"<p>The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to verify that a re-issued PID or attestation is bound to the same WSCD to which the existing PID or attestation is bound. Note: This can be done, for instance, by requiring that OAuth 2.0 Demonstrating Proof of Possession (DPoP) [RFC 9449] is used for each Refresh Tokens, and that the public key in the DPoP proof is identical to the public key in the existing PID or attestation issued to the Wallet Unit previously.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#512-requirements-to-be-added-likely-to-topic-7","title":"5.1.2 Requirements to be added (likely) to Topic 7","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-9","title":"Requirement 9","text":"<p>In case a PID Provider or Attestation Provider must change an attribute in an issued PID or attestation, it SHALL revoke that PID or attestation. Subsequently, if the User's contact details are known, the PID Provider SHOULD, via an out-of-band manner, notify the User about the revocation and ask the User to request re-issuance of the attestation using their Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-10","title":"Requirement 10","text":"<p>A Wallet Unit SHOULD regularly check the revocation status of its PIDs, attestations, and WUAs, and notify the User if a PID or attestation, or the Wallet Unit itself, is revoked.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#512-requirements-to-be-added-likely-to-topic-19","title":"5.1.2 Requirements to be added (likely) to Topic 19","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#requirement-11","title":"Requirement 11","text":"<p>A Wallet Unit SHALL log issuance and re-issuance transactions as stated in requirement DASH_02. The Wallet Unit SHALL log the date and time of the transaction,the corresponding PID Provider or Attestation Provider, the attestation type requested and the outcome of the transaction (success or failure). For a re-issuance transaction, the Wallet Unit SHALL additionally log whether it was triggered by the User or by the Wallet Unit without involvement of the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#52-high-level-requirements-to-be-changed","title":"5.2 High-Level Requirements to be changed","text":"<p>WUA_03 says: \"A Wallet Unit SHALL authenticate the User before performing any operation excluding cryptographic operations. The Wallet Unit MAY rely on a WSCA to do so, per WUA_02, but MAY also rely on a User authentication method implemented in the Wallet Instance.\" The second sentence will be changed to \"The Wallet Unit SHOULD rely on a WSCA to do so, per WUA_02, but MAY rely on a User authentication method implemented in the Wallet Instance in case using a WSCA is not feasible.\" A note will be added to explain that a Wallet Unit using a remote HSM and being without internet connection is an example.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#53-descriptions-to-be-added-to-the-arf-main-document","title":"5.3 Descriptions to be added to the ARF main document","text":"<ul> <li>A summary of the descriptions in chapter 2 will be added to section 6.6.2 of the ARF main document.</li> <li>A summary of the descriptions in chapter 3 will be added in the description of possible states of a PID or attestation included in section 4.6.5 of the ARF main document.</li> <li>A summary of the descriptions in chapter 4 related to batch issuance will be added in section 6.6.2 of the ARF main document.</li> <li>A summary of the descriptions in chapter 4 related to re-issuance will be included in a new section that be will be added after section 6.6.2 of the ARF main document.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/b-re-issuance-and-batch-issuance-of-pids-and-attestations/#6-references","title":"6 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [ISO18013] ISO/IEC 18013-5, Personal identification \u2014 ISO-compliant driving licence \u2014 Part 5: Mobile driving licence (mDL) application, First edition, 2021-09 [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC) draft-terbu-sd-jwt-vc-06, O. Terbu et al., 13 November 2024, draft [OpenID4VCI] Lodderstedt, T. et al., \"OpenID for Verifiable Credential Issuance\", OpenID Foundation. Available at: https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html [RFC 9449] OAuth 2.0 Demonstrating Proof of Possession (DPoP), D. Fett et al., September 2023 [Topic A] Topic A: Privacy risks and mitigations - eIDAS Cooperation Group Discussion Paper"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/","title":"C wallet unit attestation","text":"<p>Home Version 0.4, updated 14 March 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#c-wallet-unit-attestation-wua-and-key-attestation","title":"C - Wallet Unit Attestation (WUA) and Key Attestation","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic C: Wallet Unit Attestation (WUA) and key attestation. The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Define high-level requirements for WUA as defined in the IAs of article 5a, and for the key attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to the Wallet Unit Attestation and key attestation.</p> </li> <li> <p>Chapter 3 discusses the high-level purpose of the Wallet Unit Attestation and introduces the two use cases for WUA.</p> </li> <li> <p>Chapter 4 relates the topic to other topics being discussed, and to previously identified risks.</p> </li> <li> <p>Chapter 5 presents the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#change-log","title":"Change log","text":"<ul> <li>Changes for Version 0.3:</li> <li>Added Chapter 3.1, describing the use cases WUA should support.</li> <li>Updated revocation discussion in Chapter 3</li> <li>Restructured the HLRs</li> <li>Added, removed and changed HLR.</li> <li>Changes for Version 0.2:</li> <li>Updated discussions on revocation and cryptographic binding</li> <li>Changes to HLRs</li> </ul> <p>Multiple legal texts impose direct requirements on the Wallet Unit Attestation, and impose requirements that are solved by using Wallet Unit Attestations: [CIR 2024/2977], [CIR 2024/2979], [CIR 2024/2982], and the [European Digital Identity Regulation]. This section recaps the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#21-european-digital-identity-regulation-about-the-wallet-unit-attestation","title":"2.1 [European Digital Identity Regulation] about the Wallet Unit Attestation","text":"<p>The [European Digital Identity Regulation] does not directly address the need for Wallet Unit Attestations. Rather, it requires that it should be possible to verify the authenticity and validity of a Wallet Unit.</p> <p>Below are the actual excerpts from the Regulation, including the recitals and the Articles that establish these requirements.</p> <p>Recital (34)</p> <p>The use of European Digital Identity Wallets as well as the discontinuation of their use should be the exclusive right and choice of users. Member States should develop simple and secure procedures for the users to request immediate revocation of validity of European Digital Identity Wallets, including in the case of loss or theft. Upon the death of the user or the cessation of activity by a legal person, a mechanism should be established to enable the authority responsible for settling the succession of the natural person or assets of the legal person to request the immediate revocation of European Digital Identity Wallets.</p> <p>Article 5a European Digital Identity Wallets</p> <p>... 4. European Digital Identity Wallets shall, in particular: ... (a) support common protocols and interfaces: ... (viii) for relying parties to verify the authenticity and validity of European Digital Identity Wallets; ... ... 8. Member States shall provide validation mechanisms free-of-charge, in order to: (a) ensure that the authenticity and validity of European Digital Identity Wallets can be verified; ... ...9. Member States shall ensure that the validity of the European Digital Identity Wallet can be revoked in the following circumstances: ...</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#22-cir-20242977-about-the-wallet-unit-attestation","title":"2.2 [CIR 2024/2977] about the Wallet Unit Attestation","text":"<p>[CIR 2024/2977] specifies three main requirements related to the Wallet Unit Attestation:</p> <ol> <li>PID issuers must ensure their data is cryptographically bound to the Wallet Unit during issuance.</li> <li>PID issuers must verify that the Wallet Unit belongs to a trusted Wallet Solution.</li> <li>Wallet Unit Attestations must support revocation.</li> </ol> <p>Below are the actual excerpts from the CIR, including the recitals and the Articles that establish these requirements.</p> <p>Recital (10)</p> <p>To protect the data of wallet users and to ensure the authenticity of electronic attestations of attributes, mechanisms for the authentication of providers of electronic attestations of attributes, and for the verification of the authenticity and validity of wallet units by that provider should apply prior to the issuance of the attestations to wallet units.</p> <p>Article 3</p> <p>5. Providers of person identification data shall ensure that person identification data that they issue is cryptographically bound to the wallet unit to which it is issued.</p> <p>9. Before issuing person identification data to a wallet unit, providers of person identification data shall authenticate and validate the wallet unit attestation of the wallet unit and verify that the wallet unit belongs to a wallet solution the provider of person identification data accepts or use another authentication mechanism in accordance with an electronic identity scheme notified at assurance level high.</p> <p>Article 5</p> <p>4. Where providers of person identification data revoke person identification data issued to wallet units, they shall do so in each of the following circumstances: ... (b) where the wallet unit attestation to which the person identification data was issued to has been revoked;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#23-cir-20242979-about-the-wallet-unit-attestation","title":"2.3 [CIR 2024/2979] about the Wallet Unit Attestation","text":"<p>[CIR 2024/2979] specifies six main requirements related to the Wallet Unit Attestation:</p> <ol> <li>Wallet Providers must ensure the Wallet Unit contains a Wallet Unit Attestation.</li> <li>The WUA must contain a public key, where the corresponding private key is protected by a WSCD.</li> <li>The WUA must be revocable only by the Wallet Provider that provided the WUA.</li> <li>The Wallet Provider must have certain responsibilities in relation to the revocation of the WUA.</li> <li>The WUA must contain information as to where revocation information can be found. This information must be made available in a privacy preserving manner.</li> <li>In case a Wallet Unit requests the presentation of attributes from another Wallet Unit, relevant information contained in the WUA of the requesting Wallet Unit may be logged by the requested Wallet Unit.</li> </ol> <p>Below are the actual excerpts from the CIR, including the recitals and the Articles that establish these requirements.</p> <p>Recital (7)</p> <p>Wallet units are to enable providers of person identification data or electronic attestations of attributes to verify that they are issuing this data or attestations to genuine wallet units of the wallet user.</p> <p>Recital (8)</p> <p>To ensure data protection by design and by default, the wallets should be provided with available state-of-the-art privacy enhancing techniques. These features should provide the possibility that wallets can be used without the wallet user being trackable across different wallet-relying parties, if applicable in the usage scenario. For instance, wallet providers should consider state-of-the-art privacy mitigating measures in relation to wallet unit attestations, such as using ephemeral wallet unit attestations or batch issuance. In addition, embedded disclosure policies should warn the wallet users against inappropriate or illegal disclosure of attributes from electronic attestations of attributes.</p> <p>Recital (9)</p> <p>Wallet unit attestations should make it possible for wallet-relying parties which request attributes from wallet units, to verify the validity status of the wallet unit that they are communicating with, as wallet unit attestations are to be revoked when a wallet unit is no longer considered valid. The information regarding the validity status of the wallet units should be made available in an interoperable manner, to ensure that it can be used by all wallet-relying parties. Moreover, for cases where wallet users lost their wallet units or no longer have control over it, wallet providers should enable wallet users to request the revocation of their wallet unit. To ensure the privacy and unlinkability, Member States should employ privacy preserving techniques also for the wallet unit attestation. This may include the usage of multiple wallet unit attestations for different purposes, disclosing only the minimally relevant information about the wallet necessary for a transaction, or to limit the lifetime of the wallet unit attestation as an alternative to the use of revocation identifiers.</p> <p>Article 6</p> <p>1. Wallet providers shall ensure that each wallet unit contains wallet unit attestations. 2. Wallet providers shall ensure that the wallet unit attestations referred to in paragraph 1 contain public keys and that the corresponding private keys are protected by a wallet secure cryptographic device. 3. Wallet providers shall: ( c ) ensure wallet users have the right to request revocation of their wallet unit attestations, using the authentication mechanisms referred to in point (b).</p> <p>Article 7</p> <p>1. Wallet providers shall be the only entities capable of revoking wallet unit attestations for wallet units that they have provided. 2. Wallet providers shall establish a publicly available policy specifying the conditions and the timeframe for the revocation of wallet unit attestations. 3. Where wallet providers have revoked wallet unit attestations, they shall inform affected wallet users within 24 hours of the revocation of their wallet units, including the reason for the revocation and the consequences for the wallet user. This information shall be provided in a manner that is concise, easily accessible and using clear and plain language. 4. Where wallet providers have revoked wallet unit attestations, they shall make publicly available the validity status of the wallet unit attestation in a privacy preserving manner and describe the location of that information in the wallet unit attestation.</p> <p>Article 9</p> <p>2. The logged information shall at least contain: \u2026 (b) the name, contact details, and the unique identifier of the corresponding wallet-relying party and the Member State in which that wallet-relying party is established, or in case of other wallet units, relevant information from the wallet unit attestation;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#23-cir-20242982-about-the-wallet-unit-attestation","title":"2.3 [CIR 2024/2982] about the Wallet Unit Attestation","text":"<p>[CIR 2024/2982] specifies four main requirements related to Wallet Unit Attestations:</p> <ol> <li>Wallet Units must validate a WUA when interacting with other Wallet Units.</li> <li>WUA information must be displayed to Users in certain cases.</li> <li>Wallet Units must provide WUA to wallet-relying parties or Wallet Units upon request.</li> <li>Wallet Units must provide a WUA to PID Providers or Attestation Providers upon request.</li> </ol> <p>Below are the actual excerpts from the CIR, including the recitals and the Articles that establish these requirements.</p> <p>Recital (5)</p> <p>In order to ensure transparency and trustworthiness of wallet-relying parties towards wallet users, the protocols and interfaces used by the wallet solutions should provide wallet users with a reliable mechanism to authenticate wallet- relying parties and other wallet units. Inversely, wallet providers should provide a mechanism to authenticate and validate wallet units so that relying parties can receive assurances with respect to trustworthiness and authenticity of the wallet units. Further, the technical infrastructure of the wallets should also be designed to ensure that only the minimal necessary amount of data is transferred only to the authorised relying parties, while keeping unlinkability between the different transactions. In order to facilitate the issuance of person identification data and electronic attestations of attributes, all wallet solutions should support a minimum set of protocols and interfaces.</p> <p>Article 3</p> <p>Regarding the protocols and interfaces referred to in Articles 4 and 5, wallet providers shall ensure that wallet units: (2) authenticate and validate the wallet unit attestations of other wallet units where interacting with other wallet units; (3) authenticate and validate requests made using wallet-relying party access certificates or wallet unit attestations from other wallet units, where applicable; (5) display to wallet users information contained in the wallet-relying party access certificates or in the wallet unit attestations; (8) present wallet unit attestations of the wallet unit to wallet-relying parties or wallet units that request it;</p> <p>Article 4</p> <p>3. In relation to the issuance of person identification data and electronic attestations of attributes to a wallet unit, wallet providers shall ensure that the following requirements are complied with: ... (b) where wallet users use their wallet unit to interact with providers of person identification data or electronic attestations of attributes, wallet units shall enable authentication and validation of the wallet unit components by presenting the wallet unit attestations to those providers upon their request;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#3-purpose-of-the-wua","title":"3 Purpose of the WUA","text":"<p>The legal requirements quoted in Chapter 2 address different aspects related to the Wallet Unit Attestation. The aspects cover interaction with the User (i.e., requirements in relation to the User interface), interaction with other parties (i.e., what a WUA should be used for) and requirements on the WUA itself (i.e., essential information that should be contained in the WUA). This document will not go into requirements on the User interface, but will focus on how WUAs may be used in connection with other parties. The detailed information to be contained in the WUA will be described in a technical specification of the WUA.</p> <p>This document is ONLY intended to specify the high-level requirements related to the WUA. The technical specifications related to the WUA is to be developed by the Commission at a later point in time.</p> <p>The legal requirements in relation to the functional requirements of the WUA can be summarised as the following functional requirements:</p> <ol> <li>Information contained in the WUA must allow Relying Parties, PID Providers and Attestation Providers, and other Wallet Units to validate the authenticity and revocation status of a Wallet Unit.</li> <li>Wallet Providers must be able to revoke a Wallet Unit, by revoking the corresponding WUA(s).</li> <li>Only the Wallet Provider of a Wallet Unit must be able to revoke that Wallet Unit.</li> <li>It is the Wallets Provider's responsibility to create the WUA.</li> <li>During issuance, PID Providers and Attestation Providers must be able to ensure their PIDs and attestations are cryptographically bound to the Wallet Unit.</li> <li>The WUA must consider the privacy of the User, i.e., techniques from Topic A should be used.</li> <li>Relying Parties on the one hand and PID Provider and Attestation Providers on the other hand require different information from the WUA.</li> <li>The Wallet Unit must handle presentation of the WUA automatically, without the involvement of the User. </li> <li>The WUA must provide PID Providers and Attestation Providers assurance, that the private PID or attestation key is bound to the same WSCD as the WUA private key.</li> </ol> <p>Based on these functional requirements, the following requirements with regard to the WUA itself can be derived:</p> <ol> <li>The WUA must contain a public key, where the corresponding private key is protected by a WSCD.</li> <li>The WUA must contain information allowing parties to check if a Wallet Unit has been revoked.</li> <li>The WUA must contain information allowing parties to verify the validity of the Wallet Unit, i.e., the WUA must contain a signature from the Wallet Provider.</li> <li>The WUA must support both long and short validity terms.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#31-use-cases","title":"3.1 Use cases","text":"<p>The functional requirements described above can be summarised in two use cases related to the WUA:</p> <ul> <li>Use case 1 - Authenticity of the Wallet Unit: Many different entities in the EUDI Wallet ecosystem will need to verify the authenticity of a Wallet Unit, including its revocation status. These entities include PID Providers, Attestation Providers, and Relying Parties and other Wallet Units (for Wallet-to-Wallet interaction). This use case can be supported by basic meta information in the WUA, i.e. a revocation handle and a signature from the Wallet Provider.</li> <li>Use case 2 - Capabilities and keys of the Wallet Unit: Certain entities in the EUDI Wallet ecosystem (i.e. PID Providers and Attestation Providers) will need additional information on top of what is provided by use case 1. This information includes descriptions of the capabilities of the individual Wallet Unit, i.e. information on the WSCA/WSCD used.</li> </ul> <p>Privacy is an issue in relation to WUA and entities should be restricted to Use case 1, unless they have an actual need for Use case 2. In practice, this means Relying Parties and other Wallet Units must not be allowed access to the information in the WUA suitable for Use case 2. Furthermore, the WUA should be treated as any other attestation with regard to privacy, i.e., the discussions and solutions of [Topic A - Privacy Risks and Mitigations] also apply for WUA.</p> <p>Use case 2 can be achieved by implementing the WUA as a revocable signature on a public key, issued by the Wallet Provider. Additionally the WUA should contain relevant information on the Wallet Unit capabilities, including the properties of the WSCD/WSCA. These attributes must also be signed by the Wallet Provider and may be used to provide additional trust in the Wallet Unit. The signed attributes and public key (i.e. the WUA), may be seen as an attestation and can utilise other attestation specific requirements from the ARF if beneficial.</p> <p>Use case 1 can be achieved similarly to Use case 2, except the WUA would not contain additional information/attributes on the Wallet Unit capabilities.</p> <p>The WUA should use a format the entities of the EUDI Wallet ecosystem would expect, i.e. be compatible with the interfaces defined in the ARF.</p> <p>This paper identifies two requirements in relation to WUA that warrant further discussion: cryptographic binding and revocation. These are discussed in the two next subsections.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#cryptographic-binding","title":"Cryptographic binding","text":"<p>[CIR 2024/2977], Article 3, states that:</p> <p>5. Providers of person identification data shall ensure that person identification data that they issue is cryptographically bound to the wallet unit to which it is issued.</p> <p>The meaning of 'cryptographically bound' is discussed in ARF section 6.6.3.8. The WUA is intended to support this functionality by providing a base of trust, i.e. an attestation on a public key and the capabilities of the Wallet Unit. This approach will provide a trusted foundation on which the Wallet Provider may choose to implement more advanced features. At the same time, this approach allows the WUA to be treated as \"any other attestation\".</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#revocation","title":"Revocation","text":"<p>[CIR 2024/2977], Article 5, states that:</p> <p>4. Where providers of person identification data revoke person identification data issued to wallet units, they shall do so in each of the following circumstances: ... (b) where the wallet unit attestation to which the person identification data was issued to has been revoked;</p> <p>As the WUA is used to revoke Wallet Units, it plays an important role in relation to PID providers. The Wallet Provider is responsibly for providing the revocation functionality; however, how it is to be used is described in Topic 38, Wallet Unit Revocation and Topic 7, Attestation Revocation and revocation checking. In order to fulfil the requirement in [CIR 2024/2977], the PID providers must keep track of all Wallet Units (i.e. all WUAs they received from Wallet Units during PID issuance) to which PID has been issued and periodically (e.g. daily) monitor this list to check if a WUA has been revoked. For this to function, several properties are required:</p> <ul> <li>The validity period of the WUA used in connection with issuance (Use case 2) should be long, preferably as long as the expected lifetime of the Wallet Unit. In practice this may be hard to achieve, as the Wallet Provider would need to guess the expected lifetime of the Wallet Units.</li> <li>To mitigate the privacy risk of the long validity period of the WUA, the WUA should be a once-only attestation as specified in [Topic A].</li> </ul> <p>These requirements are discussed in [Topic A], which discusses privacy risks related to the usage of attestations in general. These discussions also apply to the WUA. Note that the validity period of the WUA used in connection with Relying Parties can be shorter than in the issuance use case. This may make revocation easier to handle, however it will require more frequent interactions with the Wallet Provider, which could also raise privacy concerns.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#4-relation-to-other-topics","title":"4 Relation to Other Topics","text":"<p>Below we discuss how Wallet Unit Attestations relate to the other topics being discussed.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#41-privacy-risks-and-mitigations","title":"4.1 Privacy Risks and Mitigations","text":"<p>Topic A - Privacy Risks and Mitigations highlight that a WUA functions like any other attestation and therefore the risks and mitigations are the same:</p> <ul> <li>PID Providers and Attestation providers may assume the role of Relying Party with regard to RP-linkability: When presenting a WUA to a PID Provider or Attestation Provider, the Provider may record fixed values (hashes etc.) in all WUAs it receives and use these to track the User.</li> <li>The Wallet Provider may assume the role of Attestation Provider with regard to AP-linkability: If the Wallet Provider colludes with Relying Parties (including PID Providers and Attestation providers), User behaviour may be tracked.</li> <li>Using one of the one-time, limited-time, rotating batch or per-relying part attestations will all work with WUA. Note that the use pattern of WUA (it is only intended for PID and Attestation providers during issuance), it will most likely only be used a few times with a few Relying Parties (i.e. PID and attestation providers).</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#42-relation-to-risk-register","title":"4.2 Relation to Risk Register","text":"<p>The purpose of WUA is to allow parties interacting with the Wallet Unit to ensure they are interacting with a legitimate Wallet Unit. Therefore the WUA has impact on several of the risks listed in the risk register for European Digital Identity Wallets [RiskRegister]:</p> Risk type  Risk ID  Related risk titles  High-level risks to the wallets R1 Creation or use of an existing electronic identity High-level risks to the wallets R2 Creation or use of a fake electronic identity High-level risks to the wallets R3 Creation or use of fake attributes High-level risks to the wallets R4 Identify theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R7 Data manipulation High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R14 Surveillance <p>The use of WUA is a mitigating mechanism with regard to some of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III). This is primarily TT2. Errors and misconfigurations, TT3. Use of unreliable resources and TT5.Malicious actions. In relation to these threats, the WUA is used to ensure that the Wallet Unit is not compromised.</p> R1. Creation or use of an existing electronic identity Creation or use of an existing electronic identity is defined as the creation of an electronic identity in a wallet that exists in the real world and is assigned to another user. By essence, this risk leads to the risks of Identity theft (R4), and Unauthorised transactions (R9). R2. Creation or use of a fake electronic identity Creation or use of a fake electronic identity is defined as the creation of an electronic identity in a wallet that does not exist in the real world. R3. Creation or use of fake attributes Creation or use of fake attributes is defined as the creation or use of attributes that cannot be validated to be issued by the claimed provider and cannot be trusted. R4. Identity theft Identity theft is defined as the unauthorised acquisition of the wallet unit or loss of authentication factors enabling to impersonate a person. R6. Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R7. Data manipulation Data manipulation is defined as the unauthorised alteration of data. R9. Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats in relation to wallet unit attestations:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR10 An attacker can activate a new wallet on an invalid WSCD. Creation or use of an existing electronic identity (R1) / Creation or use of a fake electronic identity (R2)  TR12 An attacker can circumvent the verification by the PID provider that the wallet is controlled by the user and have a PID issued into a compromised wallet under the attacker\u2019s control. Creation or use of an existing electronic identity (R1) / Identify theft (R4) / Unauthorised transaction (R9) TR13  An attacker can get a valid PID into an invalid Wallet Unit  Creation or use of an existing electronic identity (R1) / Identify theft (R4) / Unauthorised transaction (R9) TR22 An attacker can circumvent the verification by the (Q)EAA provider that the wallet is in control of the user and have a (Q)EAA issued into a compromised wallet under the attacker\u2019s control. Creation or use of fake attributes (R3) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers.  Data disclosure (R6) / Surveillance (R14) TR46 An attacker can bypass or subvert the performance of checks by the wallet that verify whether the PID has been revoked by the PID provider to always return success. Data manipulation (R7) TR56 An attacker can propose an application that mimics a specific legitimate wallet to users. Identity theft (R4) TR84 A group of colluding relying parties or PID providers can derive the user\u2019s identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) TR107 An attacker can steal information from a user by spoofing a wallet.  Effect on various risks TR112 An attacker can modify a legitimate wallet instance and propose it to users as a legitimate one. Effect on various risks"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#5-additions-and-changes-to-the-arf","title":"5 Additions and Changes to the ARF","text":"<p>The existing High-Level Requirements described in ARF, Annex 2, Topic 9, cover multiple aspects of the WUA, and in particular about the so-called proof of association (PoA). These requirements make assumptions on the technology used, which in general complicates the topic. This discussion paper therefore proposes to delete certain details in the requirements and replace them by High-Level Requirements for the purpose and properties discussed in this paper. The details to be removed from ARF Annex 2 should then be moved to a separate document, as input for a technical specification.</p> <p>In addition, some of the current HLRs in Topic 9 are general in nature and not specific to the WUA. This paper proposes that these HLRs are moved to another topic, e.g. Topic 40 on Wallet Unit Activation and Wallet Unit Management.</p> <p>The following tables contain the HLRs we propose to keep as part of Topic 9 (WUA), the HLRs we propose to move to other topics in Annex 2 of the ARF, and the HLRs we propose to remove entirely. In view of the large number of changes, this paper proposes to re-number all HLRs afterwards. Note that this is different than the practice for other Topics, where requirements are not renumbered.</p> <p>In addition, discussions of the WUA in the main part of the ARF will be updated accordingly.</p> <p>Note that the new HLRs for WUAs explicitly aim to be technology neutral and postpone the technical specification about how this functionality is to be implemented to a technical specification that will be developed by the Commission. In the following, we define WUA as \"data capable of achieving use case 1 and 2 from Section 3.1\". In particular, the HLRs do not impose any restrictions on the format(s) used, whether the functionality will be implemented as one or more distinct attestations, as verifiable metadata transferred during the protocols for issuance and presentations or something else. These restrictions will be defined in the STS mentioned in WUA_08.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#51-new-hlrs-for-wuas","title":"5.1 New HLRs for WUAs","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#hlrs-related-to-use-cases","title":"HLRs related to Use Cases","text":"Index Requirement specification Proposal WUA_08a The WUA SHALL provide the PID Provider or Attestation Provider with information about the capabilities of the WSCA and WSCD of the Wallet Unit, such that they are able to take a well-grounded decision on whether to issue an attestation or PID to the Wallet Unit. New WUA_08b The WUA SHALL enable Relying Parties, PID Providers and Attestation Providers to verify the authenticity and revocation status of the Wallet Unit. New WUA_08c Wallet Providers SHALL ensure that a non-revoked Wallet Unit at all times can present WUAs, as requested by a Relying Party, PID Provider or Attestation Provider. New WUA_20 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with information on a WSCA it is able to use for private key management and that comply with the PID Provider's or Attestation Provider's requirements. Keep WUA_21 During PID or attestation issuance, a Wallet Unit SHALL provide the PID Provider or Attestation Provider with the WUA describing the properties of the WSCA that generated the new PID or attestation private key and protects it. Keep WUA_22 If a Wallet Unit contains multiple WSCAs, it SHALL internally, securely, keep track of which PIDs and attestations are bound to each of these WSCAs. Keep WUA_24e A Wallet Unit SHALL present a WUA only as part of either the issuance or in conjunction with presentation of PID or other Attestations. New WUA_08d The WUA SHALL enable PID Providers to request a Wallet Provider to revoke a Wallet Unit. Note: To comply with requirement WURevocation_11 New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#hlrs-related-to-cryptographic-keys","title":"HLRs related to Cryptographic Keys","text":"Index Requirement specification Proposal WUA_11 A WUA SHALL contain a public key, and the corresponding private key SHALL be generated by the WSCA described in the WUA. Note: A WUA key pair is generated as per WUA_10. WUA_13b The WSCA SHOULD be able to prove that two or more private keys, paired with two or more public keys, are stored in the same WSCA. Note: these public keys may be included in WUAs, PIDs, attestations, or pseudonyms. Note: The proof may be transitive, so a proof that two keys are stored/managed in the same WSCA may be done by proving keys relate to each other via a third key (also stored in the WSCA) New basic HLR WUA_19 During PID or attestation issuance, the PID Provider or Attestation Provider SHALL verify that the WSCA described in the WUA received from the Wallet Unit has proven possession of the private key corresponding to the public key in the WUA (see WUA_17). The PID Provider or Attestation Provider SHALL also verify that the WSCA has proven possession of the new PID or attestation private key (see WUA_14). The PID Provider or Attestation Provider SHOULD verify that the new PID or attestation private key corresponding to the public key being attested to, is stored in the same WSCA as described in the WUA. Notes: - See also WUA_13. - These three proofs MAY be implemented as a single cryptographic proof. Removed references to deleted HLRs WUA_19a The Wallet Unit SHALL enable PID Providers, Attestation Providers and Relying Parties to verify that the Wallet Unit presenting a WUA possesses the private key corresponding to the public key in the WUA. New WUA_24c A Relying Party requesting the creation of a pseudonym according to [W3C WebAuthn] SHOULD be able to verify that the private key belonging to the public key it receives as a pseudonym, is stored in the same WSCA as the WUA private key. New WUA_25 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer the proofs of association and possession mentioned in WUA_19 to a PID Provider or Attestation Provider. Note: These three proofs MAY be implemented as a single cryptographic proof. The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to verify that the private key corresponding to the public key in the WUA and the PID or attestation private key are stored in the same WSCA. Changed: More general HLR WUA_27 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a PID Provider or Attestation Provider to indicate in the Token Response: the WSCA to which the new PID or attestation key must be bound, for example by referring to a WSCA identifier listed in the WUA, or, alternatively, the existing PID or attestation public key with which the new attestation key must be associated. Keep, this is needed in case the Wallet Unit has access to multiple WSCAs."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#privacy","title":"Privacy","text":"Index Requirement specification Proposal WUA_09 A Wallet Provider SHALL consider all relevant factors, including offline usage, interoperability and the risk of a WUA becoming a vector to track the User, when deciding on the validity period of a WUA. A Wallet Provider MAY use short-lived WUAs to mitigate such risks. Keep WUA_24 A Wallet Unit SHALL release data related to the User device in a WUA only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. Note: The reason for this requirement is that the Relying Party does not need to know anything about the User's device. Therefore, such data must not be released to Relying Parties, as doing so might violate User privacy. Note: Use case 2 (data related to the User device), must not be supported for Relying Parties. Changed note."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#miscellaneous","title":"Miscellaneous","text":"Index Requirement specification Proposal WUA_08 The Commission SHALL create or reference technical specification for the WUA compliant with the HLRs for this topic. The Commission SHALL take measures to ensure that the contents, format and encoding of Wallet Unit Attestations is specified in a technical specification. This technical specification SHALL be a Rulebook complying with all requirements in [Topic 12]. Each WUA SHALL contain attributes describing the Wallet Unit and a single certified WSCA included in that Wallet Unit, in such a way that a PID Provider or Attestation Provider processing the WUA is able to take a well-grounded decision on whether to issue an attestation to that Wallet Unit. In addition, to comply with requirement WURevocation_11, the WUA SHALL contain a unique identifier of the Wallet Unit. Note: In general, a PID Provider or Attestation Provider will also need information about the User. Such information is not contained in the WUA. Changed. WUA_13c The Wallet Provider SHALL ensure that Wallet Units conform to all requirements specified in the technical specification mentioned in WUA_08. New basic HLR WUA_23 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a WUA to a PID Provider or Attestation Provider. Keep"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#52-hlrs-to-be-moved-to-other-topics","title":"5.2 HLRs to be Moved to Other Topics","text":"Index Requirement specification Proposal WUA_01 A Wallet Provider SHALL activate a new Wallet Unit before a User can use it to have issued an PID or attestation. Note: The WUA is issued as part of the activation. Move - General requirement on Wallet Unit functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_02 A WSCA SHALL authenticate the User before performing any cryptographic operation involving a private or secret key of a Wallet Unit (i.e., a WUA key) or of a PID or an attestation stored in a Wallet Unit. For a PID key (which is part of the EUDI Wallet eID means), this WSCA SHALL be certified to be compliant with applicable requirements for level of assurance \"high\" in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. Note: Many actions of the Wallet Unit, such as processing a Relying Party request and presenting an attestation, require multiple cryptographic operations, for example ephemeral key generation followed by key agreement and message encryption. This requirement does not imply that separate User authentication is necessary before each of these. Rather, a successful User authentication will be valid for all cryptographic operations necessary for a Wallet Unit action. It is up to the Wallet Provider to determine what constitutes a 'Wallet Unit action', finding a balance between security (more User authentications) and User convenience (fewer User authentications). During certification of the Wallet Solution, it will be verified that the solution provides an adequate level of security. Move - General requirement on Wallet Unit functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_03 A Wallet Unit SHALL authenticate the User before performing any operation excluding cryptographic operations. The Wallet Unit SHOULD rely on a WSCA to do so, per WUA_02. If this is infeasible, the Wallet Unit SHOULD use a User authentication mechanism implemented on OS level, such as a lock screen, but it MAY also use a separate User authentication mechanism implemented in the Wallet Instance. Notes: - The goal of this requirement is to prevent any User interaction without User authentication, including, for example, using the user interface to see which attestations are present in the Wallet Unit or what are the values of specific User attributes. - Cryptographic operations are excluded in this requirement because they can only be performed after User authentication by the WSCA, according to WUA_02. - An example where using a WSCA for User authentication is not feasible is a Wallet Unit using a remote HSM as its WSCA and being without internet connection. - In general, using an OS-level User authentication mechanism instead of a separate mechanism implemented in the Wallet Instance is beneficial for security and User experience. Please note that this ARF assumes that a User device is a personal device, meaning that the User will not share it with other people. - An example where using an OS-level User authentication mechanism is not feasible is where the User has disabled such mechanisms (i.e., no lock screen is used). In that case, a Wallet Unit that is not able to use a WSCA for authentication must use a separate User authentication mechanism implemented in the Wallet Instance as a fallback. Move - General requirement on Wallet Unit functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_03b For User authentication according to WUA_03, a Wallet Unit SHALL implement an idle timeout, after which User authentication SHALL again be required. The Wallet Unit SHOULD provide the User with the option to set the idle timeout to a duration shorter than the default timeout. Move - General requirement on Wallet Unit functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_06 A Wallet Provider SHALL only activate a new Wallet Unit if it has verified that: - The Wallet Unit includes at least one WSCA that is certified to be compliant with applicable requirements in this Topic, for level of assurance \"high\" in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. In addition, the Wallet Unit MAY include one or more other WSCAs. - The private key corresponding to the public key in the WUA (see WUA_07) is protected by the respective WSCA under control of the user. Move - General requirement on Wallet Unit and Wallet Provider functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_06a If a WSCA/WSCD contains cryptographic keys related to multiple Wallet Units, the Wallet Provider SHALL ensure that a Wallet Unit can only access keys that are related to that Wallet Unit. New + Move - General requirement on Wallet Unit and Wallet Provider functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_07 During the activation of a new Wallet Unit, a Wallet Provider SHALL create and sign at least one Wallet Unit Attestation, and issue them to the Wallet Unit. Move - General requirement on Wallet Provider functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_28 A WSCA SHALL be able to authenticate a User, in accordance with the requirements in Commission Implementing Regulation (EU) 2015/1502 section 2.2.1. Move - General requirement on WSCA functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_29 A WSCA SHALL be able to generate a new key pair on request of the Wallet Provider via the Wallet Instance. Move - General requirement on WSCA functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_30 A WSCA SHALL be able to prove possession of the private key corresponding to a public key on request of a Wallet Instance, for example by signing a challenge with that private key. Move - General requirement on WSCA functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_32 A WSCA SHALL protect a private key it generated during the entire lifetime of the key. This protection SHALL at least imply that the WSCA prevents the private key from being extracted in the clear. If a WSCA is able to export a private key in encrypted format, the resulting level of protection SHALL be equivalent to the protection level of the private key when stored in the WSCA. Move - General requirement on WSCA functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_32a If a WSCA is able to export a private key, this capability must be specified as an attribute in the WUA. New + Move - General requirement on WSCA functionality. Should be moved to Topic 40 (Wallet Unit activation / Wallet Unit management) WUA_13a During PID or attestation issuance, a WSCA SHALL generate a new key pair for a new PID or attestation, on request of the PID Provider or Attestation Provider via the Wallet Instance. New HLR for Topic 10 (Issuing a PID or attestation to a Wallet Unit) WUA_9b The expiration date of the issued PID or Attestation SHALL be no later than the expiration date of the WUA presented as part of the issuance process. New HLR for Topic 10"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#53-hlrs-to-be-deleted","title":"5.3 HLRs to be Deleted","text":"Index Requirement specification Proposal WUA_10 A WSCA SHALL generate a new key pair for a new WUA on request of the Wallet Provider via the Wallet Instance. The WSCA SHALL register the new key as a WUA key in an internal registry. The WSCA SHALL register the WUA key as an independent (i.e., non-associated) key in an internal registry. Note: A WUA key can be associated later with a PID or attestation key when that PID or attestation key is created, see WUA_13. Remove: Contains too much technical information and assumptions on the design of the proof of association. WUA_12 In case the Wallet Provider must update the WUA because the information in the WUA is outdated, the Wallet Provider SHALL ensure that the Wallet Unit only releases the latest version of a WUA to an Attestation Provider. Remove: Re-issuance of WUA is covered in Topic B. WUA_13 During PID or attestation issuance, a WSCA SHALL generate a new key pair for a new PID or attestation, on request of the PID Provider or Attestation Provider via the Wallet Instance. The PID Provider or Attestation Provider SHALL indicate a single WUA public key (see WUA_10) with which the new PID or attestation key must be associated. This indication can either be direct, by providing the WUA public key value, or indirect, by providing a public key value that has been associated with the WUA key previously. In the latter case, the WSCA SHALL look up the associated WUA key in its internal registry. The WSCA SHALL register the new key in an internal registry as an attestation key. The WSCA SHALL register the association between the new private key and the WUA private key in an internal registry. Notes: Direct indication of the WUA is used in case a PID Provider or Attestation Provider indicates during issuing that the new PID or attestation must be associated with a WUA public key, see WUA_15 and WUA_16.Indirect indication of the WUA key is used in case an Attestation Provider indicates during issuing that the new attestation must be associated with an existing PID or attestation, see WUA_16.In case of re-issuance of an existing (short-lived) PID or attestation, or in case of synchronous issuing in a remote HSM architecture, re-use of an existing key pair for the new PID or attestation may be acceptable and it may not be necessary to generate a new key pair for each new PID or attestation. Requirements regarding re-issuance processes will be added in a future version of this document. Remove WUA_14 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to the new PID or attestation public key, on request of the PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. Remove WUA_15 A PID Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new PID must be associated. This SHALL be a WUA public key. Remove WUA_16 An Attestation Provider SHALL indicate to a WSCA (via the Wallet Instance) the public key to which the new attestation must be associated. This SHALL be either a WUA public key or the public key of a PID or attestation that already exists in the Wallet Unit. Note: if the Attestation Provider indicates a PID or attestation public key, this is an indirect indication of a WUA key, see WUA_13. Remove WUA_17 During PID or attestation issuance, a WSCA SHALL prove possession of the private key corresponding to a WUA public key on request of a PID Provider or Attestation Provider via the Wallet Instance, for example by signing a challenge with that private key. Remove WUA_18 During PID or attestation issuance, a WSCA SHOULD be able to prove that one or more public keys stored in the same WSCA are associated on request of the PID Provider or Attestation Provider. The WSCA SHALL generate this proof only if the corresponding private keys are protected by the same WSCA and the WSCA has internally registered an association between these private keys. Notes: - It is possible that some private keys in a WSCA are not associated with each other, even though they are managed within the same WSCA. - If two keys are associated, this implies that they are both associated with the same WUA key. Partial delete/keep/change: removed assumption on technology WUA_26 The common OpenID4VCI protocol referenced in requirement ISSU_01, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a public key to a PID Provider or Attestation Provider, to be included in the new PID or attestation. Delete: This is already covered by OpenID4VCI WUA_31 A WSCA SHALL register each newly generated key pair as either a WUA key or an attestation key, depending on information provided by the Wallet Instance in the key generation request. The internal registry used by the WSCA for this purpose SHALL be protected against modification by external parties. Delete: Too technical and makes too many assumptions on the design of the PoA. WUA_33 A WSCA SHALL associate each newly generated attestation key with a WUA key indicated by the Wallet Instance. The WSCA SHALL record the association between these keys in an internal registry, which SHALL be protected against modification by external parties. Delete: Too technical and makes too many assumptions on the design of the PoA. WUA_34 For the purposes of WUA_33, a Wallet Instance SHALL indicate the WUA key either directly, by WUA public key value, or indirectly, by value of a public key that is already associated to the intended WUA key. In the latter case, the WSCA SHALL look up the intended WUA key in its registry. Delete: Too technical and makes too many assumptions on the design of the PoA. WUA_35 A WSCA SHALL consider two keys to be associated if they are associated to a common WUA key. Delete: Too technical and makes too many assumptions on the design of the PoA. WUA_36 A WSCA SHOULD be able to generate a proof of association for two or more public keys. The WSCA SHALL generate such a proof if and only if the corresponding private keys are protected by that WSCA, and the WSCA has internally registered an association between these private keys. Delete: Too technical and makes too many assumptions on the design of the PoA."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/c-wallet-unit-attestation/#6-references","title":"6 References","text":"Reference Description [W3C WebAuthn] Web Authentication: An API for accessing Public Key Credentials Level 2 W3C Recommendation, 8 April 2021, https://www.w3.org/TR/webauthn-2/ [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0. [Topic A] Topic A - Privacy Risks and Mitigations [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR 2024/2977] Commission Implementing Regulation (EU) 2024/2977 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards person identification data and electronic attestations of attributes issued to European Digital Identity Wallets [CIR 2024/2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets [CIR 2024/2982] Commission Implementing Regulation (EU) 2024/2982 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards protocols and interfaces to be supported by the European Digital Identity Framework"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/","title":"D embedded disclosure policies","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#d-embedded-disclosure-policies","title":"D - Embedded Disclosure Policies","text":"<p>Version 1.1, updated 18 March 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic D: Embedded Disclosure Policies.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>The high-level requirements for the embedded disclosure policy need to be further elaborated, with a focus on defining specific use cases where the policy should be applied and identifying the language to be used for expressing these policies.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the use of the Digital embedded disclosure policies:</p> Risk type Risk id Related risk titles High-level risks to the wallets R6 Data disclosure R6 Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. <p>More specifically, [RiskRegister]  describes the following threats to a Wallet:</p> ID Threat description Related risks TR30 An attacker can defeat technical and procedural controls to extract data. Data disclosure (R6) TR32 An attacker can obtain knowledge on the embedded disclosure policy for attributes and present attributes contained in the current request by wallet units. Data disclosure (R6)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 presents legal requirements for embedded disclosure policies.</li> <li>Chapter 3 discusses implementation and deployment issues and additional mechanisms for implementing embedded disclosure policies.</li> <li>Chapter 4 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#2-legal-requirements-for-embedded-disclosure-policies","title":"2 Legal requirements for embedded disclosure policies","text":"<p>Article 2 of Implementing Regulation (EU) 2024/2979 [2024/2979] defines an embedded disclosure policy as:</p> <p>a set of rules, embedded in an electronic attestation of attributes by its provider, that indicates the conditions that a wallet-relying party has to meet to access the electronic attestation of attributes</p> <p>In article 10 of Implementing Regulation (EU) 2024/2979 it is defined:</p> <ol> <li>Wallet providers shall ensure that electronic attestations of attributes with common embedded disclosure policies set out in Annex III can be processed by the wallet units that they provide.</li> <li>Wallet instances shall be able to process and present such embedded disclosure policies referred to in paragraph 1 in conjunction with data received from the requesting Relying Party.</li> <li>Wallet instances shall verify whether the Relying Party complies with the requirements of the embedded disclosure policy and inform the wallet user of the result.</li> </ol> <p>Annex III of the same regulation defines the following list of common embedded disclosure policies:</p> <ol> <li>'No policy' indicating that no policy applies to the electronic attestations of attributes.</li> <li>'Authorised relying parties only policy', indicating that wallet users may only disclose electronic attestations of attributes to authenticated relying parties which are explicitly listed in the disclosure policies.</li> <li>'Specific root of trust' indicating that wallet users should only disclose the specific electronic attestation of attributes to authenticated wallet-relying parties with wallet-relying party access certificates derived from a specific root (or list of specific roots) or intermediate certificate(s)</li> </ol> <p>Therefore, Wallet Units, as well as the mechanisms used for defining and evaluating policies, shall provide support for at least policies 2. and 3. above.</p> <p>An important component related to the evaluation of embedded disclosure policies is the Wallet-Relying Party Registration Certificate (WRPRC). The draft Implementing Regulation for \"the registration of wallet-relying parties and the common mechanism for the identification and authentication of wallet-relying parties\" introduces WRPRC and defines it as:</p> <p>a data object that indicates the attributes the relying party has registered to intend to request from users</p> <p>Therefore, a Wallet Unit in addition to the common embedded disclosure policies shall verify that the requested attributes are included in the provided WRPRC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#3-discussion","title":"3 Discussion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#31-distribution-of-embedded-disclosure-policies","title":"3.1 Distribution of embedded disclosure policies","text":"<p>The following two options can be considered for distributing embedded disclosure policies:</p> <p>(a) Embedded disclosure policies are provided in Provider metadata (e.g., by extending the \"credentials_configurations_supported\" field  of the \"credential issuer metadata\" specified in section 11.2 of [OID4VCI]). This option does not require modifications to the attestation format.</p> <p>(b) Embedded disclosure policies are included in the attestations. This option requires modifications to the attestation format. As far as existing formats are concerned, including ISO mdoc and IETF SD-JWT, it is not straightforward how this can be implemented.</p> <p>Option (a) is the preferred distribution method. It is reminded that according to requirement [ISS_32a] \"An Attestation Provider SHALL sign its metadata\"</p> <p>Policies can be integrated directly into metadata or \"linked\" using a URL and stored by the Provider. The integrated approach does not require any additional communication with the Provider but attestations shall be revoked when a policy is updated. On the other hand, the integrated approach prevents a provider from unilaterally changing an embedded disclosure policy. The linked approach also may introduce privacy risks and management overhead, and may hinder integration with protocols such as the Digital Credential API.</p> <p>For these reasons the integrated approach is the preferred option.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#32-enforcing-of-edps-and-communication-of-results-to-rps","title":"3.2 Enforcing of EDPs and communication of results to RPs","text":"<p>Article 10, paragraph 3 of Implementing Regulation (EU) 2024/2979 requires Wallet Units to \"inform the wallet user of the (evaluation of the embedded disclosure policy) result.\" However, it does not specify how this result should be enforced. Related to that, the ARF includes the following requirement:</p> <p>EDP_07 The Wallet Unit SHALL enable the User, based on the outcome of the evaluation of the embedded disclosure policy, to deny or allow the presentation of the requested electronic attestation of attributes to the requesting Relying Party or the requesting Wallet Unit.</p> <p>If an attestation presentation is denied by the user, generating an error that reveals the attestation's existence while denying presentation to the Relying Party may leak information about the user. A Relying Party should not be able to distinguish between a non-existent attestation and an existing attestation for which presentation is denied. Measures shall also be considered to prevent related timing attacks. It is noted that currently protocols specified in the Implementing Acts do not consider such error response.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#33-authorisation-of-intermediaries","title":"3.3 Authorisation of intermediaries","text":"<p>If Policy 2 defined in [2024/20179] is implemented based on Relying Party identifiers included in WRPAC then the use of intermediaries  will be prevented. It is reminded that according to requirement RPI_01 in Annex 2 of the ARF:</p> <p>[...] an intermediary obtains an access certificate containing its own name and unique Relying Party identifier</p> <p>On the other hand, according to requirement RPI_03 in Annex 2:</p> <p>For each of the Relying Parties that uses its services, an intermediary SHALL obtain a registration certificate from a Registrar [...] (which) SHALL contain that Relying Party's name and unique identifier, as well as the list of attributes registered for that Relying Party.</p> <p>Therefore, intermediaries can only be supported only if embedded disclosure policies consider the Relying Party identifiers included in a WRPRC.</p> <p>For this reason Policy 2 shall be implemented using Relying Party identifiers included in the presented WRPRC.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#34-fine-grained-policies-based-on-relying-party-attributes","title":"3.4 Fine-grained policies based on Relying Party attributes","text":"<p>Advanced use cases may require embedded disclosure policies based on additional Relying Party attributes, or even user-related attributes and user context. In these use cases authorisation rules should be expressed using a policy definition language.</p> <p>On the other hand, for such a language to be practical, the semantics of attributes used in policies would need to be defined at the EU level. This is a complex and time-consuming process that would hinder the definition, standardization, and eventual deployment of such a policy definition language. Mandating support for such a language could create  barriers to the development and adoption of Wallet Solutions. Therefore, this discussion paper does not propose any requirement for such a language.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#4-additions-and-changes-to-the-arf","title":"4 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#41-high-level-requirements-to-be-added-to-topic-43","title":"4.1 High-Level Requirements to be added to topic 43","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#requirement-1","title":"REQUIREMENT 1","text":"<p>A Wallet Solution SHALL support  the implementation of the  'Authorised relying parties only policy' using a  list of EU-wide unique identifiers of Relying Parties (as specified in [Reg_32]). Such an identifier SHALL be retrieved from the presented Wallet-Relying Party Registration Certificate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#requirement-2","title":"REQUIREMENT 2","text":"<p>A Wallet Solution SHALL support the implementation of the 'Specific Root of Trust' policy using a list of root or intermediate certificates</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#requirement-3","title":"REQUIREMENT 3","text":"<p>A PID or Attestation Provider SHALL integrate embedded disclosure policies (if any) in attestation metadata in a way that is compatible with the issuance protocol considered by the ARF. A Wallet Unit SHALL retrieve and store locally the corresponding policies during PID or Attestation issuance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#requirement-4","title":"REQUIREMENT 4","text":"<p>When the presentation of an attestation is denied by the User, the Wallet Unit SHALL behave towards the Relying Party as if the attestation did not exist.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#42-high-level-requirements-to-be-changed","title":"4.2 High-Level Requirements to be changed","text":"<p>[ARB_22] Remove \"(including, possibly, an embedded disclosure policy as defined in Topic 43)\". Final text:</p> <p>The Schema Provider for an Attestation Rulebook SHALL specify all technical details necessary to ensure interoperability, security, and privacy of that attestation. Note: An Attestation Rulebook may also specify requirements regarding how the Wallet Unit must display the attestation and the attributes in it to the User.</p> <p>[EDP_01] Remove \",as defined in the applicable Rulebook. Final text:</p> <p>A Wallet Unit SHALL enable an Attestation Provider to optionally include an embedded disclosure policy in a QEAA, PuB-EAA, or non-qualified EAA. Note: The [European Digital Identity Regulation] does not contain a requirement for PIDs to be able to contain an embedded disclosure policy.</p> <p>[EDP_02] To be removed</p> <p>[EDP_03] The note will be removed. Additionally, \"information\" will be replaced with \"information included in the Relying Party Registration Certificate\". Final text:</p> <p>An embedded disclosure policy created by an Attestation Provider SHALL only refer to information included in the Relying Party Registration Certificate provided in an authenticated manner to the Wallet Unit by the Relying Party or the requesting Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#43-descriptions-to-be-added-to-the-arf-main-document","title":"4.3 Descriptions to be added to the ARF main document","text":"<p>To be done.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/d-embedded-disclosure-policies/#5-references","title":"5 References","text":"Reference Description [2024/2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallet [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [OID4VCI] OpenID for Verifiable Credential Issuance - draft 15 [OID4VP] OpenID for Verifiable Presentations - draft 23 [RiskRegister] Annex 1 to the Commission Implementing Regulation (EU) 2024/2981 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/","title":"E pseudonyms including user authentication mechanism","text":"<p>Home Version 0.7, updated 4 March 2025</p> <p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#e-pseudonyms-including-user-authentication-mechanism","title":"E - Pseudonyms, including User authentication mechanism","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic E: Pseudonyms, including User authentication mechanism. The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>High-level requirements for pseudonyms in the ARF need to be further detailed, including specifying the use cases where pseudonyms should be applied.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHALL NOT', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, prohibitions, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to pseudonyms.</p> </li> <li> <p>Chapter 3 explains two identified use cases for pseudonyms and lists open questions related to these use cases.</p> </li> <li> <p>Chapter 4 presents the technical approach to pseudonyms and highlights its challenges.</p> </li> <li> <p>Chapter 5 relates the topic to other topics being discussed and previously identified risks.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#2-legal-requirements-for-pseudonyms","title":"2 Legal Requirements for Pseudonyms","text":"<p>There are two legal texts that impose direct requirements on the pseudonym functionality of the Wallet Units: the [European Digital Identity Regulation] and [CIR.2024.2979], the Implementing Act on PID and EAA.</p> <p>Below we recap the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#21-the-european-digital-identity-regulation-about-pseudonyms","title":"2.1 The [European Digital Identity Regulation] about Pseudonyms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#211-articles","title":"2.1.1 Articles","text":"<p>There are two main requirements in the [European Digital Identity Regulation] about Pseudonyms in relation to Wallet Units:</p> <ol> <li>Wallet Units must be able to generate pseudonyms and store them encrypted and locally within the Wallet Unit.</li> <li>Relying Parties must accept identification via pseudonyms when there are no legal requirements for identification.</li> </ol> <p>Below are the actual Articles from the Regulation that establish these requirements.</p> <p>Article 5 Pseudonyms in electronic transaction</p> <p>Without prejudice to specific rules of Union or national law requiring users to identify themselves or to the legal effect given to pseudonyms under national law, the use of pseudonyms that are chosen by the user shall not be prohibited.</p> <p>Article 5a European Digital Identity Wallets</p> <p>... 4. European Digital Identity Wallets shall enable the user, in a manner that is user-friendly, transparent, and traceable by the user, to: ... (b) generate pseudonyms and store them encrypted and locally within the European Digital Identity Wallet; ...</p> <p>Article 5b European Digital Identity Wallet-Relying Parties</p> <p>9. ... Relying parties shall not refuse the use of pseudonyms, where the identification of the user is not required by Union or national law. ...</p> <p>Note: Additionally, pseudonyms are mentioned in Article 32 and Annex IV about the validation of qualified electronic signatures and certificates. However, the use of pseudonyms in this context is completely independent from the notion of pseudonyms used by the Wallet Unit for authentication, as discussed in this discussion paper.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#212-recitals","title":"2.1.2 Recitals","text":"<p>In addition to the Articles listed in the previous section, pseudonyms are also mentioned in the following recitals:</p> <p>Recital (19)</p> <p>... Reliance on the legal identity should not hinder European Digital Identity Wallet users to access services under a pseudonym, where there is no legal requirement for legal identity for authentication. ...</p> <p>Recital (22)</p> <p>European Digital Identity Wallets should include a functionality to generate user-chosen and managed pseudonyms, to authenticate when accessing online services.</p> <p>Recital (57)</p> <p>Where very large online platforms within the meaning of Article 33(1) of Regulation (EU) 2022/2065 of the European Parliament and of the Council require users to be authenticated in order to access online services, those platforms should be required to accept the use of European Digital Identity Wallets upon the voluntary request of the user. Users should be under no obligation to use a European Digital Identity Wallet to access private services and should not be restricted or hindered in their access to services on the grounds that they do not use a European Digital Identity Wallet. However, if users wish to do so, very large online platforms should accept them for that purpose, while respecting the principle of data minimisation and the right of the users to use freely chosen pseudonyms. ...</p> <p>Recital (60)</p> <p>Unless specific rules of Union or national law require users to identify themselves, accessing services by using a pseudonym should not be prohibited.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#22-cir20242979-about-pseudonyms","title":"2.2 [CIR.2024.2979] about Pseudonyms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#221-articles","title":"2.2.1 Articles","text":"<p>[CIR.2024.2979] specifies three main requirements for pseudonyms:</p> <ol> <li>[W3C WebAuthn] defines the technical specification for pseudonyms.</li> <li>The pseudonyms the wallet Unit generates must be unique for each Relying Party.</li> <li>The pseudonyms can be used either stand-alone or in combination with other attested attributes.</li> </ol> <p>Below are the actual Articles from the CIR that establish these requirements:</p> <p>Article 14</p> <p>1. Wallet units shall support the generation of pseudonyms for wallet users in compliance with the technical specifications set out in Annex V. 2. Wallet units shall support the generation, upon the request of a wallet-relying party, of a pseudonym which is specific and unique to that wallet-relying party and provide this pseudonym to the wallet-relying party, either standalone or in combination with any person identification data or electronic attribute attestation requested by that wallet-relying party.</p> <p>Annex V:</p> <p>TECHNICAL SPECIFICATIONS FOR PSEUDONYM GENERATION REFERRED TO IN ARTICLE 14  Technical specifications:  \u2014 WebAuthn \u2013 W3C Recommendation, 8 April 2021, Level 2, https://www.w3.org/TR/2021/REC-webauthn-2-20210408/.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#recitals","title":"Recitals","text":"<p>In addition to the Articles listed in the previous section, pseudonyms are also mentioned in the following recitals:</p> <p>Recital (14)</p> <p>The generation of wallet-relying party specific pseudonyms should enable wallet users to authenticate themselves without providing wallet-relying parties with unnecessary information. As set out in Regulation (EU) No 910/2014, wallet users are not to be hindered from accessing services under a pseudonym, where there is no legal requirement for legal identity for authentication. Therefore, the wallets are to include a functionality to generate user-chosen and managed pseudonyms, to authenticate when accessing online services. The implementation of the specifications set out in Annex V should enable these functionalities accordingly. Further, wallet-relying parties are not to request users to provide any data other than those indicated for the intended use of wallets in the relying party register. Wallet users should be enabled to verify the registration data of relying parties at any point in time.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#3-use-cases","title":"3 Use Cases","text":"<p>This chapter elaborates on the use cases inferred from the above legal requirements. The distinction between the two use cases follows from Article 14 (2) in [CIR.2024.2979].</p> <p>Both use cases are described in a remote setting, where the pseudonyms are presented towards Relying Parties over the internet.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#31-use-case-a-pseudonymous-authentication","title":"3.1 Use Case A: Pseudonymous Authentication","text":"<p>Pseudonyms can be used to authenticate a User when it is not necessary for a Relying Party to learn the identity of a user.</p> <p>Concretely, the use case is as follows:</p> <ol> <li>A User registers a pseudonym at a Relying Party, using their Wallet Unit.</li> <li>The User can afterwards do a series of interactions with this Relying Party.</li> <li>If the User at a later point wishes to build upon previous interactions with this Relying Party, they should then be able to authenticate with the pseudonym used when registering. Thereby, the User \"logs in\" to the same account at the Relying Party. The User uses their Wallet Unit to perform this pseudonymous authentication.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#32-use-case-b-presentation-of-attributes-with-subsequent-authentication-using-pseudonyms","title":"3.2 Use Case B: Presentation of Attributes with Subsequent Authentication using Pseudonyms","text":"<p>Similar to use case A above, a User wishes to create an account with an associated pseudonym that can be used for subsequent authentication at later sessions. However, in this scenario the User additionally would like to register verifiable attributes in the form of either Person Identification Data (PID), Qualified Electronic Attestation of Attributes (QEAAs), Electronic Attestation of Attributes issued by or on behalf of a public sector body responsible for an authentic source (PuB-EAA), or non-qualified Electronic Attestation of Attributes (EAAs) while registering.</p> <p>Concretely, the use case goes as follows:</p> <ol> <li>A User registers a pseudonym at a Relying Party, using their Wallet Unit.</li> <li>In the same interaction, the User also presents attributes from a PID or attestation in their Wallet Unit to the Relying Party.</li> <li>The User can afterward do a series of interactions with this Relying Party.</li> <li>If the User at a later point wishes to build upon previous interactions with this Relying Party, they should then be able to authenticate with the pseudonym used when registering. Thereby, the User \"logs in\" to the same account at the Relying Party. The User uses their Wallet Unit to perform this pseudonymous authentication.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#33-questions-related-to-use-cases","title":"3.3 Questions Related to Use Cases","text":"<p>Below, we list questions that have been discussed at the focus meetings along with a summary of the discussions.</p> <p>Question 1: Should any other use cases be supported?</p> <p>It should be possible to register attributes to the pseudonym later than at registration. </p> <p>Question 2: For both use cases: Should both cross-device and same-device flows be supported? I.e., should registration and authentication with pseudonyms be possible both when a user initiates the interactions with the Relying Party from the same device and with a device different from the one hosting the Wallet Unit? The answer to this question will impose requirements on the interfaces between the Wallet Unit and the client a user initiates the interaction with.</p> <p>Yes: Both cross-device and same-device flows should support pseudonyms</p> <p>Question 3: For Use Case A: Should a single user be able to use their Wallet Unit to present several different pseudonyms to a single Relying Party? High-Level Requirements must be defined that enforces the answer to this question.</p> <p>Yes: It should be possible for a user to have several pseudonyms at the same Relying Party.</p> <p>Question 4: For both use cases: What assurances must be given to the Relying Party? Such possible assurance exists on at least three levels:</p> <ol> <li>No assurances are given to the Relying Party. I.e., the Relying Party is not even guaranteed that it is interacting with the Wallet Unit.</li> <li>The Relying Party is assured that the private key corresponding to the pseudonym being stored/authenticated was originally stored in a Wallet Unit.</li> <li>The Relying Party is assured that the private key corresponding to the pseudonym being stored/authenticated is currently stored in a non-revoked Wallet Unit.</li> <li>For use case B: The Relying Party is assured that the private key corresponding to the pseudonym used to authenticate is stored on the same Wallet Unit as the originally presented PID or attestation.</li> </ol> <p>There should be some assurance that keys are stored securely and option 4.</p> <p>Note that, because the technical implementation of pseudonyms must rely on [W3C WebAuthn], the possibility for achieving such assurances is to use attestations (for an explanation of this see Chapter 4). Therefore, higher assurances comes with a trade-off in terms of surveillance risks. For a further discussion of these risks see Chapter 5.1).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#4-high-level-approach-to-pseudonyms","title":"4 High-Level Approach to Pseudonyms","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#41-introduction-to-passkeys","title":"4.1 Introduction to Passkeys","text":"<p>As specified in [CIR.2024.2979], [W3C WebAuthn] defines the technical specification for pseudonyms.</p> <p>Passkeys are a widely used type of credential which are created and asserted using the [W3C WebAuthn] API.</p> <p>Passkeys are to be seen as an alternative to passwords. The idea is that a User, when registering a user account at a service, uses a secure device to generate a public-private key pair, registers the public key at the service, and can then subsequently use the private key to authenticate towards the service at later points in time.</p> <p>In a bit more detail, the flow for using such passkeys follows the following blueprint:</p> <p>Registration:</p> <ol> <li>The User generates a public-private key pair and stores both the public and the private key at their secure device (referred to as an authenticator).</li> <li>The User registers the public key at the desired Relying Party service.</li> </ol> <p>Authentication:</p> <ol> <li>When the User wishes to authenticate towards a service, the service will send them a challenge consisting of a random value.</li> <li>The User uses the private key stored on their secure device to sign the challenge and sends this back to the service.</li> <li>The service verifies that the signature on the challenge can be verified using the registered public key. If the signature verifies and the origin matches the expected origin, the User is considered authenticated and thereby granted access to the service.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#42-introduction-to-w3c-webauthn","title":"4.2 Introduction to [W3C WebAuthn]","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#421-overview","title":"4.2.1 Overview","text":"<p>[W3C WebAuthn] defines an API for the creation and use of Passkeys. Conceptually, in addition to the User, there are four different logical components in this specification:</p> <ul> <li>Relying Party Server: The Relying Party that wishes to offer a service based on authentication using Passkeys.</li> <li>Relying Party Client: The program provided by the Relying Party that runs in the Client of the User and communicates with the Relying Party Server. The Relying Party Client is typically some JavaScript code, provided by the Relying Party, that runs on the Client (i.e., browser).</li> <li>Client: The client that the User uses to interact with the Relying Party's server and with the User's authenticator. The Client can be thought of as the browser that the User uses to access the Relying Party's service.</li> <li>Authenticator: The device controlled by the User to create, store, and use the Passkeys. In the context of the EUDI Wallet, the Wallet Unit is the Authenticator.</li> </ul> <p>Note that the Relying Party Client and the Client are two programs that are executed on the same physical machine.</p> <p>[W3C WebAuthn] defines a model dividing the responsibilities between these different entities and defines an interface between the Relying Party Client and the Client. Additionally, it defines a challenge/response protocol to authenticate with Passkeys. The interface is referred to as the WebAuthn API.</p> <p>However, [W3C WebAuthn] does not specify how the Authenticator and the Client must communicate. In this context, Chapter 5 briefly discuss the relation to Topic F (Digital Credential API) .</p> <p>[W3C WebAuthn] relies on several different types of identifiers, including:</p> <ul> <li>Relying Party ID: An identifier unique to the Relying Party, which must be a valid domain string. This what the User will identify the Relying Party by and let the Authenticator learn which Relying Party is asking for registration/authentication.</li> <li>Credential ID: A unique identifier chosen by the Authenticator for each Passkey.</li> <li>User ID: An identifier unique to each User, which is assigned by the Relying Party. This will be provided to the Authenticator when registering a new Passkey. Subsequently, it will be provided by the Authenticator when authenticating towards the Relying Party. The Authenticator will keep track of which Passkeys are available for which User IDs and Relying Party IDs. The Relying Party keeps track of a User Name for each User ID.</li> <li>User Name: An alias that may be chosen by the User or the Relying Party and assigned to a specific Passkey on the Authenticator. This allows the User to easily distinguish and select which Passkey they want to authenticate with, if several are present in the Authenticator for the given Relying Party.</li> </ul> <p>The next sections elaborate on how the different components work together to allow the registration and subsequent authentication using Passkeys.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#422-registration","title":"4.2.2 Registration","text":"<p>The flow for registering a Passkey in [W3C WebAuthn] is the following:</p> <ol> <li>The User requests (out of band of WebAuthn) the Relying Party to create a new Pseudonym.</li> <li>The Relying Party Server creates a challenge and sends this along with the User ID, the Relying Party ID, and the User Name to the Relying Party Client.</li> <li>The Relying Party Client forwards the information to the Client using the WebAuthnAPI.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the User (for example using a PIN or via biometrics). It then generates a new key pair with a new Credential ID and set the scope of this to the specific Relying Party ID and User ID. Finally, the Authenticator may generate an attestation (explained in Section 4.2.3) and sends this, as well as the public key and its Credential ID, to the Client.</li> <li>The Client then forwards the information to the Relying Party Client that again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the attestation and registers the received public key for this User ID.</li> </ol> <p>Note that the Authenticator stores the public key in a way such that it is scoped uniquely to a specific Relying Party, aligning with the requirements of [CIR.2024.2979], Article 14 (2), which states that the pseudonyms must be unique to each Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#423-pseudonym-attestation","title":"4.2.3 Pseudonym attestation","text":"<p>The term 'attestation' is here used differently than elsewhere in the ARF. In this context, the attestation is not about attributes of the User, but rather about attributes of the Authenticator. The attestation serves to ensure the Relying Party that they are talking with an Authenticator with certain attributes. The attestation often takes the form of a signature on the challenge as well as some other contextual data.</p> <p>In [W3C WebAuthn], five different types of attestations are mentioned:</p> <ul> <li> <p>Basic Attestation: The Authenticator stores a single master public and private key. The private key is used to sign all attestations and a certificate on the public key is included in the attestation data to allow the Relying Party to verify the signature.</p> </li> <li> <p>Attestation CA: Similar to the above, in the sense that the Authenticator stores a single master public and private key stored. However, instead of using this to attest Passkeys, the Authenticator uses this to authenticate towards a Certificate Authority (CA), which is then configured to issue certificates to the Authenticator on multiple attestation key pairs.</p> </li> <li> <p>Anonymisation CA: Similar to the second bullet above, except that it is explicit that the Authenticator requests a certificate for a new attestation key pair per generated Passkey.</p> </li> <li> <p>Self Attestation: The attestation is signed with the private key of the newly generated key pair in the Passkey. Note that this does not give any guarantees for the Relying Party about the authenticator they are interacting with.</p> </li> <li> <p>No Attestation Statement: No attestation is given. Note that this does not give any guarantees for the Relying Party about the Authenticator they are interacting with.</p> </li> </ul> <p>Please note that Article 5a (5) a) viii) of the [European Digital Identity Regulation] states \"European Digital Identity Wallets shall, in particular support common protocols and interfaces: ... for relying parties to verify the authenticity and validity of European Digital Identity Wallets;...\". The latter two forms of attestation do not align with this requirement. Section 5.1) discusses how the other three possibilities relate to previously identified privacy risks about user surveillance (see also Topic A).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#424-authentication","title":"4.2.4 Authentication","text":"<p>The flow for authentication using a Passkey following [W3C WebAuthn] is:</p> <ol> <li>The Relying Party Server creates a challenge and sends this along with its Relying Party ID to the Relying Party Client.</li> <li>The Relying Party Client forwards the information to the Client using the WebAuthn API.</li> <li>The Client checks that the Relying Party ID is consistent with the caller's origin and forwards the information to the Authenticator along with other contextual data.</li> <li>The Authenticator authenticates the User (for example using a PIN or via biometrics). It then prompts the User to select one of the Passkeys scoped to this Relying Party ID, if there are multiple. For this step the User Name can be presented to the User. Finally, the Authenticator uses the private key of the chosen key pair (= Passkey) to sign the challenge as well as some contextual data including the User ID, Credential ID, and the Relying Party ID. The Authenticator then sends this to the Client.</li> <li>The Client forwards the information to the Relying Party Client, which again forwards it to the Relying Party Server.</li> <li>The Relying Party Server verifies the signature with the stored public key for this User ID and Credential ID, and, depending on the outcome of this verification, considers the User to be authenticated.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#43-challenges","title":"4.3 Challenges","text":"<p>This section list challenges related to the use of [W3C WebAuthn] as the technical specification for pseudonyms:</p> <ol> <li>Attestations may be linkable; see discussion in Section 5.1 and also Topic A. This risk depends on the chosen type of attestation.</li> <li>The information about the Relying Party is verified only by the Client and not by the Authenticator itself. This may be a problem, as in Article 5a (5) a) vii) of the [European Digital Identity Regulation] it is stated that \"European Digital Identity Wallets shall, in particular ... ensure that the relying parties can be authenticated and identified by implementing authentication mechanisms in accordance with Article 5b;...\".</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":"<p>This chapter discusses how pseudonyms relate to other topics being discussed.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#51-topic-a-privacy-risks-and-mitigations","title":"5.1 Topic A: Privacy Risks and Mitigations","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#511-introduction","title":"5.1.1 Introduction","text":"<p>Topic A - Privacy Risks and Mitigations discusses surveillance risks related to presenting PIDs and attestations. Similar concerns are relevant for the Pseudonym functionality defined by the [W3C WebAuthn] specification. In fact, from a linkability perspective, there are only minor differences between the attestations present in the registration flow of [WebAuthn] and other attestations such as PID and (Q)EAAs. Section 5.4 discusses how this relates to the risks and threats identified in the [RiskRegister].</p> <p>The subsections below consider two different types of linkability concerns for the attestation types summarised in Section 4.2.3, namely Relying Party linkability and CA linkability. Note that the latter form of linkability is similar to what is dubbed Attestation Provider linkability in the discussion Paper for Topic A, but there is a mismatch between the use of the word \"attestation\" in the broader ARF framework and in [W3C WebAuthn] and to avoid confusion a different wording is used here.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#512-relying-party-linkability","title":"5.1.2 Relying Party Linkability","text":"<p>Relying Party linkability is the ability for Relying Parties to link together multiple authentications performed by a User using a Wallet Unit. Note that it is inherent for the use cases that the same Relying Party shall be able to link together multiple presentations of a pseudonym, as it must be unique per Relying Party. However, different Relying Parties should not be able to infer any information about whether they have interacted with one or multiple Users by comparing multiple authentications using pseudonyms.</p> <p>To prevent Relying Party linkability, it is necessary to ensure that no unique (per Wallet Unit) value is presented to multiple different Relying Parties. Depending on the type of attestation used for registration (see Section 4.2.3, this may or may not be the case for [W3C WebAuthn].</p> <p>If Basic Attestations are used, where each Wallet Unit holds only one attestation key pair and corresponding certificate, the public key of this attestation key pair may be such a unique value that is presented to multiple Relying Parties. [W3C WebAuthn] suggests to ensure that multiple different Authenticators hold the same attestation key pair, thereby no longer making it a unique value for correlation. However, please note that this implies letting several different Wallet Units share the same private key. This is against best security practices, as it implies private keys must be transferred to or from Wallet Units, which increases the risk of keys being compromised.</p> <p>If an Attestation CA is used to issue certificates on multiple attestation keys, the degree to which Relying Parties can correlate the different certificates can be reduced. However, as long as an Authenticator uses a single attestation key more than once to sign a Pseudonym, the Relying Parties can still deduce some information by correlating attestation public keys. This mitigation is similar to the proposals of Method B and Method C (Limited-time Attestations and Rotating-batch Attestations) from the discussion paper on topic A.</p> <p>If an Anonymisation CA is used to issue certificates on single-use-only attestation keys, Relying Parties are not able to correlate information about multiple presentations. This can be referred to as being Relying Party-unlinkable.</p> <p>Neither Self Attestation nor No Attestation allows Relying Parties to correlate information about multiple presentations of pseudonyms, as no attestation public key is released to the Relying Party. That is, they are Relying Party-unlinkable.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#513-ca-linkability","title":"5.1.3 CA Linkability","text":"<p>Certificate Authority (CA) linkability is the ability for a CA to track a User's interactions at several different Relying Parties by combining the information from those Relying Parties with information hold by the CA.</p> <p>Note that all attestation types that are Relying Party-linkable also are CA-linkable by definition, as the information available to CAs and Relying Parties is a superset of the information available only to multiple Relying Parties.</p> <p>Both the types Attestation CA and Anonymisation CA are CA-linkable as CAs can store which public key they issue certificates to and share with which Wallet Unit. By correlating this with the information available at the Relying Parties, it is possible to track how a Wallet Unit uses the pseudonym functionality.</p> <p>Neither Self Attestation nor No Attestation includes any information from a CA and Relying Parties are therefore not able to correlate information about multiple presentations of pseudonyms with this form of attestation type. That is, they are both also CA-unlinkable.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#514-drawbacks-of-different-attestation-types","title":"5.1.4 Drawbacks of Different Attestation Types","text":"<p>The table below summarises information from the previous sections with regard to drawbacks of the different attestation types.</p> Attestation Type Drawbacks Basic Attestations Relying Party-linkable and CA-linkable Attestation CA CA-linkable and to some degree Relying Party-linkable Anonymisation CA CA-linkable Self Attestation No assurances for Relying Parties No Attestation No assurances for Relying Parties"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#52-topic-c-wallet-unit-attestations","title":"5.2 Topic C: Wallet Unit Attestations","text":"<p>Topic C - Wallet Unit Attestations (WUA) and Key Attestations discusses how the Wallet Unit can document its functional and security capabilities, e.g., support for secure hardware, revocation status, etc.</p> <p>Certain WUA attributes are somewhat sensitive, as they may allow for linkability, and are only intended for PID Providers and Attestation Providers when performing issuance. Other metadata in the WUA is used to prove that the Wallet Unit has not been revoked. This information is less sensitive and is intended for Relying Parties.</p> <p>When a Wallet Unit and a Relying Party perform registration of a pseudonym, key material will be stored on the Wallet Unit (in its role as Authenticator). During this registration, the WUA may be used in connection with the pseudonym attestation (discussed in Section 4.2.3). Topic C should consider what information can be presented to a Relying Party, when registering a pseudonym.</p> <p>There are two main areas of Topic C that are particularly relevant in relation to Pseudonyms:</p> <ul> <li> <p>Wallet Unit Attestation: Part of the WUA contains information on functional and cryptographic capabilities of the Wallet Unit. Requirement WUA_24 says A Wallet Unit SHALL release data related to the User device in a WUA only to a PID Provider or Attestation Provider, and not to a Relying Party or any other party. This requirement effectively prohibits a number of the High-Level Requirements related to issuance of pseudonyms. Essentially, only the Self Attestation and No Attestation attestation types mentioned in Section 4.2.3 can be supported without access to the User device-related data in the WUA.</p> </li> <li> <p>Revocation / invalidation of pseudonyms: Pseudonyms are local to each Relying Party, which makes revocation somewhat easy: The Relying Party can simply invalidate the pseudonym locally and the Wallet Unit will no longer be able to access that Relying Party. This revocation will not affect other functionality of the Wallet Unit, e.g., other Pseudonyms, PID and attestations will remain valid. In addition to local revocation, it was discussed at a Focus meeting, if it should be possible for a Relying Party to also revoke the entire Wallet Unit. The outcome of this discussion, was that it should not be possible for Relying Parties to request the revocation of a Wallet Unit.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#53-topic-f-digital-credentials-api","title":"5.3 Topic F: Digital Credentials API","text":"<p>As stated in Chapter 4, [W3C WebAuthn] does not specify the interface between the Wallet Unit (i.e., Authenticator) and the Client used by the User to initiate the usage of the pseudonyms.</p> <p>Discussion Topic F must also take into account providing a seamless integration for the use of pseudonyms.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#54-relation-to-risk-register","title":"5.4 Relation to Risk Register","text":"<p>As pseudonyms may be used to provide authentication, a large number of the risks listed in the risk register for European Digital Identity Wallets [RiskRegister] are (at least indirectly) related to the use of pseudonyms:</p> Risk type\u00a0 Risk ID\u00a0 Related risk titles\u00a0 High-level risks to the wallets R2 Creation or use of a fake electronic identity High-level risks to the wallets R4 Identify theft High-level risks to the wallets R5 Data theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R10 Transaction manipulation High-level risks to the wallets R14 Surveillance <p>Some of the Technical Threats from the [Risk Register] (threats labelled TTX.Y in its section III) are also relevant threats to consider in the context of pseudonyms. This is primarily TT5. Malicious actions, in which threats, such as TT5.1 Interception of information or TT5.3 Replay of messages, may lead to the risks expressed in the table above.</p> R2. Creation or use of a fake electronic identity Creation or use of a fake electronic identity is defined as the creation of an electronic identity in a wallet that does not exist in the real world. R4. Identity theft Identity theft is defined as the unauthorised acquisition of the wallet unit or loss of authentication factors enabling to impersonate a person. R5. Data theft Data theft is defined as the unauthorised extraction of data. Data theft is also associated to threats, such as data interception (unauthorised capture of data in transit) and data decryption (unauthorised decoding of encrypted data), which are likely to lead in some cases to Data disclosure (R6). R6. Data Disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9. Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R10. Transaction manipulation Transaction manipulation is defined as the unauthorised alteration of operations in the wallet. Transaction manipulation is an attack on integrity, and it is related to a data integrity breach. R14. Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR1. Wholesale surveillance Wholesale surveillance is defined as the tracking or observation of the activities of many users through their wallet's communication or data. Wholesale surveillance is often associated with surveillance (R14) and inference at a global scale, where information about many users is combined to deduce sensitive or personal data about users or to identify statistical trends that can be used to design further attacks. <p>More specifically, [RiskRegister] describes the following threats in relation to pseudonyms:</p> ID Identifier Threat description Description of the identified threat (*) Risk title Related risks TR1 An attacker can revoke pseudonyms without justified reason. Creation or use of a fake electronic identity (R2)  TR26 PID, (Q)EAAs or pseudonyms can be presented to a wrong relying party. Data disclosure (R6) TR39 An attacker can unlawfully trace wallet users using unique/traceable identifiers. Data disclosure (R6) and Surveillance (R14) TR51 An attacker can convince a user to share personal data (i.e. PID, EAA-s, pseudonyms, electronic signatures, logs and other data) with the attacker or with a third party that the user did not intend to do so. Data theft (R5) / Data disclosure (R6) TR55 An attacker can bypass the user authentication method to use a pseudonym generated by a wallet unit.  Identity theft (R4) TR84 A group of colluding relying parties or PID providers can derive the user's identity data beyond data known to them. Surveillance (R14) TR85 An attacker can track and trace a user by using person identification data of the user where identification of the user is not required. Surveillance (R14) TR91 A relying party can replay elements from a previous session in another session. Transaction manipulation (R10) TR102 An attacker can impersonate relying parties during the connection to relying parties. Unauthorised transaction (R9) / Data disclosure (R6) TR105 An attacker can perform man-in-the-middle attacks. Unauthorised transaction (R9) / Data disclosure (R6) / Surveillance (R14) <p>Note that there is no threat corresponding to TR68-71 (Attacker can revoke without consent/reason) in relation to pseudonyms.</p> <p>R14, SR1, TR39, and TR84 are particularly relevant to consider given the discussion in Chapter 5.1, namely linkability of attestations in [W3C WebAuthn].</p> <p>TR26, TR102, and TR105 are particularly relevant for the challenge described in Chapter 4.3, namely that the Relying Party is only authenticated by the Client and not by the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":"<p>This chapter proposes changes and additions to the ARF, including both High Level Requirements (HLRs) for Annex 2 Topic 11 (Pseudonyms) and changed to the ARF main document only to ensure user authentication via pseudonyms.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#61-additions-and-changes-to-hlrs","title":"6.1 Additions and Changes to HLRs","text":"<p>The below HLRs will be added to the Annex 2, Topic 11 of the ARF.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#611-hlrs-related-to-use-cases","title":"6.1.1 HLRs related to Use Cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-1","title":"Requirement 1","text":"<p>A Wallet Unit SHALL enable a User to generate a Pseudonym and register this at a Relying Party.</p> <p>Rationale: This is necessary to support Use Case A and B.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-2","title":"Requirement 2","text":"<p>A Wallet Unit SHALL enable a User to authenticate with a Pseudonym towards a Relying Party if the Wallet Unit was used previously to register the Pseudonym for the same Relying Party.</p> <p>Rationale: This is necessary to support Use Case A and B.</p> <p>Note that requirement is only mandatory for Pseudonyms that were registered with the same Wallet Unit. However, Wallet Providers MAY add backup of pseudonyms to their Wallet Solution and thereby support this functionality also for pseudonyms registered with different Wallet Units.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-3","title":"Requirement 3","text":"<p>A Wallet Unit SHALL be able to perform the actions specified in the above two requirements independently of whether the interaction with the Relying Party is initiated on the same device hosting the Wallet Instance or on a device different from the one hosting the Wallet Instance.</p> <p>Rationale: Both cross-device and same-device flows must be possible.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-4","title":"Requirement 4","text":"<p>A Wallet Unit SHALL enable the User to use multiple different Pseudonyms at a given Relying Party.</p> <p>Rationale: It should be possible for a User to use their Wallet Unit in multiple contexts, for example work and personal accounts.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-5","title":"Requirement 5","text":"<p>A Wallet Unit SHOULD enable a User to freely choose a User alias for each Pseudonym registered at a Relying Party. Setting an alias SHOULD be optional for the User. The User SHOULD be able to change the alias for any Pseudonym.</p> <p>Rationale: Setting an alias helps the User to recognise and distinguish Pseudonyms, which otherwise may be meaningless sequences of symbols.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-6","title":"Requirement 6","text":"<p>A Wallet Unit SHALL enable a User to choose which Pseudonym to authenticate with towards a Relying Party, if multiple Pseudonyms are registered for this Relying Party. The Wallet Unit SHOULD present the User with the aliases of the applicable Pseudonyms, if assigned, when making this choice.</p> <p>Rationale: A User should be able to freely choose which Pseudonym to use if multiple are available.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-7","title":"Requirement 7","text":"<p>A Wallet Unit SHOULD enable a User to delete a Pseudonym.</p> <p>Rationale: A User should be enabled to choose if they no longer wishes to have a Pseudonym associated with their Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-8","title":"Requirement 8","text":"<p>A Wallet Unit SHOULD enable to the User to manage pseudonyms within the Wallet Unit in a user-friendly and transparent manner. Users SHOULD be informed about when and with which Relying Party their pseudonyms were used and be able to view a complete transaction log (including canceled or unsuccessful transactions).</p> <p>Rationale: Users should be able to have full control over the pseudonyms functionality.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-9","title":"Requirement 9","text":"<p>A Wallet Unit SHOULD enable the User to see all existing pseudonyms, including the associated Relying Party.</p> <p>Rationale: Users should be able to have full control over the pseudonyms functionality.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#612-hlrs-related-to-relying-parties","title":"6.1.2 HLRs related to Relying Parties","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-10","title":"Requirement 10","text":"<p>A Relying Party SHALL be able to verify that a User is registering a Pseudonym using a non-revoked Wallet Unit.</p> <p>Rationale: A Relying Party should be able to achieve a high level of trust in authentication performed using this Pseudonym when this is a requirement.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-11","title":"Requirement 11","text":"<p>A Relying Party SHALL be able to verify that a User is authenticating with a Pseudonym using a non-revoked Wallet Unit.</p> <p>Rationale: A Relying Party should be able to achieve a high level of trust in authentication performed using this Pseudonym when this is a requirement.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-12","title":"Requirement 12","text":"<p>If Wallet Unit is used to register a Pseudonym at a Relying Party in combination with a PID, attestation or WUA being presented to the same Relying Party, then this Relying Party SHALL be able to verify that the same User performed both actions.</p> <p>Rationale: A Relying Party should be able to be assured that they can trust subsequent authentications with the Pseudonym to have the properties as presented in the PID, attestation, or WUA.</p> <p>Note: The above only states the high-level requirement. Later technical specifications will define how this can be accomplished.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-13","title":"Requirement 13","text":"<p>The Relying Party SHALL be able to validate that the pseudonym presented to them belongs to the User presenting it.</p> <p>Rationale: To support both use cases it is necessary that only the rightful owner of a Pseudonym (i.e., the user having generated it) can use it to authenticate.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#613-hlrs-related-to-privacy","title":"6.1.3 HLRs related to Privacy","text":"<p>Note that the requirements WUA_02 and WUA_03 from Topic 9 ensures that a Wallet Unit must authenticate a User before Pseudonyms are viewed, created, or used to authenticate towards Relying Parties. We therefore do not think it is necessary to add further requirements related to this.</p> <p>The placement of these HLRs will be discussed in Topic C.</p> <p>Further, note that RPA_01 and RPA_03 from Topic 6 ensures that Wallet Units SHALL authenticate Relying Parties also in the Pseudonym use case. It is therefore not necessary to specify further HLRs related to this.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-14","title":"Requirement 14","text":"<p>A Wallet Unit SHALL store the information necessary for authenticating with a Pseudonym in their WSCD.</p> <p>Rationale: It is made explicit in Article 5a 4. b of [European Digital Identity Regulation] that the Pseudonyms must be stored encrypted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-15","title":"Requirement 15","text":"<p>A Relying Party SHALL NOT be able to derive the User\u2019s true identity, or any data identifying the User, from the Pseudonym value received by the Relying Party.</p> <p>Rationale: This is what makes a Pseudonym a Pseudonym, as opposed to an identifier.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-16","title":"Requirement 16","text":"<p>A Wallet Unit SHALL NOT reveal the same Pseudonym to different Relying Parties unless the User explicitly chooses otherwise.</p> <p>Rationale: This is important to ensure that colluding Relying Parties cannot use the Pseudonyms to track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-17","title":"Requirement 17","text":"<p>It SHALL NOT be possible to correlate Pseudonyms based on their values nor on other metadata sent by the Wallet Unit during registration and authentication, meaning that colluding Relying Parties SHALL NOT able to conclude that different Pseudonyms belong to the same User.</p> <p>Rationale: If this was possible, it would defeat the purpose of using different Pseudonyms and would allow colluding Relying Parties to track the User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-18","title":"Requirement 18","text":"<p>The Wallet Unit SHALL ensure that Pseudonyms contain sufficient entropy to make the chance of colliding Pseudonyms (meaning two Users having the same Pseudonym value for the same Relying Party) negligible.</p> <p>Rationale: If Pseudonym collision could occur in practice, User recognition by the Relying Party would fail, because the wrong User would be matched to another account and thereby the Relying Party could reveal sensitive information to a wrong User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-19","title":"Requirement 19","text":"<p>A Wallet Unit SHALL NOT share the User's optionally assigned Pseudonym aliases with any Relying Party.</p> <p>Rationale: The aliases are a convenience thing for users and they should be allowed to choose them as they like without having to consider whether it contains sensitive data or not.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-20","title":"Requirement 20","text":"<p>The Wallet Unit SHOULD be able verify the identity of a Relying Party when a User is registering a Pseudonym or authenticates with a Pseudonym.</p> <p>Rationale: The user should be able to trust whom they are using their Wallet Units to authenticate towards.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#613-hlrs-for-interoperability","title":"6.1.3 HLRs for Interoperability","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-21","title":"Requirement 21","text":"<p>The Commission SHALL create or reference a profile or extension of the WebAuthn specification compliant with the HLRs for this topic.</p> <p>Rationale: It must be ensured that the HLRs are conformant to a clear specification in an interoperable manner.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-22","title":"Requirement 22","text":"<p>Wallet Providers SHALL ensure that their Wallet Solution supports WebAuthn with additions and changes as documented in this document and future technical specifications created by or on behalf of the Commission.</p> <p>Rationale: This ensures that Relying Parties can implement a uniform interface to let any User register and authenticate with Pseudonyms if they have an EUDI Wallet.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#62-hlrs-to-be-removed","title":"6.2 HLRs to be Removed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#requirement-pa_01-from-topic-11","title":"Requirement PA_01 from Topic 11","text":"<p>PA_01 states:</p> <p>A Wallet Unit SHALL be able to generate pseudonyms for its User, in compliance with the W3C WebAuthn API specification [W3C WebAuthn].</p> <p>Rationale for removal: The requirements above make this requirement superfluous.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/e-pseudonyms-including-user-authentication-mechanism/#7-references","title":"7 References","text":"Reference Description [W3C WebAuthn] Web Authentication: An API for accessing Public Key Credentials Level 2 W3C Recommendation, 8 April 2021, https://www.w3.org/TR/webauthn-2/ [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0. [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR.2024.2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/","title":"F digital credential api","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#f-digital-credentials-api","title":"F - Digital Credentials API","text":"<p>Version 1.1, updated 20 February 2025</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic F: Digital Credentials API (formerly known as 'the browser API').</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Define high-level requirements for the interface between the wallet and browsers and/or the operating system. These requirements are currently under discussion and being standardised through the Digital Credentials API at W3C. The protocols to be used with this API, including message structures and contents, are being standardised by ISO and the OpenID Foundation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the use of the Digital Credentials API:</p> Risk type Risk id Related risk titles High-level risks to the wallets R5 Data theft High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction High-level risks to the wallets R10 Transaction manipulation High-level risks to the wallets R13 Service disruption High-level risks to the wallets R14 Surveillance System-related risks SR3 Legal non-compliance R5 Data theft Data theft is defined as the unauthorised extraction of data. Data theft is also associated to threats, such as data interception (unauthorised capture of data in transit) and data decryption (unauthorised decoding of encrypted data), which are likely to lead in some cases to Data disclosure (R6). R6 Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9 Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. R10 Transaction manipulation Transaction manipulation is defined as the unauthorised alteration of operations in the wallet. Transaction manipulation is an attack on integrity, and it is related to a data integrity breach. R13 Service disruption Service disruption is defined as an interruption or degradation in the normal operation of the wallet. A specific kind of service disruption is user lock-out, defined as the inability of a user to access their account or their wallet. R14 Surveillance Surveillance, or monitoring, is defined as the unauthorised tracking or observation of a wallet user's activities, communication, or data. Surveillance is often related to inference, which is defined as the deduction of sensitive or personal information from seemingly innocuous data. SR3 Legal non-compliance Legal non-compliance is defined as a situation when relevant laws, regulations or standards cannot be adhered to. In the context of the wallet, as security and privacy of the solution are legal requirements, all threats are likely to lead to some kind of legal non-compliance. <p>More specifically, [RiskRegister]  describes the following threats to a Wallet:</p> ID Threat description Related risks TR25 The wallet can present attributes to a relying party without the approval of a user. Data disclosure (R6) TR28 An attacker can get a user into wrongfully approving a request for electronic attestations of attributes (phishing or other). Data disclosure (R6) TR29 An attacker can leak attributes from the wallet and identify the wallet user where identification is not required/allowed. Data disclosure (R6) TR31 A request can be leaked to an attacker. Data disclosure (R6) TR34 An attacker can know whether a wallet is installed on the same device he is using, or on another one, and get information on it. Data disclosure (R6) TR50 An attacker can eavesdrop during the connection from the wallet to relying parties. Data theft (R5) / Data disclosure (R6) TR50 An attacker can convince a user to share personal data (i.e. PID, EAA-s, pseudonyms, electronic signatures, logs and other data) with the attacker or with a third party that the user did not intend to do so. Data theft (R5) / Data disclosure (R6) TR76 A relying party can send multiple invalid requests. Service disruption (R13) TR80 An attacker can block transactions by relying parties, users and/or PID provider. Service disruption (R13) TR88 Attackers can make changes to a request's metadata (service name, usages, etc.). Transaction manipulation (R10) TR93 An attacker can replace or modify the PID during its transfer from the wallet unit to the online relying party. Transaction manipulation (R10) TR103 The user behind the relying party - browser connection can be different from the user behind the relying party - wallet connection. Unauthorised transaction (R9) / Data disclosure (R6) / Identity theft (R4) TR105 An attacker can perform man-in-the-middle attacks Unauthorised transaction (R9) / Data disclosure (R6) / Surveillance (R14)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 introduces the Digital Credentials API</li> <li>Chapter 3 presents the functionality expected from the Digital Credentials API so it can be used in the context of ARF.</li> <li>Chapter 4 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#2-digital-credentials-api","title":"2. Digital Credentials API","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#21-overview","title":"2.1 Overview","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#problem-statement","title":"Problem Statement","text":"<p>Remote transaction flows are use cases in which the Relying Party Instance is remote from the User and the User device. The Relying Party Instance accesses the Wallet Instance over the internet, using a browser. These use cases can be further distinguished in same-device flows, in which the browser is running on the same device as the Wallet Unit, and cross-device flows, where the browser is on a different device.</p> <p>Remote presentation flows come with a number of challenges:</p> <ul> <li>1. Secure Cross-Device Flows: Cross-device flows are vulnerable to phishing and relay attacks, necessitating enhanced security measures.</li> <li>2. Wallet Unit Selection and Invocation:  In remote flows, where interactions do not originate from the Wallet Unit, Users may encounter difficulties in selecting and invoking the appropriate Wallet Instance to fulfill a specific presentation request, particularly when multiple Wallet Units are present on the device.</li> <li>3. Invocation Mechanism: Establishing a communication channel between the Wallet Unit and the remote Relying Party Instance presents challenges due to inconsistent invocation methods. One approach considered by standardization bodies involves using custom URI schemes, such as \"mdoc://\" or \"openid4vp://\". In this approach, the operating system would trigger the Wallet Unit when the Relying Party Instance requests a connection via a custom URI. However, relying on custom URI schemes introduces variability in user experiences across different browsers and operating systems, resulting in operational inefficiencies and potential security risks.</li> <li>4. Clear Origin Verification: Protecting against relay attacks requires precise identification of the Relying Party Instance's origin.</li> <li>5. Session binding: When presenting a PID or attestation to a remote Relying Party, users have to switch contexts. Existing protocols may enable attacks where the contexts are not \"bound\" to each other resulting in session \"hijacking\".</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#proposed-solution","title":"Proposed solution","text":"<p>Digital Credentials API [Cred_API] is a possible solution to the identified challenges. Digital Credentials API has the potential to enhance usability, scalability, and security while providing a consistent and reliable user experience.</p> <p>Digital Credentials API is a Draft Community Group report of the Web Platform Incubator Community Group (WICG) that builds upon Credential Management Level 1 API W3C Working Draft [Cred_Man]. The goal of the Digital Credentials API is to enable user agents (i.e., browsers) to mediate access to, and presentation of, attestations. Currently, attestation issuance is not in the scope of this API, but future versions will consider it. The Digital Credentials API can be used, for example, by a Relying Party website to request a PID or (Q)EAA stored in a Wallet Unit through the User's browser. The browser and the Wallet Unit may be in the same device (same-device flow) or in separate devices but in proximity (cross-device flow).</p> <p>The Digital Credentials API can address the challenges related to remote presentation flows as follows:</p> <ul> <li>1. Secure Cross-Device Flows: The Digital Credentials API enables  a secure transport with proximity checks for cross-device requests</li> <li>2. Wallet Unit Selection and Invocation: The Digital Credentials API enables a unified interface provided by the web browser and the operating system, which can streamline this process, offering a seamless and intuitive user experience.</li> <li>3. Invocation Mechanism: The Digital Credentials API does not need custom URL schemes for invoking a Wallet Unit.</li> <li>4. Clear Origin Verification: The Digital Credentials API enables including the origin information, such as the website domain or app package name, within the presentation request ensuring the authenticity of the request and enhancing trust for both Wallet Units and Users.</li> <li>5. Session binding: The Digital Credentials API allows information about a session to be embedded in a presentation request. At the same time the browser and the operating system handles context switching preventing session hijacking.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#22-relying-party-wallet-unit-interaction","title":"2.2 Relying Party - Wallet Unit interaction","text":"<p>Using the Digital Credentials API, a Relying Party can interact with a Wallet Unit using a website and through a browser.</p> <p>The current version of Digital Credentials API extends Credential Management Level 1 API (the same API used by WebAuthn/passkeys) to allow websites to request an attestation. This is achieved by providing a sequence of <code>presentation requests</code>, where each presentation request includes an <code>exchange protocol</code> and <code>request data</code>. The format of the request data are specific to the exchange protocol. The Digital Credentials API specifications will include a registry of supported protocols.</p> <p>As a next step, the browser sends the request to the operating system which searches matching attestations in installed Wallet Units. The cross-device flow can be used to search for matching attestations in Wallet Units installed in a different device, located in close proximity to the browser. If more than one matching attestation is found, the browser prompts the User to select one. As a next step, request data is sent to the corresponding Wallet Unit. Then, the Wallet Unit asks user consent and generates a presentation based on the selected exchange protocol. The presentation is relayed back to the Relying Party's website.</p> <p>As of January 2025, Digital Credentials API support is provided only by the Chrome browser and the Android mobile operating system. In this experimental implementation there exists a method for Wallet Units to indicate to a component, which is part of the Wallet Solution and it is referred to as the \"matcher\" in the current Android-specific implementation, the availability of attestations and, optionally, attributes included in the attestation. An example can be found here. This Android-specific documentation mentions that the information provided by the Wallet Unit is used by the Android operating system to render a selector, allowing Users to make an informed choice about which attestation to proceed with.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#221-same-device-flow","title":"2.2.1 Same-device flow","text":"<p>As of January 2025, the same-device flow is implemented using the following steps:</p> <ul> <li>The User visits the website of the Relying Party and indicates that they want to present some attributes from installed Wallet Units.</li> <li>The browser asks permission from the User to allow Digital Credentials API invocation from this particular website. </li> <li>The Relying Party indicates to the browser which attributes they want to request by creating a <code>presentation request</code>.</li> <li>The operating system searches for attestations that satisfy the requested attributes.</li> <li>The browser presents to the User a selector that includes a list of potentially suitable attestations. </li> <li>The User selects an attestation. The operating system invokes the Wallet Unit providing as input the selected attestation and the request data.</li> <li>The Wallet Unit processes the request according to the relevant specification (e.g., OpenID4VP) and returns the requested attributes through the browser, provided that the Wallet Unit contains the attributes, all required verifications pass and the User consents.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#222-cross-device-flow","title":"2.2.2 Cross-device flow","text":"<p>The cross-device flow is implemented using the following steps:</p> <ul> <li>The User visits the website of the Relying Party and indicates that they want to present some attributes from installed Wallet Units.</li> <li>The browser asks permission from the User to allow Digital Credentials API invocation from this particular website. </li> <li>The Relying Party  indicates to the browser which attributes they want to request by creating a <code>presentation request</code>.</li> <li>The browser uses CTAP 2.2 hybrid flow (section 11.5 of [Ctap]) to establish a tunnel between the browser and the device where the Wallet Unit is installed (this is the same flow used by WebAuthn/passkeys). From a high level this is implemented as follows: (i) The browser presents a QR code which includes information about the tunnel endpoint and keys that can be used for establishing a secure session, (ii) the user scans the QR code using the device camera, (iii) the device where the Wallet Unit is installed emits a BLE advertisement which is received by the browser. The advertisement includes in an encrypted form information required for establishing the secure tunnel. This advertisement is used as a proximity check, (iv) The tunnel is established.</li> </ul> <p></p> <ul> <li>The presentation request is transferred through the tunnel to the device operating system.</li> <li>The device operating system presents to the User a selector that includes a list of potentially suitable attestations.</li> </ul> <p></p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#3-expectations-from-the-digital-credentials-api","title":"3. Expectations from the Digital Credentials API","text":"<p>This section presents the functionality expected from the Digital Credentials API so it can be used in the context of ARF</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#31-expected-functionality","title":"3.1 Expected functionality","text":"<ol> <li> <p>Wallet Selection and Invocation for attestation presentation: The Digital Credentials API should  enable a browser or OS to search for Wallet Units containing attestations  that potentially match the request of the Relying Party, addressing user  experience and scaling concerns caused by custom URI-based or universal link (a.k.a. app link)-based approaches.\u200b</p> </li> <li> <p>Wallet Selection and Invocation for attestation issuance: The Digital Credentials API should  enable a browser or OS to search for Wallet Units that can handle an attestation offer  from a specific Attestation Provider, addressing user  experience and scaling concerns caused by custom URI-based or universal link (a.k.a. app link)-based approaches.\u200b\u200b</p> </li> <li> <p>Secure Cross-Device Flows: The Digital Credentials API should enable APIs and protocols (e.g., CTAP2) that ensure secure cross-device engagement, mitigating threats such as phishing and relay attacks.</p> </li> <li> <p>Protocol support: The Digital Credentials API should support the protocols specified in the Implementing Acts as remote presentation protocols for attestations and attestation issuance.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#32-responsibilities","title":"3.2 Responsibilities","text":"<p>The Digital Credentials API should operate as a secure transport layer, allowing all parties to fulfill their requirements as specified in Annex 2 of ARF. Browsers and operating systems facilitating remote transaction flows should not act on behalf of Attestation Providers, Relying Parties or Wallet Units. Particularly:</p> <ol> <li> <p>Consent: Wallet Units and Relying Parties should handle user consent for attribute requests and presentations. The Digital Credentials API should not add an additional consent layer to the workflow for presenting attributes stored in a Wallet Unit.</p> </li> <li> <p>Relying Party Authentication: Wallets Units are responsible for authenticating Relying Parties before delivering attribute payloads. The Digital Credentials API should provide sufficient information to Wallet Units about the presentation request origin and other necessary context information, allowing Wallet Units to identify and authenticate Relying Parties, as well as to verify that the request from the Relying Party was not copied and replayed.</p> </li> <li> <p>Attestation Provider and Relying Party Authorisation: Although browsers and operating systems implementing the Digital Credentials API should verify the web origin of Attestation Providers and Relying Parties, as well as that the credential offers and presentation requests are transferred over TLS from the Attestation Provider or the Relying Party to the browser, they should not decide which Attestation Providers or Relying Parties are authorised to issue attestations or request attributes as this responsibility lies with national issuers and regulators, including Relying Party registrars.</p> </li> <li> <p>Wallet Unit sovereignty. When the Digital Credentials API is used, the operating system should not override or remove control from the Wallet Unit. The User's Wallet Unit should retain full authority over attestation management, including issuance, storage, and presentation. This ensures that the Wallet Unit remains the trusted component for safeguarding user data and interactions. The operating system and browser should not disrupt the Wallet Unit's security functions.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#33-technological-neutrality-and-cross-platform-interoperability","title":"3.3 Technological Neutrality and Cross-Platform Interoperability","text":"<p>The Digital Credentials API should preserve technological neutrality and avoid any reliance on vendor-specific extensions. Particularly:</p> <ol> <li> <p>Attestation format neutrality: The Digital Credentials API should be neutral and open with respect to the format of attestations to be used. For example, if a \"Registry of Protocols for Requesting Digital Credentials\" is utilised, adding or removing protocols to the registry should follow established criteria and processes, and involve multiple stakeholders. Adding or removing protocols to the registry should follow established criteria and processes, and involve multiple stakeholders. The criteria and processes should be transparent, objective and non-discriminatory; in other words well-governed.</p> </li> <li> <p>Cross-platform compatibility and interoperability. The Digital Credentials API should be compatible with most browsers and operating systems, and should provide cross-platform interoperability, ensuring users are not locked into a specific vendor's browser or operating system</p> </li> <li> <p>Wallet Solution neutrality.  Any approved Wallet Solution should be able to use the Digital Credentials API. Usage of the API should not require additional vetting processes by vendors or impose constraints on Wallet Providers other than those required by the EU.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#34-privacy-preservation","title":"3.4 Privacy preservation","text":"<p>The use of the Digital Credentials API should not compromise User privacy. In more detail:</p> <ol> <li> <p>Privacy preserving searching: Wallet Units may have to \"indicate\" to the Digital Credentials API framework the availability of attestations, to facilitate their discovery and use. However, this process should be designed and implemented in a way that it does not introduce privacy threats, such as exposing attribute values to any other party, including the OS/browser vendor, other applications on the same device, other users of the same device, or Relying Parties. Similarly, the OS should have access only to the bare minimum information required to implement the search functionality and must ensure that no third party can access this information.</p> </li> <li> <p>Privacy preserving attestation relay:  The use of a browser as an intermediary in the attestation issuance and presentation process should not create privacy risks, such as those arising from malicious add-ons or unauthorised tracking mechanisms. Browsers should maintain strict privacy controls to ensure that attestation-related data is neither exposed nor accessible to unauthorised third parties. This principle also extends to any tunneling services used to facilitate cross-device flow.</p> </li> <li> <p>Protection against data theft: Browsers and operating systems providing support for the Digital Credentials API should minimise the threat of data theft and disclosure through eavesdropping on the communication between the Wallet Unit and the Attestation Provider or Relying Party's website.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#35-availability-preservation","title":"3.5 Availability preservation","text":"<p>The use of the Digital Credentials API should not enable Denial-of-Service attacks against Wallet Units. Particularly:</p> <ol> <li>DoS protection. The use of the Digital Credentials API should not facilitate Attestation Provider or Relying Parties to perform Denial of Service attacks against Wallet Units, e.g., by enabling an Attestation Provider or Relying Party to send multiple invalid requests. Similarly, the use of the Digital Credentials API should not enable attackers to block transactions by Relying Parties and Wallet Units.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#4-additions-and-changes-to-the-arf","title":"4 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#41-high-level-requirements-to-be-added-to-annex-2","title":"4.1 High-Level Requirements to be added to Annex 2","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#411-requirements-to-be-added-likely-to-topic-1","title":"4.1.1 Requirements to be added (likely) to Topic 1","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-1","title":"REQUIREMENT 1","text":"<p>A Wallet Unit and a Relying Party Instance receiving an attestation from the Wallet Unit SHALL ensure that the attributes included in the presented attestation are accessible only to the Relying Party, by encrypting the presentation response. This SHALL include preventing decryption of the presentation response or Man-in-the-Middle attacks by the browser, the operating system, or other components between the Wallet Unit and the Relying Party.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#conditional-requirements","title":"Conditional Requirements","text":"<p>Providing that the expectations set in chapter 3 are met, the following two High-Level Requirements will be added (likely) to Topic 1:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-2-conditional","title":"REQUIREMENT 2 (conditional)","text":"<p>Wallet Units and Relying Party Instances SHALL support the Digital Credentials API for remote presentation flows.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-3-conditional","title":"REQUIREMENT 3 (conditional)","text":"<p>A Wallet Unit SHALL disclose the presence of all stored attestations and attributes to the Digital Credentials API framework, but SHALL NOT disclose the value of the attributes in these attestations.</p> <p>Note: This restriction applies even if such disclosure would enhance the services provided by the operating system to the Wallet Unit, for example, attestation selection in the context of the Digital Credentials API.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-4-conditional","title":"REQUIREMENT 4 (conditional)","text":"<p>A Relying Party's request MAY be processed by the browser for searching available attestations, for preventing fraud targeting the user, or for troubleshooting purposes. It SHOULD be processed by the browser for user security purposes. It SHALL NOT be processed by the browser for market analysis purposes (including as a secondary purpose) or the browser\u2019s own purposes.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#412-requirements-to-be-added-likely-to-topic-1023","title":"4.1.2 Requirements to be added (likely) to Topic 10/23","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#conditional-requirements_1","title":"Conditional Requirements","text":"<p>Providing that the expectations set in chapter 3 are met, the following High-Level Requirement will be added (likely) to Topic 10/23:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#requirement-5-conditional","title":"REQUIREMENT 5  (conditional)","text":"<p>Wallet Units and Attestation Providers SHALL support the Digital Credentials API for attestation issuance.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#42-high-level-requirements-to-be-changed","title":"4.2 High-Level Requirements to be changed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#rpa_01","title":"RPA_01","text":"<p>The following text will be appended to RPA_01 \"The Wallet Unit SHALL retain full authority over this process, for example, this process SHALL NOT be handled by a third party, including the browser and the operating system.\"</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#rpa_07","title":"RPA_07","text":"<p>The following text will be appended to RPA_07 \"The Wallet Unit SHALL retain full authority over this process, for example, this process SHALL NOT be handled by a third party, including the browser and the operating system.\"</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/f-digital-credential-api/#6-references","title":"6 References","text":"Reference Description [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0, final [Cred_API] Digital Credentials, Draft Community Group Report, 20 February 2025, available at https://wicg.github.io/digital-credentials/ [Cred_Man] Credential Management Level 1, 13 August 2024, available at https://www.w3.org/TR/credential-management-1/ [Ctap] Client to Authenticator Protocol (CTAP) Review Draft, March 21, 2023, available at https://fidoalliance.org/specs/fido-v2.2-rd-20230321/fido-client-to-authenticator-protocol-v2.2-rd-20230321.html"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/","title":"G zero knowledge proof","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#g-zero-knowledge-proof","title":"G - Zero Knowledge Proof","text":"<p>Version 1.4, updated 30 March 2025</p> <p>GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for European Digital Identity Cooperation Group regarding Topic G: Zero Knowledge Proof.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>ZKP offer strong potential as a privacy-enhancing technique. It should be revisited to determine the foundational requirements needed for its future integration, particularly focusing on defining specific requirements for implementing ZKP by using any type of WSCD/WSCA.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>Risks considered in [Topic_A] are also applicable here</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#14-document-structure","title":"1.4 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 presents privacy properties of Zero-Knowledge Proof schemes.</li> <li>Chapter 3 introduces families of Zero-Knowledge Proof schemes and gives an overview of representative solutions</li> <li>Chapter 4 discusses topics related to the integration of Zero-Knowledge Proof schemes into the ARF</li> <li>Chapter 5 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#2-zero-knowledge-proof-technology-legal-requirements-and-privacy-properties","title":"2. Zero-Knowledge Proof technology, legal requirements and privacy properties","text":"<p>Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [European Digital Identity Regulation], Recital 14, discusses the use of privacy-preserving technologies, such as zero knowledge proof:</p> <p>Member States should integrate different privacy-preserving technologies, such as zero knowledge proof, into the European Digital Identity Wallet. Those cryptographic methods should allow a relying party to validate whether a given statement based on the person\u2019s identification data and attestation of attributes is true, without revealing any data on which that statement is based, thereby preserving the privacy of the user.</p> <p>Similarly, Recital 15 of [European Digital Identity Regulation] mentions:</p> <p>All Union citizens [...] should be empowered to securely request, select, combine, store, delete, share and present data related to their identity [...] while enabling selective disclosure of personal data</p> <p>Recital 59 of [European Digital Identity Regulation] provides the following definition and requirements for selective disclosure:</p> <p>Selective disclosure is a concept empowering the owner of data to disclose only certain parts of a larger data set, in order for the receiving entity to obtain only such information as is necessary for the provision of a service requested by a user. The European Digital Identity Wallet should technically enable the selective disclosure of attributes to relying parties. It should be technically possible for the user to selectively disclose attributes, including from multiple, distinct electronic attestations, and to combine and present them seamlessly to relying parties. This feature should become a basic design feature of European Digital Identity Wallets, thereby reinforcing convenience and the protection of personal data, including data minimisation.</p> <p>Furthermore, Article 5a, 16 of [European Digital Identity Regulation] mandates for \"the technical framework of the European Digital Identity Wallet\" to:</p> <p>(a) not allow providers of electronic attestations of attributes or any other party, after the issuance of the attestation of attributes, to obtain data that allows transactions or user behaviour to be tracked, linked or correlated, or knowledge of transactions or user behaviour to be otherwise obtained, unless explicitly authorised by the user; (b) enable privacy preserving techniques which ensure unlinkability, where the attestation of attributes does not require the identification of the user.</p> <p>Finally, article 11a.2 of [European Digital Identity Regulation] mandates that:</p> <p>Member States shall provide for technical and organisational measures to ensure a high level of protection of personal data used for identity matching and to prevent the profiling of users.</p> <p>With all these in mind, the goal of this discussion paper is to establish High Level Requirements for the use of the Zero-Knowledge Proof technology in ARF.</p> <p>A Zero-Knowledge Proof (ZKP) is a cryptographic protocol that allows one party (the prover) to convince another party (the verifier) that a given statement is true without revealing any additional information beyond the validity of the statement itself. This ensures that the verifier gains no knowledge about how the prover knows the statement to be true, preserving privacy while enabling trust.</p> <p>A ZKP system must satisfy three key properties:</p> <ul> <li>Completeness: If the statement is true and both the prover and verifier follow the protocol correctly, the verifier will be convinced of its validity.</li> <li>Soundness: If the statement is false, a dishonest prover cannot convince an honest verifier that it is true, except with some negligible probability.</li> <li>Zero-Knowledge: If the statement is true, the verifier learns nothing beyond the fact that the statement is correct.</li> </ul> <p>ETSI TR 119 476 [ETSI_119476] defines the following privacy-preserving properties that may be provided by a ZKP scheme:</p> <ul> <li>Selective disclosure: A Wallet Unit can be enabled to present a subset of attributes from at least one, but potentially multiple, (Qualified) Electronic  Attestations of Attributes ((Q)EAAs).</li> <li>Relying Party unlinkability: Relying Party unlinkability means that one or more Relying Parties cannot collude to determine if the selectively disclosed attributes describe the same User</li> <li>Full unlinkability: Full unlinkability means that no party can collude to determine if the selectively disclosed attributes describe the same User. This includes PID Providers or Attestation Providers colluding with Relying Parties.</li> </ul> <p>In accordance with [Topic A], the properties above must be understood as taking  into account not only the risk of a collusion (from issuers and/or verifiers)  but also the risk of a data breach (from the issuers and/or verifiers), allowing a  third-party (possibly an attacker) to combine data to the aim of establishing links.</p> <p>Additional privacy properties have also been defined in related literature. Such properties are:</p> <ul> <li>Range proofs: A ZKP scheme may enable a Wallet Unit to prove that the value of an attribute within an attestation satisfies a specific condition without revealing the exact value. For example, the scheme could allow a Wallet Unit to prove that their \"year of birth\" is earlier than 2007 without disclosing the actual year.</li> <li>Privacy preserving revocation: A ZKP scheme may allow a Wallet Unit to prove that a presented attestation is not included in a revocation list without revealing any additional information. This proof is randomised to prevent linkage across different verifications, ensuring that it cannot be used to track or identify a specific User.</li> <li>Issuer hiding: A ZKP scheme may allow a Wallet Unit to prove that an attestation was issued by a trusted PID Provider or Attestation Provider\u2014i.e., a PID Provider or Attestation Provider included in a predefined trusted list\u2014without disclosing any additional information about the specific PID Provider or Attestation Provider.</li> <li>Pseudonymity: In some use cases, Relying Party unlinkability is not a desirable property, and a Relying Party may need to correlate multiple presentations of the same attestation to the same User (e.g., in the case of \"returning customers\"). A ZKP scheme may allow Wallet Units to generate such \"correlation proofs\" while still preserving user privacy to the extent required.</li> <li>Deniable Issuance and Presentation: A ZKP scheme may allow for repudiation of issued and/or presented attestations.</li> <li>Composite Proofs: A ZKP scheme may allow a Wallet Unit to generate presentations over several attestations with hidden attribute binding (present vaccination credential + PID with matching name without revealing name).</li> <li>(Partially) Blind Issuance: A ZKP scheme may enable PID Providers or Attestation Providers to issue attestations with attributes that remain hidden towards the providers (but can be verifiably transferred from other attestations).</li> <li>Conditional Disclosure: A ZKP scheme may allow a Wallet Unit to generate attestation presentations that contains verified but hidden attributes \u2013 which can be discovered by dedicated party, e.g., personal address only accessible to postal service, not online shop; credit card number revealed only in case of no-show.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#3-available-zero-knowledge-proof-schemes","title":"3. Available Zero-Knowledge Proof schemes","text":"<p>Following ETSI TR 119 476 [ETSI_119476], ZKP schemes can be categorised into multi-message signature schemes and proofs for arithmetic circuits.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#31-multi-message-signature-schemes","title":"3.1 Multi-message signature schemes","text":"<p>From a high-level perspective, multi-message signature-based solutions are implemented as follows. Initially, a PID Provider or Attestation Provider constructs an attestation that can be represented in the form of a list of messages. Then it uses a multi-message signature algorithm and generates a (short) signature over the set of messages. A Wallet Unit can now selectively hide any of the messages and generate a ZKP which proves that \u201cthe Wallet Unit possesses a list of messages that together with the revealed ones can verify the signature of the PID Provider or Attestation Provider. A scheme of this category is BBS+ and its variant BBS#.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#311-bbsbbs","title":"3.1.1 BBS+/BBS","text":"<p>BBS+ is a digital signature protocol which is used for signing a set of messages.  It was first envisioned by Boneh, Boyen, Shacham in [BBS2024] (from where it takes its name), touched and re-visited by [Cam2016]. Currently under standardisation by the IRTF Crypto Forum Research Group [Loo2025], BBS+ provides the ability to sign a set of individual messages, with only a single constant size signature. The signature can be validated given the signer\u2019s Public Key (PK) and the entire set of signed messages; this is equivalent to validating a \u201ctraditional\u201d digital signature, if we consider the set of messages as a single compound message. BBS+ can be combined with ZKPs allowing an entity to selectively hide elements of a signed set of messages. In particular, any entity that knows the signature and the original signed set of messages, can create a proof of knowledge of the signature while selectively disclosing only a sub-array of the signed messages. The proof can be validated with only the signer\u2019s public key and the array of revealed messages. BBS+ is based on pairing friendly curves. BBS# [Ora2024] is a modification of BBS+ that removes the need for pairing-friendly  elliptic curves, and can be combined with ECDSA signatures for device binding.  Hence it can be used with existing WSCDs and P-256. The trade-off is that BBS#  requires interaction with the issuer that scales linearly in the number of presentations.  A recent work builds upon the ideas of BBS#, and provides a provably-secure variant of  such Server-Aided Anonymous Credentials  [Api2025]. The latter  work, also improves upon BBS# by preserving full unlinkability properties of BBS.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#312-advantages","title":"3.1.2 Advantages","text":"<ul> <li>Performant with low computational and communication overhead</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#313-disadvantages","title":"3.1.3 Disadvantages","text":"<ul> <li>Require changes in the attestation signing process using digital signature schemes  that are not widely supported yet on the issuer side</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#32-proofs-for-arithmetic-circuits-programmable-zkps","title":"3.2 Proofs for arithmetic circuits (programmable ZKPs)","text":"<p>These solutions are based on a program expressed in the form of an arithmetic circuit. This circuit receives a secret input, referred to as the witness, which can be for example an attestation, as well as a public statement. The circuit performs a calculation and outputs true if certain conditions hold (e.g., \u201cthe attestation includes an age attribute with value &gt; 18\u201d). A Wallet Unit can then generate a ZKP which proves that \u201cthe Wallet Unit knows a witness (e.g., an attestation), which when provided as input to a certain circuit using the provided statement, the circuit outputs true\u201d. Zero-Knowledge Succinct Non-Interactive Arguments of Knowledge (zk-SNARK) is a representative scheme of this category.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#321-zk-snarks","title":"3.2.1 zk-SNARKs","text":"<p>zk-SNARKs are ZKP schemes based on arithmetic circuits. Circuits can be constructed for arbitrary programs expressed using a Domain Specific Language (DSL) and an appropriate compiler. zk-SNARK solutions require a setup phase where a circuit is mapped to some public parameters, which must be known both to the prover and the verifier. This setup phase may require a secret input, which must be hidden from the prover (trusted setup) or it may not require a secret input (transparent setup). Furthermore, the secret input may be required for setting up all circuits, or only for a specific universal setup phase. The setup phase has an impact on the size of proof and the verification time. Recent advances in this area have demonstrated interoperability with existing identification and authentication systems (e.g., [Lav2016], [Ros2023] )  as well as interoperability with existing attestation formats (e.g., [Fri2024], [Paq2024]). A key challenge that these new proposals aim to address is that many multi-message signature schemes, like BBS+, rely on new cryptographic assumptions that require system-wide changes to PID Providers' and Attestation Providers' infrastructure. Additionally, PID Providers or Attestation Providers often mandate that attestations be device-bound, integrating secure elements into the authentication process. This further complicates adoption, as multi-message signature schemes would necessitate either updates to both hardware secure elements and operating systems across all user devices, or additional interactions between Wallet Units and PID Providers or Attestation Providers, whereas some zk-SNARKs solutions, such as [Fri2024], can support this function without requiring such modifications.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#322-advantages","title":"3.2.2 Advantages","text":"<ul> <li>Do not require any change to the attestation signing process</li> <li>Can be used to prove arbitrary properties on the attributes (e.g., range proof)</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#323-disadvantages","title":"3.2.3 Disadvantages","text":"<ul> <li> <p>Introduce computational overhead and in some cases storage overhead</p> </li> <li> <p>Per use case circuits are required.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#4-discussion","title":"4. Discussion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#41-expectations-from-zkp-systems","title":"4.1 Expectations from ZKP systems","text":"<p>In Chapter 2, we introduced key privacy properties of Zero-Knowledge Proof (ZKP) systems. Some of these properties can also be achieved using non-ZKP mechanisms. For example, selective disclosure can be implemented using salted and hashed data signatures, while batch issuance can help achieve unlinkability between presentations of the same attestation. Similarly, short-lived attestations may be preferred to privacy-preserving revocation. On the other hand, certain privacy properties can only be ensured through ZKPs. Similarly, replacing these mechanisms with ZKP schemes may result in simpler protocols and attestation management processes.</p> <p>Similarly, the need for privacy varies across use cases. In some scenarios, full identity verification is required, such as when opening a bank account. In contrast, other cases may only require proving a specific attribute or a property of an attribute\u2014such as proving that a user is over 18 without revealing their exact birthdate. In cases where full identity verification is necessary, achieving unlinkability is not possible. Indeed, this is also recognised by the [European Digital Identity Regulation] which in Article 5a, 16b mandates unlinkability \"where the attestation of attributes does not require the identification of the user\". In the following we identify use cases where ZKP shall be used when it becomes available.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#411-selective-disclosure-of-an-attribute","title":"4.1.1 Selective disclosure of an attribute","text":"<p>In many cases, Users are required to prove that they possess a PID or attestation that includes a specific attribute having a specific value without revealing additional information about their identity. For example, they may need to prove possession of a PID that includes the \"age over 18\" attribute with value equal to true or a specific city. A ZKP scheme can be used in this use case to provide privacy-preserving selective disclosure for both remote and proximity flows.</p> <p>A ZKP scheme shall hide all attributes of the PID or attestation while providing proofs that:</p> <ul> <li>The PID or attestation includes the revealed attribute.</li> <li>The PID or attestation is within its validity period.</li> <li>The PID or attestation has not been revoked (if revocation is used).</li> <li>The PID or attestation has been issued by a trusted issuer, optionally without revealing the issuer.</li> <li>The PID or attestation is bound to a key stored in the WSCD of the Wallet Unit.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#412-proof-of-personhood","title":"4.1.2 Proof of personhood","text":"<p>Many online services require users to prove that they are not robots. Currently, this is usually done using CAPTCHA. According to a recent report, it takes a user an average of 32 seconds to complete a CAPTCHA [Clo2021]. If a user could prove possession of a PID, this would serve as a sufficient indication that the user is a human being. A ZKP scheme can be used to provide a privacy-preserving proof of personhood.</p> <p>In fact, this is a simpler form of the selective disclosure use case, as a ZKP scheme shall provide the same proofs, except for the proof that \"the PID or attestation includes the revealed attribute.\"</p> <p>For this use case, a suitable rate limiting mechanism shall be used in order to prevent users from re-using an attestation in a malcious way. The fact that a user shall authenticate to the WSCD before generating a proof is such a suitable mechanism.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#413-proof-of-attestation","title":"4.1.3 Proof of attestation","text":"<p>The previous use case can be generalised to any type of attestation. For example, Users may want to prove that they are students (e.g., to receive a discount) without revealing any additional information about their identity. This should be possible for both remote and proximity presentation flows.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#414-privacy-preserving-binding-of-an-attestation-to-a-pid","title":"4.1.4 Privacy-preserving binding of an attestation to a PID","text":"<p>In many cases, \"simple\" attestations may need to be linked to the PID of a User. For example, some countries require tickets for sporting events to include the User's identity number. As a consequence, tickets for different sporting events can be linked to the same User. Similarly, such information was included in the implementation of some countries' COVID vaccination certificates. By using a ZKP scheme and composite proofs, a Wallet Unit can generate a proof that an attestation includes an attribute (e.g., <code>personal_administrative_number</code>), which is also present in the User's PID, without revealing any information about this attribute or any other attributes contained in the PID. In addition to this binding, the ZKP scheme should also provide the same proofs as the \"Proof of Personhood\" use case.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#415-privacy-preserving-linking-of-an-attestation-to-a-relying-party-identifier","title":"4.1.5 Privacy preserving linking of an attestation to a Relying Party identifier","text":"<p>In some use cases, a Relying Party needs to correlate multiple presentations of the same attestation (e.g., to detect a \"returning customer\"). A ZKP scheme can be used to derive a pseudonym by combining an attribute of an attestation that is unique to the User with the Relying Party identifier (or in general with some Relying Party specific context).</p> <p>A related solution shall have the following properties:</p> <ul> <li>The attribute used for deriving the pseudonym shall be hidden from the Relying Party.</li> <li>The attribute used for deriving the pseudonym shall also be hidden from the Provider; otherwise, a colluding Provider and Relying Parties would be able to correlate User presentations. This property can be achieved using blind issuance.</li> </ul> <p>Using a ZKP scheme a User can create only a fixed number of verifiable pseudonyms associated with the same Relying Party identifier (or context), as opposed for example to the WebAutnN-based approach presented in Topic E. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#42-device-binding-using-wscd","title":"4.2 Device binding using WSCD","text":"<p>According to ARF \"User binding [...] is the property that the subject of the PID or attestation [...] is in fact the person that presents the PID or attestation to the Relying Party.\" The simplest approach for implementing User binding is by binding an attestation to a Wallet Secure Cryptographic Device (WSCD), aka device binding, and then trusting the User authentication mechanisms implemented by the WSCD. A PID Provider or Attestation Provider implements device binding by including a cryptographic public key in the attestation and signing it. The corresponding private key is protected by a certified WSCD in the Wallet Unit. During an interaction, the Relying Party verifies that the PID or attestation it received from a Wallet Unit is indeed bound to the WSCD included in the Wallet Unit. The Relying Party does so by requesting the Wallet Unit to sign some data using the private key corresponding to the public key in the PID or attestation. However, the User public key can be used for tracking users and linking their activities. </p> <p>A ZKP scheme should achieve the same functionality in a privacy-preserving manner. Specifically, using a ZKP scheme, a Wallet Unit should be able to prove that it knows a valid signature that can be verified using the public key included in the PID or attestation\u2014without revealing either the signature or the public key.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#43-performance","title":"4.3 Performance","text":"<p>ZKP schemes may introduce computational, communication, or storage overhead, which can impact their practicality in real-world deployments. For example, zkSNARKs may take several seconds to generate a proof, require tens or even hundreds of megabytes of auxiliary data per attestation type (data that must be stored and processed by the User\u2019s device) and produce proofs that are several kilobytes in size.</p> <p>To ensure usability, ZKP schemes should strike a balance between security and efficiency, introducing only tolerable levels of overhead.</p> <p>A ZKP-based solution should remain usable and feasible across different presentation flows. Acceptable delays due to ZKP processing vary depending on the use case. For instance, using an attestation in a proximity flow to enter a stadium imposes stricter time constraints compared to a remote, cross-device presentation flow used for user authentication. Likewise, technologies used for attestation presentation, such as QR codes, NFC, and BLE, impose stricter requirements regarding the size of the presented data.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#44-attestation-format-support","title":"4.4 Attestation format support","text":"<p>Implementing a ZKP solution may require modifications to the existing attestation format. For instance, new fields might need to be added to the attestation presentation to include the proof itself, proof parameters (e.g., the \u201cindex\u201d of messages in multi-message signature formats), and other relevant data. These changes must align with the specifications of the relevant message format standards (e.g,ISO/IEC 18013-5). Additionally, future versions of ARF may define different ZKP schemes for proximity and remote presentation flows. Regardless of the specific approach, ZKP scheme providers should collaborate with relevant standardisation bodies to ensure their schemes remain compatible with the corresponding attestation formats.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#45-integration-with-issuance-and-presentation-protocols","title":"4.5 Integration with issuance and presentation protocols","text":"<p>ZKP schemes may require modifications to the message format of the issuance and presentation protocols, as well as adjustments to the metadata format used by PID Providers or Attestation Providers. These changes could include new fields for specifying ZKP parameters, signaling ZKP support, and other relevant metadata. To ensure interoperability, ZKP scheme providers should collaborate with standardisation bodies to maintain compatibility with the corresponding protocols.</p> <p>Additionally, support for ZKP schemes is expected to be introduced following the  launch of the EUDI Wallet. By that time, many PIDs and attestations will already  have been issued, and it should be possible to generate proofs for those already  issued attestations.</p> <p>Beyond changes to existing protocols, ZKP schemes may introduce additional interactions. For example, zkSNARK-based schemes may require the distribution of public parameters from PID Providers or Attestation Providers to Wallet Units and/or to Relying Parties. Other schemes, such as BBS#, may require pre-computations that involve communication between a Wallet Unit and a PID Provider or Attestation Provider, before a proof can be generated. Privacy-preserving revocation mechanisms may also require Wallet Units to retrieve cryptographic accumulators before generating a proof.</p> <p>The frequency and overhead of these interactions vary significantly. Public parameters may only need to be distributed once per attestation type, while pre-computation steps might need to be performed for every N presentations. Additionally, the impact of these interactions differs depending on scale; e.g., high-volume interactions initiated by thousands of Wallet Units could impose a significant load on PID Providers or Attestation Providers and other network participants. These interactions shall not result in User tracking or linkability.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#46-additional-desirable-properties-from-zkp-based-systems","title":"4.6 Additional desirable properties from ZKP-based systems","text":"<p>Beyond the privacy properties of ZKP schemes presented in Section 2, a ZKP-based system may also offer additional security properties. A ZKP-based system may be extendable and updatable to accommodate future advancements in security and performance. For instance, in a zkSNARK-based system, the arithmetic circuits used for proof generation could be replaced or optimised to enhance efficiency or mitigate newly discovered vulnerabilities. Likewise, a ZKP-based system should be agile, allowing adaptability to different cryptographic primitives. For example, a solution based on multi-message signatures could support various elliptic curve types, enabling flexible deployment across different environments and security requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#5-additions-and-changes-to-the-arf","title":"5 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#51-high-level-requirements-to-be-added-to-annex-2","title":"5.1 High-Level Requirements to be added to Annex 2","text":"<p>The following High-Level Requirements will be added to Annex 2 of the ARF</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-1","title":"REQUIREMENT 1","text":"<p>A ZKP scheme SHALL provide support for the following generic functions, while hiding  all attributes of PIDs or attestations: (i) generation of a proof that an (some)  attribute(s) having a specific value is (are) included in a PID or attestation,  (ii) generation of a proof that a PID or attestation is within its validity period,  (iii) generation of a proof that a PID or attestation has not been revoked, (iv)  generation of a proof that a PID or attestation is bound to a key stored in the  WSCD of the Wallet Unit. Additionally, a ZKP scheme SHOULD provide support for the following function which should  be used only when hiding  the PID Provider or Attestation Provider is necessary (v) generation of a proof that a  PID or attestation has  been issued by a trusted PID Provider or Attestation Provider without revealing  the PID Provider or Attestation Provider. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-2","title":"REQUIREMENT 2","text":"<p>A ZKP scheme SHALL support proving possession of attestation of a given type.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-3","title":"REQUIREMENT 3","text":"<p>A ZKP scheme SHOULD support the privacy-preserving binding of an attestation to a PID.  In addition to the generic functions defined in ZKP_01, for this use case, a ZKP  scheme SHALL provide support for the following functions: (i) generation of a proof  that the Wallet Unit stores an attestation and a PID and that the attestation includes a  specific attribute, having a specific value, which is also present in the PID.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-4","title":"REQUIREMENT 4","text":"<p>A ZKP scheme SHOULD support the derivation of a verifiable User pseudonym, by combining  an attribute value that is unique for the User with Relying Party specific context (e.g., the Relying Party identifier).  In addition to the generic functions defined in ZKP_01, for this use case, a ZKP scheme  SHALL provide support for the following functions: (i) generation of a request for  the issuance of an attestation that includes a secret attribute unique to the User,  without revealing this attribute to the Attestation Provider, (ii) generation of an  attestation presentation that includes a verifiable pseudonym derived from the secret  attribute and the Relying Party identifier.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-5","title":"REQUIREMENT 5","text":"<p>A ZKP scheme SHALL be usable in both remote and proximity presentation flows. While  the inclusion of ZKP will introduce computational and verification delays, these delays  SHALL NOT critically undermine or defeat the service\u2019s purpose (e.g. because of a  critical impact on the User experience of the Wallet Unit).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-6","title":"REQUIREMENT 6","text":"<p>A ZKP scheme SHOULD be able to generate proofs for already issued PIDs and attestations  in the formats specified in [ISO/IEC 18013-5] or [SD-JWT VC].</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-7","title":"REQUIREMENT 7","text":"<p>A ZKP scheme SHALL NOT introduce any additional communication or information that  could be used to track or link User activity during, before, or after proof generation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-8","title":"REQUIREMENT 8","text":"<p>A ZKP scheme SHALL rely solely on algorithms standardised by a standardisation  organisation recognised by the Commission or in a standard recognised by the Commission.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#requirement-9","title":"REQUIREMENT 9","text":"<p>Use of a ZKP scheme SHALL NOT prevent the Wallet Unit's ability to provide User  authentication with Level of Assurance  \"high\".</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#52-high-level-requirements-to-be-changed","title":"5.2 High-Level Requirements to be changed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#53-descriptions-to-be-added-to-the-arf-main-document","title":"5.3 Descriptions to be added to the ARF main document","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/g-zero-knowledge-proof/#6-references","title":"6 References","text":"Reference Description [Api2025] Rutchathon Chairattana-Apirom, Franklin Harding, Anna Lysyanskaya, and Stefano Tessaro, \"Server-Aided Anonymous Credentials,\" available at https://eprint.iacr.org/2025/513, 2025 [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [BBS2024] Boneh, Dan, Xavier Boyen, and Hovav Shacham. \"Short group signatures.\" In Annual international cryptology conference, pp. 41-55. Berlin, Heidelberg: Springer Berlin Heidelberg, 2004. [Cam2016] Camenisch, Jan, Manu Drijvers, and Anja Lehmann. \"Anonymous attestation using the strong diffie hellman assumption revisited.\" In Trust and Trustworthy Computing: 9<sup>th</sup> International Conference, TRUST 2016, Vienna, Austria, August 29-30, 2016, Proceedings 9, pp. 1-20. Springer International Publishing, 2016 [Clo2021] Cloudflare, Humanity wastes about 500 years per day on CAPTCHAs. It\u2019s time to end this madness, available at https://blog.cloudflare.com/introducing-cryptographic-attestation-of-personhood [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [ETSI_119476] ETSI TR 119 476 V1.2.1, Electronic Signatures and Trust  Infrastructures (ESI); Analysis of selective disclosure and zero-knowledge proofs applied to Electronic Attestation of Attributes [Fri2024] Matteo Frigo and abhi shelat, Anonymous credentials from ECDSA, Cryptology ePrint Archive, Paper 2024/2010, 2024, available at https://eprint.iacr.org/2024/2010 [Lav2016] Antoine Delignat-Lavaud, C\u00e9dric Fournet, Markulf Kohlweiss, and  Bryan Parno, \"Cinderella: Turning Shabby X.509 Certificates into Elegant Anonymous Credentials with the Magic of Verifiable Computation, IEEE Symposium on Security and Privacy, 2016 [Loo2025] Tobias Looker, Vasilis Kalos, Andrew Whitehead and  Mike Lodder, \"The BBS Signature Scheme,\" available at https://datatracker.ietf.org/doc/draft-irtf-cfrg-bbs-signatures/, 2025 [Ora2024] Nicolas Desmoulins, Antoine Dumanois, Seyni Kane, and Jacques Traor\u00e9, \u201cThe BBS# protocol\u201d, Technical Report, 2025 [Paq2024] Christian Paquin, Guru-Vamsi Policharla, and Greg Zaverucha, Crescent: Stronger Privacy for Existing Credentials, Cryptology ePrint Archive, Paper 2024/2013, 2024, available at https://eprint.iacr.org/2024/2013 [RiskRegister] Annex 1 to the Commission Implementing Regulation (EU) 2024/2981 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and the Council as regards the certification of European Digital Identity Wallets [Ros2023] Michael Rosenberg, Jacob White, Christina Garman, and Ian Miers, \"zk-creds: Flexible Anonymous Credentials from zkSNARKs and Existing Identity Infrastructure\", IEEE Symposium on Security and Privacy, 2023 [Topic_A] Discussion Paper for the European Digital Identity Cooperation Group regarding Topic A: Privacy risks and mitigation, version 1.0"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/","title":"I natural person representing another natural person","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#i-natural-person-representing-another-natural-person","title":"I - Natural person representing another natural person","text":"<p>Version 0.3, updated 30 April 2025</p> <p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for European Digital Identity Cooperation Group regarding Topic I - Natural person representing another natural person.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Outline the requirements how the Wallet will support the representation of another  natural person need to be clearly defined. Considerations about representing minors should be done.</p> <p>This paper focuses only in the case of a natural person representing another natural person and not in the case of a natural person representing a legal  person.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#12-key-words","title":"1.2 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#13-document-structure","title":"1.3 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 presents legal requirements for the representation of another  natural person.</li> <li>Chapter 3 discusses uses cases of a natural person representing another natural person, as well as attestation issuance, and attestation presentation for these use cases.</li> <li>Chapter 4 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#2-legal-requirements-for-representation-of-another-natural-person","title":"2. Legal requirements for representation of another natural person","text":"<p>Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [European Digital Identity Regulation] article 3, 1 states:</p> <p>\u201celectronic identification\u201d means the process of using person identification  data in electronic form uniquely representing either a natural or legal person,  or a natural person representing another natural person or a legal person</p> <p>Similarly, article 3, 3 states</p> <p>\u201cperson identification data\u201d means a set of data that is issued in accordance  with Union or national law and that enables the establishment of the identity of  a natural or legal person, or of a natural person representing another natural person  or a legal person.</p> <p>Additionally, article 3, 4 states</p> <p>\u201celectronic identification scheme\u201d means a system for electronic identification  under which electronic identification means are issued to natural or legal persons or natural persons representing other natural persons or legal persons</p> <p>Similarly, article 3, 5a states</p> <p>\u201cuser\u201d means a natural or legal person, or a natural person representing another natural  person or a legal person, that uses trust services or electronic identification means  provided in accordance with this Regulation.</p> <p>Article 5a, 5(f) of the same regulation states:</p> <p>ensure that the person identification data, which is available from the electronic  identification scheme under which the European Digital Identity Wallet is provided,  uniquely represents the natural person, legal person or the natural person representing  the natural or legal person, and is associated with that European Digital Identity Wallet</p> <p>Article 11a, 3c of the same regulation requires that the interoperability framework shall  consist of:</p> <p>[...] a reference to a minimum set of person identification data necessary to uniquely  represent a natural or legal person, or a natural person representing another natural person  or a legal person, which is available from electronic identification schemes</p> <p>Finally, ANNEX VI of the same regulation (MINIMUM LIST OF ATTRIBUTES) states:</p> <p>[...] 9. Powers and mandates to represent natural or legal persons</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#3-discussion","title":"3 Discussion","text":"<p>The European Digital Identity Framework [European Digital Identity Regulation] considers the representation of one natural person by another. </p> <p>One common use case is the legal representation of minors or individuals with  diminished legal capacity. For example parents or legal guardians should be empowered  to make decisions and act on behalf of their children and represent them when accessing  educational platforms, healthcare services, government benefits, or other services.  The EU Digital Identity Wallet should therefore accommodate such delegation in a secure,  verifiable manner.</p> <p>Another significant use case is the management of affairs for elderly or incapacitated  individuals. In these cases individuals can be assigned as legal representatives to  manage healthcare, financial, and personal matters.This could translate into a caregiver  or relative holding a proper delegation to, for instance, access health records or  submit applications for social care services on behalf of the person they represent.</p> <p>Power of attorney is another use case of a natural person (the agent) acting on  behalf of another natural person (the principal).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#31-attestation-issuance","title":"3.1 Attestation issuance","text":"<p>Based the regulation, it should be possible to issue an attestation for a natural  person to a legal representative. Rules for issuing an attestation to a legal representative SHALL be defined in the corresponding Rulebook according to the applicable national and european legislation.</p> <p>A PID or attestation issued to a legal representative SHALL be distinct from the  original issued to the natural person, and SHALL include information specifying  the nature of the representation. </p> <p>The European Digital Identity Framework [European Digital Identity Regulation], ANNEX VI states:</p> <p>Member States shall ensure that measures are taken to allow qualified trust service  providers of electronic attestations of attributes to verify by electronic means at  the request of the user, the authenticity of the following attributes against the  relevant authentic source at national level or via designated intermediaries  recognised at national level, in accordance with Union or national law and where these attributes rely on authentic sources within the public sector: </p> <p>[...] 9. Powers and mandates to represent natural or legal persons;</p> <p>Therefore, for certain use cases (e.g., parent-child relationship) a PID or  Attestation provider should be able to retrieve relevant information from  authentic sources at national level (or via designated intermediaries). However, in other use cases (e.g., power of attorney) the represented natural person may need to authorize a representative. </p> <p>To support such cases, mandates SHALL be managed through a distinct attestation type.  This mandate-specific attestation SHALL clearly define the operations the agent  is authorized to perform, thereby limiting the scope of its authorization.  Such an attestation SHALL be either short-lived or revocable.  In the case of revocable attestations, all entities which, according to applicable  law, must have the ability to revoke them SHALL be able to do so. Furthermore, high level requirements related to attestation revocation, defined in Annex 2 of ARF, are applicable to attestations corresponding to mandates.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#32-attestation-presentation","title":"3.2 Attestation Presentation","text":"<p>A natural person should be able to represent another natural person  when interacting with a Relying Party. The Relying Party SHALL always be aware that it interacts with a legal representative or an agent, either because this information is embedded in the corresponding PID or attestation, or because the corresponding Wallet Unit presents a mandate-specific attestation. In the case where the information is embedded,  it SHALL NOT be possible to hide the representation information contained in the PID  or attestation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#4-additions-and-changes-to-the-arf","title":"4 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#41-high-level-requirements-to-be-added-to-annex-2","title":"4.1 High-Level Requirements to be added to Annex 2","text":"<p>Requirement 1 If a PID or attestation for a natural person can be issued to a legal  representative, the corresponding Rulebook SHALL define the rules governing such  issuance. These rules SHALL comply with applicable legislation.</p> <p>Requirement 2 PID Providers and Attestation Providers SHALL ensure that PID or attestation issued  to a legal representative is distinct from the original issued to the natural person,  and it includes information specifying the nature of the representation. Wallet Units SHALL NOT hide this information from the Relying Parties.</p> <p>Requirement 3 The Commission SHALL create a Rulebook for attestations corresponding to mandates.  An attestation corresponding to a mandate SHALL be issued to the Wallet Unit of the agent and clearly define a validity period and the operations  the agent is authorized to perform, thereby limiting the scope of its authorization.</p> <p>Requirement 4 An Attestation Provider issuing attestations corresponding to mandates SHALL ensure  that either the attestations are short-lived or that all entities which, according  to applicable law, must have the ability to revoke such attestations are able to do so.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#42-high-level-requirements-to-be-changed","title":"4.2 High-Level Requirements to be changed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#43-descriptions-to-be-added-to-the-arf-main-document","title":"4.3 Descriptions to be added to the ARF main document","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/i-natural-person-representing-another-natural-person/#5-references","title":"5 References","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [Topic_A] Discussion Paper for the European Digital Identity Cooperation Group regarding Topic A: Privacy risks and mitigation, version 1.0"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/","title":"J wallet to wallet interactions","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#j-wallet-to-wallet-interactions","title":"J - Wallet to Wallet Interactions","text":"<p>Version 0.3, updated 12 May 2025</p> <p>GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic J: Wallet to Wallet Interactions.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Requirements for implementing wallet to wallet interactions need to be defined. Several mechanisms should be considered and revised when a Wallet Instance functions as a Relying Party, for example authentication and data protection.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#12-key-words","title":"1.2 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#13-document-structure","title":"1.3 Document structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to the Wallet to Wallet Interactions.</p> </li> <li> <p>Chapter 3 discusses a high-level use case for Wallet to Wallet Interactions. </p> </li> <li> <p>Chapter 4 presents the additions and changes that will be made to the ARF based upon this discussion paper.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#2-legal-requirements-for-wallet-to-wallet-interactions","title":"2 Legal Requirements for Wallet to Wallet Interactions","text":"<p>Multiple legal texts impose direct requirements for Wallet to Wallet Interactions: [CIR 2024/2982] and the [European Digital Identity Regulation]. </p> <p>This section recaps the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#21-european-digital-identity-regulation-about-wallet-to-wallet-interactions","title":"2.1 [European Digital Identity Regulation] about Wallet to Wallet Interactions","text":"<p>Article 5a European Digital Identity Wallets</p> <p>...4. European Digital Identity Wallets shall enable the user, in a manner that is user-friendly, transparent, and traceable by the user, to: </p> <p>... \u00a9 securely authenticate another person\u2019s European Digital Identity Wallet, and receive and share person identification data and electronic attestations of attributes in a secured way between the two European Digital Identity Wallets;... </p> <p>...5.   European Digital Identity Wallets shall, in particular:</p> <p>(a) support common protocols and interfaces:...</p> <p>... (vi) for interaction between two persons\u2019 European Digital Identity Wallets for the purpose of receiving, validating and sharing person identification data and electronic attestations of attributes in a secure manner;...</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#22-cir-20242982-about-wallet-to-wallet-interactions","title":"2.2 [CIR 2024/2982] about Wallet to Wallet Interactions","text":"<p>Article 3 General Provisions </p> <p>Regarding the protocols and interfaces referred to in Articles 4 and 5, wallet providers shall ensure that wallet units:...</p> <p>(2) authenticate and validate the wallet unit attestations of other wallet units where interacting with other wallet units;... (8) present wallet unit attestations of the wallet unit to wallet-relying parties or wallet units that request it;...</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#3-use-cases","title":"3 Use Cases","text":"<p>Below we present a use case derived from the legal requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#31-terminology","title":"3.1 Terminology","text":"<p>Below, we will use the following terminology. </p> Term Meaning Verifier An EUDI Wallet User that wishes to find out attested information about another EUDI Wallet user. Presenter An EUDI Wallet User that wishes to share attested information with another EUDI Wallet user. Suggested presentation request A description of the attested information, that a Presenter wishes to share with the Verifier. Presentation request A description of the attested information, that the Verifier wishes the Presenter to present. Presentation The attested information being sent from the Presenter to the Verifier."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#32-basic-use-case","title":"3.2 Basic Use Case","text":"<p>Wallet-to-Wallet interactions cover the use case, where a natural person, wishes to present a PID or (Q)EAA to another natural person, using their EUDI Wallets. Note that legal entities are not allowed to bypass the processes and rules governing Relying Parties using Wallet-to-Wallet Interactions between natural persons instead of presentations towards Relying Parties.</p> <p>We envision that the below use case could be used as basis for Wallet-to-Wallet interactions. As an example, the use case could occur in a setting where one private person wants to rent their car (the Verifier) to another private person (the Presenter), if the Presenter has a valid driving license:</p> <ol> <li>The two EUDI Wallet Users meet in physical proximity and agree (out of band of the EUDI Wallet system), that one (the Presenter) should present a specific PID (or other attestation), including what data fields, towards the other (the Verifier).</li> <li>Both users select Wallet-to-Wallet mode in their respective EUDI Wallet Unit UI and are asked to specify their role (Presenter or Verifier).</li> <li>The Presenter should be given an option suggesting which PID or Attestation (and which data fields) to share with the Verifier (i.e. produce a suggested presentation request).</li> <li>A handshake protocol is performed and a data connection is established between the two devices. This protocol also sends the suggested presentation request to the Verifier, if it was specified.</li> <li>If the Presenter specified a suggested presentation request in step 3, this is now displayed to the Verifier in the EUDI Wallet Unit UI. Based on this, the Verifier specifies, what PID or attestation (and which data fields) should be presented, in the Wallet-to-Wallet presentation, i.e. a presentation request. Note that the presentation request can be created from scratch if there was no suggested presentation request or it can contain all, or a subset, of the elements specified in the suggested presentation request.</li> <li>The presentation request and some information about the Verifier is sent to the Presenter </li> <li>The Presenter verifies the validity of the Verifier and is prompted to share their presentation with the Verifier (i.e. accept the presentation request). Note that the EUDI Wallet may automatically check if the presentation request matches the suggested presentation request created in step 3.</li> <li>If the Presenter approves the presentation on their EUDI Wallet, then a presentation is sent to the Verifier's EUDI Wallet Unit, along with some information allowing the Verifier to verify the validity of the Presenter's EUDI Wallet Unit.</li> <li>In the Verifier's EUDI Wallet Unit, the received presentation is verified and presented in the UI.</li> <li>The Verifier makes a decision (out of band of the EUDI Wallet system), based on the data presented in the EUDI Wallet Unit.</li> </ol> <p>Note the following:  * Step 2 ensures that both parties actively accepts that a local data connection should be established. * Step 4 established a local data connection. This could be done in multiple ways, e.g. by activating a BLE/NFC connection and/or by exchanging a QR code containing pairing information. During this step, the suggested presentation request must be transferred, if it was specified by the Presenter. * The mutual validation of the EUDI Wallet Units (the additional data sent in Steps 6 and 8), should follow the same approach as the presentation WUA. * Only Steps 2 to 9 are done within the EUDI Wallets: Steps 1 and 10 allow for additional actions to be taken and information to be exchanged out of band.  * If the Presenter or Verifier is offline, certain security checks (e.g. revocation) might not be possible. If this is the case, the user should be warned about the risks, but the flow should not be stopped.  * The UI must make it clear to the users that the Wallet-to-Wallet use case is only intended for natural persons and not replace the (normal) Relying Party use case. * A user-friendly UI is important in steps 3 and 5 (when users select what attributes to share/request).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#321-presenter-vs-verifier-driven-use-case","title":"3.2.1 Presenter vs. Verifier driven use case","text":"<p>In some use cases it may be most meaningful that the Presenter decides what information should be shared, whereas other use cases may require that the Verifier request certain information: </p> <p>On the Presenter end, Wallet Providers SHOULD support a Presenter driven use case, by offering the Presenter UI an option to choose which PID or (Q)EAA (and which data fields) to share with the Verifier. This choice is communicated as an optional suggested presentation request during the handshake protocol. If the Wallet Provider does not wish to support the Presenter driven use case, or if the Presenter wishes to let the Verifier specify the requested information, the suggested presentation request field of the handshake protocol is left empty.</p> <p>On the Verifier end, Wallet Providers MUST be able to handle a suggested presentation request in a meaningful way. The Verifier SHALL either: * Automatically transform the suggested presentation request to a presentation request and return it to the Presenter * Present the suggested presentation request to the User for accept. The User is allowed to remove elements from the suggestion, before it is returned to the Presenter as a presentation request. If no suggested presentation request was specified, the User is asked to select which PID or (Q)EAA (and which data fields) should be requested in the presentation request that is sent to the Presenter.</p> <p>The described approach ensures interoperability between different Wallet Units: Support for the Presenter driven use case is isolated to functionality on the Presenter Wallet Unit and is primarily related to the UI.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#33-measures-to-prevent-abuse-of-wallet-to-wallet-interactions","title":"3.3 Measures to Prevent Abuse of Wallet To Wallet Interactions","text":"<p>As stated in the previous section, legal entities are not allowed to bypass the processes and rules governing Relying Parties (i.e., being registered etc.), by using Wallet-to-Wallet Interactions between natural persons instead of presentations towards Relying Parties. </p> <p>This can be handled in different ways: - Remote Monitoring and Rate Limiting: The Wallet Provider could monitor the use of the Wallet Unit, detect suspicious patterns, and temporarily disable the feature if suspicious usage patterns were detected.  - On-device Rate Limiting: The Wallet Unit could locally monitor the use of the Wallet Unit, detect suspicious patterns, and temporarily disable the feature if suspicious usage patterns were detected. Also more simple rate-limiting could be applied locally.  - Remote Audit Log: The use of the Wallet to Wallet Interaction features could be logged to a log maintained by Wallet Providers. </p> <p>As there may be privacy concerns regarding Wallet Providers remotely monitoring the use of the Wallet Unit, on-device solutions are to be preferred. There are currently two suggested mitigations proposed to prevent abuse: - When the user is prompted to present PID or (Q)EAA, the user must be made aware that they are interacting with a natural person and not a legal entity. - Rate limiting is applied to the verification functionality. This makes the functionality less useful for high-volume use (e.g. legal entities abusing the functionality), without limiting the Presenter. - The presentation may only be available for the Verifier for a short duration, e.g. the EUDI Wallet may not permanently store the received presentation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#4-additions-and-changes-to-the-arf","title":"4 Additions and Changes to the ARF","text":"<p>Below we present the additions and changes that will be done to the high level requirements in the ARF. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#41-hlrs-for-wallet-to-wallet-interactions","title":"4.1 HLRs for Wallet to Wallet Interactions","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#411-requirements-for-functionality","title":"4.1.1 Requirements for Functionality","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-1","title":"Requirement 1","text":"<p>A Wallet Unit SHALL support an interface and protocol for, in close proximity to another Wallet Unit to:  - Establish a connection with the other Wallet Unit.</p> <p>Rationale: A Wallet Unit shall be able to take establish a connection with another Wallet Unit. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-2","title":"Requirement 2","text":"<p>A Wallet Unit SHALL support functionality for, using the connection established in Requirement 1 to:  - Receive PID and (Q)EAA presentation requests from the other Wallet Unit,  - Respond to such requests. </p> <p>Rationale: A Wallet Unit shall be able to take the role of a Presenter in a wallet to wallet interaction. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-3","title":"Requirement 3","text":"<p>A Wallet Unit SHOULD provide the User with the option, using a user-friendly UI, to suggest to the other Wallet Unit, which attributes it can include in a presentation request. If the User uses the functionality, the suggestion SHALL be transferred as part of the protocol mentioned in Requirement 1. </p> <p>Rationale: The Presenter shall be given the choice to select which attributes they want to share.  It should be easy for a Presenter to select which attributes it wishes to present.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-4","title":"Requirement 4","text":"<p>A Wallet Unit SHALL support functionality for, using the connection established in Requirement 1:  - Create and send PID and (Q)EAA presentation requests to the other Wallet Unit:  - If a suggestion for a presentation request is present, it SHALL be used to create the presentation request. The user MAY choose to only request a subset of the suggested attributes.  - If a suggestion for a presentation request is not present, the Wallet Unit SHALL allow the User to, using a user-friendly UI, specify which attributes to request in a presentation request. - Receive, validate, and present the corresponding presentation response to the user.</p> <p>Rationale: A Wallet Unit shall be able to take the role of a verifier in a wallet to wallet interaction. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#412-requirements-for-security","title":"4.1.2 Requirements for Security","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-5","title":"Requirement 5","text":"<p>If the Presenter makes a suggestion for a presentation request, then the Wallet Unit of the Verifier SHALL NOT allow the Verifier to include more attributes in their presentation request sent to the Presenter.</p> <p>Rationale: A Verifier shall not be allowed to ask the Presenter to disclose more information than what the Presenter originally intends to, but asking for less information is fine.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-6","title":"Requirement 6","text":"<p>A Wallet Unit SHALL only establish a connection with another Wallet Units if both Users of the Wallet Units take explicit actions to make this happen. In doing so, it SHALL be possible for the User to indicate which other device a connection is to be established with.</p> <p>Rationale: Connections between two Users' Wallet Units shall not be established unless desired by both Users.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-7","title":"Requirement 7","text":"<p>The Presenter Wallet Unit SHALL authenticate the User and obtain the User's approval, as specified in, before presenting requested attestations or attributes to another Wallet Unit. The Wallet Unit SHALL inform the User about the attributes that are being requested.</p> <p>Rationale: Disclosing personal information should only happen when an explicit consent is given by the user. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-8","title":"Requirement 8","text":"<p>The Verifier Wallet Unit SHALL authenticate its User and obtain the User's approval prior to requesting attestations presentation from another Wallet Unit.</p> <p>Rationale: As the Verifier will disclose some information as part of the presentation request, it should only happen when an explicit consent is given by the user. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-9","title":"Requirement 9","text":"<p>The Presenter Wallet Unit SHALL verify the validity of the Verifier Wallet Unit before presenting a received request to the User.</p> <p>Rationale: The Presenter must be sure that data is only presented to another EUDI Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-10","title":"Requirement 10","text":"<p>The Verifier Wallet Unit SHALL verify the validity of the Presenter Wallet Unit before presenting the received presentation to the user.</p> <p>Rationale: The Verifier must be sure that data originates from another EUDI Wallet Unit.</p> <p>Note that the this requirement is likely to be updated based upon the ongoing discussions about supporting presentation WUAs. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-11","title":"Requirement 11","text":"<p>The Presenter Wallet Unit SHALL make it clear to the user whether they are presenting to a Relying Party or another natural person's EUDI Wallet before the Presenter is to approve their presentation. The Presenter SHALL be advised to stop the presentation in case they were expecting to interact with a legal entity different from a natural person but are informed that the presentation will be towards a natural person. </p> <p>Rationale: To prevent abuse of the wallet to wallet functionality by other Relying Parties it is important that the Presenter is made aware that they are interacting with a natural person and not another legal entity in case they would expect to be interacting with another legal entity. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-12","title":"Requirement 12","text":"<p>Wallet Units SHALL only be able to receive at most 10 presentations per hour. </p> <p>Rationale: This is to prevent large-scale abuse of the wallet to wallet functionality by another legal entity than a natural person to relying on it.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-13","title":"Requirement 13","text":"<p>A Presenter Wallet Unit SHALL at most store the content of a received presentation for at most 5 minutes. After this time has passed it SHALL NOT be possible for the Presenter to recover the content of the presentation.</p> <p>Rationale: This requirements ensures that the Presenter obtains similar privacy guarantees to what they would have achieved by showing a physical card to another natural person. I.e., if no explicit actions are taken to store the (such as the Verifier taking a photo of the attributes), then the presentation is only ephemeral. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#413-misc-requirements","title":"4.1.3 Misc. Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#requirement-14","title":"Requirement 14","text":"<p>The Commission SHALL develop technical specifications for exchanging PIDs and attestations between two Wallet Units in accordance with the above HLRs. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#42-existing-hlrs-from-topic-30","title":"4.2 Existing HLRs from Topic 30","text":"<p>Below we list the HLRs that was previously established for the topic and provide a mapping to the new HLRs. </p> Index Requirement specification Mapping W2W_01 A Wallet Unit SHALL support an interface and protocol for: - Establishing a connection with another Wallet Unit, - Receiving PID and (Q)EAA presentation requests from another Wallet Unit, - Validating such requests, - Responding to such requests in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. Requirement 1. W2W_01a In addition to W2W_01, a Wallet Unit SHALL support an interface and protocol for: - Sending PID and (Q)EAA presentation requests to another Wallet Unit, - Receiving and validating the corresponding presentation response, in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. Requirement 2. W2W_02 The Commission SHALL develop technical specifications for exchanging PIDs and attestations between two Wallet Units in accordance with the technical specifications as defined by [OpenID4VP] and [ISO/IEC 18013-5]. Requirement 14. W2W_03 The Requester Wallet Unit SHALL authenticate its User prior to requesting the presentation of an attestation from another Wallet Unit. Requirement 8. W2W_04 The Requestee Wallet Unit SHALL request User approval, as specified in [Topic 6], before presenting requested attestations or attributes to another Wallet Unit. The Wallet Unit SHALL inform the User about the attributes that are being requested, and of the outcome of authentication and validation checks of the request and the requester. Requirement 7. W2W_05 The Requester Wallet Unit SHOULD have pre-defined a list of attributes of PID or attestations that can be requested from the Requestee Wallet Unit. Requirement 5. W2W_06 The Requestee Wallet Unit SHALL authenticate and validate the Requester Wallet Unit, ensuring the validity of the Requester Wallet Unit and the attribute request. Requirement 9. W2W_07 The Requester Wallet Unit SHALL display the received attributes to its User. Requirement 2."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/j-wallet-to-wallet-interactions/#5-references","title":"5 References","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0. [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR 2024/2982] Commission Implementing Regulation (EU) 2024/2982 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards protocols and interfaces to be supported by the European Digital Identity Framework"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/","title":"K combined presentation of attestations","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#k-combined-presentation-of-attestations","title":"K - Combined presentation of Attestations","text":"<p>Version 0.1, updated 7 May 2025</p> <p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for European Digital Identity Cooperation Group regarding Topic K - Combined presentation of Attestations</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Requirements for implementing \u201ccombined presentation\u201d need to be clearly defined.  Combined presentation involves a transaction in which a Relying Party requests  multiple attributes associated with the same User from various attestations  (PID and/or (Q)EAAs) in a single request and receives those attributes consolidated  in a single response. The goal for the Relying Party is to verify that all received  attributes belong to the same User.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#12-key-words","title":"1.2 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#13-document-structure","title":"1.3 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 presents legal requirements and High Level Requirements (HLRs) defined in the Annex 2 of the ARF for the combined presentation of Attestations.</li> <li>Chapter 3 details the topic and introduces discussion items</li> <li>Chapter 4 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#2-legal-requirements-and-existing-high-level-requirements","title":"2. Legal requirements and existing High Level Requirements","text":"<p>According to the [European Digital Identity Regulation], article 5a (4):</p> <p>European Digital Identity Wallets shall enable the user, in a manner that is user-friendly,  transparent, and traceable by the user, to: (a) securely request, obtain, select, combine, store, delete, share and present, under the sole  control of the user, person identification data and, where applicable, in combination with electronic  attestations of attributes, to authenticate to relying parties online and, where appropriate,  in offline mode, in order to access public and private services, while ensuring that selective disclosure  of data is possible; [...]</p> <p>Annex 2 of ARF includes the following High Level Requirements (HLRs) for to the combined presentation of Attestations:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#a-functional-requirements-for-ecosystem-components","title":"A. Functional requirements for ecosystem components","text":"Index Requirement specification ACP_01 Wallet Units SHALL support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_02 Relying Parties SHOULD support the features in [ISO18013-5] and/or [OpenID4VP] (as applicable) that allow requesting and releasing attributes from multiple attestations in a single request and response. ACP_04 If a Wallet Unit determines it must release multiple attestations to a Relying Party in a combined presentation of attributes, it SHOULD request a proof from the WSCA that the WSCA manages all of the private keys of these attestations. ACP_05 If, as a result of ACP_04, the Wallet Unit receives such a proof from the WSCA, it SHALL include this proof in the response message containing the combined presentation of attributes and send it to the Relying Party. ACP_06 If a Relying Party receives a combined presentation of attributes including a proof as meant in ACP_04, it SHOULD verify this proof to validate that the attestations in this presentation were issued to the same User."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#b-process-requirements","title":"B. Process requirements","text":"Index Requirement specification ACP_07 During issuance of an attestation, an Attestation Provider SHOULD be able to request that the private key for the new attestation is managed by the same WSCD as the private key of a PID or another attestation already existing on the Wallet Unit, provided that the Attestation Provider has verified during the issuance process that the new attestation indeed belongs to the User of that existing PID or attestation. ACP_08 When receiving a combined presentation of attributes, a Relying Party SHOULD NOT refuse the attestations solely because a proof as meant in ACP_04 is absent."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#c-miscellaneous","title":"C. Miscellaneous","text":"Index Requirement specification ACP_09 The common [ISO18013-5] and [OpenID4VP] protocols, or an EUDI Wallet-specific extension or profile thereof, SHALL enable a Wallet Unit to transfer a proof as meant in ACP_04 to a Relying Party. The Commission SHALL take measures to ensure that this is the case."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#3-discussion","title":"3. Discussion","text":"<p>The concept of combined presentation refers to a process where a Relying Party  requests multiple attributes concerning a single User, drawn from separate attestations  (e.g., PID and/or (Q)EAAs), and receives a consolidated, verified response. The key  functional goal is to enable the Relying Party to confirm that all presented attributes  genuinely pertain to the same User without  compromising trust, privacy, or data integrity.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#31-use-cases","title":"3.1 Use Cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#real-world-use-cases-for-combined-presentation","title":"Real-World Use Cases for Combined Presentation","text":"<p>Scenarios where a User is asked to present different attributes from various  physical documents are common in the real world\u2014and are also relevant in the digital domain.  These scenarios can be addressed more efficiently through combined presentation  allowing a Relying Party to receive a consolidated set of attributes  from different attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#university-admissions","title":"University Admissions","text":"<p>A university evaluating prospective students may request a digital presentation containing:</p> <ul> <li>Personal identification (from a PID),</li> <li>Academic credentials (from diploma or qualification attestations),</li> <li>Work or research experience (from employment attestations or other EAAs).</li> </ul> <p>These attributes typically originate from different issuers and must be validated as  belonging to the same applicant. A combined presentation enables the university to  efficiently pre-screen candidates based on custom admission criteria, while avoiding  the processing of unnecessary data.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#professional-licensing","title":"Professional Licensing","text":"<p>A regulatory body responsible for licensing professionals (e.g., doctors, lawyers, engineers) may require a presentation that includes:</p> <ul> <li>Proof of identity (PID),</li> <li>Professional degrees and certifications (from educational authorities),</li> <li>Proof of prior licensure or work experience (from previous employers or licensing bodies).</li> </ul> <p>By accepting a combined presentation, the authority can streamline application reviews  while ensuring all data belongs to the same applicant, supported by secure bindings  across attestations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#rental-or-loan-applications","title":"Rental or Loan Applications","text":"<p>When applying for a loan or renting a property, a service provider may request attributes such as:</p> <ul> <li>Identity verification (from PID),</li> <li>Proof of income or employment (from employer attestations),</li> <li>Creditworthiness or financial history (from financial institutions or credit bureaus).</li> </ul> <p>These data points are usually dispersed across documents and issuers. Combined presentation  allows the User to share only the required attributes in a secure, verifiable,  and privacy-preserving way\u2014simplifying onboarding while reducing the risk of fraud  or misrepresentation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#32-identity-matching","title":"3.2 Identity Matching","text":"<p>A preliminary requirement for the combined presentation of attestations is  identity matching. The Relying Party shall be able to verify that all attributes  included in the presentation originate from attestations that refer to the same  entity. Without such a mechanism, there is a risk of malicious combinations; for example,  using a valid facial image from one User together with another person's <code>\"age over 18\"</code>  attribute could enable fraud or unauthorized access.</p> <p>High-Level Requirement ACP_04 of Annex 2 in the ARF mandates that Wallet Solutions  support cryptographic binding of attestations to ensure that the WSCA manages  all of the private keys of these attestations. However, other mechanisms may also be employed to support identity matching, including:</p> <ul> <li>Relying Party-Specific Identifiers: Unique identifiers assigned by the  Relying Party\u2014such as customer or contract numbers\u2014can serve as a means of  linking multiple attestations to the same User.</li> <li>Attribute-Based Binding: Attestations may share a common unique identifier (e.g., PID number).</li> </ul> <p>Question 1 Is ACP_04 enough?  Note ACP_04 should be considered in conjunction with ACP_07. Relying solely on  cryptographic binding,  may not be sufficient if a User stores in their Wallet Unit  an attestation that actually belongs to another individual. In such cases, cryptographic  binding alone could still allow malicious combinations of attributes. Therefore,  it may be necessary to extend ACP_04. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#33-security-consideration","title":"3.3 Security consideration","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#policies-for-including-attributes","title":"Policies for Including Attributes","text":"<p>Each attestation may have its own Embedded Disclosure Policy. In parallel, the Relying Party Registration Certificate may grant different access rights  to different types of attestations.  When a Relying Party requests a combined presentation containing attributes from  multiple attestations, the strictest applicable policy must prevail. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#validity-of-combined-presentation","title":"Validity of Combined Presentation","text":"<p>The validity period of a combined presentation shall be determined by the  minimum validity of the individual attestations whose attributes are included. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#privacy-considerations","title":"Privacy Considerations","text":"<p>Although individual attributes may not be personally identifying or trackable on  their own, their combination across attestations may create a unique tracking vector. </p> <p>Question 2 Are there other security issues that should be explicitly addressed?</p> <p>Question 3 How can the privacy risks from attribute combinations be mitigated?</p> <p>Question 4  These considerations are implied but not explicitly considered in Topic 18.  Should a related requirement be introduced?</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#4-additions-and-changes-to-the-arf","title":"4 Additions and changes to the ARF","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#41-high-level-requirements-to-be-added-to-annex-2","title":"4.1 High-Level Requirements to be added to Annex 2","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#42-high-level-requirements-to-be-changed","title":"4.2 High-Level Requirements to be changed","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#43-descriptions-to-be-added-to-the-arf-main-document","title":"4.3 Descriptions to be added to the ARF main document","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/k-combined-presentation-of-attestations/#5-references","title":"5 References","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v0.91, final draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/","title":"L+m data deletion and dpa complaint","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#lm-requesting-erasure-of-personal-data-at-a-wallet-relying-party-and-lodging-a-complaint-with-the-competent-data-protection-supervisory-authority","title":"L+M - Requesting erasure of personal data at a wallet-relying party and lodging a complaint with the competent data protection supervisory authority","text":"<p>Version 0.3, created 14 April 2025</p> <p>GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>The present discussion paper discusses how a wallet user can use her wallet unit to request the  erasure of personal data at a wallet-relying party and for lodging a complaint with the competent  data protection supervisory authority. </p> <p>The present paper builds upon and recalls (see clause 3)  the existing high level requirements from Topic 48 (Blueprint for requesting data deletion to Relying Parties) and Topic 50 (Blueprint to report unlawful or suspicious request of data), before it  discusses these topics in clause 4 and clause 5. </p> <p>The result of the discussions documented in the present paper is the updated set of high level requirements as laid down in clause 6.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>Risks considered in Topic_A are also applicable here and additional risks may be added in this discussion paper, if this turns out to be necessary.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#14-relevant-definitions-and-requirements-from-eu-2016679","title":"1.4 Relevant definitions and requirements from (EU) 2016/679","text":"<p>Article 2 (4) of (EU) No 910/2014 stipulates that this regulation is without prejudice to the  ''General Data Protection Regulation'' (GDPR) (EU) 2016/679 and hence it seems to be appropriate to recall  the most relevant stipulations from GDPR here. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#141-definitions-from-eu-2016679","title":"1.4.1 Definitions from (EU) 2016/679","text":"<p>Article 4 of (EU) 2016/679 in particular contains the following definitions: </p> <p>(1) \u2018personal data\u2019 means any information relating to an identified or identifiable natural person (\u2018data subject\u2019); an identifiable natural person is one who can be identified, directly or indirectly, in particular by reference to an identifier such as a name, an identification number, location data, an online identifier or to one or more factors specific to the physical, physiological, genetic, mental, economic, cultural or social identity of that natural person;</p> <p>(2) \u2018processing\u2019 means any operation or set of operations which is performed on personal data or on sets of personal data, whether or not by automated means, such as collection, recording, organisation, structuring, storage, adaptation or alteration, retrieval, consultation, use, disclosure by transmission, dissemination or otherwise making available, alignment or combination, restriction, erasure or destruction;</p> <p>(3) \u2018restriction of processing\u2019 means the marking of stored personal data with the aim of limiting their processing in the future;</p> <p>(5) \u2018pseudonymisation\u2019 means the processing of personal data in such a manner that the personal data can no longer be attributed to a specific data subject without the use of additional information, provided that such additional information is kept separately and is subject to technical and organisational measures to ensure that the personal data are not attributed to an identified or identifiable natural person;</p> <p>(6) \u2018filing system\u2019 means any structured set of personal data which are accessible according to specific criteria, whether centralised, decentralised or dispersed on a functional or geographical basis;</p> <p>(7) \u2018controller\u2019 means the natural or legal person, public authority, agency or other body which, alone or jointly with others, determines the purposes and means of the processing of personal data; where the purposes and means of such processing are determined by Union or Member State law, the controller or the specific criteria for its nomination may be provided for by Union or Member State law;</p> <p>(8) \u2018processor\u2019 means a natural or legal person, public authority, agency or other body which processes personal data on behalf of the controller;</p> <p>(9) \u2018recipient\u2019 means a natural or legal person, public authority, agency or another body, to which the personal data are disclosed, whether a third party or not. However, public authorities which may receive personal data in the framework of a particular inquiry in accordance with Union or Member State law shall not be regarded as recipients; the processing of those data by those public authorities shall be in compliance with the applicable data protection rules according to the purposes of the processing;</p> <p>(10) \u2018third party\u2019 means a natural or legal person, public authority, agency or body other than the data subject, controller, processor and persons who, under the direct authority of the controller or processor, are authorised to process personal data;</p> <p>(11) \u2018consent\u2019 of the data subject means any freely given, specific, informed and unambiguous indication of the data subject's wishes by which he or she, by a statement or by a clear affirmative action, signifies agreement to the processing of personal data relating to him or her;</p> <p>(12) \u2018personal data breach\u2019 means a breach of security leading to the accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to, personal data transmitted, stored or otherwise processed;</p> <p>(21) \u2018supervisory authority\u2019 means an independent public authority which is established by a Member State pursuant to Article 51;</p> <p>(22) 'supervisory authority concerned\u2019 means a supervisory authority which is concerned by the processing of personal data because:</p> <p>(a) the controller or processor is established on the territory of the Member State of that supervisory authority;</p> <p>(b) data subjects residing in the Member State of that supervisory authority are substantially affected or likely to be substantially affected by the processing; or</p> <p>\u00a9 a complaint has been lodged with that supervisory authority;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#142-requirements-from-eu-2016679","title":"1.4.2 Requirements from (EU) 2016/679","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-5-principles-relating-to-processing-of-personal-data","title":"Article 5 (Principles relating to processing of personal data)","text":"<p>Article 5 Nr. 1 of (EU) 2016/679 requires that personal data  shall be:</p> <p>(a) processed lawfully, fairly and in a transparent manner in relation to the data subject (\u2018lawfulness, fairness and transparency\u2019);</p> <p>(b) collected for specified, explicit and legitimate purposes and not further processed in a manner that is incompatible with those purposes; further processing for archiving purposes in the public interest, scientific or historical research purposes or statistical purposes shall, in accordance with Article 89(1), not be considered to be incompatible with the initial purposes (\u2018purpose limitation\u2019);</p> <p>\u00a9 adequate, relevant and limited to what is necessary in relation to the purposes for which they are processed (\u2018data minimisation\u2019);</p> <p>(d) accurate and, where necessary, kept up to date; every reasonable step must be taken to ensure that personal data that are inaccurate, having regard to the purposes for which they are processed, are erased or rectified without delay (\u2018accuracy\u2019);</p> <p>(e) kept in a form which permits identification of data subjects for no longer than is necessary for the purposes for which the personal data are processed; personal data may be stored for longer periods insofar as the personal data will be processed solely for archiving purposes in the public interest, scientific or historical research purposes or statistical purposes in accordance with Article 89(1) subject to implementation of the appropriate technical and organisational measures required by this Regulation in order to safeguard the rights and freedoms of the data subject (\u2018storage limitation\u2019);</p> <p>(f) processed in a manner that ensures appropriate security of the personal data, including protection against unauthorised or unlawful processing and against accidental loss, destruction or damage, using appropriate technical or organisational measures (\u2018integrity and confidentiality\u2019).</p> <p>Article 5 Nr. 2 of (EU) 2016/679 stipulates the following:</p> <ol> <li>The controller shall be responsible for, and be able to demonstrate compliance with, paragraph 1 (\u2018accountability\u2019).</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-11-processing-which-does-not-require-identification","title":"Article 11 (Processing which does not require identification)","text":"<p>Article 11 of (EU) 2016/679 stipulates the following:</p> <ol> <li> <p>If the purposes for which a controller processes personal data do not or do no longer require the identification of a data subject by the controller, the controller shall not be obliged to maintain, acquire or process additional information in order to identify the data subject for the sole purpose of complying with this Regulation.</p> </li> <li> <p>Where, in cases referred to in paragraph 1 of this Article, the controller is able to demonstrate that it is not in a position to identify the data subject, the controller shall inform the data subject accordingly, if possible. In such cases, Articles 15 to 20 shall not apply except where the data subject, for the purpose of exercising his or her rights under those articles, provides additional information enabling his or her identification.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-17-right-to-erasure-right-to-be-forgotten","title":"Article 17 (Right to erasure (\u2018right to be forgotten\u2019))","text":"<p>Article 17 of (EU) 2016/679 stipulates the following:</p> <ol> <li> <p>The data subject shall have the right to obtain from the controller the erasure of personal data concerning him or her without undue delay and the controller shall have the obligation to erase personal data without undue delay where one of the following grounds applies:</p> <p>(a) the personal data are no longer necessary in relation to the purposes for which they were collected or otherwise processed;</p> <p>(b) the data subject withdraws consent on which the processing is based according to point (a) of Article 6(1), or point (a) of Article 9(2), and where there is no other legal ground for the processing;</p> <p>\u00a9 the data subject objects to the processing pursuant to Article 21(1) and there are no overriding legitimate grounds for the processing, or the data subject objects to the processing pursuant to Article 21(2);</p> <p>(d) the personal data have been unlawfully processed;</p> <p>(e) the personal data have to be erased for compliance with a legal obligation in Union or Member State law to which the controller is subject;</p> <p>(f) the personal data have been collected in relation to the offer of information society services referred to in Article 8(1).</p> </li> <li> <p>Where the controller has made the personal data public and is obliged pursuant to paragraph 1 to erase the personal data, the controller, taking account of available technology and the cost of implementation, shall take reasonable steps, including technical measures, to inform controllers which are processing the personal data that the data subject has requested the erasure by such controllers of any links to, or copy or replication of, those personal data.</p> </li> <li> <p>Paragraphs 1 and 2 shall not apply to the extent that processing is necessary:</p> <p>(a) for exercising the right of freedom of expression and information;</p> <p>(b) for compliance with a legal obligation which requires processing by Union or Member State law to which the controller is subject or for the performance of a task carried out in the public interest or in the exercise of official authority vested in the controller;</p> <p>\u00a9 for reasons of public interest in the area of public health in accordance with points (h) and (i) of Article 9(2) as well as Article 9(3);</p> <p>(d) for archiving purposes in the public interest, scientific or historical research purposes or statistical purposes in accordance with Article 89(1) in so far as the right referred to in paragraph 1 is likely to render impossible or seriously impair the achievement of the objectives of that processing; or</p> <p>(e) for the establishment, exercise or defence of legal claims.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-24-responsibility-of-the-controller","title":"Article 24 (Responsibility of the controller)","text":"<p>Article 24 of (EU) 2016/679 stipulates the following:</p> <ol> <li> <p>Taking into account the nature, scope, context and purposes of processing as well as the risks of varying likelihood and severity for the rights and freedoms of natural persons, the controller shall implement appropriate technical and organisational measures to ensure and to be able to demonstrate that processing is performed in accordance with this Regulation. Those measures shall be reviewed and updated where necessary.</p> </li> <li> <p>Where proportionate in relation to processing activities, the measures referred to in paragraph 1 shall include the implementation of appropriate data protection policies by the controller.</p> </li> <li> <p>Adherence to approved codes of conduct as referred to in Article 40 or approved certification mechanisms as referred to in Article 42 may be used as an element by which to demonstrate compliance with the obligations of the controller.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-28-processor","title":"Article 28 (Processor)","text":"<p>Article 28 of (EU) 2016/679 stipulates the following: </p> <ol> <li>Where processing is to be carried out on behalf of a controller, the controller shall use only processors providing sufficient guarantees to implement appropriate technical and organisational measures in such a manner that processing will meet the requirements of this Regulation and ensure the protection of the rights of the data subject.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-31-cooperation-with-the-supervisory-authority","title":"Article 31 (Cooperation with the supervisory authority)","text":"<p>Article 31 of (EU) 2016/679 stipulates the following:</p> <p>The controller and the processor and, where applicable, their representatives, shall cooperate, on request, with the supervisory authority in the performance of its tasks.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-32-security-of-processing","title":"Article 32 (Security of processing)","text":"<p>Article 32 of (EU) 2016/679 stipulates the following:</p> <ol> <li>Taking into account the state of the art, the costs of implementation and the nature, scope, context and purposes of processing as well as the risk of varying likelihood and severity for the rights and freedoms of natural persons, the controller and the processor shall implement appropriate technical and organisational measures to ensure a level of security appropriate to the risk, including inter alia as appropriate:</li> </ol> <p>(a) the pseudonymisation and encryption of personal data;</p> <p>(b) the ability to ensure the ongoing confidentiality, integrity, availability and resilience of processing systems and services;</p> <p>\u00a9 the ability to restore the availability and access to personal data in a timely manner in the event of a physical or technical incident;</p> <p>(d) a process for regularly testing, assessing and evaluating the effectiveness of technical and organisational measures for ensuring the security of the processing.</p> <ol> <li>In assessing the appropriate level of security account shall be taken in particular of the risks that are presented by processing, in particular from accidental or unlawful destruction, loss, alteration, unauthorised disclosure of, or access to personal data transmitted, stored or otherwise processed.</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-40-codes-of-conduct","title":"Article 40 (Codes of conduct)","text":"<p>Article 40 of (EU) 2016/679 stipulates the following:</p> <ol> <li> <p>The Member States, the supervisory authorities, the Board and the Commission shall encourage the drawing up of codes of conduct intended to contribute to the proper application of this Regulation, taking account of the specific features of the various processing sectors and the specific needs of micro, small and medium-sized enterprises.</p> </li> <li> <p>Associations and other bodies representing categories of controllers or processors may prepare codes of conduct, or amend or extend such codes, for the purpose of specifying the application of this Regulation, such as with regard to:</p> </li> </ol> <p>(a) fair and transparent processing;</p> <p>(b) the legitimate interests pursued by controllers in specific contexts;</p> <p>\u00a9 the collection of personal data;</p> <p>(d) the pseudonymisation of personal data;</p> <p>(e) the information provided to the public and to data subjects;</p> <p>(f) the exercise of the rights of data subjects;</p> <p>(g) the information provided to, and the protection of, children, and the manner in which the consent of the holders of parental responsibility over children is to be obtained;</p> <p>(h) the measures and procedures referred to in Articles 24 and 25 and the measures to ensure security of processing referred to in Article 32;</p> <p>(i) the notification of personal data breaches to supervisory authorities and the communication of such personal data breaches to data subjects;</p> <p>(j) the transfer of personal data to third countries or international organisations; or</p> <p>(k) out-of-court proceedings and other dispute resolution procedures for resolving disputes between controllers and data subjects with regard to processing, without prejudice to the rights of data subjects pursuant to Articles 77 and 79.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-51-supervisory-authority","title":"Article 51 (Supervisory authority)","text":"<p>Article 51 of (EU) 2016/679 stipulates the following: </p> <ol> <li>Each Member State shall provide for one or more independent public authorities to be responsible for monitoring the application of this Regulation, in order to protect the fundamental rights and freedoms of natural persons in relation to processing and to facilitate the free flow of personal data within the Union (\u2018supervisory authority\u2019).</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-57-tasks","title":"Article 57 (Tasks)","text":"<p>Article 57 of (EU) 2016/679 stipulates the following:</p> <ol> <li>Without prejudice to other tasks set out under this Regulation, each supervisory authority shall on its territory:</li> </ol> <p>[...]</p> <p>(f) handle complaints lodged by a data subject, or by a body, organisation or association in accordance with Article 80, and investigate, to the extent appropriate, the subject matter of the complaint and inform the complainant of the progress and the outcome of the investigation within a reasonable period, in particular if further investigation or coordination with another supervisory authority is necessary;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-77-right-to-lodge-a-complaint-with-a-supervisory-authority","title":"Article 77 (Right to lodge a complaint with a supervisory authority))","text":"<p>Article 77 of (EU) 2016/679 stipulates the following:</p> <ol> <li> <p>Without prejudice to any other administrative or judicial remedy, every data subject shall have the right to lodge a complaint with a supervisory authority, in particular in the Member State of his or her habitual residence, place of work or place of the alleged infringement if the data subject considers that the processing of personal data relating to him or her infringes this Regulation.</p> </li> <li> <p>The supervisory authority with which the complaint has been lodged shall inform the complainant on the progress and the outcome of the complaint including the possibility of a judicial remedy pursuant to Article 78.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#15-relevant-requirements-from-eu-no-9102014","title":"1.5 Relevant requirements from (EU) No 910/2014","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-5a-4-access-log-and-common-dashboard","title":"Article 5a (4) (access log and common dashboard)","text":"<p>Article 5a (4) of the regulation (EU) No 910/2014 stipulates the following:</p> <p>European Digital Identity Wallets shall enable the user, in a manner that is userfriendly, transparent, and traceable by the user, to: </p> <p>[...]</p> <p>(d) access a log of all transactions carried out through the European Digital Identity Wallet via a common dashboard enabling the user to:</p> <p>(i) view an up-to-date list of relying parties with which the user has established a connection and, where applicable, all data exchanged;</p> <p>(ii) easily request the erasure by a relying party of personal data pursuant to Article 17 of the Regulation (EU) 2016/679;</p> <p>(iii) easily report a relying party to the competent national data protection authority, where an allegedly unlawful or suspicious request for data is received;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-5a-5-common-protocols-and-interfaces","title":"Article 5a (5) (common protocols and interfaces)","text":"<p>Article 5a (5) of the regulation (EU) No 910/2014 stipulates the following:</p> <p>European Digital Identity Wallets shall, in particular:</p> <p>(a) support common protocols and interfaces:</p> <p>[...]</p> <p>(ix) for requesting a relying party the erasure of personal data pursuant to Article 17 of Regulation (EU) 2016/679;</p> <p>(x) for reporting a relying party to the competent national data protection authority where an allegedly unlawful or suspicious request for data is received;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-5f-4-codes-of-conduct","title":"Article 5f (4) (codes of conduct)","text":"<p>Article 5f (4) of the regulation (EU) No 910/2014 stipulates the following:</p> <p>(4) In cooperation with Member States, the Commission shall facilitate the development of codes of conduct in close  collaboration with all relevant stakeholders, including civil society, in order to contribute to the wide availability and usability of European Digital Identity Wallets within the scope of this Regulation, and to encourage service providers  to complete the development of codes of conduct.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#16-relevant-definitions-and-requirements-from-the-implementing-act-eu-20242982","title":"1.6 Relevant definitions and requirements from the implementing act (EU) 2024/2982","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#161-definitions-from-eu-20242982","title":"1.6.1 Definitions from (EU) 2024/2982","text":"<p>Article 2 of (EU) 2024/2982 in particular contains the following definitions:</p> <p>(1) \u2018wallet-relying party\u2019 means a relying party that intends to rely upon wallet units for the provision of public or private services by means of digital interaction;</p> <p>(2) \u2018wallet user\u2019 means a user who is in control of the wallet unit;</p> <p>(3) \u2018wallet solution\u2019 means a combination of software, hardware, services, settings, and configurations, including wallet instances, one or more wallet secure cryptographic applications and one or more wallet secure cryptographic devices;</p> <p>(4) \u2018wallet unit\u2019 means a unique configuration of a wallet solution that includes wallet instances, wallet secure cryptographic applications and wallet secure cryptographic devices provided by a wallet provider to an individual wallet user;</p> <p>(5) \u2018wallet provider\u2019 means a natural or legal person who provides wallet solutions;</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#162-requirements-from-eu-20242982","title":"1.6.2 Requirements  from (EU) 2024/2982","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-6-communication-of-data-erasure-requests","title":"Article 6 (Communication of data erasure requests)","text":"<p>Article 6 of (EU) 2024/2982 stipulates the following:</p> <ol> <li> <p>Wallet providers shall ensure that wallet units support protocols and interfaces allowing wallet users to request from wallet-relying parties, with whom they have interacted through those wallet units, the erasure of their personal data provided through those wallet units, in accordance with Article 17 of Regulation (EU) 2016/679.</p> </li> <li> <p>The protocols and interfaces referred to in paragraph 1 shall allow wallet users to select the wallet-relying parties to which data erasure requests are to be submitted.</p> </li> <li> <p>Wallet units shall display to the wallet user previously submitted data erasure requests made through those wallet units.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#article-7-reporting-of-wallet-relying-parties-to-supervisory-authorities-established-under-article-51-of-regulation-eu-2016679","title":"Article 7 (Reporting of wallet-relying parties to supervisory authorities established under Article 51 of Regulation (EU) 2016/679)","text":"<p>Article 7 of (EU) 2024/2982 stipulates the following:</p> <ol> <li> <p>Wallet providers shall ensure that wallet units allow wallet users to easily report wallet-relying parties to supervisory authorities established under Article 51 of Regulation (EU) 2016/679.</p> </li> <li> <p>Wallet providers shall implement the protocols and interfaces for reporting wallet-relying parties in compliance with national procedural laws of the Member States.</p> </li> <li> <p>Wallet providers shall ensure that wallet units allow wallet users to substantiate the reports, including by attaching relevant information to identify the wallet-relying parties, and the wallet users\u2019 claims in machine-readable format.</p> </li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#17-document-structure","title":"1.7 Document structure","text":"<p>This document is structured as follows:</p> <ul> <li>Chapter 2 provides an overview of the two topics to be discussed within the present document.   </li> <li>Chapter 3 recalls the previously existing high-level requirements for the two topics.  </li> <li>Chapter 4 discusses topics related to requesting the erasure of personal data at a wallet-relying party.</li> <li>Chapter 5 discusses topics related to reporting a wallet-relying party at the competent data protection supervisory authority. </li> <li>Chapter 6 lists the resulting set of high level requirements for the two topics after discussion with experts from the EU Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#2-overview","title":"2. Overview","text":"<p>According to Article 5a (a) of Regulation (EU) No 910/2014 a wallet solution shall support common protocols and interfaces for</p> <ul> <li>(ix) requesting a relying party to erase the personal data stored at a wallet-relying party pursuant to Article 17 of Regulation   (EU) 2016/679 and</li> <li>(x) reporting a relying party to the competent national data protection authority where  an allegedly unlawful or suspicious request for data is received.</li> </ul> <p>The present document discusses topics related to these protocols and interfaces, as outlined in the following figure. </p> <p></p> <p>Note: The discussion with the experts from the EU Member States soon revealed, that  one may safely assume that there are already suitable processes in place for both processes addressed within the  present document.</p> <p>Therefore, the overall strategy of the present document is to utilise the existing interfaces  and processes of the relying parties and supervisory authorities as much as possible and abstain from the creation of additional interfaces to wallet-relying parties and supervisory authorities.    </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#3-recalling-the-previously-existing-high-level-requirements","title":"3. Recalling the previously existing High-Level Requirements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#31-existing-high-level-requirements-specified-in-topic-48","title":"3.1 Existing High-Level Requirements specified in Topic 48","text":"<p>The following high-level requirements have been specified in Topic 48 before starting the present discussion:</p> Index Requirement specification DATA_DLT_01 A Wallet Provider SHALL ensure that its Wallet Units support the technical specifications mentioned in DATA_DLT_02, allowing a User to request from a Relying Party the erasure of their attributes that were presented by that Wallet Unit to that Relying Party, in accordance with Regulation (EU) 2016/679. DATA_DLT_02 The Commission SHALL, in cooperation with the Member States, develop technical specifications for a Wallet Unit interface allowing a Wallet Unit to send attribute deletion requests to Relying Parties with whom it has interacted in the past. DATA_DLT_03 A Wallet Instance SHALL provide a function where the User may select one Relying Party or multiple Relying Parties for which an attribute deletion request must be submitted. DATA_DLT_04 A Wallet Instance SHALL be able to display the attribute deletion requests previously submitted through the Wallet Unit. DATA_DLT_05 A Wallet Unit SHALL include attribute deletion requests in a log so they can be presented to the User via the dashboard (as specified in Topic 19). DATA_DLT_06 The log SHALL include as a minimum: - Date of attribute deletion request, - Relying Party to which the request was made, - Attributes requested to be removed."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#32-existing-high-level-requirements-specified-in-topic-50","title":"3.2 Existing High-Level Requirements specified in Topic 50","text":"<p>The following high-level requirements have been specified in Topic 50 before starting the discussion:</p> Index Requirement specification RPT_DPA_01 A Wallet Unit SHALL provide an interface to lodge a complaint of suspicious Relying Party presentation requests to the DPA of the Member State that provided the Wallet Unit. RPT_DPA_02 The User interface enabling a User to start the process of lodging a complaint SHALL be accessible via the Wallet Instance. RPT_DPA_03 A Wallet Provider SHALL implement the interface in compliance with national procedural law and administrative practices. RPT_DPA_04 A Wallet Unit SHALL enable the lodged complaint to be substantiated, including information to identify the Relying Party, their presentation request, and the User's allegation. RPT_DPA_05 A Wallet Unit SHALL keep reports sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19)."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#4-erasure-of-personal-data-at-a-wallet-relying-party","title":"4. Erasure of personal data at a wallet-relying party","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#41-discussions-related-to-data_dlt_01-and-data_dlt_02","title":"4.1 Discussions related to DATA_DLT_01 and DATA_DLT_02","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to DATA_DLT_01 and DATA_DLT_02 have been discussed:</p> <p>1) The wording \"in accordance with Regulation (EU) 2016/679\" in DATA_DLT_01 leaves    room for interpretation what exactly is meant here. Therefore the    text should better be changed to \"in accordance with Article 17 of Regulation (EU) 2016/679\".</p> <p>The resulting requirement DATA_DLT_01 is hence specified as follows, whereas the changes are marked as bold:</p> <p>A Wallet Provider SHALL ensure that its Wallet Units support the technical specifications mentioned in  DATA_DLT_02, allowing a User to request from a Relying Party the erasure of their attributes that were  presented by that Wallet Unit to that Relying Party, in accordance with Article 17 of Regulation (EU) 2016/679.</p> <p>2) During the discussions it was mentioned that one may assume that relying parties, which act as processors or controllers    already have procedures, protocols and interfaces in place to handle data deletion requests in accordance    with regulation (EU) 2016/679. There was a consensus among the participants in the discussion, that the wallet unit should simply    re-use the already existing interfaces offered by the wallet-relying parties. As there are no standardised protocols    and interfaces for this purpose (yet), this implies that the wallet unit can only    offer to open an external mail client with a suitable template text or offer to open a specific URL with an    external browser to ask for the deletion of data in a web form provided by the wallet-relying party. It was suggested,    that the registration certificate should contain the necessary contact information of the wallet-relying party,     including an email address or the location of a web form for privacy-related enquiries.</p> <p>3) It was also discussed that the details of the handling of the data deletion request is    within the responsibility of the wallet-relying party in its role as controller, or processor    acting on behalf of a controller. According to Article 24 of (EU) 2016/679 the controller is responsible for    the implementation of suitable technical and organisational measures for the protection of personal data in    line with Article 32 of (EU) 2016/679, which obviously includes the requirement to authenticate the user, which    submits a data deletion request, or the request itself using an appropriate electronic signature.    The technical details for this authentication procedure are however within the responsibility of the    wallet-relying party, acting as controller or processor. </p> <p>It seems that the Commission and the EU Member States can only  encourage and facilitate the development of appropriate codes of conducts for wallet-relying parties according to    Article 5f of (EU) No. 910/2014 and Article 40 of (EU) 2016/679, which could include the recommendation to utilise the strong    and trustworthy authentication, identification and qualified electronic signature capabilities of the wallet solutions for    implementing the necessary authentication procedure.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#42-discussions-related-to-data_dlt_03","title":"4.2 Discussions related to DATA_DLT_03","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspect related to DATA_DLT_03 was discussed:</p> <p>The possibility to send a data deletion request to more than one relying party in a single step does not seem to be appropriate for the specific case, as requesting the data deletion is a rather sensitive process. Therefore it was agreed that the words \"or multiple Relying Parties\" in DATA_DLT_03 should better be deleted.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#43-discussions-related-to-data_dlt_04","title":"4.3 Discussions related to DATA_DLT_04","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspect related to DATA_DLT_04 was discussed:</p> <p>It was suggested to delete this requirement, as the detailed requirements of the common dashboard are handled in Topic 19.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#44-discussions-related-to-data_dlt_05","title":"4.4 Discussions related to DATA_DLT_05","text":"<p>The discussions related to DATA_DLT_05 did not reveal any need for changes.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#45-discussions-related-to-data_dlt_06","title":"4.5 Discussions related to DATA_DLT_06","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to DATA_DLT_06 were discussed:</p> <p>1) The point was raised that the wallet unit is only able to initiate the process for a data    deletion request and hence it is unclear what exactly the log according to Article 5a (4) (d) of    the regulation (EU) No 910/2014 should contain. As the regulation speaks about a    \"log of all transactions\", which contains a \"list of relying parties with which the user    has established a connection and, where applicable, all data exchanged\", it seems to be appropriate    to also log the initiation of a data deletion request, even if it is not clear, whether the    partly prepared email was submitted in the end.</p> <p>Therefore, it was agreed to change the text of DATA_DLT_06 as follows:</p> <p>The log SHALL also document the initiation of a data deletion request and include as a minimum: </p> <ul> <li>Date and time of attribute deletion request, </li> <li>Relying Party to which the request was made, </li> <li>Attributes requested to be removed.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#5-reporting-a-wallet-relying-party-to-the-competent-data-protection-supervisory-authority","title":"5. Reporting a wallet-relying party to the competent data protection supervisory authority","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#51-discussions-related-to-rpt_dpa_01","title":"5.1 Discussions related to RPT_DPA_01","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to RPT_DPA_01 have been discussed:</p> <p>1) According to Article 4 (22) of the regulation (EU) 2016/679, the wallet user may, in its role of being the data subject,    report suspicious behaviour to, or even lodge a complaint according to Article 77 of (EU) 2016/679 with, different supervisory authorities, including</p> <p>a) the supervisory authority responsible for the region in which the controller or processor is established on the territory of the Member State of that supervisory authority;</p> <p>b) data subjects residing in the Member State of that supervisory authority are substantially affected or likely to be substantially affected by the processing;</p> <p>c) or a complaint has been lodged with that supervisory authority;</p> <p>2) As the regulation (EU) No. 910/2014 in its Article 5a (4) (d) (iii) and Article 5a (5) (a) (x) mentions the    \"reporting a relying party to the competent national data protection authority\", it is clear that    the wallet unit should in particular allow to get in contact with the competent national supervisory authority,    which supervises the wallet-relying party. If the contact details of the supervisory authority for the wallet-relying    party information is not available, the wallet unit should offer to get in contact with the supervisory authority    of the wallet provider and it may even offer a link to the members of the European Data Protection Board at    https://www.edpb.europa.eu/about-edpb/about-edpb/members_en.</p> <p>Against the background of the discussion, it was agreed upon updating RPT_DPA_01 to the following text:</p> <p>When prompted by the User, a Wallet Unit SHALL provide the contact details of the DPA, which supervises the Relying Party, if available, and SHALL make it easy for the User to send a report of suspicious Relying Party presentation requests to this DPA. If these are not available, the Wallet Unit SHALL provide the contact details of the DPA of the region in which the Wallet Provider is residing. In addition, the Wallet Unit MAY also provide contact details of other DPAs taken from the \"European Data Protection Board\" website (https://www.edpb.europa.eu/about-edpb/about-edpb/members_en), and allow the User to choose a DPA to continue the reporting process.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#52-discussions-related-to-rpt_dpa_02","title":"5.2 Discussions related to RPT_DPA_02","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to RPT_DPA_02 have been discussed:</p> <p>It was discussed that there is difference between reporting suspicious behaviour of a wallet-relying party as required by Article 5a of (EU) No. 910/2014 and lodging a complaint with a supervisory authority according to Article 77 of (EU) 2016/679.</p> <p>Therefore, it was agreed to change the text of RPT_DPA_02 as follows:</p> <p>The User interface enabling a User to start the process of reporting a Wallet-relying Party to a DPA SHALL be accessible via the log provided by the Wallet Unit.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#53-discussions-related-to-rpt_dpa_03","title":"5.3 Discussions related to RPT_DPA_03","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspect related to RPT_DPA_03 was discussed:</p> <p>It was discussed, whether mentioning the national procedural law is suitable here, as fulfilling the requirements of the regulation (EU) 2016/679 should be sufficient. The wallet providers should better not be obliged to take into account requirements from national procedural law and hence it was decided to delete this requirement.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#54-discussions-related-to-rpt_dpa_04","title":"5.4 Discussions related to RPT_DPA_04","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to RPT_DPA_04 were discussed:</p> <p>It was discussed, whether the text \"and the User's allegation\" is appropriate here, as this does not seem to be mentioned in the regulation (EU) No. 910/2014.</p> <p>However, Article 7 of the implementing act (EU) 2024/2982 mentions the possibility to \"substantiate the reports, including by attaching relevant information to identify the wallet-relying parties, and the wallet users\u2019 claims in machine-readable format\".</p> <p>Furthermore, it was discussed that Article 5a (4) (d) (i) of the regulation (EU) No. 910/2014 requires that the log allows to \"view an up-to-date list of relying parties with which the user has established a connection and, where applicable, all data exchanged\". The related storage requirements seem to be rather modest, as the digital signatures are usually rather small. On the other hand, it was also argued, that it is questionable that submitting the signatures with the initial report migth not be necessary, as this kind of information could be provided after an explicit request of the DPA in a subsequent step. In this case the wallet unit could also be used to sign an export from the log to provide non-repudiation.</p> <p>Against this background it was decided to revise the text of RPT_DPA_04 as follows:</p> <p>Wallet providers SHALL ensure that wallet units allow wallet users to substantiate the reports, including by attaching relevant information to identify the wallet-relying parties, and the wallet users\u2019 claims in machine-readable format.</p> <p>Note: The log kept by the Wallet Unit will be standardized and is machine-readable in order to enable data portability. An excerpt from this log therefore can be used to substantiate the report.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#55-discussions-related-to-rpt_dpa_05","title":"5.5 Discussions related to RPT_DPA_05","text":"<p>During the discussions with the delegated experts from the EU Member States the following aspects related to RPT_DPA_05 were discussed:</p> <p>Based on the discussion it was agreed, that there shall be an additional HLR in Topic 19, which specifies the technical details and the precise data format of the log and the possibilities for the export of the data for the purpose of reporting.</p> <p>The question was raised, whether the data from the log could be inserted in an attachment of an email and that the other option would be that the wallet unit could itself become an email client. In any case it would be possible to export this data into a file and attach this file to an email. In order to make it easy for the user to submit such a report, the contact information of the DPA in charge should be part of the log, if possible.</p> <p>The issue was raised that the wallet unit can not be entirely sure, that the report was indeed sent to the DPA and hence it is not entirely clear, whether it makes sense to log it.</p> <p>Against this background it was decided to slightly revise the text of RPT_DPA_05 as follows:</p> <p>As far as technically possible, a Wallet Unit SHALL log the initiation of a report sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#56-additional-high-level-requirement-rpt_dpa_06","title":"5.6 Additional high level requirement RPT_DPA_06","text":"<p>During the discussion of RPT_DPA_01 it was agreed to add the following high level requirement as RPT_DPA_06:</p> <p>The Wallet Unit SHALL take the contact details of the DPA, which supervises the Relying Party, either (in this order) from</p> <p>a) included in  the RPRC in the log entry,</p> <p>b) included in the RPAC in the log entry,</p> <p>c) looked up by the Wallet Unit from the RP Registry, based on the Subject of the RPAC in the log entry.</p> <p>The contact information includes  at least one of email address, phone number, or a URL of a webform.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#6-updated-set-of-high-level-requriements","title":"6. Updated set of High Level Requriements","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#61-update-for-topic-48-erasure-or-personal-data-at-a-wallet-relying-party","title":"6.1 Update for Topic 48 (Erasure or personal data at a wallet-relying party)","text":"<p>The updated set of high-level requirements after the discussion will give rise to an  update of Topic 48:</p> Index Requirement specification DATA_DLT_01 A Wallet Provider SHALL ensure that its Wallet Units support the technical specifications mentioned in DATA_DLT_02, allowing a User to request from a Relying Party the erasure of their attributes that were presented by that Wallet Unit to that Relying Party, in accordance with Article 17 of Regulation (EU) 2016/679. DATA_DLT_02 The Commission SHALL, in cooperation with the Member States, develop technical specifications for a Wallet Unit interface allowing a Wallet Unit to send attribute deletion requests to Relying Parties with whom it has interacted in the past. DATA_DLT_03 A Wallet Instance SHALL provide a function where the User may select one Relying Party or multiple Relying Parties for which an attribute deletion request must be submitted. DATA_DLT_04 A Wallet Instance SHALL be able to display the attribute deletion requests previously submitted through the Wallet Unit. DATA_DLT_05 A Wallet Unit SHALL include attribute deletion requests in a log so they can be presented to the User via the dashboard (as specified in Topic 19). DATA_DLT_06 The log SHALL also document the initiation of a data deletion request and include as a minimum: - Date and time of attribute deletion request, - Relying Party to which the request was made, - Attributes requested to be removed."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/l%2Bm-data-deletion-and-dpa-complaint/#62-update-for-topic-50-reporting-a-wallet-relying-party-to-the-competent-data-protection-supervisory-authority","title":"6.2 Update for Topic 50 (Reporting a wallet-relying party to the competent data protection supervisory authority)","text":"<p>The updated set of high-level requirements after the discussion will give rise to an update of  Topic 50:</p> Index Requirement specification RPT_DPA_01 When prompted by the User, a Wallet Unit SHALL provide the contact details of the DPA, which supervises the Relying Party, if available, and SHALL make it easy for the User to send a report of suspicious Relying Party presentation requests to this DPA. If these are not available, the Wallet Unit SHALL provide the contact details of the DPA of the region in which the Wallet Provider is residing. In addition, the Wallet Unit MAY also provide contact details of other DPAs taken from the \"European Data Protection Board\" website (https://www.edpb.europa.eu/about-edpb/about-edpb/members_en), and allow the User to choose a DPA to continue the reporting process. RPT_DPA_02 The User interface enabling a User to start the process of reporting a Wallet-relying Party to a DPA SHALL be accessible via the log provided by the Wallet Unit. RPT_DPA_03 A Wallet Provider SHALL implement the interface in compliance with national procedural law and administrative practices. RPT_DPA_04 Wallet providers SHALL ensure that wallet units allow wallet users to substantiate the reports, including by attaching relevant information to identify the wallet-relying parties, and the wallet users\u2019 claims in machine-readable format. Note: The log kept by the Wallet Unit will be standardized and is machine-readable in order to enable data portability. An excerpt from this log therefore can be used to substantiate the report. RPT_DPA_05 As far as technically possible, a Wallet Unit SHALL log the initiation of a report sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19). RPT_DPA_06 The Wallet Unit SHALL take the contact details of the DPA, which supervises the Relying Party, either (in this order) from a) included in  the RPRC in the log entry, b) included in the RPAC in the log entry, c) looked up by the Wallet Unit from the RP Registry, based on the Subject of the RPAC in the log entry.  The contact information includes  at least one of email address, phone number, or a URL of a webform."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/","title":"N export and data portability","text":"<p>Home Version 0.95, updated 7 April 2025</p> <p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#topic-n-export-and-data-portability","title":"Topic N - Export and data portability","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic N: Export and data portability (Article 5a(4)(f) and Article 5a(4)(g)).</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>Requirements on the export and data portability functionalities supported by all Wallet Solutions is needed when source and target Wallet Instance are managed by the same of by different Wallet Providers.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to the export and portability of User's data from a Wallet Unit.</p> </li> <li> <p>Chapter 3 presents and discusses a list of identified issues, with suggested changes and/or new High-Level Requirements related to this topic.</p> </li> <li> <p>Chapter 4 presents a log of the additions and changes that will be made to High Level Requirements in the ARF as a result of discussing this topic with the Member States.</p> </li> <li> <p>Chapter 5 refers to other topics related to User's data export and portability.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF main document as a result of discussions. </p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#2-legal-requirements-for-export-and-data-portability","title":"2 Legal Requirements for Export and Data Portability","text":"<p>Two legal texts impose direct requirements on Users's data export and portability: [European Digital Identity Regulation] and  [CIR 2024/2979] as regards the integrity and core functionalities of European Digital Identity Wallets. </p> <p>This section recaps the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#21-european-digital-identity-regulation-about-data-export-and-portability","title":"2.1  [European Digital Identity Regulation] about Data Export and Portability","text":"<p>The [European Digital Identity Regulation] requires that the Wallet Units enable their Users to: + download the User\u2019s data, electronic attestation of attributes and configurations (if technically possible), + import data to another Wallet Unit (portability), + all above performed in a User-friendly, transparent and traceable manner.</p> <p>Below are the actual excerpts from the Regulation, including the recitals and the articles that establish these requirements.</p> <p>Recital (48)</p> <p>This Regulation should foster choice and the possibility of switching between European Digital Identity Wallets where a Member State has endorsed more than one European Digital Identity Wallet solution on its territory. In order to avoid lock-in effects in such situations, where technically feasible, the providers of European Digital Identity Wallets should ensure the effective portability of data at the request of European Digital Identity Wallet users, and should not be allowed to use contractual, economic or technical barriers to prevent or to discourage effective switching between different European Digital Identity Wallets.</p> <p>Article 5a</p> <p>4. European Digital Identity Wallets shall enable the User, in a manner that is User-friendly, transparent, and traceable by the User, to:</p> <p>[...]</p> <p>(f) download, to the extent technically feasible, the User\u2019s data, electronic attestation of attributes and configurations;</p> <p>(g) exercise the user\u2019s rights to data portability.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#22-cir-20242979-about-data-export-and-portability","title":"2.2 [CIR 2024/2979] about Data Export and Portability","text":"<p>The current version of the [CIR 2024/2979] specifies the following requirements related to User's data export and portability: + the Wallet Unit stores User's data - personal data, as well as transacion data (that shall be logged),  +  the Wallet Unit shall allow extracting and exporting (dowloading) the User's data from a Wallet Unit, to the extent of technical feasiblity (with exception of critical assets), + the Wallet Unit shall allow the wallet User to import User's data exported from another Wallet Unit (also from other Wallet provider), + the data should be protected in all steps (storage, export, import) to preserve integrity, authenticity and confidentiality, + the migration process from one Wallet Unit to another one should ensure level of assurance high, + the same technical solutions are recommended to be used to allow also implementing backup and recovery processes for Wallet Units.</p> <p>Below are selected excerpts from the [CIR 2024/2979], including the recitals and the articles that establish these requirements.</p> <p>Recital (13)</p> <p>Data export and portability objects can log the person identification data and electronic attestations of attributes that have been issued to a particular wallet unit. These objects allow wallet users to extract the relevant data from their wallet unit in order to strengthen their right to data portability. </p> <p>Wallet providers are encouraged to use the same technical solutions to also implement backup and recovery processes for wallet units, making it possible to recover lost wallet units or to transfer information from one wallet provider to another, where appropriate and insofar as this can be done without impairing the right to data protection and the security of the digital identity ecosystem.</p> <p>Article 9</p> <p>Transaction logs</p> <p>1. Irrespective of whether or not a transaction is successfully completed, wallet instances shall log all transactions with wallet-relying parties and other wallet units, including electronic signing and sealing.</p> <p>2. The logged information shall at least contain:</p> <p>(a) the time and date of the transaction;</p> <p>(b) the name, contact details, and the unique identifier of the corresponding wallet-relying party and the Member State in which that wallet-relying party is established, or in case of other wallet units, relevant information from the wallet unit attestation;</p> <p>\u00a9 the type or types of data requested and presented in the transaction;</p> <p>(d) in the case of non-completed transactions, the reason for such non-completion.</p> <p>3. Wallet providers shall ensure integrity, authenticity and confidentiality of the logged information.</p> <p>7. Wallet providers shall enable wallet users to export the logged information referred to in paragraph 2.</p> <p>Article 13</p> <p>Data export and portability</p> <p>Wallet units shall, where technically feasible and excepting cases of critical assets, support secure export and portability of personal data of the wallet user, to allow the wallet user to migrate to a wallet unit of a different wallet solution in a way that ensures level of assurance high as set out in Implementing Regulation (EU) 2015/1502.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#3-discussion","title":"3 Discussion","text":"<p>The implementing act [CIR 2024/2979] has been adopted and the ARF document has been aligned with the act in earlier stage, thus there are no identified discrepancies or major issues. Therefore this paper presents and clarifies the overall concept and technical assumptions and aims to collect feedback if there is a need of any improvements of HLR from the Member States and Coordination Group point of view.</p> <p>The topics identified for this paper are as follows: + scope of data to be logged by the Wallet Unit and the log format, + possible extent of data export from a Wallet Unit, + usability of a Wallet Unit after the data import process, + involvement of the PID and Attestation Providers in the Wallet Unit migration and recovery process, + terminology.</p> <p>This document is ONLY intended to clarify the high-level requirements related to the export and data portability topic. The necessary technical specifications (including any policy documents) will be developed by the European Commission after an agreement on the requirements has been reached.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#31-data-export","title":"3.1 Data Export","text":"<p>The Article 5a of [European Digital Identity Regulation] requires from the Wallets to enable to </p> <p>download, to the extent technically feasible, the User\u2019s data, electronic attestation of attributes and configurations</p> <p>as well as in Article 13 of [CIR 2024/2979]</p> <p>where technically feasible and excepting cases of critical assets, support secure export and portability of personal data of the wallet user, to allow the wallet user to migrate to a wallet unit of a different wallet solution in a way that ensures level of assurance high as set out in Implementing Regulation (EU) 2015/1502</p> <p>The technically feasible extent of the User's data export is therefore limited for security reasons. </p> <p>The ARF is in line with this. In the current version of ARF it is assumed that private keys of PIDs and Attestations are not exportable (and not a part of the so called Migration Object). In consequence, the migration process always entails the issuance of new PIDs and Attestations of Attributes actually (see section 3.2). </p> <p>Therefore, there are no identified HLRs modifications in this respect. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#32-technical-feasibility-of-portability-and-migration","title":"3.2 Technical Feasibility of Portability and Migration","text":"<p>The requirements set out in the Topic 34 of ARF define so called Migration Object, that contains a set of data - User's personal and transaction log data - ready to be exported from a Wallet Unit and imported into another one.</p> <p>This is to be noted that the Migration Object does not contain PID and attestations related private keys, and therefore the migration process requires issuance of new PID/Attestations (of the same type), with the involvement of the PID / Attestation Providers and User authentication.</p> <p>From the Topic 34 'Description' section:</p> <p>Note that the Migration Object does not contain any private keys associated with the PIDs or attestations. In most security architectures for a Wallet Solution described in Section 4.5 of the ARF main document, this is impossible, since the WSCA/WSCD that contains these private keys does not allow their extraction under any circumstances.</p> <p>The process might be however different if the keys are stored in a remote HSM (as the further text in the 'Description'): </p> <p>An exception may be architectures in which attestation private keys are managed in a remote HSM and the migration is to a new Wallet Unit of the same Wallet Provider. However, in such cases, restoring functionality of the PIDs and attestations in a new Wallet Unit does not necessitate that private keys must be exported to another HSM. Rather, it implies the User must be able to authenticate towards the existing HSM from the new Wallet Unit, and be recognised as an existing User.</p> <p>In any case, regardless the architecture, this is assumed that the Migration Object's role is only to facilitate the migration process, i.a. give a list of PIDs and attributes, so that can be re-issued in a new Wallet Unit. </p> <p>Finally</p> <p>The fact that the Migration Object does not contain private keys means that PIDs and attestations cannot be backed up and restored from the object in such a way that they are usable in a new Wallet Unit without involvement of the PID Provider or Attestation Provider. Instead, the User must ask the respective PID Provider(s) or Attestation Provider(s) to re-issue the PID(s) or attestation(s) to the new Wallet Unit. The only function of the Migration Object is to simplify this process by listing the PIDs and attestations present in the existing Wallet Unit, together with the information needed by the new Wallet Unit to start the re-issuance process.</p> <p>In conclusion, there are no modifications of HLR in relation to the essence.</p> <p>There are however minor corrections proposed to Mig_01 and Mig_05. </p> <p>For Mig_01, it is to clarify that the WUAs are not part of the migration object (as considered as not \"User's data\" as such) </p> Index Requirement specification Proposal Mig_01 A Wallet Unit SHALL include and keep up-to-date a Migration Object, containing the following information: The contents of the log for all transactions executed through the Wallet Unit, as listed in requirement DASH_02. A list of PIDs and attestations present in the Wallet Unit , except Wallet Unit Attestations, according to the requirements in this Topic. Keep with proposed changes <p>For Mig_05 it is to reflect \"integrity and authenticity\" aspect required by the Article 9 (2) of [CIR2024/2979]:</p> <p>3. Wallet providers shall ensure integrity, authenticity and confidentiality of the logged information.</p> Index Requirement specification Proposal Mig_05 The Wallet Unit SHALL store the Migration Object in such a way that its confidentiality, integrity and authenticity is protected and that it is protected against use by others than the User. Note: This could be done, for example, by using password-based cryptography to encrypt the object. Keep with proposed modification"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#33-recovery-of-lost-wallet-units","title":"3.3 Recovery of Lost Wallet Units","text":"<p>The recovery of lost of a Wallet Units follows the same process and the same limitations as for the migration process apply (see section 3.2).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#34-scope-of-logged-information","title":"3.4 Scope of Logged Information","text":"<p>Article 9(2) of [CIR 2024/2979] specifies the scope of data to be logged:</p> <p>The logged information shall at least contain: (a) the time and date of the transaction; (b) the name, contact details, and the unique identifier of the corresponding wallet-relying party and the Member State in which that wallet-relying party is established, or in case of other wallet units, relevant information from the wallet Unit attestation; \u00a9 the type or types of data requested and presented in the transaction; (d) in the case of non-completed transactions, the reason for such non-completion.</p> <p>The ARF defines the scope of information to be logged as: + all types of transaction executed through the Wallet Unit: issuance and re-issuance transactions, presentation transactions, signature and seal creation transactions, attribute deletion requests sent to a Relying Party, and complaints lodged with a Data Protection Authority (DASH_02, DASH_2a, DASH_03, DASH_04, DASH_05, Mig_01), + transactions related to qualified electronic signatures and seals generated by or through the Wallet Unit (QES_13), + reports sent to the DPA (RPT_DPA_05), + attribute deletion requests (DATA_DLT_05, DATA_DLT_06).</p> <p>In conclusion, the ARF is in line with the regulatory requirements in principle.</p> <p>However it is proposed to specify in the scope of logged information also the following cases: + PID/attestation deletion events (\u2192 changes proposed in DASH_02),  + other events possibly that will be relevant following the development of the ARF (eg. in relation to Topic W \u2192 apropriate clauses on logging will be proposed as a part of the Topic W discussion outcome and HLR set, that is yet to come).</p> <p>In addition, there are the follwing minor changes proposed to improve consistency of the text: </p> Index Requirement specification Proposal DASH_04 For a signature and seal creation transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: a) the date and time of the transaction, b) the document or data signed (where possible), c) in the case of non-completed transactions, the reason for such non-completion. Keep with proposed changes QES_13 Wallet Providers SHALL ensure that a Wallet Unit provides a log of transactions related to qualified electronic signatures and seals generated by or through the Wallet Unit, allowing the User to view the history of previously signed data or documents, according to the requirements in Topic 19. Note: If the signature is generated by a remote Signature Creation Application, the Wallet is at minimum used to authenticate the User to the remote QTSP and to obtain the User's consent for the usage of the private signing key. The logs then record information about these processes. Keep with proposed changes <p>Additionally, to improve clarity, there are ongoing changes that will be introduced in the next ARF realease in relation to DASH_03, DASH_04, DASH_05 (to state it more clearly that these information are logged).</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#35-log-format","title":"3.5 Log format","text":"<p>To enable migration between Wallet Units from different Wallet Solutions/Wallet Providers, the log format should be specified in a Technical Specification. Therefore it is proposed to add a new HLR, as below:</p> Index Requirement specification Proposal DASH_2c The Commission SHALL establish a technical specification for the common format of the log of transactions. New requirement"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#36-terminology","title":"3.6 Terminology","text":"<p>In the context of Topic N, the term \"re-issuance\" is used. As presented in this paper, it refers to the situation of migration, which actually entails process of issuance of new PIDs and attestations (of the same type), in a new Wallet Unit, like for the first time provisioning (which i.a. requires User authentication prior the issuance).  </p> <p>This term however is already used in the context of Topic B (Re-issuance and batch issuance of PIDs and Attestations), where it refers to a different process - replacement of a PID or Attestations that already exists in a Wallet Unit, performed by the same PID Provider or Attestation Provider that issued them, in a process that is transparent for the User as much as possible (e.g. avoiding authentication of the User possibly). </p> <p>Therefore this is proposed not to use this term in the context of Topic N. As a consequence, modifications of a some HLRs are proposed (Mig_03, Mig_11), as presented in the section 4.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#4-current-hlrs-and-proposals-of-changes","title":"4 Current HLRs and Proposals of Changes","text":"<p>ARF 1.8.0 contains a number of High-Level Requirements related to the topic included in the following sections: + Topic 19 - User navigation requirements (Dashboard logs for transparency) + Topic 34 - Migrate to a different Wallet Solution + Topic 16 - Signing documents with a Wallet Unit + Topic 48 - Blueprint for requesting data deletion to Relying Parties + Topic 50 - Blueprint to report unlawful or suspicious request of data</p> <p>The existing HLRs are listed in the tables below, along with a proposal to keep, change, add, or remove the HLR.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#41-topic-19-user-navigation-requirements-dashboard-logs-for-transparency","title":"4.1 Topic 19 - User navigation requirements (Dashboard logs for transparency)","text":"Index Requirement specification Proposal DASH_02 The Wallet Unit SHALL log all transactions executed through the Wallet Unit, including any transactions that were not completed successfully. This log SHALL include all types of transaction executed through the Wallet Unit: issuance and re-issuance transactions, PID/attribute deletion, presentation transactions, signature creation transactions (see Topic 16), attribute deletion requests sent to a Relying Party (see Topic 48), and complaints lodged with a Data Protection Authority (see Topic 50). Note: For the data to be logged for an attribute deletion request or a complaint, see Topic 48 and Topic 50, respectively. Keep with proposed changes DASH_02a The Wallet Unit SHALL retain transactions in the log at least for the time period specified in applicable legislation. If the Wallet Unit must delete transactions from the log, for instance because of size limitations, the Wallet Unit SHALL notify the User via the dashboard before doing so and SHALL instruct the User how to export the transactions that are about to be deleted; see DASH_07. Keep as-is DASH_2c The Commission SHALL establish a technical specification for the common format of the log of transaction New requirement DASH_03 For a presentation transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: a) the date and time of the transaction, b) the name, contact details, and unique identifier of the corresponding Relying Party, and the Member State in which that Relying Party is established, or relevant information from the WUA of the Requestor Wallet Unit (see Topic 30), c) the name, contact details, and unique identifier of the intermediary, if an intermediary is involved in the transaction, d) the attestation type(s) and the identifier(s) of the attribute(s) that were requested, as well as those that were presented, e) in the case of non-completed transactions, the reason for such non-completion. Keep as-is DASH_04 For a signature and seal creation transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: a) the date and time of the transaction, b) the document or data signed (where possible), c) in the case of non-completed transactions, the reason for such non-completion. Keep with proposed changes DASH_05 For an issuance or re-issuance transaction executed through the Wallet Unit, the dashboard SHALL display to the User at least: a) the date and time of the transaction, b) the name, contact details, and unique identifier of the corresponding PID Provider or Attestation Provider, c) the attestation type requested, as well as the attestation type issued, d) the number of attestations requested and/or issued (i.e., the size of the batch in case of batch issuance). d) in the case of non-completed transactions, the reason for such non-completion. e) for a re-issuance transaction, whether it was triggered by the User or by the Wallet Unit without involvement of the User. Keep as-is DASH_07 The dashboard SHALL allow the User to export the details of one or more transactions in the log to a file, while ensuring their confidentiality, authenticity and integrity. Keep as-is"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#42-topic-34-migrate-to-a-different-wallet-solution","title":"4.2 Topic 34 - Migrate to a different Wallet Solution","text":"<p>A. Back-up requirements</p> Index Requirement specification Proposal Mig_01 A Wallet Unit SHALL include and keep up-to-date a Migration Object, containing the following information: The contents of the log for all transactions executed through the Wallet Unit, as listed in requirement DASH_02. A list of PIDs and attestations present in the Wallet Unit , except Wallet Unit Attestations, according to the requirements in this Topic. Keep with proposed changes Mig_02 The Commission SHALL define a technical specification of the Migration Object. Keep as-is Mig_03 For each PID or attestation that is issued to it, a Wallet Unit SHALL add to the Migration Object all data that is necessary to request re-issuanceissuance once again of that PID or attestation to the Migration Object. This SHALL include at least the attestation type and the PID Provider or Attestation Provider that issued the PID or attestation, as well as their service supply points. However, the Migration Object SHALL NOT contain attribute identifiers or attribute values, and SHALL NOT contain any private keys associated with the PID or attestation. Keep with proposed changes Mig_03b If the User deletes a PID or attestation from their Wallet Unit, the Wallet Unit SHALL delete the corresponding entry from the Migration Object. Keep as-is Mig_04 The Wallet Unit SHALL store the Migration Object in an external storage or remote location of the User's choice, in such a way that the User can still retrieve the object from a new Wallet Unit in case the existing Wallet Unit becomes unavailable. Note: The new Wallet Unit may be either an instance of the same Wallet Solution as the old one, or an instance of a different Wallet Unit. Keep as-is Mig_05 The Wallet Unit SHALL store the Migration Object in such a way that its confidentiality, integrity and authenticity is protected and that it is protected against use by others than the User. Note: This could be done, for example, by using password-based cryptography to encrypt the object. Keep with proposed modification <p>B. Restore Requirements</p> Index Requirement specification Proposal Mig_06 Directly after installation of a new Wallet Instance, the Wallet Instance SHALL enable the User to import a Migration Object from an external storage or remote location indicated by the User. Keep as-is Mig_07 For each PID and attestation listed in the Migration Object, the Wallet Unit SHALL enable the User to select that PID or attestation. When selected, the Wallet Unit SHALL request the respective PID Provider or Attestation Provider to re-issue that PID or attestation. If the Migration Object lists a PID, the PID SHALL be the first to be restored. Keep as-is Mig_07a The Wallet Unit SHALL ask the User whether they want to restore the log from the Migration Object. When the User agrees, the Wallet Unit SHALL restore the log, and SHALL append future transactions to this log according to the requirements in Topic 19. Keep as-is Mig_11 The processes and interfaces used for re-issuanceissuance of a new PID or attestation (as part of a migration process) SHALL be the same as those used for their issuance, as specified in Topic 10. Keep with proposed changes"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#43-topic-16-signing-documents-with-a-wallet-unit","title":"4.3 Topic 16 - Signing documents with a Wallet Unit","text":"Index Requirement specification Proposal QES_13 Wallet Providers SHALL ensure that a Wallet Unit provides a log of transactions related to qualified electronic signatures and seals generated by or through the Wallet Unit, allowing the User to view the history of previously signed data or documents, according to the requirements in Topic 19. Note: If the signature is generated by a remote Signature Creation Application, the Wallet is at minimum used to authenticate the User to the remote QTSP and to obtain the User's consent for the usage of the private signing key. The logs then record information about these processes. Keep with proposed changes"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#44-topic-48-blueprint-for-requesting-data-deletion-to-relying-parties","title":"4.4 Topic 48 - Blueprint for requesting data deletion to Relying Parties","text":"Index Requirement specification Proposal DATA_DLT_05 A Wallet Unit SHALL include attribute deletion requests in a log so they can be presented to the User via the dashboard (as specified in Topic 19). Keep as-is DATA_DLT_06 DATA_DLT_06  The log SHALL include as a minimum: - Date of attribute deletion request, - Relying Party to which the request was made, - Attributes requested to be removed. Keep as-is"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#45-topic-50-blueprint-to-report-unlawful-or-suspicious-request-of-data","title":"4.5 Topic 50 - Blueprint to report unlawful or suspicious request of data","text":"Index Requirement specification Proposal RPT_DPA_05 A Wallet Unit SHALL keep reports sent to the DPA in a log file so that it can be presented to the User in the dashboard (as specified in Topic 19). Keep as-is"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#51-changes-to-other-topics","title":"5.1 Changes to other topics","text":"<p>Below we discuss how User's data export and portability relates to the other topics being discussed.</p> <p>As indicated in the chapter 3 and 4, there are very few and insignificant changes proposed in the context of data export and portability. </p> <p>There are no identified impact to other ARF topics than mentioned in chapters 3 and 4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#52-topic-c-wallet-unit-attestation-wua-and-key-attestation","title":"5.2 Topic C - Wallet Unit Attestation (WUA) and Key Attestation","text":"<p>The data export and portability topic may have relation with the WUA requirements, as the private key handling for PIDs and attestation has relevance for the discussion on the scope and technical feasibility of data to be exported/imported from/to a wallet.</p> <p>There were several changes introduced to the Topic C (and the related ARF Annex II [Topic 9]) in the earlier stages of the ARF work (see the Topic C Discussion Paper, resulting in reduction and simplification of the requirments. </p> <p>In result there is only one requirement with potential relevance:</p> Index Requirement specification Proposal WUA_16 If a WSCA is able to export a private key, the Wallet Provider SHALL specify this capability as an attribute in the WUA. Keep as-is <p>At the same time the Migration Object is assumed not to contain any private keys (refer to Topic 34). Therefore it is finally assumed, that there is no impacts to any of the WUA / [Topic 9] requirements. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#53-topic-l-user-requesting-data-deletion-to-relying-parties","title":"5.3 Topic L - User requesting data deletion to relying parties","text":"<p>This topic refers to section \"Topic 48 - Blueprint for requesting data deletion to Relying Parties\" of the ARF Annex II.</p> <p>According the related HLRs, the transaction log should containt also information related to deletion of attributes (see section 4.4 of this document). As presented in section 4.4, there are no changes proposed to these HLRs.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#54-relation-to-risk-register-tbd","title":"5.4 Relation to Risk Register (tbd)","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the Relying Party registration:</p> Risk type Risk id Related risk titles High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction R6 Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9 DUnauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet User. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. <p>More specifically, [RiskRegister]  describes the following threats to a Wallet:</p> ID Threat description Related risks TR25 The wallet can present attributes to a relying party without the approval of a User. Data disclosure (R6) TR29 An attacker can leak attributes from the wallet and identify the wallet User where identification is not required/allowed. Data disclosure (R6) TR38 Not being able to prove User\u2019s consent for shared attributes, relying parties can affect the integrity of logs. Data disclosure (R6) TR40 A relying party that consists of multiple units/entities that each have a different scope of what they are allowed to request/process, can request and process data for which they do not have lawful grounds for. Data disclosure (R6) / Unauthorised transaction (R9)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":"<p>See sections 4 and 5 above. In addition, data export and portability aspects in the main text of the ARF will be updated accordingly.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/n-export-and-data-portability/#7-references-tbd","title":"7 References (tbd)","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0 [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [Topic 9] Topic 9 - Wallet Unit Attestation [Topic 16] Topic 16 - Signing documents with a Wallet Unit [Topic 19] Topic 19 - User navigation requirements (Dashboard logs for transparency) [Topic 34] Topic 34 - Migrate to a different Wallet Solution [Topic 50 ] Topic 50 - Blueprint to report unlawful or suspicious request of data [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR 2024/2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets) [OID4VP] OpenID for Verifiable Presentations - draft 24 [GDPR] Regulation (EU) 2016/679 of the European Parliament and of the Council of 27 April 2016 on the protection of natural persons with regard to the processing of personal data and on the free movement of such data, and repealing Directive 95/46/EC (General Data Protection Regulation)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/","title":"V pid rulebook","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#v-pid-rulebook","title":"V - PID Rulebook","text":"<p>Version 1.2, updated 30 March 2025</p> <p>GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#1-introduction","title":"1. Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper topic description","text":"<p>This document is the Discussion Paper for European Digital Identity Cooperation Group regarding Topic V: PID Rulebook</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#12-related-risks-in-the-risk-register","title":"1.2 Related risks in the Risk Register","text":"<p>Risks considered in [Topic_A] are also applicable here</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#13-key-words","title":"1.3 Key words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document.</p> <p>In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will' and 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#14-document-structure","title":"1.4 Document structure","text":"<ul> <li>Chapter 2 introduces the objectives of this paper.</li> <li>Chapter 3 presents available attestation format.</li> <li>Chapter 4 discusses interoperability Challenges in the EUDI Wallet.</li> <li>Chapter 5 discusses privacy considerations.</li> <li>Chapter 6 gives a background about the discussion on W3C VCDM in the Expert Group.</li> <li>Chapter 7 lists the additions and changes that will be made to the ARF as a result of discussing this topic with Member States.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#2-problem-statement","title":"2. Problem statement","text":"<p>Currently, W3C VCDM 1.1 is referenced in the implementing acts, though it is understood to be a placeholder pending a final technical decision. This is because, in its current form, VCDM 1.1 remains an incomplete framework, lacking the necessary specifications to fully support the implementation of an EUDI Wallet.</p> <p>To finalise the list of requirements and related technical specifications for implementing the PID based on the current ARF approach\u2014which envisions issuing the PID in two formats:</p> <ul> <li>ISO/IEC 18013 series format, required for proximity scenarios.</li> <li>JSON-based format, better suited for online scenarios.</li> </ul> <p>It is essential to fully define this second format by detailing all relevant aspects.</p> <p>A clear and well-defined set of requirements and technical specifications for these components is crucial to accurately describe the PID and provide implementers with a robust framework for developing Wallet solutions.</p> <p>In the current ARF, the decision leans toward adopting JWT-like Simple Attestations, which offer a simpler and widely compatible format, complemented by the SD-JWT-VC draft, but still several details are missing. Ongoing discussions emphasise the need to balance flexibility, interoperability, and security while avoiding unnecessary complexity.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#3-attestation-formats","title":"3 Attestation formats","text":"<p>The topic of attestation formats and data models has been a long-standing discussion within the expert group. Over the past two years, it has been extensively debated among Member State experts, reflecting both its importance and complexity.</p> <p>When discussing verifiable attestations, at least four key aspects must be considered:</p> <ol> <li>Data Model \u2013 Defines how attestation information is structured and represented.</li> <li>Data Format \u2013 Specifies how attestations are serialised and exchanged.</li> <li>Security, Proof Mechanisms, and Signature Formats \u2013 Covers how attestation authenticity and integrity are ensured, including cryptographic signatures used to verify the PID Provider or Attestation Provider.</li> <li>Privacy Considerations \u2013 Ensures that attestations minimise data exposure, allow selective disclosure, and comply with privacy-preserving principles (in particular unlinkability as mandated by the Regulation).</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#31-several-families-of-attestation-formats","title":"3.1 Several families of attestation formats","text":"<p>There are at least three main families of attestation formats, each with distinct characteristics in terms of structure, flexibility, and implementation requirements:</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#311-isoiec-based-attestations-isoiec-18013-isoiec-23220-series","title":"3.1.1 ISO/IEC-Based attestations (ISO/IEC 18013 &amp; ISO/IEC 23220 Series)","text":"<p>These standards define highly structured specifications for:</p> <ul> <li>Data models</li> <li>Data formats</li> <li>Security mechanisms</li> <li>Signature formats</li> <li>Communication protocols</li> </ul> <p>They are designed to ensure strict interoperability and security, particularly for official and regulated attestations, such as:</p> <ul> <li>Mobile Driving Licences (mDLs) under ISO/IEC 18013-5, which standardises the issuance, storage, and verification of digital driving licences.</li> <li>More general mobile identity attestations under ISO/IEC 23220, expanding the use cases beyond driving licences.</li> </ul> <p>These specifications provide clear, predefined guidelines on how attestations should be issued, stored, and verified. However, they leave little room for flexibility, prioritizing high trust and compatibility across different systems.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#312-jwt-like-simple-attestations","title":"3.1.2 JWT-Like Simple attestations","text":"<p>Compared to ISO/IEC-based attestations, this category:</p> <ul> <li>Is not necessarily binary-encoded (primarily JSON-based).</li> <li>Uses JWT (JSON Web Token)-based attestations, which are simpler but widely used in practice.</li> <li>Does not define a specific data format or model\u2014these aspects must be defined separately through additional specifications.</li> </ul> <p>For example:</p> <ul> <li>The OAuth SD-JWT-VC draft [SD-JWT VC] defines data format specifications for attestations based on JWT &amp; SD-JWT. A roadmap [Fet2024] was previously discussed by Germany as a possible approach for structuring JWT-based attestations.</li> </ul> <p>While JWT-based attestations offer simplicity and widespread adoption in web authentication (e.g., OAuth2, OpenID Connect), they lack built-in advanced cryptographic proof mechanisms unless extended via additional specifications.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#313-w3c-verifiable-credentials-vcdm-11-20","title":"3.1.3 W3C Verifiable Credentials (VCDM 1.1 &amp; 2.0)","text":"<p>This category is like JWT-based attestations in that it is JSON-based, but it provides a fully-fledged, and extensible data model for verifiable attestations.</p> <p>The W3C Verifiable Credentials Data Model (VCDM) defines a general data model, offering a high-level structure but leaving many technical aspects open for further definition, including:</p> <ul> <li>Security mechanisms</li> <li>Signature formats</li> <li>Transport protocols</li> </ul> <p>Key Features of W3C VCDM:</p> <ul> <li>JSON-LD (Linked Data) Based: Ensures structured and interoperable data exchange but introduces complexity.</li> <li>Extensible Framework: Allows different implementations but requires additional specifications.</li> <li>Security and Signature Formats: Not inherently defined\u2014must be specified separately.</li> </ul> <p>To implement W3C VCDM-based attestations, separate specifications are needed for security mechanisms and signatures, such as:</p> <ol> <li>VC-JOSE-COSE [Jon2025]: Defines how to use JWT, SD-JWT, and COSE to secure attestations in the VCDM model.</li> <li>VC Data Integrity [Spo2025]: Provides a cryptographic proof format independent of JWT and COSE, relying on detached proofs (not embedded signatures) for better flexibility.</li> </ol> <p>These mechanisms offer different trade-offs, allowing PID Providers or Attestation Providers and Relying Parties to choose the appropriate security model based on their privacy, interoperability, and trust requirements.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#3131-sd-jwt-and-its-relation-to-w3c-vcdm","title":"3.1.3.1 SD-JWT and Its Relation to W3C VCDM","text":"<p>SD-JWT (Selective Disclosure JSON Web Token) is often mentioned in discussions related to W3C VCDM, but it serves a different purpose:</p> <ul> <li>Unlike W3C VCDM, SD-JWT is not a general framework for verifiable attestations but rather a technical specification that extends JWT to support selective disclosure.</li> <li>It allows attestation holders to disclose only selected parts of their attestations while keeping other data hidden, enhancing privacy and data minimisation.</li> <li>Since W3C VCDM does not define how attestations should be cryptographically secured, W3C introduced VC-JOSE-COSE, which enables the use of SD-JWT within the VCDM model.</li> </ul> <p>Thus, W3C VCDM and SD-JWT are not competing approaches\u2014rather, SD-JWT can be used as a security mechanism within W3C VCDM to provide privacy-preserving selective disclosure.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#4-interoperability-challenges-in-the-eudi-wallet","title":"4 Interoperability Challenges in the EUDI Wallet","text":"<p>To ensure interoperability in the EUDI Wallet, it is crucial that we do not allow open-ended choices or support multiple, competing attestation models beyond a strict minimum. Currently, the EUDI Wallet already supports two attestation models:</p> <ol> <li>ISO/IEC 18013/23220 series  mdoc (mobile document format) \u2013 A well-defined, standardised model primarily used for official government-issued attestations.</li> <li>A JSON-based attestation format \u2013 Providing flexibility for broader use cases while ensuring compatibility with widely used web-based ecosystems.</li> </ol> <p>Adding a third or more attestation models would introduce significant risks, including:</p> <ul> <li>Interoperability issues: Different ecosystems may struggle to communicate seamlessly if multiple, incompatible models are used.</li> <li>Increased security risks: Supporting multiple formats increases attack surfaces, making it harder to apply consistent security measures.</li> <li>Code duplication and complexity: Wallet implementations and Relying Parties would need to support multiple verification pathways, increasing development and maintenance costs.</li> </ul> <p>Thus, while diversity in attestation formats may seem beneficial in theory, in practice, it introduces unnecessary complexity, security risks, and operational burdens. A clear and limited selection of attestation models is essential to ensure a coherent, secure, and interoperable EUDI Wallet ecosystem.</p> <p>For all the above reasons, the requirement [PID_01] included in the the PID Rulebook of Annex 3 of the ARF still applies.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#5-privacy-considerations","title":"5 Privacy considerations","text":"<p>Privacy is a critical concern, especially regarding how attestation data is presented and verified. All the attestation categories mentioned above implement selective disclosure using a technique called salted and hashed data. This approach conceals specific attributes by hashing their values, allowing the user to select which attributes to disclose when presenting their attestations or attestations.</p> <p>However, this technique\u2014like user signatures on presentations\u2014leaves cryptographic \"fingerprints\" that could be exploited to track users across different interactions.</p> <p>While salting and hashing can obfuscate attestation data, it has inherent weaknesses, particularly in scenarios where PID Providers or Attestation Providers and Relying Parties collude or if they are subject to data breaches  as described in [Topic A]:</p> <ol> <li>Collusion Between or data breach of two Relying Parties: If two Relying Parties share collected attestations containing same hashes and signatures for the user, they can track and profile users across different interactions, compromising unlinkability. An attacker would be able to proceed to the same kind of attempt in case of  a data breach of the Relying Parties This specific scenario can be somehow mitigated with different techniques.</li> <li>Collusion Between or data breach of PID Provider or Attestation Provider and Relying Party: If the PID Provider or Attestation Provider and Relying Party share collected attestations containing same hashes and signatures for the user, they can track and profile users across different interactions, compromising unlinkability. An attacker would be able to proceed to the same kind of attempt in case of a  data breach of the PID Provider or Attestation Provider and Relying Party.</li> </ol> <p>To truly mitigate these risks, more advanced cryptographic techniques\u2014particularly Zero-Knowledge Proofs (ZKPs)\u2014are required.</p> <p>ZKPs provide a stronger privacy-preserving alternative by allowing users to:</p> <ul> <li>Prove statements (e.g., \"I am over 18\") without revealing the underlying data (e.g., date of birth).</li> <li>Ensure unlinkability, even if a PID Provider or Attestation Provider and Relying Party collude or are subject to a data breach.</li> <li>Prevent unnecessary data exposure, reducing the risk of attestation misuse.</li> </ul> <p>While hashed data with salts provides basic privacy protections and is essential when proving real identity, it does not ensure unlinkability and remains susceptible to PID Provider or Attestation Provider-Relying Party collusion or subjection  to a data breach. In contrast, ZKP-enhanced attestations offer a higher level of privacy assurance, enabling secure, verifiable, and unlinkable digital interactions while minimizing data exposure.</p> <p>Zero-Knowledge Proofs (ZKPs) are particularly useful in situations where you do not want\u2014and are not required\u2014to disclose specific personal information, such as your name or surname.</p> <p>However, if full identity verification is required (e.g., for opening a bank account or signing a contract), ZKPs cannot prevent linking, as the disclosed PII will inherently allow correlation. Therefore, ZKPs are most effective when proving eligibility without the need for full identity disclosure, enabling strong privacy protection in scenarios where anonymity and unlinkability are critical.</p> <p>Zero-Knowledge Proofs (ZKPs) can be integrated into any of the attestation categories mentioned above, and ongoing developments are actively working to implement ZKP support across different models. This is discussed in more depth in [Topic_G].</p> <p>A particularly important effort focuses on developing ZKP mechanisms using cryptographic algorithms that are widely recognised and standardised by by NIST and SOG-IS.</p> <p>Specifically, there is growing interest in leveraging ECDSA-based ZKPs, as ECDSA is already supported by secure hardware such as Hardware Security Modules (HSMs) and Secure Elements (SEs). This approach aims to ensure that ZKP can be implemented efficiently within the EUDI Wallet ecosystem while maintaining strong security guarantees and compatibility with level of assurance requested by the Regulation.</p> <p>However, it is important to note that these developments are still relatively new and require further validation and broad review by experts in the cryptographic and identity communities. Ensuring that these mechanisms meet security, performance, and regulatory requirements will be essential before they can be widely adopted in real-world deployments.</p> <p>For more details on these advancements, the following recent research articles explore ECDSA-based ZKPs and their potential applications:</p> <ul> <li>Efficient Zero-Knowledge Proofs for ECDSA-Secured Credentials [Paq2024]</li> <li>ZKPs for ECDSA: Enabling Secure and Scalable Privacy-Preserving Authentication [Fri2024]</li> </ul> <p>These developments mark a significant step toward making ZKPs practical, scalable, and compatible with the security requirements of the EUDI Wallet ecosystem, but further scrutiny and testing are necessary to confirm their feasibility in large-scale implementations.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#6-additions-and-changes-to-the-arf","title":"6 Additions and changes to the ARF","text":"<p>Based on the outcomes of the discussion of the focus group meeting, the requirement [PID_01] defined in Annex 3 of the ARF remains active. This requirement mandates the following:</p> <p>A PID Provider SHALL issue any PID in both the format specified in ISO/IEC 18013-5 [ISO/IEC 18013-5] and the format specified in [SD-JWT VC]</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#61-high-level-requirements-to-be-added","title":"6.1 High-Level Requirements to be added","text":"<p>The following High-Level Requirements will be added in Annex 3 of the ARF</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#requirement-1","title":"REQUIREMENT 1","text":"<p>A PID Provider issuing [SD-JWT VC]-compliant PIDs SHALL include the vct claim in their PIDs, where the vct claim will be a URN. A catalog linked in the PID Rulebook will associate this URN with SD-JWT VC type metadata which will include the same information as the PID Rulebook.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#62-high-level-requirements-to-be-changed","title":"6.2 High-Level Requirements to be changed","text":"<p>The following requirement is modified (changes in bold)</p> <p>Req_06bFor [SD-JWT VC]-compliant attestations, the Schema Provider for the Attestation Rulebook SHALL ensure that each claim name is either included in the IANA registry for JWT claims, or is Public Name as defined in RFC 7519, or is a Private name specific to the attestation type, which is defined by the vct claim. Note: [SD-JWT VC] does not discuss how to avoid conflicting claim names. Since SD-JWTs are a special kind of JWTs, the methods specified in RFC 7519 are applicable.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#63-descriptions-to-be-added-to-the-arf-main-document","title":"6.3 Descriptions to be added to the ARF main document","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/v-pid-rulebook/#7-references","title":"7 References","text":"Reference Description [Fet2024] SD-JWT VC DM Credential Format, available at https://github.com/danielfett/sd-jwt-vc-dmi [Fri2024] Matteo Frigo and abhi shelat, Anonymous credentials from ECDSA, Cryptology ePrint Archive, Paper 2024/2010, 2024, available at https://eprint.iacr.org/2024/2010 [Jon2025] Securing Verifiable Credentials using JOSE and COSE, available at https://www.w3.org/TR/vc-jose-cose/ [Paq2024] Christian Paquin, Guru-Vamsi Policharla, and Greg Zaverucha, Crescent: Stronger Privacy for Existing Credentials, Cryptology ePrint Archive, Paper 2024/2013, 2024, available at https://eprint.iacr.org/2024/2013 [Spo2025] Verifiable Credential Data Integrity 1.0, available at https://www.w3.org/TR/vc-data-integrity/ [SD-JWT VC] SD-JWT-based Verifiable Credentials (SD-JWT VC), IETF draft, available at https://www.ietf.org/archive/id/draft-ietf-oauth-sd-jwt-vc-08.html [Topic_G] Discussion Paper for the European Digital Identity Cooperation Group regarding Topic G: Zero Knowledge Proof, version 1.4"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/","title":"W transactional data for payments and other use cases","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#version-095-updated-28-april-2025","title":"Version 0.95, updated 28 April 2025","text":"<p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#topic-w-transactional-data-for-payments-and-other-use-cases","title":"Topic W - Transactional data for payments and other use cases","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic W: Transactional data for payments and other use cases.</p> <p>The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>This topic is to gather High level Requirements for transactional data needed by the Wallet in payment use cases and other use cases.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to the transactional data for payments and other use cases.</p> </li> <li> <p>Chapter 3 presents and discusses a list of identified issues, with suggested changes and/or new High-Level Requirements related to this topic.</p> </li> <li> <p>Chapter 4 presents a log of the additions and changes that will be made to High Level Requirements in the ARF as a result of discussing this topic with the Member States.</p> </li> <li> <p>Chapter 5 refers to other topics related to transactional data.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF main document as a result of discussions. </p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#2-legal-requirements-for-transactional-data-for-payments-and-other-use-cases","title":"2 Legal Requirements for Transactional Data for payments and other use cases","text":"<p>The [European Digital Identity Regulation] requires the Wallets to support and provide a function of strong user authentication, that could be used to authenticate the User accessing or using an online service that requires identification and strong authentication (by EU or local law or by contractual obligation). The online services might be of any type, provided by public or private Service Providers, in particular from  the areas of transport, energy, banking, financial services, social security, health, drinking water, postal services, digital infrastructure, education or telecommunications (but not limited to these ones only).</p> <p>Therefore the Wallet Solutions should provide functionality that enable wallet-Relying Parties (which are the Service Providers) to use the Wallets as an external tool of User authentication.</p> <p>Below are the actual excerpts from the Regulation, including the recitals and the articles that establish these requirements.</p> <p>Recital (62)</p> <p>Secure electronic identification and the provision of attestation of attributes should offer additional flexibility and solutions for the financial services sector to allow the identification of customers and the exchange of specific attributes necessary to comply with, for example, customer due diligence requirements under a future Regulation establishing the Anti Money Laundering Authority, with suitability requirements stemming from investor protection law, or to support the fulfilment of strong customer authentication requirements for online identification for the purposes of account login and of initiation of transactions in the field of payment services.</p> <p>Article 3 (Definitions)</p> <p>(51) 'strong user authentication' means an authentication based on the use of at least two authentication factors from different categories of either knowledge, something only the user knows, possession, something only the user possesses or inherence, something the user is, that are independent, in that the breach of one does not compromise the reliability of the others, and is designed in such a way as to protect the confidentiality of the authentication data;</p> <p>Article 5f(2) Where private relying parties that provide services, with the exception of microenterprises and small enterprises as defined in Article 2 of the Annex to Commission Recommendation 2003/361/EC, are required by Union or national law to use strong user authentication for online identification or where strong user authentication for online identification is required by contractual obligation, including in the areas of transport, energy, banking, financial services, social security, health, drinking water, postal services, digital infrastructure, education or telecommunications, those private relying parties shall, no later than 36 months from the date of entry into force of the implementing acts referred to in Article 5a(23) and Article 5c(6) and only upon the voluntary request of the user, also accept European Digital Identity Wallets that are provided in accordance with this Regulation.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#3-discussion","title":"3 Discussion","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#31-introduction","title":"3.1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#311-the-use-cases","title":"3.1.1 The Use Cases","text":"<p>The European Digital Identity Regulation requires the Wallets to provide a functionality of strong authentication to play a role of an authenticator for various services, while the Service Providers are obliged to accept them in their (online) services. Consequently, to enable such processes, the Wallet Units should be able to handle transactional data related to an (external) service and a transaction, to enable required functionality, provide a proof of transaction and auditability, as well as ensure compliance with other regulations where necessary (like Payment Services related legislation).  </p> <p>Most of the use cases will use the standard Wallet functionality (meaning w/o the need to involve \"transactional data\"). However for the following use cases it is necessary to handle the transactional data: + payments, + remote qualified electronic signature.   </p> <p>In this paper we focus on the use cases, where the transactional data is involved. </p> <p>At the same time, [OID4VP] provides so called \"transaction data\" mechanism that: </p> <p>enables a binding between the User's identification/authentication and the user\u2019s authorization, for example to complete a payment transaction, or to sign specific document(s) using QES (Qualified Electronic Signatures)</p> <p>This mechanism seems to be suitable for the purpose of handling the transactional data.  </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#312-the-role-of-the-wallet","title":"3.1.2 The Role of the Wallet","text":"<p>In general the life cycle of a Wallet Unit in the role of an authenticator, comprises the following phases: + registration - registering the Wallet as an authenticator for a service, that includes User identification and authentication, User consent (for the registration) and linking a Wallet Unit with a service and User's account in that service, + authentication - performing User authentication in an on-line service, on request of that service, + de-registration - unlinking the Wallet Unit from a service and the User's account in that service.</p> <p>As the result of registration, a specific Attestation (\"service credentials\") is issued by the Service Provider or other Wallet-Relying Party (depending on the scheme) to the Wallet Unit. The registration relies on the standard Attestation issuance processes, and the data included in this Attestation are defined by the Service Provider.</p> <p>In the authentication phase, the Wallet Unit will receive the presentation request of the \"service credentials\". The presentation is a standard process for the Wallet User, however the request should include transactional data (unique for each service transaction). In some cases, like payment authentication, the Wallet Unit should display to the User (some) transaction related data (that should be inlcuded in the transactional data).</p> <p>After the User accepts the presentation request, the Wallet response should include the transactional data, as well as piece of data generated dynamically by the Wallet Unit, for each such presentation, to provide a proof of the User's approval and meet compliance needs where necessary (eg. PSD2 dynamic linking). </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#313-the-goals-of-the-discussion","title":"3.1.3 The Goals of the Discussion","text":"<p>The goal of the discussion is to work out a set of generic HLRs that are not tied to any specific use case, unless justified. The intention is to keep the Wallet's role as limited as possible - just as an enabler of the use cases. </p> <p>The legal text sets out the requirement to use the Wallet as a strong authenticator in the context of \"online services\". However ARF envisions transactions initiated in/from the same Wallet Unit or by another device in proximity mode. </p> <p>To summarise, there are several fundamental questions to be discussed and answered before proposing the set of HLRs. These questions are presented in the next sections.</p> <p>Note: This document is ONLY intended to clarify or create the high-level requirements related to this topic. The necessary technical specifications (including any policy documents) will be developed by the European Commission after an agreement on the requirements has been reached.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#32-question-for-discussion","title":"3.2 Question for Discussion","text":"<p>Here below is the list of the fundamental questions that needs answering prior to drafting HLRs.</p> <p>As the outcome: + the set of new HLRs requirements is to be delivered in the ARF Annex 2 for [Topic 20] (Strong User authentication for electronic payments), + new Topics may be introduced in the ARF Annex 2 (to cover non-payment use cases), + modification or amendments of other HLRs and Topics may be proposed.</p> <p>Question 1: Are rules for representing the contents of a transaction necessary and if so, who should specify these? </p> <p>Question 2: Should it be possible to send a transaction to/from one Wallet User to another Wallet User?  </p> <p>Question 3: Should it be possible for a Wallet-Relying Party to define the structure and contents of a transaction? </p> <p>Question 4: Should it be possible to define the structure and contents of a transaction type for a business area such as payments? </p> <p>Question 5: If transactions types are defined for a business area, who should be responsible for defining and maintaining these? </p> <p>Question 6: Should it be possible for a EUDI Wallet to process a transaction in a structured way? </p> <p>Question 7: Is a transaction restricted to authentication and authorization? </p> <p>Question 8: Should it be possible to include the actual contents in a transaction or should it be a representation (hash) of it?  </p> <p>Question 9: What is the minimum set of information to be specified for a transaction? </p> <p>Question 10: Should batch transactions be supported? </p> <p>Question 11: What are the requirements for the proof of transaction?</p> <p>Question 12: Are there / what are the requirements to ensure a transaction is processed only once?</p> <p>Question 13: Should a log of all transactions carried out through the European Digital Identity Wallet be accessible via a common dashboard?</p> <p>On the basis of the discussion and the feedback from Member States' representatives, the High-Level Requirements have been proposed as specified in the section 4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#4-current-hlrs-and-proposals-of-changes","title":"4 Current HLRs and Proposals of Changes","text":"<p>The topics of the ARF Annex 2 related to the Topic W are the following: + Topic 20 - Strong User authentication for electronic payments, + Topic 16 - Signing documents with a Wallet Unit.</p> <p>Topic 20 does not have any requirements yet, so the set of new ones is proposed in the section 4.1.</p> <p>The HLRs set out in the Topic 16 have been reviewed too, however no changes have been identified as necessary from the Topic W perspective.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#41-topic-20-strong-user-authentication-for-electronic-payments-and-other-use-cases","title":"4.1 Topic 20 - Strong User Authentication for Electronic Payments and Other Use Cases","text":"Index Requirement specification Proposal TD_01 The Wallet SHALL be able to process and render transactional data included in a presentation request. Rules for representing the content, structure, rendering and scope of information to be logged in a Wallet Unit is to be defined by an industry sector or a Relying Party in an Attestation Rulebook (according to [Topic 12]). New TD_02 TO BE REPLACED The Wallet Unit SHALL be able to sign the transactional data with the private key of the attestation that was the subject of the presentation request and return it in the response to the Relying Party as a proof of transaction. New TD_02 NEW VERSION PROPOSAL The Wallet Unit SHALL deliver to the requesting Relying Party a response, that (if required in a given use case) includes transactional data or its parts. The scope of transactional data included in the response is set out in an Attestation Rulebook or information provided to the Wallet Unit in the presentation request. Note: Such a response, signed with the private key of the attestation that was the subject of the presentation request, constitutes as a proof of transaction. This requirement is met by use of key binding in [SD-JWT-VC]. New TD_03 The Wallet Unit SHALL be able to dynamically adapt the dialog (message) displayed to the User (like font size and colour, background colour, text  position, labels in the buttons to 'approve' or 'reject' a transaction) basing on the transactional data contained in the presentation request, according to rules set out in an Attestation Rulebook or information provided to the Wallet Unit in the presentation request. New TD_04 The Wallet Unit SHALL be able to generate and include in an attestation presentation response a unique, cryptographically random value with the sufficient entropy (authentication code), according to rules set out in an Attestation Rulebook or information provided to the Wallet Unit in the presentation request. Note: For payment SCA this requirement is met by use of key binding in [SD-JWT-VC]. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#51-changes-to-other-topics","title":"5.1 Changes to other topics","text":"<p>At this stage no changes to other topics have been identified.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#52-relation-to-risk-register-tbd","title":"5.2 Relation to Risk Register (tbd)","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the Relying Party registration:</p> Risk type Risk id Related risk titles <p>More specifically, [RiskRegister]  describes the following threats to a Wallet:</p> ID Threat description Related risks"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":"<p>See sections 4 and 5 above. In addition, transactional data related aspects in the main text of the ARF will be updated accordingly.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/w-transactional-data-for-payments-and-other-use-cases/#7-references","title":"7 References","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0 [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [Topic 20] Topic 20 - Strong User authentication for electronic payments [Topic 16] Topic 16 - Signing documents with a Wallet Unit [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [CIR 2024/2979] Commission Implementing Regulation (EU) 2024/2979 of 28 November 2024 laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the integrity and core functionalities of European Digital Identity Wallets) [OID4VP] OpenID for Verifiable Presentations - draft 24 [GDPR] Regulation (EU) 2016/679 of the European Parliament and of the Council of 27 April 2016 on the protection of natural persons with regard to the processing of personal data and on the free movement of such data, and repealing Directive 95/46/EC (General Data Protection Regulation) [PSD2] Directive (EU) 2015/2366 of the European Parliament and of the Council of 25 November 2015 on payment services in the internal market, amending Directives 2002/65/EC, 2009/110/EC and 2013/36/EU and Regulation (EU) No 1093/2010, and repealing Directive 2007/64/EC [RTS SCA] Commission Delegated Regulation (EU) 2018/389 of 27 November 2017 supplementing Directive (EU) 2015/2366 of the European Parliament and of the Council with regard to regulatory technical standards for strong customer authentication and common and secure open standards of communication"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/","title":"X relying party registration","text":"<p>Home Version 0.4, updated 25 April 2025</p> <p>Link to GitHub discussion</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#topic-x-relying-party-registration","title":"Topic X - Relying Party Registration","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#legal-notice-all-legal-information-and-excerpts-documented-in-section-2-is-based-on-the-european-digital-identity-regulation-eu-20241183-and-the-current-public-consultation-draft-of-the-commission-implementing-regulation-for-relying-party-registration-the-latter-is-undergoing-changes-due-to-consultation-process-and-thus-this-document-may-need-modification-after-the-publication-and-approval-of-the-final-cir","title":"Legal notice: All legal information and excerpts documented in Section 2 is based on the European Digital Identity Regulation (EU) 2024/1183 and the current public consultation draft of the Commission Implementing Regulation for Relying Party registration. The latter is undergoing changes due to consultation process, and thus this document may need modification after the publication and approval of the final CIR.","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#1-introduction","title":"1 Introduction","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#11-discussion-paper-topic-description","title":"1.1 Discussion Paper Topic Description","text":"<p>This document is the Discussion Paper for the European Digital Identity Cooperation Group regarding Topic X: Relying Party registration. The ARF Development Plan [ARF_DevPlan] describes this Topic as follows:</p> <p>This topic is to gather High level Requirements (HLR) for Relying Party registration.\u00a0The HLR relate to information necessary for authentication to access European Digital Identity Wallets, and to relying parties\u2019 contact details and their intended use of wallets, including what data relying parties may ask users for.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#12-key-words","title":"1.2 Key Words","text":"<p>This document uses the capitalised key words 'SHALL', 'SHOULD' and 'MAY' as specified in RFC 2119, i.e., to indicate requirements, recommendations and options specified in this document. In addition, 'must' (non-capitalised) is used to indicate an external constraint, for instance a self-evident necessity or a requirement that is mandated by an external document. The word 'can' indicates a capability, whereas other words, such as 'will', 'is' or 'are' are intended as statements of fact.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#13-document-structure","title":"1.3 Document Structure","text":"<p>The document is structured as follows:</p> <ul> <li> <p>Chapter 2 presents the legal requirements for functionality related to the Relying Party registration.</p> </li> <li> <p>Chapter 3 presents and discusses a list of identified issues, with suggested changes and/or new High-Level Requirements related to this topic.</p> </li> <li> <p>Chapter 4 presents a log of the additions and changes that will be made to High Level Requirements in the ARF as a result of discussing this topic with Member States.</p> </li> <li> <p>Chapter 5 refers to other topics related to Relying Party registration.</p> </li> <li> <p>Chapter 6 presents the additions and changes that will be made to the ARF main document as a result of discussions.</p> </li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#2-legal-requirements-for-relying-party-registration","title":"2 Legal Requirements for Relying Party registration","text":"<p>Two legal texts impose direct requirements on the Relying Party registration: The evolving Draft of the CIR for RP-Registration and the [European Digital Identity Regulation]. This section recaps the respective legal requirements from these sources.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#21-european-digital-identity-regulation-about-relying-party-registration","title":"2.1 [European Digital Identity Regulation] about Relying Party registration","text":"<p>The [European Digital Identity Regulation] requires the Relying Parties to be registered. It specifies the following requirements related to Relying Party registration:</p> <ol> <li>Setting up national registers of registered wallet-relying parties in each Member State</li> <li>Registering Relying Party needs to provide at minimum, a definite set of information necessary to authenticate to EUDI Wallets including the intended use and indication of data requested for this use from the user</li> <li>Relying Parties shall only request data that is registered for the intended use</li> <li>Member States shall make the Relying Party register information available to the public in a manner that is both human and machine-readable</li> <li>Member States shall provide a common mechanism for authenticating the Relying Parties in the European Digital Identity ecosystem</li> <li>An Intermediary that is acting on behalf of relying parties is deemed to be a Relying Party, but shall not store data exchanged between the EUDI Wallet user and intermediated Relying Party</li> <li>The European Commission shall establish technical specifications and procedures to support the registration process, publication of the registries, updates of registration information by means of implementing acts.</li> </ol> <p>Below are the actual excerpts from the Regulation, including the recitals and the Articles that establish these requirements.</p> <p>Recital (17)</p> <p>For the purposes of registration, relying parties should provide the information necessary to allow for their electronic identification and authentication towards European Digital Identity Wallets. When declaring their intended use of the European Digital Identity Wallet, relying parties should provide information regarding the data that they will request, if any, in order to provide their services and the reason for the request. Relying party registration facilitates the verification by Member States with regard to the lawfulness of the activities of the relying parties in accordance with Union law. The obligation to register provided for in this Regulation should be without prejudice to obligations laid down in other Union or national law, such as the information to be provided to the data subjects pursuant to the Regulation (EU) 2016/679. Relying parties should comply with the safeguards offered by Articles 35 and 36 of that Regulation, in particular by performing data protection impact assessments and by consulting the competent data protection authorities prior to data processing where data protection impact assessments indicate that the processing would result in a high risk. Such safeguards should support the lawful processing of personal data by relying parties, in particular with regard to special categories of data, such as health data. The registration of relying parties is intended to enhance transparency and trust in the use of European Digital Identity Wallets. Registration should be cost-effective and proportionate to the related risks in order to ensure uptake by service providers. In that context, registration should provide for the use of automated procedures, including the reliance on and the use of existing registers by Member States, and should not entail a pre-authorisation process. The registration process should enable a variety of use-cases that can differ in terms of mode of operation, whether online or in offline mode, or in terms of the requirement to authenticate devices for the purposes of interfacing with the European Digital Identity Wallet. Registration should apply exclusively to relying parties providing services by means of digital interaction.</p> <p>Recital (18)</p> <p>Safeguarding Union citizens and residents in the Union against the unauthorised or fraudulent use of European Digital Identity Wallets is of high importance for ensuring trust in and for the wide uptake of European Digital Identity Wallets. Users should be provided with effective protection against such misuse. In particular, when facts that form the basis for fraudulent or otherwise illegal use of a European Digital Identity Wallet are established by a national judicial authority in the context of another procedure, supervisory bodies that are responsible for European Digital Identity Wallet issuers should, upon notification, take the necessary measures to ensure that the registration of the relying party and the inclusion of relying parties in the authentication mechanism are withdrawn or suspended until the notifying authority confirms that the irregularities identified have been remedied.</p> <p>Article 3</p> <p>Definitions</p> <p>\u2018relying party\u2019 means a natural or legal person that relies upon electronic identification, European Digital Identity Wallets or other electronic identification means, or upon a trust service;</p> <p>Article 5b - European Digital Identity Wallet-Relying Parties</p> <ol> <li>Where a relying party intends to rely upon European Digital Identity Wallets for the provision of public or private services by means of digital interaction, the relying party shall register in the Member State where it is established.</li> <li>The registration process shall be cost-effective and proportionate-to-risk. The relying party shall provide at least: (a) the information necessary to authenticate to European Digital Identity Wallets, which as a minimum includes: (i) the Member State in which the relying party is established; and (ii) the name of the relying party and, where applicable, its registration number as stated in an official record together with identification data of that official record; (b) the contact details of the relying party; \u00a9 the intended use of European Digital Identity Wallets, including a indication of the data to be requested by the relying party from users.</li> <li>Relying parties shall not request users to provide any data other than that indicated pursuant to paragraph 2, point \u00a9.</li> <li>Paragraphs 1 and 2 shall be without prejudice to Union or national law that is applicable to the provision of specific services.</li> <li>Member States shall make the information referred to in paragraph 2 publicly available online in electronically signed or sealed form suitable for automated processing.</li> <li>Relying parties registered in accordance with this Article shall inform Member States without delay about any changes to the information provided in the registration pursuant to paragraph 2.</li> <li>Member States shall provide a common mechanism for allowing the identification and authentication of relying parties, as referred to in Article 5a(5), point \u00a9. \u2026</li> <li>Intermediaries acting on behalf of relying parties shall be deemed to be relying parties and shall not store data about the content of the transaction.</li> <li>By ... [6 months from the date of entry into force of this amending Regulation], the Commission shall establish technical specifications and procedures for the requirements referred to in paragraphs 2, 5 and 6 to 9 of this Article by means of implementing acts on the implementation of European Digital Identity Wallets as referred to in Article 5a(23). Those implementing acts shall be adopted in accordance with the examination procedure referred to in Article 48(2). ...</li> </ol>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#22-draft-cir-on-relying-party-registration","title":"2.2 Draft CIR on Relying Party registration","text":"<p>The public consultation version of the [Draft of the CIR for RP-Registration] specifies the following requirements related to Relying Party registration:</p> <ol> <li> <p>The roles:</p> </li> <li> <p>wallet-relying party - a type of the relying party; includes: service providers, PID providers, attestation providers, trust service providers and intermediaries;</p> </li> <li> <p>registrar</p> </li> <li> <p>Setting up at each Member State one or more national registers of registered wallet-relying parties.</p> </li> <li>Make this information available to the public in a manner that is both human and machine-readable - via an API and website. The information made available shall be signed or sealed.</li> <li>Member States should set out and publish one or more registration policies applicable to national registers set up in their territory</li> <li>Wallet-relying parties should provide the necessary information (during registration process), including their entitlement(s), for inclusion in the national registers</li> <li>Registrars should set up online and, where applicable, automated registration processes and shall verify registration information provided by the wallet-relying party in an automated manner where possible.</li> <li> <p>The registrant receives:</p> </li> <li> <p>one or more \u2018Wallet-Relying Party Access Certificates\u2019, and</p> </li> <li> <p>one or more 'Wallet-Relying Party Registration Certificates'</p> </li> <li> <p>Wallets authenticate wallet-relying parties with use of the Wallet-Relying Party Access Certificates.</p> </li> <li>In a transaction, a wallet solution shall inform the wallet user whenever the wallet-relying party is asking for more information than what they have registered as intended use and the user will have possibility to reject the transaction (as well as to make a claim or report the case to a competent authority).</li> <li>The registrar may suspend or cancel the registration with or without prior notice to the affected wallet-relying party based on proportionality assessment, taking into account the impact on the fundamental rights, privacy, security and confidentiality of the users in the eco-system, as well as the severity of the disruption caused by the suspension or cancellation and the associated costs, both for the wallet-relying party and the user.</li> </ol> <p>The list of information to be provided by a wallet-relying party during registration (as per Annex I):</p> <ul> <li>official name of the wallet-relying party</li> <li>one or more official identifiers of the wallet-relying party (EORI, LEI, VAT number...)</li> <li>physical address and member state if not present in official identifier</li> <li>URL belonging to the wallet-relying party where applicable</li> <li>Detailed contact information</li> <li>description of the type of services provided</li> <li>a list of the attributes that the relying party intends to request</li> <li>a description of intended use of the data</li> <li>indication whether the wallet-relying party is a public sector body</li> <li>applicable entitlement(s) of the wallet-relying party</li> </ul> <p>The list of possible entitlements (as per Annex I):</p> <ul> <li>Service_Provider</li> <li>QEAA_Provider</li> <li>Non_Q_EAA_Provider</li> <li>PUB_EAA_Provider</li> <li>PID_Provider</li> <li>QCert_for_ESeal_Provider</li> <li>QCert_for_ESig_Provider</li> <li>rQSigCDs_Provider</li> <li>rQSealCDs_Provider</li> <li>ESig_ESeal_Creation_Provider</li> <li>WAC_Provider</li> </ul> <p>Requirements for electronic signatures or seals applied to the information made available on registered wallet-relying parties (as per Annex II):</p> <ul> <li>shall be JSON advanced electronic signatures at conformance level B-B, B-T or B-LT, and comply with ETSI TS 119 182-1 (JAdES baseline signatures)</li> </ul> <p>Requirements on the API for the register (as per Annex II):</p> <ul> <li>be a REST API, supporting JSON as format with JAdES or ASIC signature format</li> <li>allow any requestor, without prior authentication, to make (search/read) requests to the register, for information about a wallet-relying party</li> <li>be published and documented using OpenAPI version 3 </li> </ul> <p>Requirements for wallet-relying party access certificates (as per Annex IV):</p> <ul> <li>issued under certificate policy and certificate practice statement compliant with IETF RFC 3647</li> <li>certificate to include: a clear description of the public key infrastructure hierarchy and certification paths from the end-entity wallet-relying party access certificates up to the top of the hierarchy used for issuing them, while indicating the expected trust anchor(s) in such hierarchy and paths; - a machine processable reference to the applicable certificate policy and certificate practice statement; and - the information referred to in Annex I, points 1, 2, 3, 5(b) and 5(d)</li> </ul> <p>Requirements for wallet-relying party registration certificates (as per ANNEX V):</p> <ul> <li>issued under certificate policy and certificate practice statement compliant with IETF RFC 3647 and IETF RFC 5755</li> <li>certificate to include: - the location where the certificate supporting the advanced electronic signature or advanced electronic seal on that certificate is available, for the entire certification path to be built up to the expected trust anchor in the public key infrastructure hierarchy used by the provider; - machine processable reference to the applicable certificate policy and certificate practice statement; - registration information referred to in Annex I (points 1, 2 and 8; and - to comply with IETF RFC 5755 to express attributes in relation to wallet-relying party registration certificates</li> </ul> <p>Below are selected excerpts from the public consultation [Draft of the CIR for RP-Registration], including the recitals and the Articles that establish these requirements.</p> <p>Recital (1)</p> <p>Member States should establish and maintain registers of registered wallet-relying parties established in their territory.</p> <p>Recital (4)</p> <p>In order to facilitate the consultation of the information on registered wallet-relying parties across the Union, Member States should make this information available to the public in a manner that is both human and machine-readable.</p> <p>Recital (6)</p> <p>As registration policies are a useful tool for providing clear guidance to the wallet-relying parties on the registration process, Member States should set out and publish the registration policies applicable to registers set up in their territory.</p> <p>Recital (7)</p> <p>[...] another objective of the relying party registration is to facilitate the verification by Member States of the lawfulness of the activities of the wallet-relying parties. Therefore, wallet-relying parties should provide, for inclusion in the registers the necessary information, including their entitlement(s).</p> <p>Recital (8)</p> <p>In order to ensure that the registration process is cost-effective and proportionate-to risk, and to strike an appropriate balance between meeting a high level of transparency and safety on the one hand and ensuring uptake by service providers on the other hand, registrars should set up online and, where applicable, automated registration processes for wallet-relying parties that are easy to use and they should verify applications for registration without undue delay.</p> <p>Recital (10)</p> <p>[...] wallet-relying parties should use wallet-relying party access certificates when they identify themselves to wallet units. To guarantee interoperability of those certificates across all wallets provided within the Union, wallet-relying parties access certificates should adhere to common requirements set-out in the Annex to this Regulation</p> <p>Recital (11)</p> <p>[...] wallet-relying parties are not to request users to provide any data other than those indicated for the intended use of wallets during the registration process. Wallet users should be enabled to verify the registration data of wallet-relying parties. To enable wallet users to verify that the attributes being requested by the wallet-relying party are within the scope of their registered attributes, Member States may require the issuance of wallet-relying party registration certificates to registered wallet-relying parties. To ensure the interoperability of the wallet-relying party registration certificates, Member States should ensure that those certificates meet the requirements and standards set out in the Annex of this Implementing Regulation.</p> <p>Recital (12) [...] registrars should be able to suspend or cancel the registration of any wallet-relying party without prior notice where the registrars have reason to believe that the registration contains information which is not accurate, not up to date or misleading, the wallet-relying party is not compliant with the registration policy or the wallet-relying party is otherwise acting in breach of Union or national law in a way that relates to their role as a wallet-relying party. In order to safeguard the stability of the wallet ecosystem, the decision to suspend or cancel a registration should be proportionate to the service disruption caused by the suspension or cancellation and the associated cost and inconvenience for the service provider and the user. For the same reason, supervisory bodies are to be enabled to suspend and cancel the registration required pursuant to Article 46a(4), point (f) of Regulation (EU) No 910/2014.</p> <p>Article 2</p> <p>Key definitions</p> <p>\u2018wallet-relying party\u2019 means a relying party that intends to rely upon wallet units for the provision of public or private services by means of digital interaction;</p> <p>\u2018register of wallet-relying parties\u2019 means an electronic register used by a Member State to make information on wallet-relying parties registered in that Member State publicly available as set out in Article 5b(5) of Regulation (EU) No 910/2014;</p> <p>\u2018provider of wallet-relying party access certificates\u2019 means a natural or legal person mandated by a Member State to issue wallet-relying party access certificates to wallet-relying parties registered in that Member State;</p> <p>\u2018wallet-relying party access certificate\u2019 means a certificate for electronic seals or signatures authenticating and validating the wallet-relying party issued by a provider of wallet-relying party access certificates;</p> <p>\u2018registrar of wallet-relying parties\u2019 means a body responsible for establishing and maintaining a list of registered wallet-relying parties established in their territory who has been designated by a Member State;</p> <p>\u2018wallet-relying party registration certificate\u2019 means a data object that indicates the attributes the relying party has registered to intend to request from users;</p> <p>\u2018provider of wallet-relying party registration certificates\u2019 means a natural or legal person mandated by a Member State to issue wallet-relying party registration certificates to wallet-relying parties registered in that Member State.</p> <p>Article 3</p> <p>National registers</p> <p>2 Member States shall make the information set out in Annex I on registered wallet-relying parties from all national registers publicly available online, both in human readable form and in a form suitable for automated processing</p> <p>3. The information shall be available through a single national application programming interface (\u2018API\u2019) and through a national website. It shall be electronically signed or sealed by or on behalf of the registrar, in accordance with the requirements set out in Section 1 of Annex II.</p> <p>Article 4</p> <p>Registration policies</p> <p>1. Member States shall lay down and publish one or more national registration policies applicable to national registers.</p> <p>3. The registration policy shall cover at least the following points:</p> <p>(a) the identification and authentication procedures applicable to wallet-relying parties during the registration process;</p> <p>(b) the supporting documentation to be provided by the wallet-relying party to establish their identity, business registration, any applicable entitlement(s), and other relevant information that is required under the registration policy;</p> <p>\u00a9 where applicable, the description of the authentic sources or other official electronic records in the Member State where the register is set up, that can be relied upon to provide accurate data, information or other evidence required as part of the registration process;</p> <p>(d) where applicable, the automated means supported to enable wallet-relying parties to register or to update an existing registration;</p> <p>(e) the means of redress available to wallet-relying parties under the law of the Member State where the register is set up;</p> <p>(f) the rules and procedures for the verification of the identity of the registered wallet-relying party and of any other relevant information provided by that party.</p> <p>Article 6</p> <p>The registration process</p> <p>3. Registrars shall verify, where applicable, in an automated manner:</p> <p>(a) the accuracy and validity of the information required under Article 5;</p> <p>(b) where applicable, the power of attorney of a representative of the wallet-relying party in accordance with the laws and procedures of the Member State where the register is set up;</p> <p>\u00a9 the type of entitlement(s) of the wallet-relying party as set out in Annex I.</p> <p>4. The verification of the information referred to in paragraph 3 shall include an authenticity and validity assessment of the provided information against the supporting documentation provided by the wallet-relying parties and against any authentic sources or other official electronic records in the Member State where the register is set up and to which the registrars have access in accordance with national law. The verification of entitlements of wallet-relying parties shall be carried out in accordance with Annex III.</p> <p>5. When a wallet-relying party no longer intends to rely upon wallet units for the provision of public or private services under a specific registration, it shall notify the relevant registrar without undue delay and request the cancellation of that registration.</p> <p>Article 7</p> <p>Wallet-relying party access certificates</p> <p>1. Member States shall ensure that providers of wallet-relying party access certificates issue wallet-relying party access certificates to wallet-relying parties registered in accordance with the requirements set out in Article 4 to Article 6 of this Regulation.</p> <p>2. Member States shall set up dedicated certificate policies and certificate practice statements in accordance with the requirements set out in Annex IV. Member States shall ensure that wallet-relying party access certificates meet the requirements set out in Annex IV.</p> <p>Article 8</p> <p>Wallet-relying party registration certificates</p> <p>1. Member States may require providers of wallet-relying party registration certificates to issue wallet-relying party registration certificates to wallet-relying parties registered in accordance with the requirements set out in Article 4 to Article 6 of this Regulation.</p> <p>2. Where Member States require the provision of wallet-relying party registration certificates, Member States shall ensure that these certificates meet the requirements set out in Annex V.</p> <p>Article 9 Suspension and cancellation</p> <p>1. Registrars may suspend or cancel a registration of a wallet-relying party where such a suspension or cancellation is requested by a supervisory body pursuant to Article 46a(4), point (f) of Regulation (EU) No 910/2014 or where the registrars have reasons to believe that: (a) the registration contains information which is not accurate, not up to date or misleading; (b) the wallet-relying party is not compliant with the registration policy; \u00a9 the wallet-relying party is requesting more attributes than what they have registered in accordance with Article 5 and Article 6 of this Regulation; (d) the wallet-relying party is otherwise acting in breach of Union or law of that Member State in a way that relates to their role as a wallet-relying party;</p> <p>4. When considering the suspension or cancellation in accordance with Article 9 paragraph 2, the registrar shall conduct a proportionality assessment, taking into account the impact on the fundamental rights privacy, security and confidentiality of the users in the eco-system, as well as the severity of the disruption caused by the suspension or cancellation and the associated costs, both for the wallet-relying party and the user. Based on the result of this assessment, the registrar may suspend or cancel the registration with or without prior notice to the affected wallet-relying party.</p> <p>ANNEX I</p> <p>(summary)</p> <p>Information regarding wallet-relying parties</p> <ul> <li>name of the wallet-relying party as stated in official record</li> <li>one or more identifiers of the wallet-relying party (EORI, LEI, VAT number...)</li> <li>physical address</li> <li>Detailed contact information</li> <li>a description of the type of services provided</li> <li>a list of the attributes, that the relying party intends to request</li> <li>description of intended use of the attributes</li> <li>indication whether the wallet-relying party is a public sector body</li> <li>applicable entitlement(s) of the wallet-relying party</li> </ul> <p>The possible entitlements of the wallet-relying party:</p> <ul> <li>Service_Provider</li> <li>QEAA_Provider</li> <li>Non_Q_EAA_Provider</li> <li>PUB_EAA_Provider</li> <li>PID_Provider</li> <li>QCert_for_ESeal_Provider</li> <li>QCert_for_ESig_Provider</li> <li>rQSigCDs_Provider</li> <li>rQSealCDs_Provider</li> <li>ESig_ESeal_Creation_Provider</li> <li>WAC_Provider</li> </ul> <p>5. Detailed contact information of the wallet-relying party, one or more, including: (a) a website for providing helpdesk and support; (b) a phone number where the wallet-relying party can be contacted for matters pertaining to its registration and intended use of the wallet units; \u00a9 a digital address where the wallet-relying party can be contacted for matters pertaining to its registration and intended use of the wallet units; (d) an e-mail address where the wallet-relying party can be contacted for matters pertaining to its registration and intended use of the wallet units;</p> <p>7. A list of the attributes that the relying party intends to request, expressed as a friendly name and a technical name including the namespace that the attributes are grouped under in a machine-readable format for automated processing, with an indication if they are mandatory or optional.</p> <p>ANNEX II</p> <p>(summary)</p> <p>1. REQUIREMENTS ON ELECTRONIC SIGNATURES OR SEALS APPLIED TO THE INFORMATION MADE AVAILABLE ON REGISTERED WALLET-RELYING PARTIES</p> <ul> <li>The file format used by the API: be JavaScript Object Notation (JSON)</li> <li>electronic signatures and electronic seals - JSON advanced electronic signatures at conformance level B-B, B-T or B-LT, comply with ETSI TS 119 182-1 V1.2.1 (JAdES baseline signatures)</li> </ul> <p>2. REQUIREMENTS ON THE SINGLE API</p> <ul> <li>REST API, supporting JSON data format</li> <li>published as OpenAPI version 3</li> <li>allow any requestor, without prior authentication, to make (search/read) requests to the register</li> <li>provide security functions in order to ensure the availability and integrity of the API and the information available through it. The API shall be secure by default and by design.</li> </ul> <p>ANNEX III</p> <p>(summary)</p> <p>Source of documentary evidence for the verification of entitlements of wallet-relying parties</p> <ul> <li>verification of qualified trust service providers - shall be based on the national trusted lists</li> <li>verification of non-qualified trust service providers - shall be based on the national trusted lists or on national MS verification procedures (set out in their registration policies)</li> <li>verification of providers of person identification data - shall be based on the list of providers of person identification data published by the Commission in accordance with Article 5a(18) of Regulation (EU) No 910/2014</li> <li>verification of providers of electronic attestations of attributes issued by or on behalf of a public sector body responsible for an authentic source - shall be based on the list published by the Commission in accordance with Article 45f(3) of Regulation (EU) No 910/2014</li> </ul> <p>ANNEX IV</p> <p>(summary)</p> <p>Requirements for wallet-relying party access certificates</p> <ul> <li>X.509 certificate with certificate policy and certificate practice statement</li> <li>shall comply with IETF RFC 3647</li> <li>plus additional requirements set out in the Annex IV</li> </ul> <p>ANNEX V</p> <p>(summary)</p> <p>Requirements for wallet-relying party registration certificates</p> <ul> <li>certificate policy and certificate practice statement shall comply with IETF RFC 3647 and IETF RFC 5755</li> <li>includes the information referred to in Annex I, points 1, 2 and 8;</li> <li>expresses attributes in way compliant with IETF RFC 5755;</li> <li>plus additional requirements set out in the Annex V.</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#3-discussion","title":"3 Discussion","text":"<p>The Relying Party registration covers from functional perspective of the ARF and the European Digital Identity ecosystem the following aspects: </p> <p>1) the Registrar function for which the Member States are responsible to organise this function, register and a publicly accessible API at a national level (based on the future technical specifications and the CIR provided by the European Commission), 2) the registration process mandated to be be followed by all Relying Parties resulting in issuance of one or more Wallet-Relying Party Access Certificates (RPAC) and as many Wallet-Relying Party Registration Certificates (RPRC) as the Relying Party has dedicated intended uses (use cases, services provided to the EUDI Wallet Users), 3) the operational use of aforementioned certificates in Relying Party transactions with the EUDI Wallet Units and their Users, 4) handling the functional revocation of Relying Party certificates as necessitated by the legal requirements,  5) how the registration and operational use of the RP registration certificates shall be done when the Relying Party relies upon another Relying Party that is acting on its behalf (an intermediary) to provide its intended use towards the Wallet Units.</p> <p>Having analysed the combined legal requirements, the current ARF (release 1.8), as well as recent German architecture concept proposals ([German non-paper on RP Authn], [German non-paper on WRP with attestations], that together contain considerable amount of technical detail and that were discussed indirectly in the context of topic D already), this section raises the following topics for discussion at level of High-Level Requirements relevant for the ARF:</p> <ul> <li>Requirements needed to support registrar issuance of RP registration certificates for proximity use cases, not just remote (specifically, support of both JWT and CWT formats of the RP registration certificates, support of both JOSE and COSE signature)</li> <li>Requirements impacted from the fact that the Relying Party has an access certificate per Relying Party Instance (either in remote or proximity scenarios)</li> <li>Requirements impacted from the fact that registration certificates are issued per each registered intended use of the Relying Party</li> <li>Changes needed in the ARF due to earlier assumption that PID or Attestation Providers did not need a Relying Party registration certificate</li> <li>Identified HLR changes due to clarification of the role of intermediaries (adaptation of the certificate usage to the role  of intermediaries and the related processes, e.g. registration process and RP registration certificate content if issued to an intermediary, and binding association between the access certificate of the intermediary and the registration certificates of its End-Relying Parties)  </li> <li>Modification related to distinguishing between lifecycle of the RP registration and the lifecycle of RPRC itself, as well as the relation between them (e.g. adapt the HLRs to the fact that certificates can only be revoked (no suspension), while the registration can be cancelled or suspended)  </li> <li>Other terminology mismatches that need alignment between the draft IA and the ARF (eg. registration 'withdrawal' to be replaced with 'cancellation').</li> <li>Necessary adaptation of registration policy, certification policy and certification policy statement requirements in line with conclusions on the above issues</li> <li>Impacts on the HLRs under other Topics of ARF Annex 2 (Topic 6 &amp; Topic 31, at least)</li> </ul> <p>This document is ONLY intended to clarify the high-level requirements related to the Relying Party registration topic. The necessary technical specifications (including any policy documents) will be developed by the European Commission after agreement over the requirements has been reached.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#31-proximity-use-case-support","title":"3.1 Proximity use case support","text":"<p>The Annex IV and V of the [Draft CIR on Relying Party registration] will bind legally what certificate standards are applicable for the RPAC and RPRC to be issued by the registrar. Use of the RPRC in context of proximity use case is mentioned in the ARF indirectly in (6.6.3.5), but necessary technical requirements for RPRC issuance are pointing at use of JOSE for signing/sealing the certificate, and the data format of the certificate contents being JSON (Annex V of the draft CIR). Requirement for the Registrar to support provisioning of registration certificates in both JWT and CWT format was agreed to be added to the requirements.</p> <p>A new HLR is proposed to extend the scope of registration to apply over both online and proximity use cases:</p> Index Requirement specification Proposal Reg_30 During registration, the Relying Party SHALL be provided both JWT and CWT format registration certificates by the Registrar. Note: This gives the Relying Party freedom to provide their intended use for both remote and proximity use cases, as necessary - without requesting use case implementation approach upon the registration event. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#32-access-certificates-with-multiple-relying-party-instances","title":"3.2 Access certificates with multiple Relying Party instances","text":"<p>When addressing the RPACs, the Regulation does not recognise the need for multiple instances of Relying Party services in modern IT architectures (replication of RP servers and common dependance on multiple geographical cloud provider regions to ensure availability and continuity of RP services). Multi-instance Relying Parties will also be commonplace in proximity use cases with handheld or mounted verification devices interacting with the Wallet Units. The fact that multiple access certificates with individual private keys can be requested and issued by the Access Certificate Authorities should be clarified in the ARF requirements on registering access certificates, and in the policy documents to be created based on the ARF high-level requirements.</p> <p>The HLR Reg_15 on policy for revocation is revised to mention multiple RPACs (all RPACS of a Relying Party), and a new HLR Reg_15b is brought to clarify the need for controlled revocation of individual instance RPACs (when the Relying Party still has at least one or more valid RPACs after revoking one or more RPACs assigned to its Relying Party Instances). Related to the existing HLRs on relying party access certificates Reg_31 and Reg_32, the requirements with their contextual notes should be moved under Topic 44 with rewording to mean RPRCs. To ensure binding of the RPAC and RPRC with the unique identifier of the Relying Party, a new HLR Reg_33 is introduced.</p> Index Requirement specification Proposal Reg_15 The common Certificate Policy mentioned in Reg_12 SHALL include a policy for revocation, which SHALL require that an Access Certificate Authority revokes all access certificates of the certificate subject at least when: - the certificate subject which is a Relying Party is cancelled or suspended by the respective Registrar,  - on request of the certificate subject, or - on request of a national supervisory body. Keep with proposed changes Reg_15b The common Certificate Policy mentioned in Reg_12 SHALL include a policy for Relying Party Instance-specific revocation, which SHALL require that an Access Certificate Authority revokes one or more of the access certificates of the certificate subject at least when: - the corresponding Relying Party Instance is cancelled by the respective Registrar, - on request of the certificate subject. or - on request of a a national supervisory body. Note: This policy is required for needs of executing partial revocation of access certificates, e.g. for situations when a Relying Party has issues not reaching to all of its instances. New Reg_31 The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains a name for the Relying Party, in a format suitable for presenting to a User. Note: A Wallet Unit needs such a name when requesting User approval according to [Topic 6]. Move modified HLR text under Topic 44 (new RPRC_03a) \u00a0Reg_32 The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Note: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a concatenated list of one or more registered official wallet-relying party identifiers listed in Annex I(3) of the [Draft of the CIR for RP-Registration], expressed in semantic form defined in [ETSI EN319 412-1] Sections 5.1.4 or 5.1.5 and used as the Distinquished Name (DN) of the Certificate subject in both access and registration certificates of the Relying Party Move modified HLR text under Topic 44 (new RPRC_03b). Note: Identicality is covered in new HLR RPRC_09 - see Section 3.3 Reg_33 All Relying Party Instance access certificates of a Relying Party SHALL include the user-friendly (common) name of Relying Party service and unique identifier identical to the ones defined in requirements RPRC_03a and RPRC_03b, respectively. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#33-registration-certificate-per-intended-use","title":"3.3 Registration certificate per intended use","text":"<p>The Relying Party registration requires Relying Parties to provide information necessary for authentication, their contact details, and the intended use of the European Digital Identity Wallets, including the specific data they will request from users. The RPAC (wallet Relying Party Access Certificate) authenticates who the Relying Party is, while the RPRC (wallet-Relying Party Registration Certificate) specifies what data that authenticated the Relying Party is entitled to request for a particular registered purpose (intended use). Crucially, Relying Parties are explicitly prohibited from requesting any data beyond what is indicated in their registration. This is a key mechanism for enforcing data minimisation and purpose limitation.</p> <p>According to the [Draft CIR on Relying Party registration] a Relying Party will get issued a unique RPRC for each of its registered intended uses, and these registration certificates may be revoked independent of each other or of the associated RPAC. The access certificates are the Relying Party's 'master switches' to the EUDI ecosystem, whilst registration certificates are used to register and document the use case/s provided to the Wallet User. The registration certificate will not be a X.509 certificate, and thus the required certificate policies for RPRCs should be clarified both in the IA draft and the ARF. </p> <p>Current RPRC_2 and RPC_3 in the ARF should be updated to reflect the text of the draft CIR on RPR, a new requirement on use of unique RP identifier across the RPRCs, and a new HLR on creating applicable certificate policies is suggested for Topic 44 as follows:</p> Index Requirement specification Proposal RPRC_01 During the registration process for Relying Parties, as specified in Topic 27, the Member State Registrar SHALL create and sign or seal a registration certificate and issue it to the Relying Party for each intended use requested to be registered by the Relying Party. The registration certificate SHALL comply with the applicable requirements in the technical specification mentioned in RPRC_02. Note: See Topic 52. Keep with proposed changes RPRC_02 The Commission SHALL ensure that a technical specification is created, describing at least 1. the contents and format of registration certificates, 2. the signing method(s) used to ensure the authenticity of the registration certificates. 3. the trust infrastructure necessary for signing registration certificates and for verifying these signatures, including, if necessary, the use of Trusted Lists to establish trust in Member States Registrars and to distribute their trust anchors to Wallet Units. 4. the method used for binding each registration certificate to the Relying Party Instance access certificate that will be used during the same transaction. This binding method SHALL enable a Wallet Unit to verify that the registration certificate was in fact issued to the Relying Party that authenticated itself using the access certificate. The binding method SHALL consider situations in which the Relying Party uses the services of an intermediary (see Topic 52) to connect to the Wallet Unit. 5. whether or not a registration certificate must have a validity period. 6. the method to be used for revocation of registration certificates. Moreover, the technical specification SHALL describe the impact of revocation, especially compared to the impact of revocation of the Relying Party Instance access certificates. Keep with proposed changes RPRC_03 The contents of a registration certificate issued per registered intended use of the Relying Party SHALL include at least information required in Annex V of the CIR for Relying Party Registration. If the Relying Party uses the services of an intermediary (see Topic 52): the fact that this is the case, plus the user-friendly (common) name and unique identifier (as meant in RPRC_03a and RPRC_03b) of this intermediary. Keep with proposed changes RPRC_09 The EU-wide unique identifier SHALL be identical in all registration certificates issued for a given Relying Party. New RPRC_10 The Commission SHALL provide technical specifications establishing common Certificate Policy for registration certificates, covering at least management and selection of signing keys, revocation and lifecycle maganagement of RPRCs on individual intended use level. Note: The TS could set the provider of RPRCs to follow applicable parts of technical standards such as EN 319 401 (for General Policy Requirements for TSPs) and TS 119 461 (for identity proofing of Relying Party representatives). New RPRC_11 There SHALL be only one valid registration certificate present in a presentation request for given intended use of a Relying Party. An error SHALL be reported by the Wallet Unit if it receives multiple registration certificates for the same intended use. New <p>Note: The modifications suggested for RPRC_01 and RPRC_03 above include also the changes required from discussion on intermediaries at Section 3.5.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#34-addressing-the-pid-providers-and-attestation-providers-on-rprcs","title":"3.4 Addressing the PID Providers and Attestation Providers on RPRCs","text":"<p>The [Draft of the CIR for RP-Registration] implies that among all other roles defined in the ARF also the PID Providers and Attestation Providers will receive registration certificates, with the role registered as part of the registration and reflected in the certificate information (the specific entitlement being one or more of the set PID_Provider, QEAA_Provider, Non_Q_EAA_Provider or PUB_EAA_Provider). This needs to be reflected in the ARF, which so far has separated these roles from the Relying Parties (per definition of the ARF).</p> <p>Section 6.3.2.2 of the ARF says that \"A PID Provider access certificate indicates that its subject is a PID Provider. Similarly, an Attestation Provider access certificate indicates that its subject is a QEAA Provider, a PuB-EAA Provider or a non-qualified EAA Provider.\"</p> <p>This is not the case per the draft CIR, the entitlements indicating the registered role are only present in the Relying Party registration certificate.</p> <p>Therefore, the definition set in the ARF needs to be adapted or extended accordingly, and Reg_17 on list of HLRs for the issuance of access certificates should be removed (entitlements not being present in access certificates):</p> Index Requirement specification Proposal Reg_17 The common Certificate Policy mentioned in Reg_12 SHALL require that an access certificate indicates whether its subject is a PID Provider, a QEAA Provider, a PuB-EAA Provider, a (non-qualified) EAA Provider, or a Relying Party Instance. Delete"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#35-registration-certificate-for-intermediaries","title":"3.5 Registration certificate for intermediaries","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#351-registration-on-behalf-of-the-end-relying-parties","title":"3.5.1 Registration on-behalf of the End-Relying Parties","text":"<p>The intention reflected in the [Draft of the CIR for RP-Registration] is that the intermediaries are to receive the RPRC of their End-Relying Parties. If an End-Relying Party uses an intermediary, it (the End-RP) will not need to itself apply or receive its Wallet-Relying Party certificate from the Registrar, if the intermediary (as part of their service towards the End-Relying Parties) registers for it and possesses the RPRCs for all of its customers. This will simplify the process of End-Relying Parties, who can This model is not mandated by the ARF, the processes how registration will be organised in Member States is left for national discretion.</p> <p>Note: The means to indicate to the national registry/ies that an entity is registering as an Intermediary is left for national discretion (see RPI_04), there is no such role/entitlement recognised in the Regulation.</p> <p>A pure intermediary will upon its registration receive only RPACs listing its own unique Relying Party identifier and (common) name. The intermediated End-Relying Parties are not provided RPACs, and their set of issued RPRCs are hosted by their intermediary. It is not in the scope of the ARF to cover how the intended use specific RPRCs are to be managed between the End-Relying Party and the Intermediary.</p> <p>As the intermediaries are acting on behalf of the End-Relying Parties, and will remain liable towards the Registrar on accuracy of the information to be registered, they must carry same identity proofing and data verification checks for their customers as the Registrar would do for the End-Relying Party in case of direct registration path. The Registrar shall also not trust blindly the Intermediary but execute the identity verification of both the Intermediary and the End-Relying Parties to be registered.</p> <p>Note: Attention must be paid towards compliance of principles such as lawfulness, fairness, transparency, storage limitation or accountability, and of requirements such as those related to data subject rights when using an Intermediary. The compliance against requirements of RPI_10 are therefore essential to be audited when defining the national registration and security policies for Intermediaries. There is no such intention from the Commission, as this (no EU-level policy setting) is already the case for the proxying TSPs since enforcement of (EU) 2014/910.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#352-use-of-certificates-upon-on-behalf-operation-towards-wallet-units","title":"3.5.2 Use of certificates upon on-behalf operation towards Wallet Units","text":"<p>When operating on behalf of its End-Relying Parties, the intermediary will possess as many RPRCs as number of its intermediated End-RPs entities (multiplied by the number of services/intended uses for each entity possibly). The ARF describes already how the certificates are to be used by the Intermediary and the Wallet Unit in RPI_06 to RPI_10. For clarity, the process of presenting the Intermediary RPAC and the End-Relying Party RPRC with necessary technical level binding is illustrated in Figure 1 below.</p> <p></p> <p>Figure 1 - Validation of identifiers between Intermediary RPAC and End-Relying Party RPRC.</p> <p>The ARF (1.8) contains requirement RPI_02, assuming the intermediary does not receive registration certificates of its own, and this assumption remains valid unless the Relying Party acting as an intermediary has other wallet-relying party services with intended uses that invoke the duty to register an RPRC. </p> <p>As summary, the ARF needs to be adapted to the intended role of the intermediaries as per the [Draft of the CIR for RP-Registration], which implies modifications of multiple HLRs. Below are the proposed changes to the key HRLs in this respect (other HLRs might need to be updated accordingly). </p> Index Requirement specification Proposal RPI_02 An intermediary is acting only as an intermediary for other (End-) Relying Parties, but from the Registrar point of view is considered as a Relying Party and obtains a registration certificate according to Topic 44, containing Intermediary name and Relying Party identifier. Keep with proposed changes RPI_03 For each of the End-Relying Parties that uses its services, an intermediary SHALL possess a registration certificate for each registered intended use of the said End-Relying Party, according to the requirements in Topic 44. This registration certificate SHALL contain that End-Relying Party's name and unique identifier, as well as the list of attributes registered for that Relying Party's intended use. Keep with proposed changes RPI_05 When issuing a registration certificate for an intermediary, the Registrar SHALL include in the registration certificate the attributes meant in RPRC_03a and RPRC_03b containing the name and unique identifier of the intermediated End-Relying Party. Keep with proposed changes RPI_06 When requested for an intended use by an intermediated End-Relying Party, an intermediary SHALL request the presentation of attributes from a specific Wallet Unit, using the intermediary's access certificate meant in requirement RPI_01, and the registration certificate possessed by the intermediary in relation to the intermediated End-Relying Party and the intended use, as meant in RPI_03. Keep with proposed changes RPRC_01 During the registration process for Relying Parties, as specified in Topic 27, the Member State Registrar SHALL create and sign or seal a registration certificate and issue it to the Relying Party for each intended use requested to be registered by the Relying Party. The registration certificate SHALL comply with the applicable requirements in the technical specification mentioned in RPRC_02. Note: See Topic 52. Keep with proposed changes"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#36-registration-and-registration-certificate-life-cycles","title":"3.6 Registration and Registration Certificate life cycles","text":"<p>The Article 9 of [Draft of the CIR for RP-Registration]  envisions 'suspension' and 'cancellation' of the registration (apart from the non-specified \"active\" state after the registration).  At the same time the RP registration certificate has its own life cycle, which envisions only 'revocation' (apart from the \"valid\" state after issuance).</p> <p>In addition, the IA draft text lists the following reasons of suspension/cancellation: + the registration contains information which is inaccurate, out of date or misleading; + the wallet-relying party is not complying with the registration policy; + the wallet-relying party is requesting more attributes than they have registered;  + the wallet-relying party is otherwise acting in breach of Union or national law in a manner related to their role as wallet-relying party; + by a supervisory body European Digital Identity Wallet Framework in the case of illegal or fraudulent use of the European Digital Identity Wallet.</p> <p>The technical specifications and policy documents that base their requirements on the ARF must specify the RPRC specific policies on lifecycle management (e.g., updates for and revocation of the existing RPRCs as indended uses and their data requirements change over time) and policies for eventual multi-registration (per intended use, per Member State) and cross-border registration. </p> <p>Defined policies should also address how to execute post-registration analysis and audits against the registered intended uses, unless the audits are to be left entirely for the EUDI Wallet Unit level functions - such as already introduced in the ARF Section 6.6.3.13, and the functionalities to be defined via Topic M - User reporting unlawful or suspicious request of data to DPAs.</p> Index Requirement specification Proposal Reg_15 The common Certificate Policy mentioned in Reg_12 SHALL include a policy for revocation, which SHALL require that an Access Certificate Authority revokes an access certificate at least when: the certificate subject's registration is cancelled by the respective Registrar, on request of the certificate subject, or on request of a national supervisory body. Keep with proposed changes Reg_22a A Registrar SHALL provide a method to suspend or cancel the registration of a registered Attestation Provider. Keep with proposed changes Reg_22b A Registrar SHALL have a policy for the suspension or cancellation of a registered Attestation Provider, which SHALL specify that an Attestation Provider's registration is suspended or cancelled at least on request of the PID Provider,Registrar or of a national supervisory body. Keep with proposed changes REG_28 A Member State's Registry SHALL log all changes made on the information regarding a Relying Party, including at least initial registration, updates, deletion of information, and suspension or cancellation. Keep with proposed changes REG_29 A Registrar SHALL have a policy for the cancellation and suspension of the registration of a registered Relying Party, which SHALL specify that the Relying Party's registration is cancelled or suspended at least on request of the Relying Party, Registrar or a national supervisory body. Keep with proposed changes"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#4-current-hlrs-and-proposals-of-changes","title":"4 Current HLRs and Proposals of Changes","text":"<p>The ARF, Annex 2, Topic 27, Topic 44 and Topic 52, contains a number of High-Level Requirements related to the topic.</p> <p>The Topic 27 requirements cover general requirements for Member State registration processes and specific requirements for the registration of Relying Parties, whereas Topic 44 covers issuance of Relying Party registration certificates. Topic 52 focuses on the intermediaries.</p> <p>The existing HLRs are listed in the tables below, along with a proposal to keep, change, add, or remove the HLR.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#41-topic-27-registration-of-pid-providers-providers-of-qeaas-pub-eaas-and-non-qualified-eaas-and-relying-parties","title":"4.1 Topic 27 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and (non-qualified) EAAs, and Relying Parties","text":"<p>A. \u00a0General requirements for Member State registration processes</p> Index Requirement specification Proposal Reg_01 Member States SHALL provide processes and mechanisms for PID Providers, QEAA Providers, PuB-EAA Providers, (non-qualified) EAA Providers, and other Relying Parties to register in a registry. Note: Member States may choose to implement a single registry for all these roles, or a separate registry for each of these roles, or organise registries e.g. per applicable sector. Keep with proposed change Reg_02 Member States SHALL make publicly available all necessary details and documentation about the registration processes for their registry. Keep Reg_03 Member States SHALL publish the registry entries online, in a sealed or signed machine-readable common format suitable for automated processing, according to the [European Digital Identity Regulation] Article 5b 5, for the purpose of transparency to Users and other stakeholders. Keep Reg_04 Member States SHALL make the registry available online, in a common human-readable format. Keep Reg_05 The Commission SHALL establish a technical specification for the common formats mentioned in Reg_03 and Reg_04. Keep Reg_06 The Commission SHALL provide specifications for a common API for retrieving registry entries from the Member States registries per Reg_03, defining the minimum requirements for interoperability. Note: Requirements for this API are defined in Reg_08 and Reg_09. Keep Reg_07 The Commission SHALL provide specifications for a common user interface for accessing the Member State registries per Reg_04. Note: Requirements for this user interface are defined in Reg_08 and Reg_09. Keep Reg_08 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL use a secure channel protecting the authenticity and integrity of the information in the registry during transport. Keep Reg_09 The API mentioned in Reg_06 and the user interface mentioned in Reg_07 SHALL NOT require authentication or prior registration and authorisation of any entity wishing to retrieve the information in the registry. Keep <p>B. General requirements for the issuance of access certificates</p> Index Requirement specification Proposal Reg_10 A Member State SHALL ensure that an Access Certificate Authority notified according to [Topic 31] issues access certificates on request to Relying Parties, including the PID Providers, QEAA Providers, PuB-EAA Providers and (non-qualified) EAA Providers registered in one of the Member State's registries. Keep with proposed changes Reg_11 A Member State SHALL ensure that the issuance process of access certificates by their notified Access Certificate Authority(s) complies with a common Certificate Policy for Access Certificate Authority. Keep Reg_12 The Commission SHALL provide technical specifications establishing the common Access Certificate Authority Certificate Policy mentioned in Reg_11. Keep Reg_13 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority logs all issued certificates for Certificate Transparency (CT). Note: This requirement is still under discussion and might be changed or removed in a future version of this ARF. Keep Reg_14 The common Certificate Policy mentioned in Reg_12 SHALL require that an Access Certificate Authority provides one or more method(s) to revoke the access certificates it issued. Keep Reg_15 The common Certificate Policy mentioned in Reg_12 SHALL include a policy for revocation, which SHALL require that an Access Certificate Authority revokes all access certificates of the certificate subject at least when: - the certificate subject which is a Relying Party is cancelled by the respective Registrar,  - on request of the certificate subject, or - on request of a national supervisory body. Keep with proposed changes Reg_15b The common Certificate Policy mentioned in Reg_12 SHALL include a policy for Relying Party Instance-specific revocation, which SHALL require that an Access Certificate Authority revokes one or more of the access certificates of the certificate subject at least when: - the corresponding Relying Party Instance is cancelled by the respective Registrar, - on request of the certificate subject, or - on request of a national supervisory body. Note: This policy is required for needs of executing partial revocation of access certificates, e.g. for situations when a Relying Party has issues not reaching to all of its instances. New Reg_16 The common Certificate Policy mentioned in Reg_12 SHALL specify the profile of access certificates in detail. Keep Reg_17 The common Certificate Policy mentioned in Reg_12 SHALL require that an access certificate indicates whether its subject is a PID Provider, a QEAA Provider, a PuB-EAA Provider, a (non-qualified) EAA Provider, or a Relying Party Instance. Delete Reg_18 The common Certificate Policy mentioned in Reg_12 SHALL define the minimum change history information to be stored for resolving possible disputes regarding registration. Keep <p>C. Requirements for the registration of PID Providers</p> Index Requirement specification Proposal Reg_19 A Member State SHALL approve a PID Provider according to a well-defined policy before including it in its PID Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of PID Providers in its Registry. Delete Reg_20 A Member State SHALL identify PID Providers at a level of confidence proportionate to the risk arising from the potential harm a fraudulent PID Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Delete Reg_20a A Registrar SHALL provide a method to suspend or cancel a registered PID Provider. Delete Reg_20b A Registrar SHALL have a policy for the suspension or cancellation of a registered PID Provider, which SHALL specify that a PID Provider is suspended or cancelled at least on request of the PID Provider or of a national supervisory body. Delete <p>D. Requirements for the registration of Attestation Providers</p> Index Requirement specification Proposal Reg_21 A Member State SHALL approve an Attestation Provider according to a well-defined policy before including it in its Attestation Provider Registry. To that end, a Member State SHALL define specific vetting processes and rules of acceptance for inclusion of Attestation Providers in its Registry. These processes and rules SHOULD consider any relevant differences between QEAA Providers, PuB-EAA Providers and (non-qualified) EAA Providers. Delete Reg_22 A Member State SHALL identify Attestation Providers (i.e., QEAA Providers, PuB-EAA Providers and non-qualified EAA Providers) at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Attestation Provider could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Delete Reg_22a A Registrar SHALL provide a method to suspend or cancel a registered Attestation Provider. Delete Reg_22b A Registrar SHALL have a policy for the suspension or cancellation of a registered Attestation Provider, which SHALL specify that an Attestation Provider is suspended or cancelled at least on request of the PID Provider or of a national supervisory body. Delete <p>E. Requirements for the registration of Relying Parties</p> Index Requirement specification Proposal Reg_23 The Commission SHALL establish a technical specification for a common set of Relying Party information to be registered in Member State registries. This set SHALL include at least the information defined in [European Digital Identity Regulation] article 5b 2 \u00a9. Keep Reg_24 A Member State SHALL enable a Relying Party to register remotely, using an API or user interface. Keep Reg_25 A Member State SHALL identify a Relying Party at a level of confidence proportionate to the risk arising from the potential harm a fraudulent Relying Party could cause to Users and other stakeholders in the EUDI Wallet ecosystem. Delete Reg_26 A Member State SHALL enable a Relying Party to update the information registered on it using a process comparable to the original registration process, and using the API or user interface mentioned in Reg_24. Keep Reg_27 Relying Parties SHALL make any updates necessary to ensure the continued correctness of the registered information without undue delay. Keep Reg_28 A Member State's Registry SHALL log all changes made on the information regarding a Relying Party, including at least initial registration, updates, deletion of information, and suspension or cancellation. Keep with proposed changes Reg_29 A Registrar SHALL have a policy for the cancellation of a registered Relying Party, which SHALL specify that a Relying Party is cancelled at least on request of the Relying Party or of a national supervisory body. Keep with proposed changes Reg_30 During registration, the Relying Party SHALL be provided both JWT and CWT format registration certificates by the Registrar. Note: This gives the Relying Party freedom to provide their intended use for both remote and proximity use cases, as necessary - without requesting use case implementation approach upon the registration event. New <p>F.  Requirements for the issuance of Relying Party Instance access certificates</p> Index Requirement specification Proposal Reg_31 The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains a name for the Relying Party, in a format suitable for presenting to a User. Note: A Wallet Unit needs such a name when requesting User approval according to [Topic 6]. Move modified HLR text under Topic 44 (new RPRC_03a) \u00a0Reg_32 The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Note: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a concatenated list of one or more registered official wallet-relying party identifiers listed in Annex I(3) of the [Draft of the CIR for RP-Registration], expressed in semantic form defined in [ETSI EN319 412-1] Sections 5.1.4 or 5.1.5 and used as the Distinquished Name (DN) of the Certificate subject in both access and registration certificates of the Relying Party Move modified HLR text under Topic 44 (new RPRC_03b). Reg_33 All Relying Party Instance access certificates of a Relying Party SHALL include the user-friendly (common) name of Relying Party service and unique identifier identical to the ones defined in requirements RPRC_03a and RPRC_03b, respectively. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#42-topic-44-relying-party-registration-certificates","title":"4.2 Topic 44 - Relying Party Registration Certificates","text":"<p>A. Issuance of Relying Party registration certificates</p> Index Requirement specification Proposal RPRC_01 During the registration process for Relying Parties, as specified in Topic 27, the Member State Registrar SHALL create and sign or seal a registration certificate and issue it to the Relying Party for each intended use requested to be registered by the Relying Party. The registration certificate SHALL comply with the applicable requirements in the technical specification mentioned in RPRC_02. Note: See Topic 52. Keep with proposed changes RPRC_02 The Commission SHALL ensure that a technical specification is created, describing at least 1. the contents and format of registration certificates, 2. the signing method(s) used to ensure the authenticity of the registration certificates. 3. the trust infrastructure necessary for signing registration certificates and for verifying these signatures, including, if necessary, the use of Trusted Lists to establish trust in Member States Registrars and to distribute their trust anchors to Wallet Units. 4. the method used for binding each registration certificate to the Relying Party Instance access certificate that will be used during the same transaction. This binding method SHALL enable a Wallet Unit to verify that the registration certificate is bound to the Relying Party that authenticated itself using the access certificate. The binding method SHALL consider situations in which the Relying Party uses the services of an intermediary (see Topic 52) to connect to the Wallet Unit. 5. whether or not a registration certificate must have a validity period. 6. the method to be used for revocation of registration certificates. Moreover, the technical specification SHALL describe the impact of revocation, especially compared to the impact of revocation of the Relying Party Instance access certificates. Keep with proposed changes RPRC_03 The contents of a registration certificate issued per registered intended use of the Relying Party SHALL include at least information required in Annex V of the CIR for Relying Party Registration. If the Relying Party uses the services of an intermediary (see Topic 52): the fact that this is the case, plus the user-friendly (common) name and unique identifier (as meant in RPRC_03a and RPRC_03b) of this intermediary. Keep with proposed changes RPRC_03a The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration instance certificate contains a common name for the Relying Party instance, in a format suitable for presenting to a User. Notes: - A Wallet Unit needs such a name when requesting User approval according to [Topic 6], - If Relying Party uses an Intermediary, both Intermediary and End-Relying Party common names need to be shown when requesting User approval and the User should be informed that the Intermediary is representing/acting on behalf of the End-Relying Party. New RPRC_03b The common Relying Party Registration Certificate Policy SHALL require that a Relying Party registration certificate contains an EU-wide unique identifier for the Relying Party, and SHALL specify a method for deriving such identifiers. Notes: - The Wallet Instance needs such an identifier at least to lodge a complaint of suspicious Relying Party presentation requests to a data protection authority according to Topic 50. - The EU-wide unique identifier could, for example, be a concatenated list of one or more registered official wallet-relying party identifiers listed in Annex I(3) of the [Draft of the CIR for RP-Registration], expressed in semantic form defined in [ETSI EN319 412-1] Sections 5.1.4 or 5.1.5 and used as the Distinguished Name (DN) of the certificate subject in both access and registration certificates of the Relying Party. Exact specification is left for the technical specifications to be developed by the European Commission. New RPRC_04 In both proximity and remote presentation flows, the Relying Party Instance SHALL transfer a Relying Party registration certificate to the Wallet Unit in the presentation request, according to the applicable standard's extension mentioned in RPRC_05. The registration certificate SHALL be included in the request by value, not by reference. Note: This ensures that no external requests are necessary to validate the request, and that transactions are atomic and self-contained. Keep RPRC_05 The Commission SHALL ensure that extensions are specified for [ISO/IEC 18013-5] and for [OpenID4VP], allowing a Relying Party to transfer a Relying Party registration certificate to a Wallet Unit. These extensions SHALL comply with applicable requirements in these standards. Keep RPRC_06 The Wallet Unit SHALL verify the authenticity and validity of the registration certificate according to the technical specification meant in RPRC_02. If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User that it could not verify whether the Relying Party registered the requested attributes with the competent authorities. Keep RPRC_07 The Wallet Unit SHALL verify that all attributes requested in the presentation request are included in the list of attributes in the registration certificate. If the outcome of the verification is negative, the Wallet Unit SHALL, when asking for User approval according to RPA_07 and subject to the User preference set according to RPRC_08, notify the User about the requested attributes that the Relying Party did not register. Keep RPRC_08 A Wallet Unit SHOULD enable its User to set their preference for showing or hiding the notifications meant in RPRC_06 and RPRC_07. By default, the Wallet Unit SHALL show the notifications. Keep RPRC_09 The EU-wide unique identifier SHALL be identical in all registration certificates issued for a given Relying Party. Note: In case the registration certificates issued to an End-Relying Party are held and presented by an Intermediary (Relying Party), the given Relying Party meant in the text is the End-Relying Party. An Intermediary will obtain and hold registration certificates with non-identical unique identifiers. New RPRC_10 The Commission SHALL provide technical specifications establishing common Certificate Policy for registration certificates, covering at least management and selection of signing keys, revocation and lifecycle management of RPRCs on individual intended use level. Note: The TS could set the provider of RPRCs to follow applicable parts of technical standards such as EN 319 401 (for General Policy Requirements for TSPs) and TS 119 461 (for identity proofing of Relying Party representatives). New RPRC_11 There SHALL be only one valid registration certificate present in a presentation request for given intended use of a Relying Party. An error SHALL be reported (logged and shown for the User) by the Wallet Unit if it receives multiple registration certificates for the same intended use within same presentation request. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#43-topic-52-relying-party-intermediaries","title":"4.3 Topic 52 - Relying Party Intermediaries","text":"Index Requirement specification Proposal RPI_01 An intermediary SHALL register as a Relying Party, in accordance with all requirements in Topic 27. Note: This implies that an intermediary obtains an access certificate containing its own name and unique Relying Party identifier. Keep RPI_02 An intermediary is acting only as an intermediary for other (End-) Relying Parties, but from the Registrar and the regulation's point of view is considered as a Relying Party and obtains a registration certificate according to Topic 44, containing Intermediary name and Relying Party identifier. Keep with proposed changes RPI_03 For each of the End-Relying Parties that uses its services, an intermediary SHALL be the holder of the registration certificate for each registered intended use of the said End-Relying Party, according to the requirements in Topic 44. This registration certificate SHALL contain that End-Relying Party's name and unique identifier, as well as the list of attributes registered for that Relying Party's intended use. Keep with proposed changes RPI_04 When issuing a registration certificate for a Relying Party to an intermediary, the Registrar SHALL verify, in a manner to be decided by a Member State, that the Relying Party will indeed use the services of the intermediary to interact with Wallet Units. Keep RPI_05 When issuing a registration certificate for an intermediary, the Registrar SHALL include in the registration certificate the attributes meant in RPRC_03a and RPRC_03b containing the name and unique identifier of the intermediated End-Relying Party. Keep with proposed changes RPI_06 When requested for an intended use by an intermediated End-Relying Party, an intermediary SHALL request the presentation of attributes from a specific Wallet Unit, using the intermediary's access certificate meant in requirement RPI_01, and the registration certificate accessible to the intermediary in relation to the intermediated End-Relying Party and the intended use, as meant in RPI_03. Keep with proposed changes RPI_07 In case a Wallet Unit receives a presentation request from an intermediary, on behalf of a Relying Party, it SHALL verify the name of the intermediary during Relying Party authentication and display this name to the User when asking for User approval, as described in requirement RPA_06a. Keep RPI_08 When a Wallet Unit presents any User attributes to an intermediary, the intermediary SHALL forward these attributes only to the Relying Party that requested the intermediary to request these attributes from the Wallet Unit. Keep"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#5-relation-to-other-topics","title":"5 Relation to Other Topics","text":"<p>Below we discuss how Relying Party registration relates to the other topics being discussed.</p> <p>As indicated in the chapter 3, several changes are proposed in the context of the Relying Party registration. The changes introduced in the respective HLRs are to be also reflected in the remaining topics/HLRs, at least in reference to Topic 6 and Topic 31. Note that term Registration Certificate Authority has been introduced, aside the formerly used Access Certificate Authority.</p> <p>In result, the following modification are therefore proposed:</p> <p>Note: only affected HLRs are listed, not exhaustive lists as in Section 4.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#51-topic-6-relying-party-authentication-and-user-approval","title":"5.1 Topic 6 - Relying Party authentication and User approval","text":"Index Requirement specification Proposal RPA_06a If the registration certificate indicates that an intermediary, as described in Topic 52, the Wallet Unit SHALL verify that the name and the unique identifier of the intermediary included in the registration certificate are identical to the name and unique identifier included in the Relying Party Instance access certificate. If this verification fails, the Wallet Unit SHALL treat this as a Relying Party authentication failure. If this verification succeeds, the Wallet Instance SHALL display to the User the names of the intermediary and the intermediated End-Relying Party. Keep with proposed changes"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#52-topic-31-pid-provider-wallet-provider-attestation-provider-and-access-certificate-authority-notification-and-publication","title":"5.2 Topic 31 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication","text":"Index Requirement specification Proposal GenNot_01 The European Commission SHALL establish technical specifications for a common system enabling the notification of PID Providers, PuB-EAA Providers, Wallet Providers, Access Certificate Authorities and Registrars of Registration Certificates by Member States to the Commission. Note: Notification does not apply to QEAA Providers and (non-qualified) EAA Providers, as explained in Sections D and F below, respectively. Keep with proposed changes GenNot_02 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the notification of a PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authorities or Registration Certificate Authorities to the Commission. Note: The outcome of the notification procedure is the publication of the information notified by the Member State according to Article 5a (18) in a machine and human readable manner using the common system mentioned in Section H, TLPub_01. Keep with proposed changes GenNot_05 As part of the specifications referred to in GenNot_01, the European Commission SHALL establish standard operating procedures for the suspension or cancellation of a PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authority or Registration Certificate Authority. These operating procedures SHALL include unambiguous conditions for suspension or cancellation. As an outcome of the suspension or cancellation procedure, the status of the suspended or cancelled PID Provider, PuB-EAA Provider, Wallet Provider, Access Certificate Authority or Registration Certificate Authority in the Trusted List SHALL be changed to Invalid. Keep with proposed changes PPNot_02 The common set of information to be notified about a PID Provider SHALL include at least: 1. Identification data: i. MS/Country of establishment, ii. Name as registered in an official record, iii. Where applicable: a. A business registration number from an official record, b. Identification data from that official record. 2. PID Provider trust anchors, i.e., public keys and name as per point 1) ii) above, supporting the authentication of PIDs issued by the PID Provider, 3. PID Provider Access Certificate Authority trust anchors, i.e., public keys and CA name, supporting the authentication of the PID Provider by Wallet Units at the service supply point(s) listed per point 4. below. 4. Service supply point(s), i.e., the URL(s) at which a Wallet Unit can start the process of requesting and obtaining a PID. Notes: - Relating to point 3. above: PID Provider Access Certificate Authority trust anchors are notified separately from the Relying Party Access Certificate Authority (see Section G below), since PID Providers are -legally speaking- not Relying Parties. - For the concept of an  Access Certificate Authority, see also [Topic 27] and Section 6.3.2 of the ARF main document. Keep with proposed changes RPACANot_01 The European Commission SHALL establish technical specifications for the common set of information to be notified about Access Certificate Authorities and Registrars of Registration Certificates. Keep with proposed changes RPACANot_02 The common set of information to be notified about an Access Certificate Authority and Registrars of Registration Certificates SHALL include: 1. Identification data: i) MS/Country of establishment, ii) Name as registered in an official record, iii) Where applicable: - A business registration number from an official record, - Identification data from that official record. 2. Access Certificate Authority or Registration Certificate Authority trust anchors, i.e., public keys and name as per point 1) ii), supporting the authentication of Relying Parties by Wallet Units. Keep with proposed changes RPACANot_04 Access Certificate Authority and Registration Certificate Authority trust anchors SHALL be accepted because of their secure notification by the Member States to the Commission and by their publication in the corresponding Commission-compiled Access Certificate Authority and Registration Certificate Authority Trusted Lists which are signed or sealed by the Commission. *Note: The adopted version of the CIR for Relying Party registration will clarify how the Trusted List for Registrars of Registration Certificates are to be arranged, the certificates not being PKI/X.509 certificates as is the case with standard EU Trusted Lists. It is also to be clarified in the related technical specification if Access Certificate Authorities can sign other certificates than access certificates. * Keep with proposed changes RPACANot_06 If an Access Certificate Authority is suspended or cancelled (see requirement GenNot_05 above), that Access Certificate Authority SHALL immediately revoke all of its valid access certificates. Note: When the access certificates of an Intermediary that has its RPACs issued by said suspended or cancelled Access Certificate Authority are revoked, the End-Relying Parties depending on said Intermediary, while having valid registration certificates from a Registrar will have no access to transact with EUDI Wallet Users until the End-Relying Parties a) transit to another Intermediary that has RPAC issued by an active Access Certification Authority or b)the original Access Certificate Authority can continue its operations and re-issue earlier revoked certificates for the original Intermediary. New RPACANot_07 If a Registrar of Relying Party Registration Certificates is suspended or cancelled (see requirement GenNot_05 above), that Registrar of Relying Party Registration Certificates SHALL immediately revoke all of its valid registration certificates. New TLPub_01 The European Commission SHALL establish technical specifications for the system enabling the publication by the Commission of the information notified by the Member States regarding PID Providers, Wallet Providers, PuB-EAA Providers, Access Certificate Authorities and Registrars of Registration Certificates. Keep with proposed changes TLPub_02 The European Commission SHALL establish technical specifications for the set of information to be published about: PID Providers, Wallet Providers,PuB-EAA Providers, Access Certificate Authorities and Registrars of Registration Certificates based on the information notified by the Member States. Note: The information to be published MAY be different from the information to be notified per requirements PPNot_01, WPNot_01, PuBPNot_01, and RPACANot_01 above, respectively. Keep with proposed changes TLPub_08 As part of the specifications referred to in TLPub_01, the European Commission SHALL establish technical specifications for ensuring the availability and authenticity of the full history regarding the information notified about PID Providers, Wallet Providers, PuB EAA Providers, Access  Certificate Authorities and Registrars of Registration Certificates. New"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#53-use-of-certificate-transparency","title":"5.3 Use of Certificate Transparency","text":"<p>[Topic S] refers to use of Certificate Transparencey (CT) in the context of access certificates. There is no decision yet whether CT will be used at all, as the initial intention of CT use was the context of browsers/QWACs. Regulation has no requirement for use of Certificate Transparency with registration certificates.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#54-user-requesting-data-deletion-to-relying-parties","title":"5.4 User requesting data deletion to relying parties","text":"<p>[Topic L] will discuss requirements related to the EUDI Wallet User's means to request data deletion from any Relying Parties that they've provided with attestation data. This will be using the contact details which are required to be registered as part of the registration data set.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#55-user-reporting-unlawful-or-suspicious-request-of-data-to-dpas","title":"5.5 User reporting unlawful or suspicious request of data to DPAs","text":"<p>[Topic M] will cover requirements on EUDI Wallet Users means to report evidently or potentially unlawful presentation requests by a Relying Party to relevant data protection authority/-ies (DPAs). This reporting would be actuated if a Relying Party is trying to ask attestations or attributes beyond its reported Intended Use -specific data set that is present in the related Registration Certificate. </p> <p>If found in breach and not corrected promptly by the Relying Party, the DPA and national authorities are allowed to request revocation of the access and registration certificates of the Relying Party in breach of their registration data.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#56-relation-to-risk-register","title":"5.6 Relation to Risk Register","text":"<p>The risk register for European Digital Identity Wallets [RiskRegister] contains the following risks that are related to the Relying Party registration:</p> Risk type Risk id Related risk titles High-level risks to the wallets R6 Data disclosure High-level risks to the wallets R9 Unauthorised transaction R6 Data disclosure Data disclosure is defined as the unauthorised exposure of personal data including special categories of personal data. The privacy breach risk is very similar when considered from a privacy rather than security viewpoint. R9 Unauthorised transaction Unauthorised transactions are defined as operational activities conducted without the permission or knowledge of the wallet user. In many cases, an unauthorised transaction can lead to Identity theft (R4) or Data disclosure (R6). It is also related to unauthorised transactions, such as the misuse of cryptographic keys. <p>More specifically, [RiskRegister] describes the following threats to a Wallet:</p> ID Threat description Related risks TR25 The wallet can present attributes to a relying party without the approval of a user. Data disclosure (R6) TR29 An attacker can leak attributes from the wallet and identify the wallet user where identification is not required/allowed. Data disclosure (R6) TR38 Not being able to prove user\u2019s consent for shared attributes, relying parties can affect the integrity of logs. Data disclosure (R6) TR40 A relying party that consists of multiple units/entities that each have a different scope of what they are allowed to request/process, can request and process data for which they do not have lawful grounds for. Data disclosure (R6) / Unauthorised transaction (R9)"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#6-additions-and-changes-to-the-arf","title":"6 Additions and Changes to the ARF","text":"<p>The agreed Annex 2 HLR changes are listed in Section 4 and Section 5.1-5.2 above. In addition, discussions of the Relying Party registration in the main part of the ARF will be updated accordingly.</p> <p>Note: In addition, the latest changes of [Draft of the CIR for RP-Registration] make the issuance of the Relying Party registration certificates optional. This impacts this paper and the ARF. Therefore an impact analysis has been conducted, presented below. The changes that are needed will be included in ARF 1.10.0 that will be published until the end of next week. </p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#impact-analysis-to-the-arf-of-making-the-rprc-optional","title":"Impact analysis to the ARF of making the RPRC optional","text":"# Goal of RPRC according to ARF Section(s) in ARF Challenges if there is no RPRC Proposed solution 1 The RPRC of a Relying Party contains the attributes that the Relying Party (i.e., a Service Provider) intends to request. The Wallet Unit notifies the User in case one or more of the requested attributes is not included in the list of attributes in the registration certificate.  The RPRC also contains the RP name and unique identifier, which is identical to the same data in the access cert. 6.4.2, 6.6.3.3, 6.6.3.5, Annex 2, Topic 6,  RPA_06, RPA_06a &amp; new RPA_06x HLRs needed Need to define what the Wallet Unit needs to do in case no RPRC is present 1) The RP access cert SHALL always contain the URL of an end point of the Registrar that the Wallet Unit can use to obtain information about the Relying Party. 2) The Wallet Unit SHALL enable the User to specify that they want to do additional verifications of the RP. By default, the Wallet Unit SHALL NOT do this verification. The Wallet Unit SHALL make clear that these additional verifications may involve an online check of information at a Registrar. 3) If the User has indicated that they want to do the additional verifications: a. the Wallet Unit SHALL retrieve the RPRC from the presentation request if present and proceed as already described in the ARF; b. If the RPRC is not present, the Wallet Unit SHALL request the Registrar at the URL in point 1) for the list of registered attributes of the Relying Party, using the unique ID of the RP from its access certificate; c. The Wallet Unit SHALL notify the User about the outcome of the verification in case the RP requests attributes that it did not register. The Wallet Unit SHALL also notify the User in case the Wallet Unit was not able to retrieve the RPRC information. Otherwise (i.e., if everything is OK), a User notification is optional. General notes: (i) This approach means that the level of privacy/security of the User (by carrying out the additional verifications) is not dependent on whether the MS that registered the RP has issued an RPRC. Rather, if the User chooses to, they are carried out, regardless of whether there is an RPRC in the presentation request. (ii) There are a couple of reasons for setting the default to not doing the additional verifications: RPRCs were envisioned to enable additional verifications of RPs, on top of the authentication enabled by the RP access certificate. Since RPRCs are now optional, the additional verifications enabled by the RPRC should be viewed as optional as well. These additional verifications should therefore be done only if the User explicitly requests them. In addition, to avoid possible performance issues at the Registrars. (iii) In the IA, there is no obligation for an RP to include its RPRC in a presentation request, even if it has one. It's useful to document this in the ARF. 2 The RPRC contains a URL to the privacy policy of the Relying Party regarding the intended use This is not described in the ARF yet. This needs to be added in the main doc, section 6.6.3.3, as well as in Topic 44 No way for the RP to declare its intended use in the request 1) If it does not include a RPRC in the presentation request, the Relying Party SHALL include the URL to the privacy policy in a different field of the presentation request. The Commission SHALL reference or create an extension of ISO/IEC 18013-5 and OpenID4VP that enables this. 2) In case the RP is an intermediary, the URL SHALL be a URL pointing to the privacy policy of the end-RP, not the intermediary. See also issue #5 below. 3) The Wallet Unit SHALL enable the User to indicate that they want to be informed about the purpose of the RP. If the User indicates this, the Wallet Unit SHALL invoke a browser and take them to the URL. 3 According to Topic X, the RPRC of a PID Provider or Attestation Provider contains its entitlements. However, according to the ARF section 6.3.2.3., this information is contained in the access certificate, because according to section 6.3.2.1, a PID Provider or Attestation Provider does not receive a RPRC when it registers. According to section 6.3.2.3, the access certificate of a PID Provider or Attestation Provider may optionally also contain the Provider's entitlement to issue attestations of a specific type, for instance an mDL or diploma. In the IA on RP registration, these are called sub-entitlements. 6.3.2.1, 6.3.2.3, 6.6.2.1, 6.6.2.2, New/changed HLRs needed in Topic 10/23, Also updates to Topic X needed Contradictions need to be removed. Clarity needs to be given about where the Wallet Unit can find entitlements in case there is no RPRC. 1) Unlike currently described in the ARF, a PID Provider or Attestation Provider optionally receives a RPRC during registration. This RPRC contains its basic entitlements as well as its sub-entitlements. So the sub-entitlements are not optional, like currently in the ARF. 2) The (sub-)entitlements of a PID Provider or Attestation Provider will not be included in the access cert, unlike currently described in the ARF. (Just like the registered attributes are not included in the access cert of an RP.) 3) The access cert of a PID Provider or Attestation Provider SHALL also contain the URL of an end point of the Registrar that the Wallet Unit can use to obtain information about the Provider. 4) If a Wallet Unit contacts an Attestation Provider to request issuance of an attestation, it receives an access certificate and optionally a RPRC from the Provider. If there is no RPRC, the Wallet Unit SHALL contact the Registrar and requests the entitlements of the Attestation Provider. 5) Like when a RPRC is present, the Wallet Unit SHALL notify the User in case the Attestation Provider has not been registered for the attestation type. In addition, the Wallet Unit SHALL also notify the User in case the Wallet Unit was not able to contact the Registrar. Otherwise (i.e., if everything is OK), a User notification is optional. Notes: (i) In step 4 contacting the Register is mandatory and should not be left to the User to decide (like in #issue 1 above). This is because the risk to privacy is less compared to the analogous risk in issue #1.  (ii) Additionally, we need to check if the ARF already describes that a Relying Party can also check the subentitlement of an Attestation Provider. 4 Embedded disclosure policies may be based on information in the RPRC as well as the access certificate. 6.6.2.7.2, 6.6.3.4, EDP_02 Not possible to base EDPs on information in the RPRC Let an EPD refer only to information in the access certificate. Since only policies 2 and 3 (per the IA) are mandated for EDPs, this is possible, because the unique RP identifier is in the access certificate 5 RPRC contains the (business) relation between an end-RP and the intermediary it uses. The RPRC of the end-RP contains an attribute containing the identifier of the intermediary. The Wallet Unit verifies that that this identifier is identical to the RP identifier in the access cert it got. In addition, the Wallet Unit shows the name/identifier of the end-RP in the RPRC to the User. 3.11, 6.6.3.5, Annex 2 Topic 52, 3.11, 6.6.3.5 No way for the Wallet Unit to know that the intermediary is requesting attributes on behalf of an end-RP. No way for the Wallet Unit to receive the name of the end-RP. The process is basically the same as for issue #1 above: 1) The URL of the end point of the Registrar mentioned in step 1) of issue #1 enables the Wallet Unit to obtain information about the intermediary as well as its end-Relying Parties. Note that according to the IA on RP registration, an intermediary and its end-RPs are always registered by the same Registrar. 2) If the intermediary does not include an RPRC in the presentation request, it SHALL include the user-friendly name and the unique identifier of the end-RP in a different field of the presentation request. The Commission SHALL reference or create an extension of ISO/IEC 18013-5 and OpenID4VP that enables this. The Wallet Unit SHALL show the user-friendly name of the end-RP to the User when asking for User approval. 3) If the User has indicated that they want to do the additional verifications meant in step 2) of issue #1, a. the Wallet Unit SHALL retrieve the RPRC from the presentation request, if present, and proceed as already described in the ARF 1.9.0.  b. If the RPRC is not present, the Wallet Unit SHALL retrieve the unique identifier of the end-PR from the presentation request and use it to request the Registrar at the URL in point 1) to confirm (i) that this RP indeed uses the services of this intermediary. (ii) that this end-RP has been properly registered for the attributes it is requesting. c. The Wallet Unit SHALL notify the User about the outcome of these verifications in case one or both of them are unsuccessful. The Wallet Unit SHALL also notify the User in case the Wallet Unit was not able to retrieve the RPRC information. Otherwise (i.e., if everything is OK), a User notification is optional. 6 HLR DASH_03 says: For a presentation transaction executed through the Wallet Unit, the log SHALL contain the name, contact details, and unique identifier of the corresponding Relying Party, and the Member State in which that Relying Party is established. DASH_05 says For an issuance or re-issuance transaction executed through the Wallet Unit, the log SHALL contain the name, contact details, and unique identifier of the corresponding PID Provider or Attestation Provider. These HRLs do not say where the Wallet Unit gets this information, and neither does the main document.  But the assumption was from the RPRC. Moreover, in Topic M it was decided that the RPRC also contains the contact details of the relevant DPA. Topic 19, (After 1.10:) Topic 48, Topic 50 The name and unique ID are in the RP access certificate, but the contact details are not (to my understanding). So we need to define where the Wallet Unit gets this information if there is no RPRC. DASH_03 and DASH_05 must be adapted to say that name and unique ID come from the access certificate, and that logging of the contact details is only required if there is a RPRC containing this info. Moreover, the Wallet Unit SHALL log the URL of the end point of the Registrar (from the access cert, see also point 1 in issue #1). During integration of Topic L (data deletion) and M (report to DPA) into the ARF, we need to specify how the Wallet Unit obtains the contact details of the RP or the DPA in case these are not in the log (because there was no RPRC). The Wallet Unit can contact the Registrar to do so."},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#other-but-related-changes-to-be-done-in-the-arf-when-updating-texts-on-the-rprc","title":"Other but related changes to be done in the ARF when updating texts on the RPRC","text":"# Description Section(s) in ARF Proposed solution 7 The ARF does not contain the concept of a Trusted List of Relying Party Registrars. Yet, Topic 44 says that such Registrars sign RP registration certificates, and that Wallet Units must verify the authenticity of these certificates. A Wallet Unit can only do so if it has the trust anchors of all Registrars, and that implies we need a Trusted List for them. Main document chapter 6 (including in Figure 11), Annex 2 Topic 44. Add the Trusted List of Relying Party Registrars both in the ARF main document and in Topic 44. 8 The ARF main document does not distinguish a Registrar for Wallet Providers, PID Providers and Attestation Providers. Instead, it says that these entities are registered by a Trusted List Provider. This is also shown in Figure 11. This is not consistent with the language used in the IA on RP registration. Main document chapter 6 (including in Figure 11), Topic 44 We need to introduce a separate Access Certificate Provider and Registration Certificate Provider, as these roles are introduced in the IA on Art 5b, in addition to the role of Registrar. 9 The ARF is not clear on the number of RPRCs per request and the number of purposes per RPRC. This needs to be explained. 6.6.3.3, Topic 44 Each request by an RP shall have one purpose and shall therefore have only one RPRC. The RP may request attributes from multiple attestations, but those should all be covered by the same RPRC. (i) If the RP wants to request data for multiple purposes from the same Wallet Unit, they shall send multiple requests. (ii) It's the RP's responsibility to ensure that they get an RPRC for each of their purposes. (iii) A purpose is indicated by means of a URL to the privacy policy of the Relying Party regarding the intended use. See also issue #2 above. 10 Terminology The ARF must no longer use \"suspension\" and \"withdrawal\" of the RP, but \"suspension\" and \"cancellation\" of the registration of an RP when talking about registration"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/x-relying-party-registration/#7-references","title":"7 References","text":"Reference Description [ARF_DevPlan] Architecture and Reference Framework Development plan 2025, European Commission, v1.0 [Topic S] Topic S - Certificate transparency [Topic 6] Topic 6 - Relying Party authentication and User approval [Topic 27] Topic 27 - Registration of PID Providers, Providers of QEAAs, PuB-EAAs, and (non-qualified) EAAs, and Relying Parties [Topic 31] Topic 31 - PID Provider, Wallet Provider, Attestation Provider, and Access Certificate Authority notification and publication [Topic 44] Topic 44 - Relying Party registration certificates [Topic 52] Topic 52 - Relying Party intermediaries [RiskRegister] Annex 1 to the Commission Implementing Regulation laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the certification of the European Digital Identity Wallets, European Commission, October 2024, draft [European Digital Identity Regulation] Regulation (EU) 2024/1183 of the European Parliament and of the Council of 11 April 2024 amending Regulation (EU) No 910/2014 as regards establishing the European Digital Identity Framework [Draft of the CIR for RP-Registration] Commission Implementing Regulation (EU) 2025/xxxx laying down rules for the application of Regulation (EU) No 910/2014 of the European Parliament and of the Council as regards the registration of wallet-relying parties*, draft [OID4VP] OpenID for Verifiable Presentations [German non-paper on RP Authn] DE non-paper on Wallet-Relying Party Authentication, outlining a proposed solution for implementing the Wallet-Relying Party authentication requirements from IA 5b [German non-paper on WRP with attestations] DE non-paper on use fo OID4VC with Wallet-Relying Party Attestations (architecture concept) [ETSI EN 319 401] ETSI Electronic Signatures and Infrastructures; General Policy Requirements for Trust Service Providers [ETSI TS 119 461] ETSI Electronic Signatures and Infrastructures; Policy and security requirements for trust service components providing identity proofing of trust service subjects [ETSI EN 319 412-1] ETSI Electronic Signatures and Infrastructures; Certificate Profiles, Part 1: Overview and common data structures"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img/#index-of-eudi-doc-architecture-and-reference-frameworkdocsdiscussion-topicsimg","title":"Index of eudi-doc-architecture-and-reference-framework/docs/discussion-topics/img","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/media/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/media/#index-of-eudi-doc-architecture-and-reference-frameworkdocsmedia","title":"Index of eudi-doc-architecture-and-reference-framework/docs/media","text":""},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/#index-of-eudi-doc-architecture-and-reference-frameworkdocstechnical-specifications","title":"Index of eudi-doc-architecture-and-reference-framework/docs/technical-specifications","text":"<ul> <li>README</li> <li>ts1-eudi-wallet-trust-mark</li> <li>ts2-notification-publication-provider-information</li> <li>ts3-wallet-unit-attestation</li> </ul>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts1-eudi-wallet-trust-mark/","title":"Ts1 eudi wallet trust mark","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts1-eudi-wallet-trust-mark/#specification-of-eudi-wallet-trust-mark","title":"Specification of EUDI Wallet Trust Mark","text":"<p>The Specification of EUDI Wallet Trust Mark has been moved to the standards and technical specifications repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts2-notification-publication-provider-information/","title":"Ts2 notification publication provider information","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts2-notification-publication-provider-information/#specification-of-systems-enabling-the-notification-and-subsequent-publication-of-provider-information","title":"Specification of systems enabling the notification and subsequent publication of Provider information","text":"<p>The Specification of systems enabling the notification and subsequent publication of Provider information has been moved to the standards and technical specifications repository.</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts3-wallet-unit-attestation/","title":"Ts3 wallet unit attestation","text":"<p>Home</p>"},{"location":"eudi-doc-architecture-and-reference-framework/docs/technical-specifications/ts3-wallet-unit-attestation/#specification-of-wallet-unit-attestations-wua-used-in-issuance-of-pid-and-attestations","title":"Specification of Wallet Unit Attestations (WUA) used in issuance of PID and Attestations","text":"<p>The Specification of Wallet Unit Attestations (WUA) used in issuance of PID and Attestations has been moved to the standards and technical specifications repository.</p>"},{"location":"eudi-web-booking-service-demo/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-web-booking-service-demo/#index-of-eudi-web-booking-service-demo","title":"Index of eudi-web-booking-service-demo","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>public</li> </ul>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-web-booking-service-demo/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-web-booking-service-demo/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-web-booking-service-demo/public/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-web-booking-service-demo/public/#index-of-eudi-web-booking-service-demopublic","title":"Index of eudi-web-booking-service-demo/public","text":"<ul> <li>images</li> </ul>"},{"location":"eudi-web-booking-service-demo/public/images/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-web-booking-service-demo/public/images/#index-of-eudi-web-booking-service-demopublicimages","title":"Index of eudi-web-booking-service-demo/public/images","text":""},{"location":"eudi-lib-android-wallet-core/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/#index-of-eudi-lib-android-wallet-core","title":"Index of eudi-lib-android-wallet-core","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>CustomizeSecureArea</li> <li>README</li> <li>SECURITY</li> <li>changelog</li> <li>docs</li> <li>licenses</li> </ul>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-lib-android-wallet-core/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-lib-android-wallet-core/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/","title":"CustomizeSecureArea","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#use-wallet-core-library-with-custom-key-management","title":"Use wallet core library with custom Key management","text":"<p>The Wallet Core Library supports custom key management through the implementation of SecureArea interfaces. This document details the process of integrating custom key management with the library.</p>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#interfaces-and-classes-for-custom-key-management","title":"Interfaces and classes for custom key management","text":"<p>To enable custom key management, you must implement the following interfaces and classes:</p> <ol> <li>The <code>com.android.identity.securearea.SecureArea</code> interface abstracts the underlying secure area    responsible for creating key material and other security-related objects used in identity    documents. Authentication may be required to access a key, which is managed through the    <code>com.android.identity.securearea.KeyLockedException</code> and    <code>com.android.identity.securearea.KeyUnlockData</code> types. Applications must implement    SecureArea-specific mechanisms to handle the necessary authentication.</li> <li>The <code>com.android.identity.securearea.CreateKeySettings</code> class serves as the base for key creation    settings. It is compatible with any SecureArea implementation, though most implementations will    provide their own versions with additional, specific settings.</li> <li>The <code>com.android.identity.securearea.KeyUnlockData</code> interface provides the information necessary    to operate on a key that requires unlocking.</li> <li>The <code>com.android.identity.securearea.KeyInfo</code> class contains details about a key. Specific    SecureArea implementations may extend this class to include additional implementation-specific    key information.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#using-eudiwallet-with-custom-key-management","title":"Using EudiWallet with custom key management","text":"<p>Using a custom SecureArea implementation involves focusing on three key areas:</p> <ol> <li>Configuring the wallet instance to integrate the custom SecureArea implementation.</li> <li>Managing events during the issuance of documents with OpenId4VCI, where key creation and    unlocking are necessary.</li> <li>Managing events during document presentation with OpenId4VP or proximity presentation via BLE,    where key unlocking is needed.</li> </ol> <p>For the purposes of this document and the examples provided, we will refer to the following custom SecureArea implementations:</p> <ol> <li><code>MySecureArea</code> class implementing the <code>SecureArea</code> interface.</li> <li><code>MyCreateKeySettings</code> class extending the <code>CreateKeySettings</code> class.</li> <li><code>MyKeyUnlockData</code> class implementing the <code>KeyUnlockData</code> interface.</li> <li><code>MyKeyInfo</code> class extending the <code>KeyInfo</code> class.</li> </ol>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#configure-eudiwallet-to-use-custom-key-management","title":"Configure EudiWallet to use custom key management","text":"<p>To register the <code>MySecureArea</code> implementation with the Wallet Core Library, you must configure the wallet instance as shown below:</p> <pre><code>val walletConfig = EudiWalletConfig()\n    .configureOpenId4Vci {\n        // Configuration for OpenId4VCI\n    }\n    .configureOpenId4Vp {\n        // Configuration for OpenId4VP\n    }\nval wallet = EudiWallet(context, walletConfig) {\n    withSecureAreas(\n        listOf(\n            MySecureArea()\n        )\n    )\n}\n</code></pre> <p>For detailed information on EudiWallet configuration, please refer to the EudiWallet documentation</p> <p>Note:If the <code>MySecureArea</code> instance is required, it can be retrieved from the wallet instance using the following code:</p> <pre><code>val mySecureArea = wallet.secureAreaRepository.implementations\n    .filterIsInstance&lt;MySecureArea&gt;()\n    .first()\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#how-to-use-custom-key-management-with-openid4vci","title":"How to use custom key management with OpenId4VCI","text":"<p>When issuing a document with OpenId4VCI, the Wallet Core Library triggers events that require custom key management. There are two key events that necessitate this:</p> <ol> <li> <p><code>IssueEvent.DocumentRequiresCreateSettings</code>: This event occurs when creating a document for a    specific offered document that requires a key. In the case of custom key management, you must    create the corresponding <code>CreateDocumentSettings</code> object to accompany the <code>SecureArea</code>    implementation. This object defines in which <code>SecureArea</code> and how the key should be created.    The <code>createDocumentSettings</code> is then used to resume the issuance process.</p> </li> <li> <p><code>IssueEvent.DocumentRequiresUserAuth</code>: This event is triggered when key unlocking is needed    to sign the proof of possession for the document's key, which is required to issue the document.    To unlock the key, you must create the appropriate <code>KeyUnlockData</code> object that corresponds to the    <code>SecureArea</code> implementation. This object specifies how the key should be unlocked (e.g., via    password, biometric data, or authorization tokens). The <code>keyUnlockData</code> is then used to resume    the issuance process.</p> </li> </ol> <p>The following code snippet demonstrates how to handle these events with custom key management using the custom <code>MySecureArea</code> implementation:</p> <pre><code>val onIssueEvent = OnIssueEvent { event -&gt;\n    when (event) {\n        is IssueEvent.DocumentRequiresCreateSettings -&gt; {\n            // triggered when creating a document for a given offered document\n            val offeredDocument = event.offeredDocument\n            // create the createDocumentSettings for the document\n            // using custom implementation MySecureArea for keys\n            val mySecureArea = wallet.secureAreaRepository.implementations\n                .filterIsInstance&lt;MySecureArea&gt;()\n                .first()\n            val createDocumentSettings = CreateDocumentSettings(\n                // set the identifier of the desired secure area\n                secureAreaIdentifier = mySecureArea.identifier,\n                // set the CreateKeySettings for the key based on the secure area\n                createKeySettings = MyCreateKeySettings(\n                    // set custom settings for creating the key\n                    // with MySecureArea implementation\n                )\n            )\n            // resume the issuance process with the createDocumentSettings\n            event.resume(createDocumentSettings)\n            // or cancel the issuance process\n            event.cancel(\"User canceled the issuance process\")\n        }\n        is IssueEvent.DocumentRequiresUserAuth -&gt; {\n            // triggered when user authentication is required to issue a document\n            // Holds the document object that requires user authentication\n            // and the algorithm that is going to be used for signing the proof of possession,\n            // as well as methods for resuming the issuance process or canceling it\n\n            // Document and signing algorithm are provided \n            // to use if required for creating the keyUnlockData\n            val signingAlgorithm = event.signingAlgorithm\n            val document = event.document\n\n            //\n            // --&gt; show prompt if needed to unlock the key &lt;--\n            //\n\n            // create the keyUnlockData to unlock the key.\n            val keyUnlockData = MyKeyUnlockData(\n                // set the extra information for the key unlock data\n                // e.g. password, biometric data, authorization tokens etc.\n            )\n            // to resume the issuance process, after authenticating user,  call\n            // resume with the keyUnlockData\n            event.resume(keyUnlockData)\n\n            // or cancel the issuance process by calling cancel method\n            event.cancel(\"User canceled the issuance process\")\n        }\n        else -&gt; {\n            // handling rest of issuing events\n        }\n    }\n}\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/CustomizeSecureArea/#how-to-use-custom-key-management-with-presentation","title":"How to use custom key management with Presentation","text":"<p>When presenting a document using OpenId4VP or through proximity presentation with BLE, a <code>TransferEvent.RequestReceived</code> event is triggered upon receiving a request. The request contains the documents and items to be disclosed. To disclose the requested documents, you must unlock the keys associated with those documents. To do this, you need to create the appropriate <code>KeyUnlockData</code> object, which corresponds to the <code>SecureArea</code> implementation. This object specifies how the key should be unlocked (e.g., using a password, biometric data, authorization tokens, etc.). The <code>keyUnlockData</code> is then used to generate the response.</p> <p>The following code snippet illustrates how to handle the <code>TransferEvent.RequestReceived</code> event and disclose the requested documents with custom key management using a custom <code>SecureArea</code> implementation when key unlocking is required:</p> <pre><code>/**\n * Keeps the processed request to be used later for generating the response\n */\nlateinit var processedRequest: RequestProcessor.ProcessedRequest.Success\n\n/**\n * Example function that demonstrates how to get information about the requested documents\n * and show them to the user. The function should be called when the request is received.\n */\nfun showRequestedDocuments() {\n    // shows requested documents to user\n\n    processedRequest.requestedDocuments.forEach { requestedDocument -&gt;\n        // get document if needed to show more information such as document's name and docType\n        val document =\n            wallet.getDocumentById(requestedDocument.documentId) as? IssuedDocument\n        val documentName = document?.name\n        val docType = (document?.format as? MsoMdocFormat)?.docType\n\n        // show requested fields for this document\n        val docItems =\n            requestedDocument.requestedItems.forEach { (docItem, intentToRetain) -&gt;\n                val nameSpace = docItem.namespace\n                val elementIdentifier = docItem.elementIdentifier\n            }\n    }\n}\n\n/**\n * Example function that demonstrates how to generate and send a response based on the\n * selected documents. The function should be called after the user has selected the\n * documents to disclose.\n *\n * @param selectedDocuments A map of selected documents and the selected items to disclose\n */\nfun discloseDocuments(selectedDocuments: Map&lt;IssuedDocument, List&lt;DocItem&gt;&gt;) {\n    val disclosedDocuments = DisclosedDocuments(\n        selectedDocuments.map { (document, docItems) -&gt;\n\n            // should block until the user has unlock the key to sign the response\n\n            // One can use information from document to determine how to\n            // create the MyKeyUnlockData object, such as:\n\n            val secureArea = document.secureArea as MySecureArea\n            val keyAlias = document.keyAlias\n            val keyInfo = document.keyInfo as MyKeyInfo\n\n            //\n            // --&gt; show prompt if needed to unlock the key &lt;--\n            //\n\n            // create and return the keyUnlockData to unlock the key of the document\n            val keyUnlockData = MyKeyUnlockData(\n                // set the extra information for the key unlock data\n                // e.g. password, biometric data, authorization tokens etc.\n            )\n\n            DisclosedDocument(\n                documentId = document.id,\n                disclosedItems = docItems,\n                keyUnlockData = keyUnlockData\n            )\n        })\n\n    val response = processedRequest.generateResponse(disclosedDocuments).getOrThrow()\n    wallet.sendResponse(response)\n}\n\n/**\n * Example transfer event listener that demonstrates how to handle the request received event\n * and show the requested documents to the user.\n */\nval transferEventListener = TransferEvent.Listener { event -&gt;\n    when (event) {\n\n        is TransferEvent.RequestReceived -&gt; try {\n            // get the processed request\n            processedRequest = event.processedRequest.getOrThrow()\n            // the request has been received and processed\n\n            showRequestedDocuments()\n\n        } catch (e: Throwable) {\n            // An error occurred\n            // handle the error\n        }\n        // handle other events\n        else -&gt; {}\n    }\n}\n\n// Add the transfer event listener to the wallet\nwallet.addTransferEventListener(transferEventListener)\n</code></pre>"},{"location":"eudi-lib-android-wallet-core/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-lib-android-wallet-core/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/","title":"Changelog","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/changelog/#changelog","title":"Changelog","text":"<p>See release notes in project's github repository.</p>"},{"location":"eudi-lib-android-wallet-core/changelog/#0110-snapshot","title":"[0.11.0-SNAPSHOT]","text":"<p>__ 25 Jul 2024__</p> <ul> <li>Deprecate OpenId4Vci methods through EudiWallet object</li> <li>Add Eudi.createOpenId4VciManager method to create OpenId4VciManager object</li> <li>Bumb eudi-lib-andorid-wallet-document-manager to v0.4.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0103-snapshot","title":"[0.10.3-SNAPSHOT]","text":"<p>__ 23 Jul 2024__</p> <ul> <li>Support custom logger for OpenId4VCI and OpenId4VP via OpenId4VCIConfig</li> <li>Fix OpenId4VCI resume authorization</li> <li>Return DocumentExpired data class from issueDeferredDocument method when the document is expired</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0102","title":"[0.10.2]","text":"<p>__ 17 Jul 2024__</p> <ul> <li>Release version 0.10.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0102-snapshot","title":"[0.10.2-SNAPSHOT]","text":"<p>15 Jul 2024</p> <ul> <li>Fix overriding KtorHttpClientFactory for OpenId4VCI and OpenId4VP</li> <li>Fix Deferred Issuance for OpenId4VCI by not deleting the deferred document after issuance failure</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0101-snapshot","title":"[0.10.1-SNAPSHOT]","text":"<p>3 Jul 2024</p> <ul> <li>Bump eudi-lib-android-wallet-document-manager to v0.4.1-SNAPSHOT</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#0100-snapshot","title":"[0.10.0-SNAPSHOT]","text":"<p>27 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.2</li> <li>Bump eudi-lib-android-wallet-document-manager to v0.4.0-SNAPSHOT</li> <li>Support for OpenId4VCI pre-authorization flow</li> <li>Support for OpenId4VCI deferred issuance</li> <li>Extensive logging for OpenId4VCI and OpenId4VP</li> <li>Allow overriding ktor client for OpenId4VCI and OpenId4VP</li> <li>Bug fixes in OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#095-snapshot","title":"[0.9.5-SNAPSHOT]","text":"<p>14 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.1</li> <li>Configurable debug logging with level support for OpenId4VCI</li> <li>Support for overriding ktor client for OpenId4VCI</li> <li>Bug fixes in OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#094-snapshot","title":"[0.9.4-SNAPSHOT]","text":"<p>10 Jun 2024</p> <ul> <li>Security improvements for dPoP Signer for OpendI4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#093-snapshot","title":"[0.9.3-SNAPSHOT]","text":"<p>10 Jun 2024</p> <ul> <li>Bump eudi-lib-jvm-openid4vci-kt to v0.3.0</li> <li>Support CWT proofs for OpenId4VCI</li> <li>Configure the usage of PAR for OpendId4VCI</li> <li>Improvements for proof type selection</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#092-snapshot","title":"[0.9.2-SNAPSHOT]","text":"<p>04 Jun 2024</p> <ul> <li>Support multiple URL schemes for OpenId4Vp</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#091-snapshot","title":"[0.9.1-SNAPSHOT]","text":"<p>31 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.4.2</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#090-snapshot","title":"[0.9.0-SNAPSHOT]","text":"<p>28 May 2024</p> <ul> <li>Bump eu.europa.ec.eudi:eudi-lib-android-wallet-document-manager to 0.3.0-SNAPSHOT</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#080-snapshot","title":"[0.8.0-SNAPSHOT]","text":"<p>24 May 2024</p> <ul> <li>DPoP support for OpenId4VCI</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#071-snapshot","title":"[0.7.1-SNAPSHOT]","text":"<p>24 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.4.0</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#070-snapshot","title":"[0.7.0-SNAPSHOT]","text":"<p>23 May 2024</p> <ul> <li>Bump eudi-lib-jvm-siop-openid4vp-kt to v0.3.5</li> <li>Added support to provide the Legal Name of Preregistered Verifiers in Openid4vp Configuration</li> <li>Use the Legal Name provided by the the eudi-lib-jvm-siop-openid4vp-kt library in the ReaderAuth result</li> </ul>"},{"location":"eudi-lib-android-wallet-core/changelog/#060-snapshot","title":"[0.6.0-SNAPSHOT]","text":"<p>22 May 2024</p> <ul> <li>Support credential offer OpenId4VCI draft 13</li> <li>Update eudi-lib-jvm-openid4vci-kt library to 0.2.2</li> <li>Improvement on handling OpenId4VCI authorization code flow</li> <li>Allow to configure the usage of StrongBox for storing the document's keys</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/","title":"Licenses","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/licenses/#eudi-wallet-core-library-for-android","title":"EUDI Wallet Core library for Android","text":""},{"location":"eudi-lib-android-wallet-core/licenses/#dependency-license-report","title":"Dependency License Report","text":"<p>2025-04-10 17:51:31 EEST</p>"},{"location":"eudi-lib-android-wallet-core/licenses/#apache-license-version-20","title":"Apache License, Version 2.0","text":"<p>1 Group: <code>androidx.appcompat</code> Name: <code>appcompat</code> Version: <code>1.7.0</code> </p> <ul> <li>POM Project URL: https://developer.android.com/jetpack/androidx/releases/appcompat#1.7.0</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>2 Group: <code>co.nstant.in</code> Name: <code>cbor</code> Version: <code>0.9</code> </p> <ul> <li>POM Project URL: https://github.com/c-rack/cbor-java</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>3 Group: <code>com.android.identity</code> Name: <code>identity-mdoc</code> Version: <code>202408.1</code> </p> <ul> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>4 Group: <code>com.android.identity</code> Name: <code>identity-android</code> Version: <code>202408.1</code> </p> <ul> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>5 Group: <code>com.nimbusds</code> Name: <code>oauth2-oidc-sdk</code> Version: <code>11.20.1</code> </p> <ul> <li>Project URL: https://bitbucket.org/connect2id/oauth-2.0-sdk-with-openid-connect-extensions</li> <li>Manifest License: Apache License, Version 2.0 (Not Packaged)</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>6 Group: <code>io.ktor</code> Name: <code>ktor-client-logging</code> Version: <code>3.0.1</code> </p> <ul> <li>POM Project URL: https://github.com/ktorio/ktor</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>7 Group: <code>io.ktor</code> Name: <code>ktor-client-android</code> Version: <code>3.0.1</code> </p> <ul> <li>POM Project URL: https://github.com/ktorio/ktor</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>8 Group: <code>org.jetbrains.kotlin</code> Name: <code>kotlin-parcelize-runtime</code> Version: <code>2.0.21</code> </p> <ul> <li>POM Project URL: https://kotlinlang.org/</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>9 Group: <code>org.jetbrains.kotlin</code> Name: <code>kotlin-stdlib</code> Version: <code>2.1.0</code> </p> <ul> <li>POM Project URL: https://kotlinlang.org/</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>10 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-datetime</code> Version: <code>0.6.2</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-datetime</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>11 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-io-bytestring</code> Version: <code>0.5.4</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-io</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul> <p>12 Group: <code>org.jetbrains.kotlinx</code> Name: <code>kotlinx-io-core</code> Version: <code>0.5.4</code> </p> <ul> <li>POM Project URL: https://github.com/Kotlin/kotlinx-io</li> <li>POM License: Apache License, Version 2.0 - https://www.apache.org/licenses/LICENSE-2.0</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#bsd3","title":"BSD3","text":"<p>13 Group: <code>com.augustcellars.cose</code> Name: <code>cose-java</code> Version: <code>1.1.0</code> </p> <ul> <li>POM Project URL: https://github.com/cose-wg/cose-java</li> <li>POM License: BSD3 - https://github.com/jimsch/COSE-JAVA/blob/master/LICENSE</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#bouncy-castle-licence","title":"Bouncy Castle Licence","text":"<p>14 Group: <code>org.bouncycastle</code> Name: <code>bcpkix-jdk18on</code> Version: <code>1.78.1</code> </p> <ul> <li>POM Project URL: https://www.bouncycastle.org/java.html</li> <li>POM License: Bouncy Castle Licence - https://www.bouncycastle.org/licence.html</li> </ul> <p>15 Group: <code>org.bouncycastle</code> Name: <code>bcprov-jdk18on</code> Version: <code>1.78.1</code> </p> <ul> <li>POM Project URL: https://www.bouncycastle.org/java.html</li> <li>POM License: Bouncy Castle Licence - https://www.bouncycastle.org/licence.html</li> </ul>"},{"location":"eudi-lib-android-wallet-core/licenses/#creative-commons-legal-code","title":"Creative Commons Legal Code","text":"<p>16 Group: <code>com.upokecenter</code> Name: <code>cbor</code> Version: <code>4.5.2</code> </p> <ul> <li>POM Project URL: https://github.com/peteroupc/CBOR-Java</li> <li>POM License: Creative Commons Legal Code - https://creativecommons.org/publicdomain/zero/1.0/legalcode</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/#index-of-eudi-lib-android-wallet-coredocs","title":"Index of eudi-lib-android-wallet-core/docs","text":"<ul> <li>wallet-core</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/#index-of-eudi-lib-android-wallet-coredocswallet-core","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core","text":"<ul> <li>eu.europa.ec.eudi.wallet</li> <li>eu.europa.ec.eudi.wallet.document</li> <li>eu.europa.ec.eudi.wallet.issue.openid4vci</li> <li>eu.europa.ec.eudi.wallet.issue.openid4vci.transformations</li> <li>eu.europa.ec.eudi.wallet.logging</li> <li>eu.europa.ec.eudi.wallet.presentation</li> <li>eu.europa.ec.eudi.wallet.statium</li> <li>eu.europa.ec.eudi.wallet.transactionLogging</li> <li>eu.europa.ec.eudi.wallet.transactionLogging.presentation</li> <li>eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing</li> <li>eu.europa.ec.eudi.wallet.transfer.openId4vp</li> <li>eu.europa.ec.eudi.wallet.util</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet","text":"<ul> <li>-eudi-wallet</li> <li>-eudi-wallet-config</li> <li>-eudi-wallet-impl</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet","text":"<ul> <li>-builder</li> <li>-companion</li> <li>config</li> <li>create-open-id4-vci-manager</li> <li>document-manager</li> <li>document-status-resolver</li> <li>enumerate-secure-areas</li> <li>logger</li> <li>presentation-manager</li> <li>resolve-status-by-id</li> <li>set-reader-trust-store</li> <li>set-trusted-reader-certificates</li> <li>transfer-manager</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/config/#config","title":"config","text":"<p>[androidJvm] abstract val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/","title":"Create open id4 vci manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/createOpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/#createopenid4vcimanager","title":"createOpenId4VciManager","text":"<p>[androidJvm] abstract fun createOpenId4VciManager(): OpenId4VciManager</p> <p>Create an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/create-open-id4-vci-manager/#return","title":"Return","text":"<p>an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-manager/","title":"Document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] abstract val documentManager: DocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-status-resolver/","title":"Document status resolver","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/documentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/document-status-resolver/#documentstatusresolver","title":"documentStatusResolver","text":"<p>[androidJvm] abstract val documentStatusResolver: DocumentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/","title":"Enumerate secure areas","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/enumerateSecureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/#enumeratesecureareas","title":"enumerateSecureAreas","text":"<p>[androidJvm] open fun enumerateSecureAreas(): List&lt;String&gt;</p> <p>Enumerate the secure areas available in the wallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/enumerate-secure-areas/#return","title":"Return","text":"<p>a list of secure area identifiers</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/logger/#logger","title":"logger","text":"<p>[androidJvm] abstract val logger: Logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/presentation-manager/","title":"Presentation manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] abstract val presentationManager: PresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/resolve-status-by-id/","title":"Resolve status by id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/resolveStatusById</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/resolve-status-by-id/#resolvestatusbyid","title":"resolveStatusById","text":"<p>[androidJvm] open suspend fun resolveStatusById(documentId: DocumentId): Result&lt;Status&gt;</p> <p>Resolve the status of the document with the given documentId</p> <p>This method will return the status of the document if it is an IssuedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/resolve-status-by-id/#return","title":"Return","text":"<p>the status of the document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/resolve-status-by-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentId the document ID"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/","title":"Set reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/setReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#setreadertruststore","title":"setReaderTrustStore","text":"<p>[androidJvm] abstract fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): EudiWallet</p> <p>Sets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/","title":"Set trusted reader certificates","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/setTrustedReaderCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#settrustedreadercertificates","title":"setTrustedReaderCertificates","text":"<p>[androidJvm] abstract fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): EudiWallet</p> <p>Sets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerCertificates the list of reader certificates <p>[androidJvm] abstract fun setTrustedReaderCertificates(@RawResvararg rawRes: Int): EudiWallet</p> <p>Sets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#return_1","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/set-trusted-reader-certificates/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> rawRes the list of raw resource IDs"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/transfer-manager/","title":"Transfer manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/transferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/transfer-manager/#transfermanager","title":"transferManager","text":"<p>[androidJvm] abstract val transferManager: TransferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder","text":"<ul> <li>-builder</li> <li>build</li> <li>config</li> <li>document-manager</li> <li>document-status-resolver</li> <li>ktor-http-client-factory</li> <li>logger</li> <li>presentation-manager</li> <li>reader-trust-store</li> <li>secure-areas</li> <li>storage-engine</li> <li>transaction-logger</li> <li>with-document-manager</li> <li>with-document-status-resolver</li> <li>with-ktor-http-client-factory</li> <li>with-logger</li> <li>with-presentation-manager</li> <li>with-reader-trust-store</li> <li>with-secure-areas</li> <li>with-storage-engine</li> <li>with-transaction-logger</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor(context: Context, config: EudiWalletConfig)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context application context config the configuration object"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): EudiWallet</p> <p>Build the EudiWallet instance</p> <p>The EudiWallet instance will be created based on the configuration provided in the Builder class.</p> <p>The EudiWallet instance will be created with the following default implementations if not set:</p> <ul> <li>AndroidStorageEngine for storing/retrieving documents</li> <li>AndroidKeystoreSecureArea for managing documents' keys</li> <li>DocumentManagerImpl for managing documents</li> <li>PresentationManagerImpl for both proximity and remote presentation</li> <li>OpenId4VpManager for remote presentation</li> <li>eu.europa.ec.eudi.iso18013.transfer.TransferManagerImpl for proximity presentation</li> <li>eu.europa.ec.eudi.wallet.statium.DocumentStatusResolverImpl for resolving the status of documents</li> </ul> <p>Note: The EudiWalletConfig.documentsStorageDir is not set, the default storage directory will be used which is the application's no backup files directory.</p> <p>Note: The EudiWalletConfig.userAuthenticationRequired is set to true and the device is not secured with a PIN, pattern, or password, the configuration will be updated to set the user authentication required to false.</p> <p>Note: The EudiWalletConfig.useStrongBoxForKeys is set to true and the device does not support StrongBox, the configuration will be updated to set the use StrongBox for keys to false.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/build/#return","title":"Return","text":"<p>EudiWallet</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/config/#config","title":"config","text":"<p>[androidJvm] val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-manager/","title":"Document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] var documentManager: DocumentManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-status-resolver/","title":"Document status resolver","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/documentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/document-status-resolver/#documentstatusresolver","title":"documentStatusResolver","text":"<p>[androidJvm] var documentStatusResolver: DocumentStatusResolver?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] var ktorHttpClientFactory: () -&gt; HttpClient?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/logger/#logger","title":"logger","text":"<p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/presentation-manager/","title":"Presentation manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] var presentationManager: PresentationManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/secure-areas/","title":"Secure areas","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/secureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/secure-areas/#secureareas","title":"secureAreas","text":"<p>[androidJvm] var secureAreas: List&lt;SecureArea&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/storage-engine/","title":"Storage engine","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/storageEngine</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/storage-engine/#storageengine","title":"storageEngine","text":"<p>[androidJvm] var storageEngine: StorageEngine?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/transaction-logger/","title":"Transaction logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/transactionLogger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/transaction-logger/#transactionlogger","title":"transactionLogger","text":"<p>[androidJvm] var transactionLogger: TransactionLogger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/","title":"With document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withDocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#withdocumentmanager","title":"withDocumentManager","text":"<p>[androidJvm] fun withDocumentManager(documentManager: DocumentManager): &lt;Error class: unknown class&gt;</p> <p>Configure with the given DocumentManager to use. If not set, the default document manager will be used which is DocumentManagerImpl configured with the provided storageEngine and secureAreas if they are set.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager the document manager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-status-resolver/","title":"With document status resolver","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withDocumentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-status-resolver/#withdocumentstatusresolver","title":"withDocumentStatusResolver","text":"<p>[androidJvm] fun withDocumentStatusResolver(documentStatusResolver: DocumentStatusResolver): &lt;Error class: unknown class&gt;</p> <p>Configure with the given DocumentStatusResolver to use for resolving the status of documents. If not set, the default document status resolver will be used which is eu.europa.ec.eudi.wallet.statium.DocumentStatusResolverImpl that uses the HttpClient provided in the configuration.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-status-resolver/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-document-status-resolver/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentStatusResolver the document status resolver"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/","title":"With ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withKtorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#withktorhttpclientfactory","title":"withKtorHttpClientFactory","text":"<p>[androidJvm] fun withKtorHttpClientFactory(ktorHttpClientFactory: () -&gt; HttpClient): &lt;Error class: unknown class&gt;</p> <p>Configure with the given Ktor HTTP client factory to use for making HTTP requests. Ktor HTTP client is used by the OpenId4VpManager and OpenId4VciManager for making HTTP requests.</p> <p>If not set, the default Ktor HTTP client factory will be used which is initialized with the default</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-ktor-http-client-factory/#parameters","title":"Parameters","text":"<p>androidJvm</p> ktorHttpClientFactory the Ktor HTTP client factory"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/","title":"With logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withLogger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#withlogger","title":"withLogger","text":"<p>[androidJvm] fun withLogger(logger: Logger): &lt;Error class: unknown class&gt;</p> <p>Configure with the given Logger to use for logging. If not set, the default logger will be used which is configured with the EudiWalletConfig.configureLogging.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-logger/#parameters","title":"Parameters","text":"<p>androidJvm</p> logger the logger"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/","title":"With presentation manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withPresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#withpresentationmanager","title":"withPresentationManager","text":"<p>[androidJvm] fun withPresentationManager(presentationManager: PresentationManager): &lt;Error class: unknown class&gt;</p> <p>Configure with the given PresentationManager to use for both proximity and remote presentation. If not set, the default presentation manager will be used which is PresentationManagerImpl that uses the eu.europa.ec.eudi.iso18013.transfer.TransferManagerImpl for proximity presentation and OpenId4VpManager for remote presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-presentation-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> presentationManager the presentation manager"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/","title":"With reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#withreadertruststore","title":"withReaderTrustStore","text":"<p>[androidJvm] fun withReaderTrustStore(readerTrustStore: ReaderTrustStore): &lt;Error class: unknown class&gt;</p> <p>Configure with the given ReaderTrustStore to use for performing reader authentication. If not set, the default reader trust store will be used which is initialized with the certificates provided in the EudiWalletConfig.configureReaderTrustStore methods.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/","title":"With secure areas","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withSecureAreas</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#withsecureareas","title":"withSecureAreas","text":"<p>[androidJvm] fun withSecureAreas(secureAreas: List&lt;SecureArea&gt;): &lt;Error class: unknown class&gt;</p> <p>Configure with the given SecureArea implementations to use for documents' keys management. If not set, the default secure area will be used which is AndroidKeystoreSecureArea.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-secure-areas/#parameters","title":"Parameters","text":"<p>androidJvm</p> secureAreas the secure areas"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/","title":"With storage engine","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withStorageEngine</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#withstorageengine","title":"withStorageEngine","text":"<p>[androidJvm] fun withStorageEngine(storageEngine: StorageEngine): &lt;Error class: unknown class&gt;</p> <p>Configure with the given StorageEngine to use for storing/retrieving documents. If not set, the default storage engine will be used which is AndroidStorageEngine.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-storage-engine/#parameters","title":"Parameters","text":"<p>androidJvm</p> storageEngine the storage engine"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-transaction-logger/","title":"With transaction logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Builder/withTransactionLogger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-transaction-logger/#withtransactionlogger","title":"withTransactionLogger","text":"<p>[androidJvm] fun withTransactionLogger(transactionLogger: TransactionLogger): &lt;Error class: unknown class&gt;</p> <p>Configure with the given TransactionLogger to use for logging transactions. If not set, the default transaction logger will be used which logs transactions to the console.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-transaction-logger/#return","title":"Return","text":"<p>this Builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-builder/with-transaction-logger/#parameters","title":"Parameters","text":"<p>androidJvm</p> transactionLogger the transaction logger"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion","text":"<ul> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWallet/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(context: Context, config: EudiWalletConfig, extraConfiguration: EudiWallet.Builder.() -&gt; Unit? = null): EudiWallet</p> <p>Create an instance of EudiWallet with the given configuration and additional configuration using the Builder class</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> context application context config the configuration object extraConfiguration additional configuration to be applied based on the Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet-config","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config","text":"<ul> <li>-companion</li> <li>-eudi-wallet-config</li> <li>clear-ble-cache</li> <li>configure-document-key-creation</li> <li>configure-document-manager</li> <li>configure-document-status-resolver</li> <li>configure-logging</li> <li>configure-open-id4-vci</li> <li>configure-open-id4-vp</li> <li>configure-proximity-presentation</li> <li>configure-reader-trust-store</li> <li>document-manager-identifier</li> <li>document-status-resolver-clock-skew</li> <li>documents-storage-dir</li> <li>enable-ble-central-mode</li> <li>enable-ble-peripheral-mode</li> <li>encrypt-documents-in-storage</li> <li>log-level</li> <li>log-size-limit</li> <li>nfc-engagement-service-class</li> <li>open-id4-vci-config</li> <li>open-id4-vp-config</li> <li>reader-trusted-certificates</li> <li>use-strong-box-for-keys</li> <li>user-authentication-required</li> <li>user-authentication-timeout</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-eudi-wallet-config/","title":"eudi wallet config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-eudi-wallet-config/#eudiwalletconfig","title":"EudiWalletConfig","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/clear-ble-cache/","title":"Clear ble cache","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/clearBleCache</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/clear-ble-cache/#clearblecache","title":"clearBleCache","text":"<p>[androidJvm] var clearBleCache: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/","title":"Configure document key creation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureDocumentKeyCreation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/#configuredocumentkeycreation","title":"configureDocumentKeyCreation","text":"<p>[androidJvm] fun configureDocumentKeyCreation(userAuthenticationRequired: Boolean = false, userAuthenticationTimeout: Long = 0, useStrongBoxForKeys: Boolean = true): &lt;Error class: unknown class&gt;</p> <p>Configure the document key creation. This allows to configure if user authentication is required to unlock key usage, the user authentication timeout and whether to use the strong box for keys. These values are used to create the eu.europa.ec.eudi.wallet.document.CreateDocumentSettings using eu.europa.ec.eudi.wallet.document.DocumentExtensions.getDefaultCreateDocumentSettings method.</p> <p>Note: when setting userAuthenticationRequired to true, device must be secured with a PIN, pattern or password.</p> <p>Note: when setting useStrongBoxForKeys to true, the device must support the StrongBox.</p> <p>The default values are:</p> <ul> <li>userAuthenticationRequired: false</li> <li>userAuthenticationTimeout: 0</li> <li>useStrongBoxForKeys: true if supported by the device</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-key-creation/#parameters","title":"Parameters","text":"<p>androidJvm</p> userAuthenticationRequired whether user authentication is required userAuthenticationTimeout If 0, user authentication is required for every use of the key, otherwise it's required within the given amount of milliseconds useStrongBoxForKeys whether to use the strong box for keys"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/","title":"Configure document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureDocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#configuredocumentmanager","title":"configureDocumentManager","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureDocumentManager(storageDir: File, identifier: String? = null, encryptDocuments: Boolean = true): &lt;Error class: unknown class&gt;</p> <p>Configure the built-in document manager.</p> <p>Allowing to configure the documents storage directory, the document manager identifier and whether to encrypt documents in storage. The default document manager identifier is set to DEFAULT_DOCUMENT_MANAGER_IDENTIFIER.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> storageDir the documents storage directory identifier the document manager identifier encryptDocuments whether to encrypt documents in storage"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-manager/#see-also","title":"See also","text":"DocumentManagerImpl AndroidStorageEngine"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-status-resolver/","title":"Configure document status resolver","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureDocumentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-document-status-resolver/#configuredocumentstatusresolver","title":"configureDocumentStatusResolver","text":"<p>[androidJvm] fun configureDocumentStatusResolver(clockSkewInMinutes: Long): &lt;Error class: unknown class&gt;</p> <p>Configure the document status resolver clock skew. This allows to configure the clock skew for the provided document status resolver.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/","title":"Configure logging","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureLogging</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#configurelogging","title":"configureLogging","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureLogging(level: Int, sizeLimit: Int? = null): &lt;Error class: unknown class&gt;</p> <p>Configure the built-in logging. This allows to configure the log level and the log size limit.</p> <p>The default log level is set to Logger.LEVEL_INFO and the default log size limit is set to</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-logging/#parameters","title":"Parameters","text":"<p>androidJvm</p> level the log level sizeLimit the log size limit"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/","title":"Configure open id4 vci","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureOpenId4Vci</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#configureopenid4vci","title":"configureOpenId4Vci","text":"<p>[androidJvm] fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config): &lt;Error class: unknown class&gt;</p> <p>Configure OpenID4VCI.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#parameters","title":"Parameters","text":"<p>androidJvm</p> openId4VciConfig the OpenID4VCI configuration"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#see-also","title":"See also","text":"OpenId4VciManager.Config OpenId4VciManager.Config.Builder <p>[androidJvm] fun configureOpenId4Vci(openId4VciConfig: OpenId4VciManager.Config.Builder.() -&gt; Unit): &lt;Error class: unknown class&gt;</p> <p>Configure OpenID4VCI using a OpenId4VciManager.Config.Builder as a lambda with receiver.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> openId4VciConfig the OpenID4VCI configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vci/#see-also_1","title":"See also","text":"OpenId4VciManager.Config OpenId4VciManager.Config.Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/","title":"Configure open id4 vp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureOpenId4Vp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#configureopenid4vp","title":"configureOpenId4Vp","text":"<p>[androidJvm] fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig): &lt;Error class: unknown class&gt;</p> <p>Configure OpenID4VP.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#parameters","title":"Parameters","text":"<p>androidJvm</p> openId4VpConfig the OpenID4VP configuration"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#see-also","title":"See also","text":"OpenId4VpConfig OpenId4VpConfig.Builder <p>[androidJvm] fun configureOpenId4Vp(openId4VpConfig: OpenId4VpConfig.Builder.() -&gt; Unit): &lt;Error class: unknown class&gt;</p> <p>Configure OpenID4VP using a OpenId4VpConfig.Builder as a lambda with receiver.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> openId4VpConfig the OpenID4VP configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-open-id4-vp/#see-also_1","title":"See also","text":"OpenId4VpConfig OpenId4VpConfig.Builder"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/","title":"Configure proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#configureproximitypresentation","title":"configureProximityPresentation","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>fun configureProximityPresentation(enableBlePeripheralMode: Boolean = true, enableBleCentralMode: Boolean = false, clearBleCache: Boolean = true, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null): &lt;Error class: unknown class&gt;</p> <p>Configure the proximity presentation. This allows to configure the BLE peripheral mode, the BLE central mode and whether to clear the BLE cache. Also, it allows to set the NFC engagement service class an implementation of NfcEngagementService, which is used to handle the NFC engagement.</p> <p>The default values are:</p> <ul> <li>enableBlePeripheralMode: true</li> <li>enableBleCentralMode: false</li> <li>clearBleCache: true</li> <li>nfcEngagementServiceClass: null</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> enableBlePeripheralMode whether to enable BLE peripheral mode enableBleCentralMode whether to enable BLE central mode clearBleCache whether to clear the BLE cache nfcEngagementServiceClass the NFC engagement service class"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/","title":"Configure reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/configureReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#configurereadertruststore","title":"configureReaderTrustStore","text":"<p>[androidJvm] fun configureReaderTrustStore(readerTrustedCertificates: List&lt;X509Certificate&gt;): &lt;Error class: unknown class&gt;</p> <p>fun configureReaderTrustStore(vararg readerTrustedCertificates: X509Certificate): &lt;Error class: unknown class&gt;</p> <p>Configure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustedCertificates the reader trusted certificates <p>[androidJvm] fun configureReaderTrustStore(context: Context, @RawResvararg certificateRes: Int): &lt;Error class: unknown class&gt;</p> <p>Configure the built-in ReaderTrustStore. This allows to set the reader trusted certificates for the reader trust store. The certificates are loaded from the raw resources.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#return_1","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/configure-reader-trust-store/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> context the context certificateRes the reader trusted certificates raw resources"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-manager-identifier/","title":"Document manager identifier","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/documentManagerIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-manager-identifier/#documentmanageridentifier","title":"documentManagerIdentifier","text":"<p>[androidJvm] var documentManagerIdentifier: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-status-resolver-clock-skew/","title":"Document status resolver clock skew","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/documentStatusResolverClockSkew</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/document-status-resolver-clock-skew/#documentstatusresolverclockskew","title":"documentStatusResolverClockSkew","text":"<p>[androidJvm] var documentStatusResolverClockSkew: Duration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/documents-storage-dir/","title":"Documents storage dir","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/documentsStorageDir</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/documents-storage-dir/#documentsstoragedir","title":"documentsStorageDir","text":"<p>[androidJvm] var documentsStorageDir: File?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-central-mode/","title":"Enable ble central mode","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/enableBleCentralMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-central-mode/#enableblecentralmode","title":"enableBleCentralMode","text":"<p>[androidJvm] var enableBleCentralMode: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-peripheral-mode/","title":"Enable ble peripheral mode","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/enableBlePeripheralMode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/enable-ble-peripheral-mode/#enablebleperipheralmode","title":"enableBlePeripheralMode","text":"<p>[androidJvm] var enableBlePeripheralMode: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/encrypt-documents-in-storage/","title":"Encrypt documents in storage","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/encryptDocumentsInStorage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/encrypt-documents-in-storage/#encryptdocumentsinstorage","title":"encryptDocumentsInStorage","text":"<p>[androidJvm] var encryptDocumentsInStorage: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-level/","title":"Log level","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/logLevel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-level/#loglevel","title":"logLevel","text":"<p>[androidJvm] var logLevel: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-size-limit/","title":"Log size limit","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/logSizeLimit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/log-size-limit/#logsizelimit","title":"logSizeLimit","text":"<p>[androidJvm] var logSizeLimit: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] var nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vci-config/","title":"Open id4 vci config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/openId4VciConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vci-config/#openid4vciconfig","title":"openId4VciConfig","text":"<p>[androidJvm] var openId4VciConfig: OpenId4VciManager.Config?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vp-config/","title":"Open id4 vp config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/openId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/open-id4-vp-config/#openid4vpconfig","title":"openId4VpConfig","text":"<p>[androidJvm] var openId4VpConfig: OpenId4VpConfig?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/reader-trusted-certificates/","title":"Reader trusted certificates","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/readerTrustedCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/reader-trusted-certificates/#readertrustedcertificates","title":"readerTrustedCertificates","text":"<p>[androidJvm] var readerTrustedCertificates: List&lt;X509Certificate&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/use-strong-box-for-keys/","title":"Use strong box for keys","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/useStrongBoxForKeys</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/use-strong-box-for-keys/#usestrongboxforkeys","title":"useStrongBoxForKeys","text":"<p>[androidJvm] var useStrongBoxForKeys: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-required/","title":"User authentication required","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/userAuthenticationRequired</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-required/#userauthenticationrequired","title":"userAuthenticationRequired","text":"<p>[androidJvm] var userAuthenticationRequired: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-timeout/","title":"User authentication timeout","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/userAuthenticationTimeout</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/user-authentication-timeout/#userauthenticationtimeout","title":"userAuthenticationTimeout","text":"<p>[androidJvm] var userAuthenticationTimeout: Long</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet-config-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion","text":"<ul> <li>-d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r</li> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/-d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r/","title":"d e f a u l t  d o c u m e n t  m a n a g e r  i d e n t i f i e r","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/Companion/DEFAULT_DOCUMENT_MANAGER_IDENTIFIER</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/-d-e-f-a-u-l-t_-d-o-c-u-m-e-n-t_-m-a-n-a-g-e-r_-i-d-e-n-t-i-f-i-e-r/#default_document_manager_identifier","title":"DEFAULT_DOCUMENT_MANAGER_IDENTIFIER","text":"<p>[androidJvm] const val DEFAULT_DOCUMENT_MANAGER_IDENTIFIER: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletConfig/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(configure: EudiWalletConfig.() -&gt; Unit): EudiWalletConfig</p> <p>Create a new EudiWalletConfig instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#return","title":"Return","text":"<p>the EudiWalletConfig instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-config/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> configure the configuration lambda"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallet-eudi-wallet-impl","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl","text":"<ul> <li>config</li> <li>context</li> <li>create-open-id4-vci-manager</li> <li>document-manager</li> <li>document-status-resolver</li> <li>logger</li> <li>presentation-manager</li> <li>set-reader-trust-store</li> <li>set-trusted-reader-certificates</li> <li>transaction-logger</li> <li>transfer-manager</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/config/#config","title":"config","text":"<p>[androidJvm] open override val config: EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/context/","title":"Context","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/context</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/context/#context","title":"context","text":"<p>[androidJvm] val context: Context</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/","title":"Create open id4 vci manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/createOpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/#createopenid4vcimanager","title":"createOpenId4VciManager","text":"<p>[androidJvm] open override fun createOpenId4VciManager(): OpenId4VciManager</p> <p>Create an instance of OpenId4VciManager for the wallet to interact with the OpenId4Vci service</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/create-open-id4-vci-manager/#return","title":"Return","text":"<p>an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-manager/","title":"Document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] open override val documentManager: DocumentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-status-resolver/","title":"Document status resolver","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/documentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/document-status-resolver/#documentstatusresolver","title":"documentStatusResolver","text":"<p>[androidJvm] open override val documentStatusResolver: DocumentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/logger/#logger","title":"logger","text":"<p>[androidJvm] open override val logger: Logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/presentation-manager/","title":"Presentation manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/presentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/presentation-manager/#presentationmanager","title":"presentationManager","text":"<p>[androidJvm] open override val presentationManager: PresentationManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/","title":"Set reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/setReaderTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#setreadertruststore","title":"setReaderTrustStore","text":"<p>[androidJvm] open override fun setReaderTrustStore(readerTrustStore: ReaderTrustStore): &lt;Error class: unknown class&gt;</p> <p>Sets the reader trust store with the given ReaderTrustStore. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-reader-trust-store/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerTrustStore the reader trust store"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/","title":"Set trusted reader certificates","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/setTrustedReaderCertificates</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#settrustedreadercertificates","title":"setTrustedReaderCertificates","text":"<p>[androidJvm] open override fun setTrustedReaderCertificates(trustedReaderCertificates: List&lt;X509Certificate&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the reader trust store with the given list of X509Certificate. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#parameters","title":"Parameters","text":"<p>androidJvm</p> readerCertificates the list of reader certificates <p>[androidJvm] open override fun setTrustedReaderCertificates(vararg rawRes: Int): &lt;Error class: unknown class&gt;</p> <p>Sets the reader trust store with the given list of raw resource IDs. This method is useful when the reader trust store is not set in the configuration object, or when the reader trust store needs to be updated at runtime.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#return_1","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/set-trusted-reader-certificates/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> rawRes the list of raw resource IDs"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transaction-logger/","title":"Transaction logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/transactionLogger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transaction-logger/#transactionlogger","title":"transactionLogger","text":"<p>[androidJvm] val transactionLogger: TransactionLogger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transfer-manager/","title":"Transfer manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet/EudiWalletImpl/transferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet/-eudi-wallet-impl/transfer-manager/#transfermanager","title":"transferManager","text":"<p>[androidJvm] open override val transferManager: TransferManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletdocument","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document","text":"<ul> <li>-document-extensions</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletdocument-document-extensions","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions","text":"<ul> <li>-default-key-unlock-data</li> <li>get-default-create-document-settings</li> <li>get-default-key-unlock-data</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/","title":"default key unlock data","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/DefaultKeyUnlockData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#defaultkeyunlockdata","title":"DefaultKeyUnlockData","text":"<p>[androidJvm]\\</p> <p>@get:JvmName(name = \"getDefaultKeyUnlockData\")</p> <p>@get:JvmStatic</p> <p>val Document.DefaultKeyUnlockData: AndroidKeystoreKeyUnlockData?</p> <p>Returns the default AndroidKeystoreKeyUnlockData for the Document instance. The default key unlock data is based on the Document.keyAlias.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#receiver","title":"Receiver","text":"<p>the Document instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#return","title":"Return","text":"<p>the default AndroidKeystoreKeyUnlockData for the Document instance if document requires user authentication</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#see-also","title":"See also","text":"AndroidKeystoreKeyUnlockData Document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/-default-key-unlock-data/#throws","title":"Throws","text":"IllegalStateException if the Document is not managed by AndroidKeystoreSecureArea"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/","title":"Get default create document settings","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/getDefaultCreateDocumentSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#getdefaultcreatedocumentsettings","title":"getDefaultCreateDocumentSettings","text":"<p>[androidJvm]\\</p> <p>@JvmName(name = \"getDefaultCreateDocumentSettings\")</p> <p>@JvmOverloads</p> <p>@JvmStatic</p> <p>fun EudiWallet.getDefaultCreateDocumentSettings(attestationChallenge: ByteArray? = null, configure: AndroidKeystoreCreateKeySettings.Builder.() -&gt; Unit? = null): CreateDocumentSettings</p> <p>Returns the default CreateDocumentSettings for the EudiWallet instance. The default settings are based on the EudiWalletConfig and the first available AndroidKeystoreSecureArea implementation. The attestationChallenge is generated using a SecureRandom instance. The configure lambda can be used to further customize the AndroidKeystoreCreateKeySettings. The first available AndroidKeystoreSecureArea implementation is used.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#receiver","title":"Receiver","text":"<p>the EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#parameters","title":"Parameters","text":"<p>androidJvm</p> attestationChallenge the attestation challenge to use when creating the keys configure a lambda to further customize the AndroidKeystoreCreateKeySettings"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#see-also","title":"See also","text":"AndroidKeystoreCreateKeySettings.Builder AndroidKeystoreCreateKeySettings AndroidKeystoreSecureArea CreateDocumentSettings"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-create-document-settings/#throws","title":"Throws","text":"NoSuchElementException if no AndroidKeystoreSecureArea implementation is available"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/","title":"Get default key unlock data","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.document/DocumentExtensions/getDefaultKeyUnlockData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#getdefaultkeyunlockdata","title":"getDefaultKeyUnlockData","text":"<p>[androidJvm]\\</p> <p>@JvmName(name = \"getDefaultKeyUnlockData\")</p> <p>@JvmStatic</p> <p>fun EudiWallet.getDefaultKeyUnlockData(documentId: DocumentId): AndroidKeystoreKeyUnlockData?</p> <p>Returns the default AndroidKeystoreKeyUnlockData for the given DocumentId. The default key unlock data is based on the Document.keyAlias.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#receiver","title":"Receiver","text":"<p>the EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#return","title":"Return","text":"<p>the default AndroidKeystoreKeyUnlockData for the given DocumentId or null if the document requires no user authentication</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentId the DocumentId of the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#see-also","title":"See also","text":"AndroidKeystoreKeyUnlockData Document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.document/-document-extensions/get-default-key-unlock-data/#throws","title":"Throws","text":"IllegalStateException if the Document is not managed by AndroidKeystoreSecureArea NoSuchElementException if the document is not found by the DocumentId"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci","text":"<ul> <li>-access-token-t-o</li> <li>-access-token-type-t-o</li> <li>-create-document-settings-provider</li> <li>-deferred-issuance-stored-context-t-o</li> <li>-deferred-issue-result</li> <li>-grant-t-o</li> <li>-issue-event</li> <li>-offer</li> <li>-offer-result</li> <li>-open-id4-vci-manager</li> <li>-open-id4-vci-result</li> <li>-refresh-token-t-o</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-access-token-t-o","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o","text":"<ul> <li>-access-token-t-o</li> <li>-companion</li> <li>access-token</li> <li>expires-in</li> <li>to-access-token</li> <li>type</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-access-token-t-o/","title":"access token t o","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-access-token-t-o/#accesstokento","title":"AccessTokenTO","text":"<p>[androidJvm] constructor(type: AccessTokenTypeTO, accessToken: String, expiresIn: Long? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/access-token/","title":"Access token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/accessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/access-token/#accesstoken","title":"accessToken","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"access_token\")</p> <p>val accessToken: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/expires-in/","title":"Expires in","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/expiresIn</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/expires-in/#expiresin","title":"expiresIn","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"expires_in\")</p> <p>val expiresIn: Long? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/to-access-token/","title":"To access token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/toAccessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/to-access-token/#toaccesstoken","title":"toAccessToken","text":"<p>[androidJvm] fun toAccessToken(): AccessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/type/","title":"Type","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/type/#type","title":"type","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"type\")</p> <p>val type: AccessTokenTypeTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-access-token-t-o-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion","text":"<ul> <li>from</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/from/","title":"From","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(accessToken: AccessToken): AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-access-token-type-t-o","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o","text":"<ul> <li>-bearer</li> <li>-d-po-p</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;AccessTokenTypeTO&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): AccessTokenTypeTO</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/AccessTokenTypeTO/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;AccessTokenTypeTO&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-access-token-type-t-o-bearer","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-bearer","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-access-token-type-t-o-d-po-p","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-access-token-type-t-o/-d-po-p","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-create-document-settings-provider","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider","text":"<ul> <li>provide-settings</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/provide-settings/","title":"Provide settings","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/CreateDocumentSettingsProvider/provideSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-create-document-settings-provider/provide-settings/#providesettings","title":"provideSettings","text":"<p>[androidJvm] abstract fun provideSettings(offeredDocument: Offer.OfferedDocument): CreateDocumentSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issuance-stored-context-t-o","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o","text":"<ul> <li>-companion</li> <li>-deferred-issuance-stored-context-t-o</li> <li>access-token</li> <li>auth-server-id</li> <li>authorization-timestamp</li> <li>client-attestation-jwt</li> <li>client-attestation-pop-algorithm</li> <li>client-attestation-pop-duration</li> <li>client-attestation-pop-key-id</li> <li>client-attestation-pop-type</li> <li>client-id</li> <li>credential-issuer-id</li> <li>d-po-p-signer-kid</li> <li>deferred-endpoint</li> <li>grant</li> <li>refresh-token</li> <li>response-encryption-spec</li> <li>to-deferred-issuance-stored-context</li> <li>token-endpoint</li> <li>transaction-id</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-deferred-issuance-stored-context-t-o/","title":"deferred issuance stored context t o","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/DeferredIssuanceStoredContextTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-deferred-issuance-stored-context-t-o/#deferredissuancestoredcontextto","title":"DeferredIssuanceStoredContextTO","text":"<p>[androidJvm] constructor(credentialIssuerId: String, clientId: String, clientAttestationJwt: String? = null, clientAttestationPopDuration: Long? = null, clientAttestationPopAlgorithm: String? = null, clientAttestationPopType: String? = null, clientAttestationPopKeyId: String? = null, deferredEndpoint: String, authServerId: String, tokenEndpoint: String, dPoPSignerKid: String? = null, responseEncryptionSpec: JsonObject? = null, transactionId: String, accessToken: AccessTokenTO, refreshToken: RefreshTokenTO? = null, authorizationTimestamp: Long, grant: GrantTO)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/access-token/","title":"Access token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/accessToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/access-token/#accesstoken","title":"accessToken","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"access_token\")</p> <p>val accessToken: AccessTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/auth-server-id/","title":"Auth server id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/authServerId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/auth-server-id/#authserverid","title":"authServerId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"auth_server_id\")</p> <p>val authServerId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/authorization-timestamp/","title":"Authorization timestamp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/authorizationTimestamp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/authorization-timestamp/#authorizationtimestamp","title":"authorizationTimestamp","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"authorization_timestamGrantTO.fromGrant(grant)p\")</p> <p>val authorizationTimestamp: Long</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-jwt/","title":"Client attestation jwt","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationJwt</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-jwt/#clientattestationjwt","title":"clientAttestationJwt","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_jwt\")</p> <p>val clientAttestationJwt: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-algorithm/","title":"Client attestation pop algorithm","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-algorithm/#clientattestationpopalgorithm","title":"clientAttestationPopAlgorithm","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_alg\")</p> <p>val clientAttestationPopAlgorithm: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-duration/","title":"Client attestation pop duration","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopDuration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-duration/#clientattestationpopduration","title":"clientAttestationPopDuration","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_duration\")</p> <p>val clientAttestationPopDuration: Long? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-key-id/","title":"Client attestation pop key id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopKeyId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-key-id/#clientattestationpopkeyid","title":"clientAttestationPopKeyId","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_key_id\")</p> <p>val clientAttestationPopKeyId: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-type/","title":"Client attestation pop type","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientAttestationPopType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-attestation-pop-type/#clientattestationpoptype","title":"clientAttestationPopType","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"client_attestation_pop_typ\")</p> <p>val clientAttestationPopType: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-id/","title":"Client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/client-id/#clientid","title":"clientId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"client_id\")</p> <p>val clientId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/credential-issuer-id/","title":"Credential issuer id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/credentialIssuerId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/credential-issuer-id/#credentialissuerid","title":"credentialIssuerId","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"credential_issuer\")</p> <p>val credentialIssuerId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/d-po-p-signer-kid/","title":"D po p signer kid","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/dPoPSignerKid</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/d-po-p-signer-kid/#dpopsignerkid","title":"dPoPSignerKid","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"dpop_key_id\")</p> <p>val dPoPSignerKid: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/deferred-endpoint/","title":"Deferred endpoint","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/deferredEndpoint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/deferred-endpoint/#deferredendpoint","title":"deferredEndpoint","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"deferred_endpoint\")</p> <p>val deferredEndpoint: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/grant/","title":"Grant","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/grant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/grant/#grant","title":"grant","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"grant\")</p> <p>val grant: GrantTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/refresh-token/","title":"Refresh token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/refreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/refresh-token/#refreshtoken","title":"refreshToken","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"refresh_token\")</p> <p>val refreshToken: RefreshTokenTO? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/response-encryption-spec/","title":"Response encryption spec","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/responseEncryptionSpec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/response-encryption-spec/#responseencryptionspec","title":"responseEncryptionSpec","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"credential_response_encryption_spec\")</p> <p>val responseEncryptionSpec: JsonObject? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/to-deferred-issuance-stored-context/","title":"To deferred issuance stored context","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/toDeferredIssuanceStoredContext</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/to-deferred-issuance-stored-context/#todeferredissuancestoredcontext","title":"toDeferredIssuanceStoredContext","text":"<p>[androidJvm] fun toDeferredIssuanceStoredContext(clock: Clock, recreatePopSigner: (String) -&gt; PopSigner.Jwt?, recreateClientAttestationPodSigner: (String) -&gt; JWSSigner?): DeferredIssuanceContext</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/token-endpoint/","title":"Token endpoint","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/tokenEndpoint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/token-endpoint/#tokenendpoint","title":"tokenEndpoint","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"token_endpoint\")</p> <p>val tokenEndpoint: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/transaction-id/","title":"Transaction id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/transactionId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/transaction-id/#transactionid","title":"transactionId","text":"<p>[androidJvm]\\</p> <p>@SerialName(value = \"transaction_id\")</p> <p>val transactionId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issuance-stored-context-t-o-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion","text":"<ul> <li>from</li> <li>if-attested</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/from/","title":"From","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(dCtx: DeferredIssuanceContext, dPoPSignerKid: String?, clientAttestationPopKeyId: String?): DeferredIssuanceStoredContextTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/if-attested/","title":"If attested","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssuanceStoredContextTO/Companion/ifAttested</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issuance-stored-context-t-o/-companion/if-attested/#ifattested","title":"ifAttested","text":"<p>[androidJvm] fun &lt;A&gt; Client.ifAttested(getter: Client.Attested.() -&gt; A?): A?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issue-result","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result","text":"<ul> <li>-document-expired</li> <li>-document-failed</li> <li>-document-issued</li> <li>-document-not-ready</li> <li>doc-type</li> <li>document-id</li> <li>document</li> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/doc-type/","title":"Doc type","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/docType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/doc-type/#doctype","title":"docType","text":"<p>[androidJvm] abstract val docType: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document-id/","title":"Document id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/documentId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document-id/#documentid","title":"documentId","text":"<p>[androidJvm] abstract val documentId: DocumentId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/document/#document","title":"document","text":"<p>[androidJvm] abstract val document: Document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issue-result-document-expired","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired","text":"<ul> <li>-document-expired</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/-document-expired/","title":"document expired","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentExpired/DocumentExpired</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/-document-expired/#documentexpired","title":"DocumentExpired","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentExpired/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-expired/document/#document","title":"document","text":"<p>[androidJvm] open override val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issue-result-document-failed","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed","text":"<ul> <li>-document-failed</li> <li>cause</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/-document-failed/","title":"document failed","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] constructor(document: Document, cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/cause/","title":"Cause","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentFailed/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-failed/document/#document","title":"document","text":"<p>[androidJvm] open override val document: Document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issue-result-document-issued","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued","text":"<ul> <li>-document-issued</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/-document-issued/","title":"document issued","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentIssued/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>[androidJvm] constructor(document: IssuedDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentIssued/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-issued/document/#document","title":"document","text":"<p>[androidJvm] open override val document: IssuedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-deferred-issue-result-document-not-ready","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready","text":"<ul> <li>-document-not-ready</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/-document-not-ready/","title":"document not ready","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentNotReady/DocumentNotReady</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/-document-not-ready/#documentnotready","title":"DocumentNotReady","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/DeferredIssueResult/DocumentNotReady/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-deferred-issue-result/-document-not-ready/document/#document","title":"document","text":"<p>[androidJvm] open override val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-grant-t-o","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o","text":"<ul> <li>-authorization-code</li> <li>-companion</li> <li>-pre-authorized-code-grant</li> <li>entries</li> <li>to-grant</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;GrantTO&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/to-grant/","title":"To grant","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/toGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/to-grant/#togrant","title":"toGrant","text":"<p>[androidJvm] fun toGrant(): Grant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): GrantTO</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;GrantTO&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-grant-t-o-authorization-code","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-authorization-code","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-grant-t-o-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion","text":"<ul> <li>from-grant</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/from-grant/","title":"From grant","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/GrantTO/Companion/fromGrant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-companion/from-grant/#fromgrant","title":"fromGrant","text":"<p>[androidJvm] fun fromGrant(grant: Grant): GrantTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-grant-t-o-pre-authorized-code-grant","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-grant-t-o/-pre-authorized-code-grant","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event","text":"<ul> <li>-companion</li> <li>-document-deferred</li> <li>-document-failed</li> <li>-document-issued</li> <li>-document-requires-create-settings</li> <li>-document-requires-user-auth</li> <li>-failure</li> <li>-finished</li> <li>-started</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-companion","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-document-deferred","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred","text":"<ul> <li>-document-deferred</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/-document-deferred/","title":"document deferred","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentDeferred/DocumentDeferred</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/-document-deferred/#documentdeferred","title":"DocumentDeferred","text":"<p>[androidJvm] constructor(document: DeferredDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentDeferred/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-deferred/document/#document","title":"document","text":"<p>[androidJvm] val document: DeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-document-failed","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed","text":"<ul> <li>-document-failed</li> <li>cause</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/-document-failed/","title":"document failed","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentFailed/DocumentFailed</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/-document-failed/#documentfailed","title":"DocumentFailed","text":"<p>[androidJvm] constructor(document: UnsignedDocument, cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/cause/","title":"Cause","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentFailed/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-failed/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-document-issued","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued","text":"<ul> <li>-document-issued</li> <li>document</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/-document-issued/","title":"document issued","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentIssued/DocumentIssued</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/-document-issued/#documentissued","title":"DocumentIssued","text":"<p>[androidJvm] constructor(document: IssuedDocument)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentIssued/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-issued/document/#document","title":"document","text":"<p>[androidJvm] val document: IssuedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-document-requires-create-settings","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings","text":"<ul> <li>-document-requires-create-settings</li> <li>cancel</li> <li>offered-document</li> <li>resume</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/-document-requires-create-settings/","title":"document requires create settings","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/DocumentRequiresCreateSettings</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/-document-requires-create-settings/#documentrequirescreatesettings","title":"DocumentRequiresCreateSettings","text":"<p>[androidJvm] constructor(offeredDocument: Offer.OfferedDocument, resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/cancel/","title":"Cancel","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/cancel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/cancel/#cancel","title":"cancel","text":"<p>[androidJvm] val cancel: (reason: String?) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/offered-document/","title":"Offered document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/offeredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/offered-document/#offereddocument","title":"offeredDocument","text":"<p>[androidJvm] val offeredDocument: Offer.OfferedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/resume/","title":"Resume","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresCreateSettings/resume</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-create-settings/resume/#resume","title":"resume","text":"<p>[androidJvm] val resume: (createDocumentSettings: CreateDocumentSettings) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-document-requires-user-auth","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth","text":"<ul> <li>-document-requires-user-auth</li> <li>cancel</li> <li>document</li> <li>resume</li> <li>signing-algorithm</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/-document-requires-user-auth/","title":"document requires user auth","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/DocumentRequiresUserAuth</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/-document-requires-user-auth/#documentrequiresuserauth","title":"DocumentRequiresUserAuth","text":"<p>[androidJvm] constructor(document: UnsignedDocument, signingAlgorithm: Algorithm, resume: (keyUnlockData: KeyUnlockData) -&gt; Unit, cancel: (reason: String?) -&gt; Unit)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/cancel/","title":"Cancel","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/cancel</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/cancel/#cancel","title":"cancel","text":"<p>[androidJvm] val cancel: (reason: String?) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/document/","title":"Document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/document/#document","title":"document","text":"<p>[androidJvm] val document: UnsignedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/resume/","title":"Resume","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/resume</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/resume/#resume","title":"resume","text":"<p>[androidJvm] val resume: (keyUnlockData: KeyUnlockData) -&gt; Unit</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/signing-algorithm/","title":"Signing algorithm","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/DocumentRequiresUserAuth/signingAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-document-requires-user-auth/signing-algorithm/#signingalgorithm","title":"signingAlgorithm","text":"<p>[androidJvm] val signingAlgorithm: Algorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-failure","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure","text":"<ul> <li>-failure</li> <li>cause</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/-failure/","title":"failure","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Failure/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/-failure/#failure","title":"Failure","text":"<p>[androidJvm] constructor(cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/cause/","title":"Cause","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Failure/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-failure/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-finished","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished","text":"<ul> <li>-finished</li> <li>issued-documents</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/-finished/","title":"finished","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Finished/Finished</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/-finished/#finished","title":"Finished","text":"<p>[androidJvm] constructor(issuedDocuments: List&lt;DocumentId&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/issued-documents/","title":"Issued documents","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Finished/issuedDocuments</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-finished/issued-documents/#issueddocuments","title":"issuedDocuments","text":"<p>[androidJvm] val issuedDocuments: List&lt;DocumentId&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-issue-event-started","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started","text":"<ul> <li>-started</li> <li>total</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/-started/","title":"started","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Started/Started</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/-started/#started","title":"Started","text":"<p>[androidJvm] constructor(total: Int)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/total/","title":"Total","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/IssueEvent/Started/total</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-issue-event/-started/total/#total","title":"total","text":"<p>[androidJvm] val total: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer","text":"<ul> <li>-offer</li> <li>-offered-document</li> <li>credential-offer</li> <li>issuer-metadata</li> <li>offered-documents</li> <li>tx-code-spec</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offer/","title":"offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offer/#offer","title":"Offer","text":"<p>[androidJvm] constructor(credentialOffer: CredentialOffer)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/credential-offer/","title":"Credential offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/credentialOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/credential-offer/#credentialoffer","title":"credentialOffer","text":"<p>[androidJvm] val credentialOffer: CredentialOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-metadata/","title":"Issuer metadata","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/issuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/issuer-metadata/#issuermetadata","title":"issuerMetadata","text":"<p>[androidJvm] val issuerMetadata: CredentialIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/offered-documents/","title":"Offered documents","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/offeredDocuments</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/offered-documents/#offereddocuments","title":"offeredDocuments","text":"<p>[androidJvm] val offeredDocuments: List&lt;Offer.OfferedDocument&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/tx-code-spec/","title":"Tx code spec","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/txCodeSpec</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/tx-code-spec/#txcodespec","title":"txCodeSpec","text":"<p>[androidJvm] val txCodeSpec: TxCode?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-offered-document","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document","text":"<ul> <li>-offered-document</li> <li>configuration-identifier</li> <li>configuration</li> <li>document-format</li> <li>offer</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/-offered-document/","title":"offered document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/OfferedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/-offered-document/#offereddocument","title":"OfferedDocument","text":"<p>[androidJvm] constructor(offer: Offer, configurationIdentifier: CredentialConfigurationIdentifier, configuration: CredentialConfiguration)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration-identifier/","title":"Configuration identifier","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/configurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration-identifier/#configurationidentifier","title":"configurationIdentifier","text":"<p>[androidJvm] val configurationIdentifier: CredentialConfigurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration/","title":"Configuration","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/configuration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/configuration/#configuration","title":"configuration","text":"<p>[androidJvm] val configuration: CredentialConfiguration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/document-format/","title":"Document format","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/documentFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/document-format/#documentformat","title":"documentFormat","text":"<p>[androidJvm] val documentFormat: DocumentFormat?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/offer/","title":"Offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/Offer/OfferedDocument/offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer/-offered-document/offer/#offer","title":"offer","text":"<p>[androidJvm] val offer: Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-result","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result","text":"<ul> <li>-failure</li> <li>-success</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-result-failure","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure","text":"<ul> <li>-failure</li> <li>cause</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/-failure/","title":"failure","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Failure/Failure</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/-failure/#failure","title":"Failure","text":"<p>[androidJvm] constructor(cause: Throwable)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/cause/","title":"Cause","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Failure/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-failure/cause/#cause","title":"cause","text":"<p>[androidJvm] open override val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-offer-result-success","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success","text":"<ul> <li>-success</li> <li>offer</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/-success/","title":"success","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Success/Success</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/-success/#success","title":"Success","text":"<p>[androidJvm] constructor(offer: Offer)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/offer/","title":"Offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OfferResult/Success/offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-offer-result/-success/offer/#offer","title":"offer","text":"<p>[androidJvm] val offer: Offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager","text":"<ul> <li>-builder</li> <li>-companion</li> <li>-config</li> <li>-on-deferred-issue-result</li> <li>-on-issue-event</li> <li>-on-resolved-offer</li> <li>-on-result</li> <li>get-issuer-metadata</li> <li>issue-deferred-document</li> <li>issue-document-by-configuration-identifier</li> <li>issue-document-by-doc-type</li> <li>issue-document-by-format</li> <li>issue-document-by-offer-uri</li> <li>issue-document-by-offer</li> <li>resolve-document-offer</li> <li>resume-with-authorization</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/get-issuer-metadata/","title":"Get issuer metadata","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/getIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/get-issuer-metadata/#getissuermetadata","title":"getIssuerMetadata","text":"<p>[androidJvm] abstract suspend fun getIssuerMetadata(): Result&lt;CredentialIssuerMetadata&gt;</p> <p>Provides the issuer metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/","title":"Issue deferred document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDeferredDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#issuedeferreddocument","title":"issueDeferredDocument","text":"<p>[androidJvm] abstract fun issueDeferredDocument(deferredDocument: DeferredDocument, executor: Executor? = null, onIssueResult: OpenId4VciManager.OnDeferredIssueResult)</p> <p>Issue a deferred document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#parameters","title":"Parameters","text":"<p>androidJvm</p> deferredDocument the deferred document to issue executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueResult the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-deferred-document/#see-also","title":"See also","text":"OpenId4VciManager.OnDeferredIssueResult on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/","title":"Issue document by configuration identifier","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByConfigurationIdentifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#issuedocumentbyconfigurationidentifier","title":"issueDocumentByConfigurationIdentifier","text":"<p>[androidJvm] abstract fun issueDocumentByConfigurationIdentifier(credentialConfigurationId: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using a configuration identifier.</p> <p>The credential configuration identifier can be obtained from the getIssuerMetadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#parameters","title":"Parameters","text":"<p>androidJvm</p> credentialConfigurationId the configuration identifier to issue the document txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-configuration-identifier/#see-also","title":"See also","text":"CredentialConfigurationIdentifier for the configuration identifier"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/","title":"Issue document by doc type","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByDocType</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#issuedocumentbydoctype","title":"issueDocumentByDocType","text":"<p>[androidJvm] abstract fun issueDocumentByDocType(docType: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#deprecated","title":"Deprecated","text":"<p>Use issueDocumentByConfigurationIdentifier or issueDocumentByFormat instead</p> <p>Issue a document using a document type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#parameters","title":"Parameters","text":"<p>androidJvm</p> docType the document type to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-doc-type/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/","title":"Issue document by format","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#issuedocumentbyformat","title":"issueDocumentByFormat","text":"<p>[androidJvm] abstract fun issueDocumentByFormat(format: DocumentFormat, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using a document format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#parameters","title":"Parameters","text":"<p>androidJvm</p> format the document format to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-format/#see-also","title":"See also","text":"DocumentFormat for the available formats"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/","title":"Issue document by offer uri","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByOfferUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#issuedocumentbyofferuri","title":"issueDocumentByOfferUri","text":"<p>[androidJvm] abstract fun issueDocumentByOfferUri(offerUri: String, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using an offer URI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#parameters","title":"Parameters","text":"<p>androidJvm</p> offerUri the offer URI txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued. This callback may be called multiple times, each for every document in the offer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer-uri/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/","title":"Issue document by offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/issueDocumentByOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#issuedocumentbyoffer","title":"issueDocumentByOffer","text":"<p>[androidJvm] abstract fun issueDocumentByOffer(offer: Offer, txCode: String? = null, executor: Executor? = null, onIssueEvent: OpenId4VciManager.OnIssueEvent)</p> <p>Issue a document using an offer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#parameters","title":"Parameters","text":"<p>androidJvm</p> offer the offer to issue txCode the transaction code to use for pre-authorized issuing executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onIssueEvent the callback to be called when the document is issued. This callback may be called multiple times, each for every document in the offer"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/issue-document-by-offer/#see-also","title":"See also","text":"IssueEvent on how to handle the result"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/","title":"Resolve document offer","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/resolveDocumentOffer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/#resolvedocumentoffer","title":"resolveDocumentOffer","text":"<p>[androidJvm] abstract fun resolveDocumentOffer(offerUri: String, executor: Executor? = null, onResolvedOffer: OpenId4VciManager.OnResolvedOffer)</p> <p>Resolve an offer using OpenId4Vci protocol</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resolve-document-offer/#parameters","title":"Parameters","text":"<p>androidJvm</p> offerUri the offer URI executor the executor defines the thread on which the callback will be called. If null, the callback will be called on the main thread onResolvedOffer the callback to be called when the offer is resolved"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/","title":"Resume with authorization","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/resumeWithAuthorization</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#resumewithauthorization","title":"resumeWithAuthorization","text":"<p>[androidJvm] abstract fun resumeWithAuthorization(uri: Uri)</p> <p>abstract fun resumeWithAuthorization(uri: String)</p> <p>Resume the authorization flow after the user has been redirected back to the app</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#parameters","title":"Parameters","text":"<p>androidJvm</p> uri the uri that contains the authorization code"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/resume-with-authorization/#throws","title":"Throws","text":"IllegalStateException if no authorization request to resume"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder","text":"<ul> <li>-builder</li> <li>build</li> <li>config</li> <li>document-manager</li> <li>ktor-http-client-factory</li> <li>logger</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor(context: Context)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> context the context"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VciManager</p> <p>Build the OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#return","title":"Return","text":"<p>the OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/build/#throws","title":"Throws","text":"IllegalStateException if config or documentManager is not set"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#config","title":"config","text":"<p>[androidJvm] fun config(config: OpenId4VciManager.Config): &lt;Error class: unknown class&gt;</p> <p>Set the Config to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/config/#parameters","title":"Parameters","text":"<p>androidJvm</p> config the config <p>[androidJvm] var config: OpenId4VciManager.Config?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/","title":"Document manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/documentManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#documentmanager","title":"documentManager","text":"<p>[androidJvm] fun documentManager(documentManager: DocumentManager): &lt;Error class: unknown class&gt;</p> <p>Set the DocumentManager to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/document-manager/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager the document manager <p>[androidJvm] var documentManager: DocumentManager?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] fun ktorHttpClientFactory(factory: () -&gt; HttpClient): &lt;Error class: unknown class&gt;</p> <p>Override the Ktor HTTP client factory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/ktor-http-client-factory/#parameters","title":"Parameters","text":"<p>androidJvm</p> factory the factory to use <p>[androidJvm] var ktorHttpClientFactory: () -&gt; HttpClient?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Builder/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#logger","title":"logger","text":"<p>[androidJvm] fun logger(logger: Logger): &lt;Error class: unknown class&gt;</p> <p>Set the logger to use</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-builder/logger/#parameters","title":"Parameters","text":"<p>androidJvm</p> logger the logger <p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion","text":"<ul> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(context: Context, block: OpenId4VciManager.Builder.() -&gt; Unit): &lt;Error class: unknown class&gt;</p> <p>Create an instance of OpenId4VciManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-config","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config","text":"<ul> <li>-builder</li> <li>-companion</li> <li>-config</li> <li>-par-usage</li> <li>auth-flow-redirection-u-r-i</li> <li>client-id</li> <li>issuer-url</li> <li>par-usage</li> <li>use-d-po-p-if-supported</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-config/","title":"config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-config/#config","title":"Config","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>constructor(issuerUrl: String, clientId: String, authFlowRedirectionURI: String, useDPoPIfSupported: Boolean = true, parUsage: Int = IF_SUPPORTED)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/auth-flow-redirection-u-r-i/","title":"Auth flow redirection u r i","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/authFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/auth-flow-redirection-u-r-i/#authflowredirectionuri","title":"authFlowRedirectionURI","text":"<p>[androidJvm] val authFlowRedirectionURI: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/client-id/","title":"Client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] val clientId: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/issuer-url/","title":"Issuer url","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/issuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/issuer-url/#issuerurl","title":"issuerUrl","text":"<p>[androidJvm] val issuerUrl: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/par-usage/","title":"Par usage","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/parUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/par-usage/#parusage","title":"parUsage","text":"<p>[androidJvm] val parUsage: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/use-d-po-p-if-supported/","title":"Use d po p if supported","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/useDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/use-d-po-p-if-supported/#usedpopifsupported","title":"useDPoPIfSupported","text":"<p>[androidJvm] val useDPoPIfSupported: Boolean = true</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-config-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder","text":"<ul> <li>-builder</li> <li>auth-flow-redirection-u-r-i</li> <li>build</li> <li>client-id</li> <li>issuer-url</li> <li>par-usage</li> <li>use-d-po-p-if-supported</li> <li>with-auth-flow-redirection-u-r-i</li> <li>with-client-id</li> <li>with-issuer-url</li> <li>with-par-usage</li> <li>with-use-d-po-p-if-supported</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/auth-flow-redirection-u-r-i/","title":"Auth flow redirection u r i","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/authFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/auth-flow-redirection-u-r-i/#authflowredirectionuri","title":"authFlowRedirectionURI","text":"<p>[androidJvm] var authFlowRedirectionURI: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VciManager.Config</p> <p>Build the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/build/#return","title":"Return","text":"<p>the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/client-id/","title":"Client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] var clientId: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/issuer-url/","title":"Issuer url","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/issuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/issuer-url/#issuerurl","title":"issuerUrl","text":"<p>[androidJvm] var issuerUrl: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/par-usage/","title":"Par usage","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/parUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/par-usage/#parusage","title":"parUsage","text":"<p>[androidJvm] var parUsage: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/use-d-po-p-if-supported/","title":"Use d po p if supported","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/useDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/use-d-po-p-if-supported/#usedpopifsupported","title":"useDPoPIfSupported","text":"<p>[androidJvm] var useDPoPIfSupported: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/","title":"With auth flow redirection u r i","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withAuthFlowRedirectionURI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#withauthflowredirectionuri","title":"withAuthFlowRedirectionURI","text":"<p>[androidJvm] fun withAuthFlowRedirectionURI(authFlowRedirectionURI: String): &lt;Error class: unknown class&gt;</p> <p>Set the redirection URI for the authorization flow</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-auth-flow-redirection-u-r-i/#parameters","title":"Parameters","text":"<p>androidJvm</p> authFlowRedirectionURI the redirection URI"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/","title":"With client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#withclientid","title":"withClientId","text":"<p>[androidJvm] fun withClientId(clientId: String): &lt;Error class: unknown class&gt;</p> <p>Set the client id</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-client-id/#parameters","title":"Parameters","text":"<p>androidJvm</p> clientId the client id"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/","title":"With issuer url","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withIssuerUrl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#withissuerurl","title":"withIssuerUrl","text":"<p>[androidJvm] fun withIssuerUrl(issuerUrl: String): &lt;Error class: unknown class&gt;</p> <p>Set the issuer url</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-issuer-url/#parameters","title":"Parameters","text":"<p>androidJvm</p> issuerUrl the issuer url"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/","title":"With par usage","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withParUsage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#withparusage","title":"withParUsage","text":"<p>[androidJvm] fun withParUsage(parUsage: Int): &lt;Error class: unknown class&gt;</p> <p>Set the PAR usage</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-par-usage/#parameters","title":"Parameters","text":"<p>androidJvm</p> parUsage the PAR usage"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/","title":"With use d po p if supported","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Builder/withUseDPoPIfSupported</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#withusedpopifsupported","title":"withUseDPoPIfSupported","text":"<p>[androidJvm] fun withUseDPoPIfSupported(useDPoPIfSupported: Boolean): &lt;Error class: unknown class&gt;</p> <p>Set the flag to enable the use of DPoP JWT</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#return","title":"Return","text":"<p>this builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-builder/with-use-d-po-p-if-supported/#parameters","title":"Parameters","text":"<p>androidJvm</p> useDPoPIfSupported the flag"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-config-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion","text":"<ul> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(block: OpenId4VciManager.Config.Builder.() -&gt; Unit): &lt;Error class: unknown class&gt;</p> <p>Create a Config instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#return","title":"Return","text":"<p>the Config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> block the builder block"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-config-par-usage","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage","text":"<ul> <li>-companion</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-config-par-usage-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion","text":"<ul> <li>-i-f_-s-u-p-p-o-r-t-e-d</li> <li>-n-e-v-e-r</li> <li>-r-e-q-u-i-r-e-d</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-i-f_-s-u-p-p-o-r-t-e-d/","title":"i f  s u p p o r t e d","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/IF_SUPPORTED</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-i-f_-s-u-p-p-o-r-t-e-d/#if_supported","title":"IF_SUPPORTED","text":"<p>[androidJvm] const val IF_SUPPORTED: Int = 2</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-n-e-v-e-r/","title":"n e v e r","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/NEVER</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-n-e-v-e-r/#never","title":"NEVER","text":"<p>[androidJvm] const val NEVER: Int = 0</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-r-e-q-u-i-r-e-d/","title":"r e q u i r e d","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/Config/ParUsage/Companion/REQUIRED</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-config/-par-usage/-companion/-r-e-q-u-i-r-e-d/#required","title":"REQUIRED","text":"<p>[androidJvm] const val REQUIRED: Int = 4</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-on-deferred-issue-result","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-deferred-issue-result","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-on-issue-event","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-issue-event","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-on-resolved-offer","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-resolved-offer","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-manager-on-result","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result","text":"<ul> <li>invoke</li> <li>on-result</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResult/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] open operator fun invoke(result: T)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/on-result/","title":"On result","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciManager/OnResult/onResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-manager/-on-result/on-result/#onresult","title":"onResult","text":"<p>[androidJvm] abstract fun onResult(result: T)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-result","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result","text":"<ul> <li>-erroneous</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-open-id4-vci-result-erroneous","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous","text":"<ul> <li>cause</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/cause/","title":"Cause","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/OpenId4VciResult/Erroneous/cause</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-open-id4-vci-result/-erroneous/cause/#cause","title":"cause","text":"<p>[androidJvm] abstract val cause: Throwable</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-refresh-token-t-o","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o","text":"<ul> <li>-companion</li> <li>-refresh-token-t-o</li> <li>refresh-token</li> <li>to-refresh-token</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-refresh-token-t-o/","title":"refresh token t o","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/RefreshTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-refresh-token-t-o/#refreshtokento","title":"RefreshTokenTO","text":"<p>[androidJvm] constructor(refreshToken: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/refresh-token/","title":"Refresh token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/refreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/refresh-token/#refreshtoken","title":"refreshToken","text":"<p>[androidJvm]\\</p> <p>@Required</p> <p>@SerialName(value = \"refresh_token\")</p> <p>val refreshToken: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/to-refresh-token/","title":"To refresh token","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/toRefreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/to-refresh-token/#torefreshtoken","title":"toRefreshToken","text":"<p>[androidJvm] fun toRefreshToken(): RefreshToken</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vci-refresh-token-t-o-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion","text":"<ul> <li>from</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/from/","title":"From","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/RefreshTokenTO/Companion/from</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci/-refresh-token-t-o/-companion/from/#from","title":"from","text":"<p>[androidJvm] fun from(refreshToken: RefreshToken): RefreshTokenTO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletissueopenid4vcitransformations","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations","text":"<ul> <li>extract-document-meta-data</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extract-document-meta-data/","title":"Extract document meta data","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extractDocumentMetaData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.issue.openid4vci.transformations/extract-document-meta-data/#extractdocumentmetadata","title":"extractDocumentMetaData","text":"<p>[androidJvm] fun Offer.OfferedDocument.extractDocumentMetaData(): DocumentMetaData</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletlogging","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging","text":"<ul> <li>-logger</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletlogging-logger","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger","text":"<ul> <li>-companion</li> <li>-level</li> <li>-record</li> <li>log</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/","title":"Log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/log</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#log","title":"log","text":"<p>[androidJvm] abstract fun log(record: Logger.Record)</p> <p>Log a record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#parameters","title":"Parameters","text":"<p>androidJvm</p> record the record to log"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/log/#see-also","title":"See also","text":"Logger.Record"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletlogging-logger-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion","text":"<ul> <li>-l-e-v-e-l_-d-e-b-u-g</li> <li>-l-e-v-e-l_-e-r-r-o-r</li> <li>-l-e-v-e-l_-i-n-f-o</li> <li>-o-f-f</li> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-d-e-b-u-g/","title":"l e v e l  d e b u g","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_DEBUG</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-d-e-b-u-g/#level_debug","title":"LEVEL_DEBUG","text":"<p>[androidJvm] const val LEVEL_DEBUG: Int = 3</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-e-r-r-o-r/","title":"l e v e l  e r r o r","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_ERROR</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-e-r-r-o-r/#level_error","title":"LEVEL_ERROR","text":"<p>[androidJvm] const val LEVEL_ERROR: Int = 1</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-i-n-f-o/","title":"l e v e l  i n f o","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/LEVEL_INFO</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-l-e-v-e-l_-i-n-f-o/#level_info","title":"LEVEL_INFO","text":"<p>[androidJvm] const val LEVEL_INFO: Int = 2</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-o-f-f/","title":"o f f","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/OFF</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/-o-f-f/#off","title":"OFF","text":"<p>[androidJvm] const val OFF: Int = 0</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(config: EudiWalletConfig): Logger</p> <p>Construct a default instance of Logger with the provided EudiWalletConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-level/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-level/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletlogging-logger-level","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-level","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletlogging-logger-record","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record","text":"<ul> <li>-record</li> <li>instant</li> <li>level</li> <li>message</li> <li>source-class-name</li> <li>source-method</li> <li>thrown</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/-record/","title":"record","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/Record</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/-record/#record","title":"Record","text":"<p>[androidJvm] constructor(level: Int, instant: Instant = Instant.now(), message: String, thrown: Throwable? = null, sourceClassName: String? = null, sourceMethod: String? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/instant/","title":"Instant","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/instant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/instant/#instant","title":"instant","text":"<p>[androidJvm] val instant: Instant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/level/","title":"Level","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/level</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/level/#level","title":"level","text":"<p>[androidJvm] val level: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/message/","title":"Message","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/message</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/message/#message","title":"message","text":"<p>[androidJvm] val message: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-class-name/","title":"Source class name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/sourceClassName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-class-name/#sourceclassname","title":"sourceClassName","text":"<p>[androidJvm] val sourceClassName: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-method/","title":"Source method","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/sourceMethod</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/source-method/#sourcemethod","title":"sourceMethod","text":"<p>[androidJvm] val sourceMethod: String? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/thrown/","title":"Thrown","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.logging/Logger/Record/thrown</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.logging/-logger/-record/thrown/#thrown","title":"thrown","text":"<p>[androidJvm] val thrown: Throwable? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation","text":"<ul> <li>-presentation-manager</li> <li>-presentation-manager-impl</li> <li>-session-termination-flag</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation-presentation-manager","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager","text":"<ul> <li>disable-n-f-c-engagement</li> <li>enable-n-f-c-engagement</li> <li>nfc-engagement-service-class</li> <li>send-response</li> <li>start-proximity-presentation</li> <li>start-remote-presentation</li> <li>stop-proximity-presentation</li> <li>stop-remote-presentation</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/","title":"Disable n f c engagement","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/disableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#disablenfcengagement","title":"disableNFCEngagement","text":"<p>[androidJvm] abstract fun disableNFCEngagement(activity: ComponentActivity): PresentationManager</p> <p>Disable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/disable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/","title":"Enable n f c engagement","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/enableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#enablenfcengagement","title":"enableNFCEngagement","text":"<p>[androidJvm] abstract fun enableNFCEngagement(activity: ComponentActivity): PresentationManager</p> <p>Enable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/enable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] abstract val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/","title":"Send response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] abstract fun sendResponse(response: Response)</p> <p>Send a response to verifier</p> <p>The response should be generated through the eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest.Success.generateResponse method and sent back to the verifier by calling this method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response the response"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-proximity-presentation/","title":"Start proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/startProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-proximity-presentation/#startproximitypresentation","title":"startProximityPresentation","text":"<p>[androidJvm] abstract fun startProximityPresentation()</p> <p>Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/","title":"Start remote presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/startRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/#startremotepresentation","title":"startRemotePresentation","text":"<p>[androidJvm] abstract fun startRemotePresentation(uri: Uri, refererUrl: String? = null)</p> <p>Start a remote presentation with the given URI The URI could be either</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> uri the URI <p>[androidJvm] abstract fun startRemotePresentation(intent: Intent)</p> <p>Start a remote presentation with the given intent The intent.data could either contain the URI of</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/start-remote-presentation/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> intent the intent"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/","title":"Stop proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/stopProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/#stopproximitypresentation","title":"stopProximityPresentation","text":"<p>[androidJvm] abstract fun stopProximityPresentation(flags: Int = SEND_SESSION_TERMINATION_MESSAGE)</p> <p>Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:</p> <ul> <li>SEND_SESSION_TERMINATION_MESSAGE: sends the session termination message to the verifier</li> <li>SessionTerminationFlag.USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: uses the transport specific session termination</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> flags the flags"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-remote-presentation/","title":"Stop remote presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManager/stopRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager/stop-remote-presentation/#stopremotepresentation","title":"stopRemotePresentation","text":"<p>[androidJvm] abstract fun stopRemotePresentation()</p> <p>Stops any ongoing remote presentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation-presentation-manager-impl","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl","text":"<ul> <li>-companion</li> <li>-presentation-manager-impl</li> <li>add-transfer-event-listener</li> <li>disable-n-f-c-engagement</li> <li>enable-n-f-c-engagement</li> <li>nfc-engagement-service-class</li> <li>reader-trust-store</li> <li>remove-all-transfer-event-listeners</li> <li>remove-transfer-event-listener</li> <li>send-response</li> <li>start-proximity-presentation</li> <li>start-remote-presentation</li> <li>stop-proximity-presentation</li> <li>stop-remote-presentation</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-presentation-manager-impl/","title":"presentation manager impl","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/PresentationManagerImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-presentation-manager-impl/#presentationmanagerimpl","title":"PresentationManagerImpl","text":"<p>[androidJvm]\\</p> <p>@JvmOverloads</p> <p>constructor(transferManager: TransferManager, openId4vpManager: OpenId4VpManager? = null, nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/add-transfer-event-listener/","title":"Add transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/addTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/add-transfer-event-listener/#addtransfereventlistener","title":"addTransferEventListener","text":"<p>[androidJvm] open override fun addTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/","title":"Disable n f c engagement","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/disableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#disablenfcengagement","title":"disableNFCEngagement","text":"<p>[androidJvm] open override fun disableNFCEngagement(activity: ComponentActivity): &lt;Error class: unknown class&gt;</p> <p>Disable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onPause method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/disable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/","title":"Enable n f c engagement","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/enableNFCEngagement</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#enablenfcengagement","title":"enableNFCEngagement","text":"<p>[androidJvm] open override fun enableNFCEngagement(activity: ComponentActivity): &lt;Error class: unknown class&gt;</p> <p>Enable the NFC device engagement for the wallet. This method should be called in the activity's ComponentActivity.onResume method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#return","title":"Return","text":"<p>this EudiWallet instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/enable-n-f-c-engagement/#parameters","title":"Parameters","text":"<p>androidJvm</p> activity the activity"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/nfc-engagement-service-class/","title":"Nfc engagement service class","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/nfcEngagementServiceClass</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/nfc-engagement-service-class/#nfcengagementserviceclass","title":"nfcEngagementServiceClass","text":"<p>[androidJvm] open override val nfcEngagementServiceClass: Class&lt;out NfcEngagementService&gt;? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-transfer-event-listener/","title":"Remove transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/removeTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/remove-transfer-event-listener/#removetransfereventlistener","title":"removeTransferEventListener","text":"<p>[androidJvm] open override fun removeTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/","title":"Send response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] open override fun sendResponse(response: Response)</p> <p>Send a response to verifier</p> <p>The response should be generated through the eu.europa.ec.eudi.iso18013.transfer.response.RequestProcessor.ProcessedRequest.Success.generateResponse method and sent back to the verifier by calling this method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response the response"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-proximity-presentation/","title":"Start proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/startProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-proximity-presentation/#startproximitypresentation","title":"startProximityPresentation","text":"<p>[androidJvm] open override fun startProximityPresentation()</p> <p>Starts the proximity presentation. The QR code is available through the TransferEvent.QrEngagementReady event which is triggered almost immediately after calling this method. The wallet should display the QR code to the verifier in order to start the proximity presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/","title":"Start remote presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/startRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/#startremotepresentation","title":"startRemotePresentation","text":"<p>[androidJvm] open override fun startRemotePresentation(intent: Intent)</p> <p>Start a remote presentation with the given intent The intent.data could either contain the URI of</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> intent the intent <p>[androidJvm] open override fun startRemotePresentation(uri: Uri, refererUrl: String?)</p> <p>Start a remote presentation with the given URI The URI could be either</p> <ul> <li>a REST API request ISO-18013-7</li> <li>a OpenId4Vp request</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/start-remote-presentation/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> uri the URI"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/","title":"Stop proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/stopProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/#stopproximitypresentation","title":"stopProximityPresentation","text":"<p>[androidJvm] open override fun stopProximityPresentation(flags: Int)</p> <p>Stops the proximity presentation. Method receives flags that can be used to control the session termination. The available flags are:</p> <ul> <li>SEND_SESSION_TERMINATION_MESSAGE: sends the session termination message to the verifier</li> <li>SessionTerminationFlag.USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: uses the transport specific session termination</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> flags the flags"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-remote-presentation/","title":"Stop remote presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/stopRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/stop-remote-presentation/#stopremotepresentation","title":"stopRemotePresentation","text":"<p>[androidJvm] open override fun stopRemotePresentation()</p> <p>Stops any ongoing remote presentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation-presentation-manager-impl-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion","text":"<ul> <li>-m-d-o-c_-s-c-h-e-m-e</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/-m-d-o-c_-s-c-h-e-m-e/","title":"m d o c  s c h e m e","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/PresentationManagerImpl/Companion/MDOC_SCHEME</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-presentation-manager-impl/-companion/-m-d-o-c_-s-c-h-e-m-e/#mdoc_scheme","title":"MDOC_SCHEME","text":"<p>[androidJvm] const val MDOC_SCHEME: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation-session-termination-flag","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag","text":"<ul> <li>-companion</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletpresentation-session-termination-flag-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion","text":"<ul> <li>-s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e</li> <li>-u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e/","title":"s e n d  s e s s i o n  t e r m i n a t i o n  m e s s a g e","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag/Companion/SEND_SESSION_TERMINATION_MESSAGE</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-s-e-n-d_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n_-m-e-s-s-a-g-e/#send_session_termination_message","title":"SEND_SESSION_TERMINATION_MESSAGE","text":"<p>[androidJvm] const val SEND_SESSION_TERMINATION_MESSAGE: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n/","title":"u s e  t r a n s p o r t  s p e c i f i c  s e s s i o n  t e r m i n a t i o n","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.presentation/SessionTerminationFlag/Companion/USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.presentation/-session-termination-flag/-companion/-u-s-e_-t-r-a-n-s-p-o-r-t_-s-p-e-c-i-f-i-c_-s-e-s-s-i-o-n_-t-e-r-m-i-n-a-t-i-o-n/#use_transport_specific_session_termination","title":"USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION","text":"<p>[androidJvm] const val USE_TRANSPORT_SPECIFIC_SESSION_TERMINATION: Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium","text":"<ul> <li>-default-status-reference-extractor</li> <li>-document-status-resolver</li> <li>-document-status-resolver-impl</li> <li>-mso-mdoc-status-reference-extractor</li> <li>-sd-jwt-status-reference-extractor</li> <li>-signature-verification-error</li> <li>-status-reference-extractor</li> <li>-verify-status-list-token-signature-x5c</li> <li>x5c</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/x5c/","title":"X5c","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/x5c</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/x5c/#x5c","title":"x5c","text":"<p>[androidJvm] val VerifyStatusListTokenSignature.Companion.x5c: VerifyStatusListTokenSignature</p> <p>Companion object for VerifyStatusListTokenSignature to provide a x5c implementation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-default-status-reference-extractor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor","text":"<ul> <li>extract-status-reference</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/extract-status-reference/","title":"Extract status reference","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DefaultStatusReferenceExtractor/extractStatusReference</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/extract-status-reference/#extractstatusreference","title":"extractStatusReference","text":"<p>[androidJvm] open suspend override fun extractStatusReference(document: IssuedDocument): Result&lt;StatusReference&gt;</p> <p>Extracts status reference from the provided document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/extract-status-reference/#return","title":"Return","text":"<p>Result containing the extracted status reference or an error</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-default-status-reference-extractor/extract-status-reference/#parameters","title":"Parameters","text":"<p>androidJvm</p> document The document to extract status reference from"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-document-status-resolver","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver","text":"<ul> <li>-builder</li> <li>-companion</li> <li>resolve-status</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/resolve-status/","title":"Resolve status","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/resolveStatus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/resolve-status/#resolvestatus","title":"resolveStatus","text":"<p>[androidJvm] abstract suspend fun resolveStatus(document: IssuedDocument): Result&lt;Status&gt;</p> <p>Resolves the status of the given document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/resolve-status/#return","title":"Return","text":"<p>a Result containing the status of the document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/resolve-status/#parameters","title":"Parameters","text":"<p>androidJvm</p> document the document whose status needs to be resolved"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-document-status-resolver-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder","text":"<ul> <li>-builder</li> <li>allowed-clock-skew</li> <li>build</li> <li>extractor</li> <li>ktor-http-client-factory</li> <li>verify-signature</li> <li>with-allowed-clock-skew</li> <li>with-extractor</li> <li>with-ktor-http-client-factory</li> <li>with-verify-signature</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/allowed-clock-skew/","title":"Allowed clock skew","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/allowedClockSkew</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/allowed-clock-skew/#allowedclockskew","title":"allowedClockSkew","text":"<p>[androidJvm] var allowedClockSkew: Duration</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): DocumentStatusResolver</p> <p>Builds the DocumentStatusResolver instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/extractor/","title":"Extractor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/extractor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/extractor/#extractor","title":"extractor","text":"<p>[androidJvm] var extractor: StatusReferenceExtractor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] var ktorHttpClientFactory: () -&gt; HttpClient</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/verify-signature/","title":"Verify signature","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/verifySignature</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/verify-signature/#verifysignature","title":"verifySignature","text":"<p>[androidJvm] var verifySignature: VerifyStatusListTokenSignature</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-allowed-clock-skew/","title":"With allowed clock skew","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/withAllowedClockSkew</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-allowed-clock-skew/#withallowedclockskew","title":"withAllowedClockSkew","text":"<p>[androidJvm] fun withAllowedClockSkew(allowedClockSkew: Duration): &lt;Error class: unknown class&gt;</p> <p>Sets the allowed clock skew for the verification</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-allowed-clock-skew/#return","title":"Return","text":"<p>the builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-allowed-clock-skew/#parameters","title":"Parameters","text":"<p>androidJvm</p> allowedClockSkew the allowed clock skew for the verification"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-extractor/","title":"With extractor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/withExtractor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-extractor/#withextractor","title":"withExtractor","text":"<p>[androidJvm] fun withExtractor(extractor: StatusReferenceExtractor): &lt;Error class: unknown class&gt;</p> <p>Sets the instance of StatusReferenceExtractor to extract the status reference from the document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-extractor/#return","title":"Return","text":"<p>the builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-extractor/#parameters","title":"Parameters","text":"<p>androidJvm</p> extractor an instance of StatusReferenceExtractor"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-ktor-http-client-factory/","title":"With ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/withKtorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-ktor-http-client-factory/#withktorhttpclientfactory","title":"withKtorHttpClientFactory","text":"<p>[androidJvm] fun withKtorHttpClientFactory(ktorHttpClientFactory: () -&gt; HttpClient): &lt;Error class: unknown class&gt;</p> <p>Sets the factory function to create an HttpClient</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-ktor-http-client-factory/#return","title":"Return","text":"<p>the builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-ktor-http-client-factory/#parameters","title":"Parameters","text":"<p>androidJvm</p> ktorHttpClientFactory a factory function to create an HttpClient"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-verify-signature/","title":"With verify signature","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Builder/withVerifySignature</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-verify-signature/#withverifysignature","title":"withVerifySignature","text":"<p>[androidJvm] fun withVerifySignature(verifySignature: VerifyStatusListTokenSignature): &lt;Error class: unknown class&gt;</p> <p>Sets the function to verify the status list token signature</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-verify-signature/#return","title":"Return","text":"<p>the builder instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-builder/with-verify-signature/#parameters","title":"Parameters","text":"<p>androidJvm</p> verifySignature a function to verify the status list token signature"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-document-status-resolver-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion","text":"<ul> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolver/Companion/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] operator fun invoke(verifySignature: VerifyStatusListTokenSignature = VerifyStatusListTokenSignature.x5c, ktorHttpClientFactory: () -&gt; HttpClient = { HttpClient() }, allowedClockSkew: Duration = Duration.ZERO): DocumentStatusResolver</p> <p>Creates an instance of DocumentStatusResolver</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> ktorHttpClientFactory a factory function to create an HttpClient verifySignature a function to verify the status list token signature allowedClockSkew the allowed clock skew for the verification <p>[androidJvm] operator fun invoke(block: DocumentStatusResolver.Builder.() -&gt; Unit): DocumentStatusResolver</p> <p>Creates an instance of DocumentStatusResolver using a builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/invoke/#return","title":"Return","text":"<p>a DocumentStatusResolver instance</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver/-companion/invoke/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> block a lambda function with a Builder as receiver to configure the resolver"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-document-status-resolver-impl","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl","text":"<ul> <li>-document-status-resolver-impl</li> <li>resolve-status</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/-document-status-resolver-impl/","title":"document status resolver impl","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolverImpl/DocumentStatusResolverImpl</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/-document-status-resolver-impl/#documentstatusresolverimpl","title":"DocumentStatusResolverImpl","text":"<p>[androidJvm] constructor(verifySignature: VerifyStatusListTokenSignature, allowedClockSkew: Duration, ktorHttpClientFactory: () -&gt; HttpClient, extractor: StatusReferenceExtractor = DefaultStatusReferenceExtractor)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/-document-status-resolver-impl/#parameters","title":"Parameters","text":"<p>androidJvm</p> verifySignature a function to verify the status list token signature allowedClockSkew the allowed clock skew for the verification ktorHttpClientFactory a factory function to create an HttpClient extractor an instance of StatusReferenceExtractor to extract the status reference from the document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/resolve-status/","title":"Resolve status","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/DocumentStatusResolverImpl/resolveStatus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/resolve-status/#resolvestatus","title":"resolveStatus","text":"<p>[androidJvm] open suspend override fun resolveStatus(document: IssuedDocument): Result&lt;Status&gt;</p> <p>Resolves the status of the given document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/resolve-status/#return","title":"Return","text":"<p>a Result containing the status of the document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-document-status-resolver-impl/resolve-status/#parameters","title":"Parameters","text":"<p>androidJvm</p> document the document whose status needs to be resolved"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-mso-mdoc-status-reference-extractor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor","text":"<ul> <li>extract-status-reference</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/extract-status-reference/","title":"Extract status reference","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/MsoMdocStatusReferenceExtractor/extractStatusReference</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/extract-status-reference/#extractstatusreference","title":"extractStatusReference","text":"<p>[androidJvm] open suspend override fun extractStatusReference(document: IssuedDocument): Result&lt;StatusReference&gt;</p> <p>Parses the MSO document and extracts the status reference. If the document format is not MsoMdocFormat, it throws an IllegalArgumentException. If the status reference cannot be extracted, it returns a failure result.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/extract-status-reference/#return","title":"Return","text":"<p>A Result containing the extracted StatusReference or an exception if the extraction fails.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-mso-mdoc-status-reference-extractor/extract-status-reference/#parameters","title":"Parameters","text":"<p>androidJvm</p> document The issued document to extract the status reference from."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-sd-jwt-status-reference-extractor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor","text":"<ul> <li>extract-status-reference</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/extract-status-reference/","title":"Extract status reference","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/SdJwtStatusReferenceExtractor/extractStatusReference</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/extract-status-reference/#extractstatusreference","title":"extractStatusReference","text":"<p>[androidJvm] open suspend override fun extractStatusReference(document: IssuedDocument): Result&lt;StatusReference&gt;</p> <p>Extracts the status reference from the given document. If the document is not in the SdJwtVcFormat, returns a Failure. If status list is not found, returns a Failure.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/extract-status-reference/#return","title":"Return","text":"<p>the status reference</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-sd-jwt-status-reference-extractor/extract-status-reference/#parameters","title":"Parameters","text":"<p>androidJvm</p> document the issued document"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-signature-verification-error/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-signature-verification-error/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-signature-verification-error","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-signature-verification-error","text":"<ul> <li>-signature-verification-error</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-signature-verification-error/-signature-verification-error/","title":"signature verification error","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/SignatureVerificationError/SignatureVerificationError</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-signature-verification-error/-signature-verification-error/#signatureverificationerror","title":"SignatureVerificationError","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-status-reference-extractor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor","text":"<ul> <li>extract-status-reference</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/extract-status-reference/","title":"Extract status reference","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/StatusReferenceExtractor/extractStatusReference</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/extract-status-reference/#extractstatusreference","title":"extractStatusReference","text":"<p>[androidJvm] abstract suspend fun extractStatusReference(document: IssuedDocument): Result&lt;StatusReference&gt;</p> <p>Extracts revocation status data from the provided document</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/extract-status-reference/#return","title":"Return","text":"<p>Result containing the extracted revocation status data or an error</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-status-reference-extractor/extract-status-reference/#parameters","title":"Parameters","text":"<p>androidJvm</p> document The document to extract revocation status data from"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletstatium-verify-status-list-token-signature-x5c","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c","text":"<ul> <li>-verify-status-list-token-signature-x5c</li> <li>invoke</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/-verify-status-list-token-signature-x5c/","title":"verify status list token signature x5c","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/VerifyStatusListTokenSignatureX5c/VerifyStatusListTokenSignatureX5c</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/-verify-status-list-token-signature-x5c/#verifystatuslisttokensignaturex5c","title":"VerifyStatusListTokenSignatureX5c","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/invoke/","title":"Invoke","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.statium/VerifyStatusListTokenSignatureX5c/invoke</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/invoke/#invoke","title":"invoke","text":"<p>[androidJvm] open suspend operator override fun invoke(statusListToken: String, format: StatusListTokenFormat, at: Instant): Result&lt;Unit&gt;</p> <p>Verifies the signature of a status list token. It requires the statusListToken to be in JWT format and contains an x5c header.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/invoke/#return","title":"Return","text":"<p>A Result success or failure.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.statium/-verify-status-list-token-signature-x5c/invoke/#parameters","title":"Parameters","text":"<p>androidJvm</p> statusListToken The status list token to verify. format The format of the status list token. at The time at which the verification is performed."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging","text":"<ul> <li>-transaction-log</li> <li>-transaction-logger</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log","text":"<ul> <li>-data-format</li> <li>-relying-party</li> <li>-status</li> <li>-transaction-log</li> <li>-type</li> <li>data-format</li> <li>equals</li> <li>hash-code</li> <li>metadata</li> <li>raw-request</li> <li>raw-response</li> <li>relying-party</li> <li>session-transcript</li> <li>status</li> <li>timestamp</li> <li>type</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-transaction-log/","title":"transaction log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/TransactionLog</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-transaction-log/#transactionlog","title":"TransactionLog","text":"<p>[androidJvm] constructor(timestamp: Long, status: TransactionLog.Status, type: TransactionLog.Type, relyingParty: TransactionLog.RelyingParty?, rawRequest: ByteArray?, rawResponse: ByteArray?, dataFormat: TransactionLog.DataFormat?, sessionTranscript: ByteArray?, metadata: List&lt;String?&gt;?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/data-format/","title":"Data format","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/dataFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/data-format/#dataformat","title":"dataFormat","text":"<p>[androidJvm] val dataFormat: TransactionLog.DataFormat?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/equals/","title":"Equals","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/equals</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/equals/#equals","title":"equals","text":"<p>[androidJvm] open operator override fun equals(other: Any?): Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/hash-code/","title":"Hash code","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/hashCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/hash-code/#hashcode","title":"hashCode","text":"<p>[androidJvm] open override fun hashCode(): Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/metadata/","title":"Metadata","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/metadata/#metadata","title":"metadata","text":"<p>[androidJvm] val metadata: List&lt;String?&gt;?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/raw-request/","title":"Raw request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/rawRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/raw-request/#rawrequest","title":"rawRequest","text":"<p>[androidJvm] val rawRequest: ByteArray?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/raw-response/","title":"Raw response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/rawResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/raw-response/#rawresponse","title":"rawResponse","text":"<p>[androidJvm] val rawResponse: ByteArray?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/relying-party/","title":"Relying party","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/relyingParty</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/relying-party/#relyingparty","title":"relyingParty","text":"<p>[androidJvm] val relyingParty: TransactionLog.RelyingParty?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/session-transcript/","title":"Session transcript","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/sessionTranscript</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/session-transcript/#sessiontranscript","title":"sessionTranscript","text":"<p>[androidJvm] val sessionTranscript: ByteArray?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/status/","title":"Status","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/status</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/status/#status","title":"status","text":"<p>[androidJvm] val status: TransactionLog.Status</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/timestamp/","title":"Timestamp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/timestamp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/timestamp/#timestamp","title":"timestamp","text":"<p>[androidJvm] val timestamp: Long</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/type/","title":"Type","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/type/#type","title":"type","text":"<p>[androidJvm] val type: TransactionLog.Type</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-data-format","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format","text":"<ul> <li>-cbor</li> <li>-json</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/DataFormat/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;TransactionLog.DataFormat&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/DataFormat/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): TransactionLog.DataFormat</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/DataFormat/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;TransactionLog.DataFormat&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-cbor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-cbor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-data-format-cbor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-cbor","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-json/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-json/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-data-format-json","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-data-format/-json","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-relying-party","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party","text":"<ul> <li>-relying-party</li> <li>certificate-chain</li> <li>is-verified</li> <li>name</li> <li>reader-auth</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/-relying-party/","title":"relying party","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/RelyingParty/RelyingParty</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/-relying-party/#relyingparty","title":"RelyingParty","text":"<p>[androidJvm] constructor(name: String, isVerified: Boolean, certificateChain: List&lt;String&gt;, readerAuth: String?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/certificate-chain/","title":"Certificate chain","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/RelyingParty/certificateChain</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/certificate-chain/#certificatechain","title":"certificateChain","text":"<p>[androidJvm] val certificateChain: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/is-verified/","title":"Is verified","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/RelyingParty/isVerified</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/is-verified/#isverified","title":"isVerified","text":"<p>[androidJvm] val isVerified: Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/RelyingParty/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/name/#name","title":"name","text":"<p>[androidJvm] val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/reader-auth/","title":"Reader auth","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/RelyingParty/readerAuth</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-relying-party/reader-auth/#readerauth","title":"readerAuth","text":"<p>[androidJvm] val readerAuth: String?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-status","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status","text":"<ul> <li>-completed</li> <li>-error</li> <li>-incomplete</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Status/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;TransactionLog.Status&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Status/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): TransactionLog.Status</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Status/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;TransactionLog.Status&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-completed/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-completed/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-status-completed","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-completed","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-error/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-error/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-status-error","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-error","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-incomplete/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-incomplete/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-status-incomplete","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-status/-incomplete","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-type","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type","text":"<ul> <li>-issuance</li> <li>-presentation</li> <li>-signing</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Type/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;TransactionLog.Type&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Type/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): TransactionLog.Type</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLog/Type/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;TransactionLog.Type&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-issuance/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-issuance/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-type-issuance","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-issuance","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-presentation/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-presentation/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-type-presentation","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-presentation","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-signing/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-signing/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-log-type-signing","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-log/-type/-signing","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionlogging-transaction-logger","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger","text":"<ul> <li>log</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger/log/","title":"Log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/TransactionLogger/log</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger/log/#log","title":"log","text":"<p>[androidJvm] abstract fun log(transaction: TransactionLog)</p> <p>Logs a transaction.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging/-transaction-logger/log/#parameters","title":"Parameters","text":"<p>androidJvm</p> transaction The transaction to log."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation","text":"<ul> <li>-presentation-transaction-log</li> <li>-presented-claim</li> <li>-presented-document</li> <li>-transaction-log-builder</li> <li>-transactions-decorator</li> <li>-transactions-listener</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-presentation-transaction-log","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log","text":"<ul> <li>-companion</li> <li>-presentation-transaction-log</li> <li>documents</li> <li>relying-party</li> <li>status</li> <li>timestamp</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-presentation-transaction-log/","title":"presentation transaction log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/PresentationTransactionLog</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-presentation-transaction-log/#presentationtransactionlog","title":"PresentationTransactionLog","text":"<p>[androidJvm] constructor(timestamp: Instant, status: TransactionLog.Status, relyingParty: TransactionLog.RelyingParty, documents: List&lt;PresentedDocument&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/documents/","title":"Documents","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/documents</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/documents/#documents","title":"documents","text":"<p>[androidJvm] val documents: List&lt;PresentedDocument&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/relying-party/","title":"Relying party","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/relyingParty</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/relying-party/#relyingparty","title":"relyingParty","text":"<p>[androidJvm] val relyingParty: TransactionLog.RelyingParty</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/status/","title":"Status","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/status</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/status/#status","title":"status","text":"<p>[androidJvm] val status: TransactionLog.Status</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/timestamp/","title":"Timestamp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/timestamp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/timestamp/#timestamp","title":"timestamp","text":"<p>[androidJvm] val timestamp: Instant</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-presentation-transaction-log-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion","text":"<ul> <li>from-transaction-log</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/from-transaction-log/","title":"From transaction log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentationTransactionLog/Companion/fromTransactionLog</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/from-transaction-log/#fromtransactionlog","title":"fromTransactionLog","text":"<p>[androidJvm] fun fromTransactionLog(transactionLog: TransactionLog): Result&lt;PresentationTransactionLog&gt;</p> <p>Parses a TransactionLog into a PresentationTransactionLog.</p> <p>This function is a wrapper around the parsePresentationTransactionLog function.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/from-transaction-log/#return","title":"Return","text":"<p>A Result containing the parsed PresentationTransactionLog or an exception if parsing fails.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presentation-transaction-log/-companion/from-transaction-log/#parameters","title":"Parameters","text":"<p>androidJvm</p> transactionLog The TransactionLog to be parsed."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-presented-claim","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim","text":"<ul> <li>-presented-claim</li> <li>metadata</li> <li>path</li> <li>raw-value</li> <li>value</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/-presented-claim/","title":"presented claim","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedClaim/PresentedClaim</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/-presented-claim/#presentedclaim","title":"PresentedClaim","text":"<p>[androidJvm] constructor(path: List&lt;String&gt;, value: Any?, rawValue: Any, metadata: DocumentMetaData.Claim?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/metadata/","title":"Metadata","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedClaim/metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/metadata/#metadata","title":"metadata","text":"<p>[androidJvm] val metadata: DocumentMetaData.Claim?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/path/","title":"Path","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedClaim/path</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/path/#path","title":"path","text":"<p>[androidJvm] val path: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/raw-value/","title":"Raw value","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedClaim/rawValue</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/raw-value/#rawvalue","title":"rawValue","text":"<p>[androidJvm] val rawValue: Any</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/value/","title":"Value","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedClaim/value</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-claim/value/#value","title":"value","text":"<p>[androidJvm] val value: Any?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-presented-document","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document","text":"<ul> <li>-presented-document</li> <li>claims</li> <li>format</li> <li>metadata</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/-presented-document/","title":"presented document","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedDocument/PresentedDocument</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/-presented-document/#presenteddocument","title":"PresentedDocument","text":"<p>[androidJvm] constructor(format: DocumentFormat, metadata: DocumentMetaData?, claims: List&lt;PresentedClaim&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/claims/","title":"Claims","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedDocument/claims</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/claims/#claims","title":"claims","text":"<p>[androidJvm] val claims: List&lt;PresentedClaim&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/format/","title":"Format","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedDocument/format</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/format/#format","title":"format","text":"<p>[androidJvm] val format: DocumentFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/metadata/","title":"Metadata","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/PresentedDocument/metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-presented-document/metadata/#metadata","title":"metadata","text":"<p>[androidJvm] val metadata: DocumentMetaData?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-transaction-log-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder","text":"<ul> <li>-transaction-log-builder</li> <li>create-empty-presentation-log</li> <li>with-error</li> <li>with-relying-party</li> <li>with-request</li> <li>with-response</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/-transaction-log-builder/","title":"transaction log builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/TransactionLogBuilder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/-transaction-log-builder/#transactionlogbuilder","title":"TransactionLogBuilder","text":"<p>[androidJvm] constructor(metadataResolver: (List&lt;DocumentId&gt;) -&gt; List&lt;String?&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/-transaction-log-builder/#parameters","title":"Parameters","text":"<p>androidJvm</p> metadataResolver A function that resolves a list of DocumentIds to their corresponding metadata strings (e.g., JSON representations)."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/create-empty-presentation-log/","title":"Create empty presentation log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/createEmptyPresentationLog</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/create-empty-presentation-log/#createemptypresentationlog","title":"createEmptyPresentationLog","text":"<p>[androidJvm] fun createEmptyPresentationLog(): TransactionLog</p> <p>Creates an initial, empty TransactionLog for a presentation.</p> <p>The created log has a status of TransactionLog.Status.Incomplete and type TransactionLog.Type.Presentation.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/create-empty-presentation-log/#return","title":"Return","text":"<p>A new TransactionLog instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-error/","title":"With error","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/withError</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-error/#witherror","title":"withError","text":"<p>[androidJvm] fun withError(log: TransactionLog): TransactionLog</p> <p>Updates the provided TransactionLog to indicate an error occurred.</p> <p>Sets the log status to TransactionLog.Status.Error and updates the timestamp.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-error/#return","title":"Return","text":"<p>An updated TransactionLog instance with error status.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-error/#parameters","title":"Parameters","text":"<p>androidJvm</p> log The current transaction log to update."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-relying-party/","title":"With relying party","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/withRelyingParty</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-relying-party/#withrelyingparty","title":"withRelyingParty","text":"<p>[androidJvm] fun withRelyingParty(log: TransactionLog, processedRequest: RequestProcessor.ProcessedRequest): TransactionLog</p> <p>Updates the provided TransactionLog with relying party information extracted from a RequestProcessor.ProcessedRequest.</p> <p>If the log's type is not TransactionLog.Type.Presentation, it returns the log unchanged. It extracts the relying party's name, certificate chain (Base64 encoded), verification status, and reader authentication data (Base64 encoded) if available. If reader authentication details are not found, a default name is used.</p> <p>The timestamp of the log is updated to the current time.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-relying-party/#return","title":"Return","text":"<p>An updated TransactionLog instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-relying-party/#parameters","title":"Parameters","text":"<p>androidJvm</p> log The current transaction log to update. processedRequest The processed request containing relying party details."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-request/","title":"With request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/withRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-request/#withrequest","title":"withRequest","text":"<p>[androidJvm] fun withRequest(log: TransactionLog, request: Request): TransactionLog</p> <p>Updates the provided TransactionLog with information from a Request.</p> <p>If the log's type is not TransactionLog.Type.Presentation, it returns the log unchanged. It handles different types of requests:</p> <ul> <li>DeviceRequest: Stores the raw request bytes.</li> <li>OpenId4VpRequest: Extracts and stores the presentation definition from the resolved request object. Requires the resolved request to be ResolvedRequestObject.OpenId4VPAuthorization and the presentation query to be PresentationQuery.ByPresentationDefinition.</li> <li>Other request types: Marks the log status as TransactionLog.Status.Error.</li> </ul> <p>The timestamp of the log is updated to the current time.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-request/#return","title":"Return","text":"<p>An updated TransactionLog instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-request/#parameters","title":"Parameters","text":"<p>androidJvm</p> log The current transaction log to update. request The request object containing data to add to the log."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-request/#throws","title":"Throws","text":"IllegalArgumentException if an OpenId4VpRequest does not conform to expected subtypes."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-response/","title":"With response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionLogBuilder/withResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-response/#withresponse","title":"withResponse","text":"<p>[androidJvm] fun withResponse(log: TransactionLog, response: Response, error: Throwable? = null): TransactionLog</p> <p>Updates the provided TransactionLog with information from a Response and an optional Throwable.</p> <p>If the log's type is not TransactionLog.Type.Presentation, it returns the log unchanged. It handles different types of responses:</p> <ul> <li>DeviceResponse: Stores raw response bytes, document metadata, session transcript, and sets format to CBOR.</li> <li>OpenId4VpResponse.DeviceResponse: Similar to DeviceResponse.</li> <li>OpenId4VpResponse.GenericResponse: Stores a JSON representation of verifiable presentations and presentation submission, document metadata, and sets format to JSON. Requires the VP content to be VpContent.PresentationExchange.</li> <li>Other response types: Throws an IllegalArgumentException.</li> </ul> <p>The log status is set to TransactionLog.Status.Completed if <code>error</code> is null, otherwise to TransactionLog.Status.Error. The timestamp of the log is updated to the current time.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-response/#return","title":"Return","text":"<p>An updated TransactionLog instance.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> log The current transaction log to update. response The response object. error An optional error that occurred during response processing."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transaction-log-builder/with-response/#throws","title":"Throws","text":"IllegalArgumentException if an unsupported response type is provided or if OpenId4VpResponse.GenericResponse does not contain VpContent.PresentationExchange."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-transactions-decorator","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator","text":"<ul> <li>-transactions-decorator</li> <li>remove-all-transfer-event-listeners</li> <li>send-response</li> <li>stop-proximity-presentation</li> <li>stop-remote-presentation</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/-transactions-decorator/","title":"transactions decorator","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsDecorator/TransactionsDecorator</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/-transactions-decorator/#transactionsdecorator","title":"TransactionsDecorator","text":"<p>[androidJvm] constructor(delegate: PresentationManager, documentManager: DocumentManager, transactionLogger: TransactionLogger, logger: Logger? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/-transactions-decorator/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager The manager for accessing document details, passed to the TransactionsListener. transactionLogger The logger for persisting transaction logs, passed to the TransactionsListener. logger Optional logger for internal logging of the decorator and listener."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsDecorator/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): &lt;Error class: unknown class&gt;</p> <p>Removes all transfer event listeners from the delegate PresentationManager and then re-adds the internal transactionListener.</p> <p>This ensures that the transactionListener remains active even if other listeners are cleared.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/remove-all-transfer-event-listeners/#return","title":"Return","text":"<p>This instance of TransactionsDecorator.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/send-response/","title":"Send response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsDecorator/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] open override fun sendResponse(response: Response)</p> <p>Sends a response using the delegate PresentationManager and logs the outcome.</p> <p>It attempts to send the response and then logs the response details. If sending the response is successful, it logs the response. If an error occurs while sending, it logs the response along with the error and then re-throws the original exception.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response The response to be sent."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/send-response/#throws","title":"Throws","text":"Exception if an error occurs while sending the response via the delegate."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/stop-proximity-presentation/","title":"Stop proximity presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsDecorator/stopProximityPresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/stop-proximity-presentation/#stopproximitypresentation","title":"stopProximityPresentation","text":"<p>[androidJvm] open override fun stopProximityPresentation(flags: Int)</p> <p>Stops the proximity presentation using the delegate PresentationManager and ensures the transaction logging is appropriately finalized by calling TransactionsListener.logStopped.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/stop-proximity-presentation/#parameters","title":"Parameters","text":"<p>androidJvm</p> flags Flags to control the stopping behavior, passed to the delegate."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/stop-remote-presentation/","title":"Stop remote presentation","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsDecorator/stopRemotePresentation</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-decorator/stop-remote-presentation/#stopremotepresentation","title":"stopRemotePresentation","text":"<p>[androidJvm] open override fun stopRemotePresentation()</p> <p>Stops the remote presentation using the delegate PresentationManager and ensures the transaction logging is appropriately finalized by calling TransactionsListener.logStopped.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentation-transactions-listener","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener","text":"<ul> <li>-transactions-listener</li> <li>log-response</li> <li>log-stopped</li> <li>on-transfer-event</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/-transactions-listener/","title":"transactions listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsListener/TransactionsListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/-transactions-listener/#transactionslistener","title":"TransactionsListener","text":"<p>[androidJvm] constructor(transactionLogger: TransactionLogger, documentManager: DocumentManager, logger: Logger? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/-transactions-listener/#parameters","title":"Parameters","text":"<p>androidJvm</p> documentManager The manager responsible for accessing document details."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/log-response/","title":"Log response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsListener/logResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/log-response/#logresponse","title":"logResponse","text":"<p>[androidJvm] fun logResponse(response: Response, error: Throwable? = null)</p> <p>Logs the response after sending it to the relying party.</p> <p>This method updates the current transaction log with the response details and any error that might have occurred during the sending process. If an error occurs during logging itself, it logs that error and marks the transaction log with an error status.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/log-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response The response to be logged. error The exception that occurred during sending the response, if any."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/log-stopped/","title":"Log stopped","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsListener/logStopped</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/log-stopped/#logstopped","title":"logStopped","text":"<p>[androidJvm] fun logStopped()</p> <p>Logs that the current transaction has been stopped.</p> <p>If the current transaction log is incomplete (i.e., its status is TransactionLog.Status.Incomplete), this method marks the log with an TransactionLog.Status.Error status and persists it. This is typically called when a presentation is explicitly stopped or disconnected before completion.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/on-transfer-event/","title":"On transfer event","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/TransactionsListener/onTransferEvent</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/on-transfer-event/#ontransferevent","title":"onTransferEvent","text":"<p>[androidJvm] open override fun onTransferEvent(event: TransferEvent)</p> <p>Handles transfer events to update the transaction log.</p> <p>Updates the log based on the event type:</p> <ul> <li>TransferEvent.Connected: Resets the log for a new transaction.</li> <li>TransferEvent.RequestReceived: Updates the log with request and relying party information.</li> <li>TransferEvent.Error: Marks the log with an error status and persists it.</li> <li>TransferEvent.Disconnected: Calls logStopped to finalize logging for an incomplete transaction.</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation/-transactions-listener/on-transfer-event/#parameters","title":"Parameters","text":"<p>androidJvm</p> event The transfer event to handle."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentationparsing","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing","text":"<ul> <li>-vp-and-metadata</li> <li>claims</li> <li>find-claim-metadata-for-sd-jwt-vc</li> <li>get-index-form-path</li> <li>get-presented-documents-from-claims</li> <li>get-response-indices-by-format</li> <li>get-sd-jwt</li> <li>parse-mso-mdoc-from-vp</li> <li>parse-mso-mdoc</li> <li>parse-presentation-transaction-log</li> <li>parse-raw-response</li> <li>parse-vc-sd-jwt</li> <li>parse-vp</li> <li>value-without-key-binding</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/claims/","title":"Claims","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/claims</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/claims/#claims","title":"claims","text":"<p>[androidJvm] val SdJwt&lt;JwtAndClaims&gt;.claims: Map&lt;List&lt;String&gt;, JsonElement?&gt;</p> <p>This extension property is used to get the claims from the sd-jwt object and get a map of claims with the path as the key and the value as the value It uses the DefaultSdJwtOps.recreateClaimsAndDisclosuresPerClaim method and then selects the claims from the json object using the path</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/find-claim-metadata-for-sd-jwt-vc/","title":"Find claim metadata for sd jwt vc","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/findClaimMetadataForSdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/find-claim-metadata-for-sd-jwt-vc/#findclaimmetadataforsdjwtvc","title":"findClaimMetadataForSdJwtVc","text":"<p>[androidJvm] fun findClaimMetadataForSdJwtVc(path: List&lt;String&gt;, metadata: DocumentMetaData?): DocumentMetaData.Claim?</p> <p>Function to find the claim metadata from the path and metadata It takes the path as a list of strings and metadata and iterates DocumentMetaData.claims to find the claim metadata</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/find-claim-metadata-for-sd-jwt-vc/#return","title":"Return","text":"<p>the claim metadata as a DocumentMetaData.Claim object</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/find-claim-metadata-for-sd-jwt-vc/#parameters","title":"Parameters","text":"<p>androidJvm</p> path the path to parse metadata the metadata to parse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-index-form-path/","title":"Get index form path","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/getIndexFormPath</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-index-form-path/#getindexformpath","title":"getIndexFormPath","text":"<p>[androidJvm] fun getIndexFormPath(descriptorMap: DescriptorMap): Int</p> <p>Function to get the index from the path of the descriptor map It takes the descriptor map to parse the path and returns the index as an integer</p> <p>If the path is \"$\" it returns 0</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-index-form-path/#return","title":"Return","text":"<p>the index as an integer</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-index-form-path/#parameters","title":"Parameters","text":"<p>androidJvm</p> descriptorMap the descriptor map to parse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-presented-documents-from-claims/","title":"Get presented documents from claims","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/getPresentedDocumentsFromClaims</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-presented-documents-from-claims/#getpresenteddocumentsfromclaims","title":"getPresentedDocumentsFromClaims","text":"<p>[androidJvm] fun getPresentedDocumentsFromClaims(claims: Map&lt;List&lt;String&gt;, JsonElement?&gt;, metadata: DocumentMetaData?): PresentedDocument</p> <p>Function to get the presented documents from the claims It takes the claims as a map of path to value and metadata and returns a PresentedDocument object</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-presented-documents-from-claims/#return","title":"Return","text":"<p>the PresentedDocument object</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-presented-documents-from-claims/#parameters","title":"Parameters","text":"<p>androidJvm</p> claims the claims to parse metadata the metadata to parse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-response-indices-by-format/","title":"Get response indices by format","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/getResponseIndicesByFormat</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-response-indices-by-format/#getresponseindicesbyformat","title":"getResponseIndicesByFormat","text":"<p>[androidJvm] fun PresentationSubmission.getResponseIndicesByFormat(): Map&lt;String, List&lt;Int&gt;&gt;</p> <p>Function to get the indices of the descriptor maps by format It takes the presentation submission and returns a map of format to list of indices</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-response-indices-by-format/#receiver","title":"Receiver","text":"<p>presentationSubmission the presentation submission to parse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-response-indices-by-format/#return","title":"Return","text":"<p>the map of format to list of indices</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-sd-jwt/","title":"Get sd jwt","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/getSdJwt</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-sd-jwt/#getsdjwt","title":"getSdJwt","text":"<p>[androidJvm] fun getSdJwt(sdJwt: String): SdJwt&lt;JwtAndClaims&gt;?</p> <p>Function to parse the sd-jwt string and return the SdJwt object</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-sd-jwt/#return","title":"Return","text":"<p>the SdJwt object or null if the parsing fails</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/get-sd-jwt/#parameters","title":"Parameters","text":"<p>androidJvm</p> sdJwt the sd-jwt string to parse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc-from-vp/","title":"Parse mso mdoc from vp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parseMsoMdocFromVp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc-from-vp/#parsemsomdocfromvp","title":"parseMsoMdocFromVp","text":"<p>[androidJvm] fun parseMsoMdocFromVp(vp: VerifiablePresentation.Generic, metadata: List&lt;String?&gt;?): List&lt;PresentedDocument&gt;</p> <p>Parses an mso_mdoc document from a Verifiable Presentation. This function extracts the mso_mdoc data from the verifiable presentation, decodes it from Base64, and then passes it to the parseMsoMdoc function.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc-from-vp/#return","title":"Return","text":"<p>A list of PresentedDocument objects parsed from the mso_mdoc data.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc-from-vp/#parameters","title":"Parameters","text":"<p>androidJvm</p> vp The generic Verifiable Presentation containing the mso_mdoc document. metadata Optional list of metadata strings associated with the documents."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc/","title":"Parse mso mdoc","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parseMsoMdoc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc/#parsemsomdoc","title":"parseMsoMdoc","text":"<p>[androidJvm] fun parseMsoMdoc(rawResponse: ByteArray, sessionTranscript: ByteArray?, metadata: List&lt;String?&gt;?): List&lt;PresentedDocument&gt;</p> <p>Parses the MSO mdoc response and returns a list of presented documents.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc/#return","title":"Return","text":"<p>A list of presented documents.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-mso-mdoc/#parameters","title":"Parameters","text":"<p>androidJvm</p> rawResponse The raw response byte array from the device. sessionTranscript The session transcript byte array, or null if not available. metadata A list of metadata strings, or null if not available."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-presentation-transaction-log/","title":"Parse presentation transaction log","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parsePresentationTransactionLog</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-presentation-transaction-log/#parsepresentationtransactionlog","title":"parsePresentationTransactionLog","text":"<p>[androidJvm] fun parsePresentationTransactionLog(transactionLog: TransactionLog): PresentationTransactionLog</p> <p>Parses a TransactionLog and returns a PresentationTransactionLog.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-presentation-transaction-log/#return","title":"Return","text":"<p>A PresentationTransactionLog object.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-presentation-transaction-log/#parameters","title":"Parameters","text":"<p>androidJvm</p> transactionLog The transaction log to parse."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-presentation-transaction-log/#throws","title":"Throws","text":"IllegalArgumentException If the transaction log is not a presentation transaction log or if any required fields are null."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-raw-response/","title":"Parse raw response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parseRawResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-raw-response/#parserawresponse","title":"parseRawResponse","text":"<p>[androidJvm] fun parseRawResponse(rawResponse: ByteArray): Pair&lt;List&lt;VerifiablePresentation.Generic&gt;, PresentationSubmission&gt;?</p> <p>Function to parse the raw response of Vp. It takes the raw response as a byte array and returns a pair of verifiable presentations and presentation submission.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-raw-response/#return","title":"Return","text":"<p>a pair of verifiable presentations and presentation submission or null if parsing fails</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-raw-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> rawResponse the raw response to parse"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vc-sd-jwt/","title":"Parse vc sd jwt","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parseVcSdJwt</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vc-sd-jwt/#parsevcsdjwt","title":"parseVcSdJwt","text":"<p>[androidJvm] fun parseVcSdJwt(vp: VerifiablePresentation.Generic, metadata: String?): PresentedDocument?</p> <p>Parses an SD-JWT Verifiable Credential from a Verifiable Presentation. This function extracts the SD-JWT data from the verifiable presentation, processes it to remove key binding due to library limitations, and converts it into a PresentedDocument object with all the relevant claims.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vc-sd-jwt/#return","title":"Return","text":"<p>A PresentedDocument object if parsing is successful, or null if parsing fails.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vc-sd-jwt/#parameters","title":"Parameters","text":"<p>androidJvm</p> vp The generic Verifiable Presentation containing the SD-JWT VC. metadata Optional metadata string associated with the document in JSON format."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vp/","title":"Parse vp","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parseVp</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vp/#parsevp","title":"parseVp","text":"<p>[androidJvm] fun parseVp(rawResponse: ByteArray, metadata: List&lt;String?&gt;?): List&lt;PresentedDocument&gt;</p> <p>Function to parse the Verifiable Presentation (VP) response. It takes the raw response as a byte array and metadata as a list of strings. It returns a list of PresentedDocument objects.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vp/#return","title":"Return","text":"<p>a list of PresentedDocument objects</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/parse-vp/#parameters","title":"Parameters","text":"<p>androidJvm</p> rawResponse the raw response to parse metadata optional metadata associated with the documents"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/value-without-key-binding/","title":"Value without key binding","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/valueWithoutKeyBinding</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/value-without-key-binding/#valuewithoutkeybinding","title":"valueWithoutKeyBinding","text":"<p>[androidJvm] val VerifiablePresentation.Generic.valueWithoutKeyBinding: String</p> <p>This function is used to remove the key binding from the sd-jwt due to limitations of the sd-jwt library and eu.europa.ec.eudi.sdjwt.DefaultSdJwtOps.verify method.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/-vp-and-metadata/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/-vp-and-metadata/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransactionloggingpresentationparsing-vp-and-metadata","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transactionLogging.presentation.parsing/-vp-and-metadata","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp","text":"<ul> <li>-client-id</li> <li>-client-id-scheme</li> <li>-encryption-algorithm</li> <li>-encryption-method</li> <li>-format</li> <li>-jws-algorithm</li> <li>-legal-name</li> <li>-open-id4-vp-config</li> <li>-open-id4-vp-manager</li> <li>-open-id4-vp-request</li> <li>-open-id4-vp-request-processor</li> <li>-open-id4-vp-response</li> <li>-preregistered-verifier</li> <li>-processed-generic-open-id4-vp-request</li> <li>-processed-mso-mdoc-open-id4-vp-request</li> <li>-sd-jwt-vc-item</li> <li>-verifier-api</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme","text":"<ul> <li>-preregistered</li> <li>-x509-san-dns</li> <li>-x509-san-uri</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-preregistered","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered","text":"<ul> <li>-preregistered</li> <li>preregistered-verifiers</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/-preregistered/","title":"preregistered","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/Preregistered</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/-preregistered/#preregistered","title":"Preregistered","text":"<p>[androidJvm] constructor(preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/preregistered-verifiers/","title":"Preregistered verifiers","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ClientIdScheme/Preregistered/preregisteredVerifiers</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-preregistered/preregistered-verifiers/#preregisteredverifiers","title":"preregisteredVerifiers","text":"<p>[androidJvm] var preregisteredVerifiers: List&lt;PreregisteredVerifier&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-dns/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-dns/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-x509-san-dns","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-dns","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-uri/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-uri/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-client-id-scheme-x509-san-uri","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-client-id-scheme/-x509-san-uri","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm","text":"<ul> <li>-e-c-d-h_-e-s</li> <li>-e-c-d-h_-e-s_-a128-k-w</li> <li>-e-c-d-h_-e-s_-a192-k-w</li> <li>-e-c-d-h_-e-s_-a256-k-w</li> <li>-e-c-d-h_1-p-u</li> <li>-e-c-d-h_1-p-u_-a128-k-w</li> <li>-e-c-d-h_1-p-u_-a192-k-w</li> <li>-e-c-d-h_1-p-u_-a256-k-w</li> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a128-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a192-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_-e-s_-a256-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_ES_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_-e-s_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a128-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A128KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a128-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a192-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A192KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a192-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-algorithm-e-c-d-h_1-p-u_-a256-k-w","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionAlgorithm/ECDH_1PU_A256KW/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-algorithm/-e-c-d-h_1-p-u_-a256-k-w/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method","text":"<ul> <li>-a128-c-b-c_-h-s256</li> <li>-a128-g-c-m</li> <li>-a192-c-b-c_-h-s384</li> <li>-a192-g-c-m</li> <li>-a256-c-b-c_-h-s512</li> <li>-a256-g-c-m</li> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/name/#name","title":"name","text":"<p>[androidJvm] abstract val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-c-b-c_-h-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-c-b-c_-h-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a128-c-b-c_-h-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-c-b-c_-h-s256","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-c-b-c_-h-s256/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128CBC_HS256/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-c-b-c_-h-s256/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a128-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A128GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a128-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-c-b-c_-h-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-c-b-c_-h-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a192-c-b-c_-h-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-c-b-c_-h-s384","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-c-b-c_-h-s384/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192CBC_HS384/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-c-b-c_-h-s384/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a192-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A192GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a192-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-c-b-c_-h-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-c-b-c_-h-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a256-c-b-c_-h-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-c-b-c_-h-s512","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-c-b-c_-h-s512/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256CBC_HS512/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-c-b-c_-h-s512/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-g-c-m/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-g-c-m/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-encryption-method-a256-g-c-m","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-g-c-m","text":"<ul> <li>name</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-g-c-m/name/","title":"Name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/EncryptionMethod/A256GCM/name</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-encryption-method/-a256-g-c-m/name/#name","title":"name","text":"<p>[androidJvm] open override val name: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format","text":"<ul> <li>-mso-mdoc</li> <li>-sd-jwt-vc</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-mso-mdoc/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-mso-mdoc/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-mso-mdoc","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-mso-mdoc","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-sd-jwt-vc","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc","text":"<ul> <li>-companion</li> <li>-sd-jwt-vc</li> <li>kb-jwt-algorithms</li> <li>sd-jwt-algorithms</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-sd-jwt-vc/","title":"sd jwt vc","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-sd-jwt-vc/#sdjwtvc","title":"SdJwtVc","text":"<p>[androidJvm] constructor(sdJwtAlgorithms: List&lt;Algorithm&gt;, kbJwtAlgorithms: List&lt;Algorithm&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/","title":"Kb jwt algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/kbJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/kb-jwt-algorithms/#kbjwtalgorithms","title":"kbJwtAlgorithms","text":"<p>[androidJvm] val kbJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/","title":"Sd jwt algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/sdJwtAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/sd-jwt-algorithms/#sdjwtalgorithms","title":"sdJwtAlgorithms","text":"<p>[androidJvm] val sdJwtAlgorithms: List&lt;Algorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-format-sd-jwt-vc-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-companion","text":"<ul> <li>-e-s256</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-companion/-e-s256/","title":"e s256","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/Format/SdJwtVc/Companion/ES256</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-format/-sd-jwt-vc/-companion/-e-s256/#es256","title":"ES256","text":"<p>[androidJvm] val ES256: Format.SdJwtVc</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm","text":"<ul> <li>-e-s256</li> <li>-e-s256-k</li> <li>-e-s384</li> <li>-e-s512</li> <li>-ed-d-s-a</li> <li>-ed25519</li> <li>-ed448</li> <li>-h-s256</li> <li>-h-s384</li> <li>-h-s512</li> <li>-p-s256</li> <li>-p-s384</li> <li>-p-s512</li> <li>-r-s256</li> <li>-r-s384</li> <li>-r-s512</li> <li>entries</li> <li>value-of</li> <li>values</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/entries/","title":"Entries","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/entries</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/entries/#entries","title":"entries","text":"<p>[androidJvm] val entries: EnumEntries&lt;JwsAlgorithm&gt;</p> <p>Returns a representation of an immutable list of all enum entries, in the order they're declared.</p> <p>This method may be used to iterate over the enum entries.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/value-of/","title":"Value of","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/valueOf</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/value-of/#valueof","title":"valueOf","text":"<p>[androidJvm] fun valueOf(value: String): JwsAlgorithm</p> <p>Returns the enum constant of this type with the specified name. The string must match exactly an identifier used to declare an enum constant in this type. (Extraneous whitespace characters are not permitted.)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/value-of/#throws","title":"Throws","text":"kotlin.IllegalArgumentException if this enum type has no constant with the specified name"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/values/","title":"Values","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/JwsAlgorithm/values</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/values/#values","title":"values","text":"<p>[androidJvm] fun values(): Array&lt;JwsAlgorithm&gt;</p> <p>Returns an array containing the constants of this enum type, in the order they're declared.</p> <p>This method may be used to iterate over the constants.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256-k/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256-k/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s256-k","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s256-k","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-e-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-e-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed-d-s-a/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed-d-s-a/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed-d-s-a","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed-d-s-a","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed25519/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed25519/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed25519","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed25519","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed448/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed448/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-ed448","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-ed448","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-h-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-h-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-p-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-p-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s256/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s256/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s256","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s256","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s384/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s384/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s384","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s384","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s512/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s512/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-jws-algorithm-r-s512","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-jws-algorithm/-r-s512","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-legal-name/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-legal-name/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-legal-name","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-legal-name","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-config","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config","text":"<ul> <li>-builder</li> <li>client-id-schemes</li> <li>encryption-algorithms</li> <li>encryption-methods</li> <li>formats</li> <li>schemes</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/client-id-schemes/","title":"Client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] val clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] val encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/encryption-methods/","title":"Encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] val encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/formats/","title":"Formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/formats/#formats","title":"formats","text":"<p>[androidJvm] val formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/schemes/","title":"Schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] val schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-config-builder","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder","text":"<ul> <li>-builder</li> <li>build</li> <li>client-id-schemes</li> <li>encryption-algorithms</li> <li>encryption-methods</li> <li>formats</li> <li>schemes</li> <li>with-client-id-schemes</li> <li>with-encryption-algorithms</li> <li>with-encryption-methods</li> <li>with-formats</li> <li>with-schemes</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/-builder/","title":"builder","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/Builder</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/-builder/#builder","title":"Builder","text":"<p>[androidJvm] constructor()</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/build/","title":"Build","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/build</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/build/#build","title":"build","text":"<p>[androidJvm] fun build(): OpenId4VpConfig</p> <p>Builds the OpenId4VpConfig.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/build/#return","title":"Return","text":"<p>the OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/client-id-schemes/","title":"Client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/clientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/client-id-schemes/#clientidschemes","title":"clientIdSchemes","text":"<p>[androidJvm] lateinit var clientIdSchemes: List&lt;ClientIdScheme&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/encryption-algorithms/","title":"Encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/encryption-algorithms/#encryptionalgorithms","title":"encryptionAlgorithms","text":"<p>[androidJvm] lateinit var encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/encryption-methods/","title":"Encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/encryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/encryption-methods/#encryptionmethods","title":"encryptionMethods","text":"<p>[androidJvm] lateinit var encryptionMethods: List&lt;EncryptionMethod&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/formats/","title":"Formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/formats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/formats/#formats","title":"formats","text":"<p>[androidJvm] lateinit var formats: List&lt;Format&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/schemes/","title":"Schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/schemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/schemes/#schemes","title":"schemes","text":"<p>[androidJvm] var schemes: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-client-id-schemes/","title":"With client id schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withClientIdSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#withclientidschemes","title":"withClientIdSchemes","text":"<p>[androidJvm] fun withClientIdSchemes(clientIdSchemes: List&lt;ClientIdScheme&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the supported client identifier schemes.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> clientIdSchemes list of ClientIdScheme <p>[androidJvm] fun withClientIdSchemes(vararg clientIdSchemes: ClientIdScheme): &lt;Error class: unknown class&gt;</p> <p>Sets the supported client identifier schemes.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-client-id-schemes/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> clientIdSchemes variable argument of ClientIdScheme"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/","title":"With encryption algorithms","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionAlgorithms</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#withencryptionalgorithms","title":"withEncryptionAlgorithms","text":"<p>[androidJvm] fun withEncryptionAlgorithms(encryptionAlgorithms: List&lt;EncryptionAlgorithm&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the list of supported encryption algorithms.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#parameters","title":"Parameters","text":"<p>androidJvm</p> encryptionAlgorithms list of EncryptionAlgorithm <p>[androidJvm] fun withEncryptionAlgorithms(vararg encryptionAlgorithms: EncryptionAlgorithm): &lt;Error class: unknown class&gt;</p> <p>Sets the list of supported encryption algorithms.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-algorithms/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> encryptionAlgorithms variable argument of EncryptionAlgorithm"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-methods/","title":"With encryption methods","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withEncryptionMethods</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-methods/#withencryptionmethods","title":"withEncryptionMethods","text":"<p>[androidJvm] fun withEncryptionMethods(encryptionMethods: List&lt;EncryptionMethod&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the list of supported encryption methods.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-methods/#parameters","title":"Parameters","text":"<p>androidJvm</p> encryptionMethods list of EncryptionMethod <p>[androidJvm] fun withEncryptionMethods(vararg encryptionMethods: EncryptionMethod): &lt;Error class: unknown class&gt;</p> <p>Sets the list of supported encryption methods.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-encryption-methods/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> encryptionMethods variable argument of EncryptionMethod"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-formats/","title":"With formats","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withFormats</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-formats/#withformats","title":"withFormats","text":"<p>[androidJvm] fun withFormats(formats: List&lt;Format&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets the supported credential formats for the OpenID4VP.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-formats/#parameters","title":"Parameters","text":"<p>androidJvm</p> formats list of Format <p>[androidJvm] fun withFormats(vararg formats: Format): &lt;Error class: unknown class&gt;</p> <p>Sets the supported credential formats for the OpenID4VP.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-formats/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> formats variable argument of Format"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-schemes/","title":"With schemes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpConfig/Builder/withSchemes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-schemes/#withschemes","title":"withSchemes","text":"<p>[androidJvm] fun withSchemes(schemes: List&lt;String&gt;): &lt;Error class: unknown class&gt;</p> <p>Sets a list of schemes for OpenID4VP. By default, the scheme \"mdoc-openid4vp\" is supported.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-schemes/#parameters","title":"Parameters","text":"<p>androidJvm</p> schemes the list of schemes <p>[androidJvm] fun withSchemes(vararg schemes: String): &lt;Error class: unknown class&gt;</p> <p>Sets a list of schemes for OpenID4VP.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-config/-builder/with-schemes/#parameters_1","title":"Parameters","text":"<p>androidJvm</p> schemes variables argument of schemes"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-manager","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager","text":"<ul> <li>-companion</li> <li>-open-id4-vp-manager</li> <li>add-transfer-event-listener</li> <li>config</li> <li>ktor-http-client-factory</li> <li>listeners-executor</li> <li>logger</li> <li>reader-trust-store</li> <li>remove-all-transfer-event-listeners</li> <li>remove-transfer-event-listener</li> <li>request-processor</li> <li>resolve-request-uri</li> <li>send-response</li> <li>stop</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/-open-id4-vp-manager/","title":"open id4 vp manager","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/OpenId4VpManager</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/-open-id4-vp-manager/#openid4vpmanager","title":"OpenId4VpManager","text":"<p>[androidJvm] constructor(config: OpenId4VpConfig, requestProcessor: OpenId4VpRequestProcessor, logger: Logger? = null, listenersExecutor: Executor? = null, ktorHttpClientFactory: () -&gt; HttpClient? = null)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/add-transfer-event-listener/","title":"Add transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/addTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/add-transfer-event-listener/#addtransfereventlistener","title":"addTransferEventListener","text":"<p>[androidJvm] open override fun addTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/config/","title":"Config","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/config</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/config/#config","title":"config","text":"<p>[androidJvm] val config: OpenId4VpConfig</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/ktor-http-client-factory/","title":"Ktor http client factory","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/ktorHttpClientFactory</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/ktor-http-client-factory/#ktorhttpclientfactory","title":"ktorHttpClientFactory","text":"<p>[androidJvm] val ktorHttpClientFactory: () -&gt; HttpClient? = null</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/listeners-executor/","title":"Listeners executor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/listenersExecutor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/listeners-executor/#listenersexecutor","title":"listenersExecutor","text":"<p>[androidJvm] var listenersExecutor: Executor?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/logger/","title":"Logger","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/logger</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/logger/#logger","title":"logger","text":"<p>[androidJvm] var logger: Logger?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/","title":"Remove all transfer event listeners","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeAllTransferEventListeners</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/remove-all-transfer-event-listeners/#removealltransfereventlisteners","title":"removeAllTransferEventListeners","text":"<p>[androidJvm] open override fun removeAllTransferEventListeners(): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/remove-transfer-event-listener/","title":"Remove transfer event listener","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/removeTransferEventListener</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/remove-transfer-event-listener/#removetransfereventlistener","title":"removeTransferEventListener","text":"<p>[androidJvm] open override fun removeTransferEventListener(listener: TransferEvent.Listener): &lt;Error class: unknown class&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/request-processor/","title":"Request processor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/requestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/request-processor/#requestprocessor","title":"requestProcessor","text":"<p>[androidJvm] val requestProcessor: OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/resolve-request-uri/","title":"Resolve request uri","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/resolveRequestUri</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/resolve-request-uri/#resolverequesturi","title":"resolveRequestUri","text":"<p>[androidJvm] fun resolveRequestUri(uri: String)</p> <p>Resolves a request URI. This method is asynchronous and the result is emitted through the TransferEvent.Listener interface. Every time it is called it cancels any previous request that is being resolved. This will lead to the TransferEvent.Disconnected event being emitted.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/resolve-request-uri/#see-also","title":"See also","text":"OpenId4VpManager.addTransferEventListener"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/send-response/","title":"Send response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/sendResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/send-response/#sendresponse","title":"sendResponse","text":"<p>[androidJvm] fun sendResponse(response: Response)</p> <p>Sends a response to the verifier. This method is asynchronous and the result is emitted through the TransferEvent.Listener interface. Every time it is called it cancels any previous response that is being sent. This will lead to the TransferEvent.Disconnected event being emitted.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/send-response/#parameters","title":"Parameters","text":"<p>androidJvm</p> response The response to send."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/send-response/#see-also","title":"See also","text":"OpenId4VpManager.addTransferEventListener"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/stop/","title":"Stop","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpManager/stop</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/stop/#stop","title":"stop","text":"<p>[androidJvm] fun stop()</p> <p>Stops the manager and cancels all running connections made by the manager. When a connection is cancelled, the TransferEvent.Disconnected event is emitted.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/-companion/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/-companion/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-manager-companion","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-manager/-companion","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request","text":"<ul> <li>-open-id4-vp-request</li> <li>resolved-request-object</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/-open-id4-vp-request/","title":"open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/OpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/-open-id4-vp-request/#openid4vprequest","title":"OpenId4VpRequest","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequest/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-request-processor","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor","text":"<ul> <li>-open-id4-vp-request-processor</li> <li>process</li> <li>reader-trust-store</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/","title":"open id4 vp request processor","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/OpenId4VpRequestProcessor</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/-open-id4-vp-request-processor/#openid4vprequestprocessor","title":"OpenId4VpRequestProcessor","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, readerTrustStore: ReaderTrustStore?)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/process/","title":"Process","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/process</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/process/#process","title":"process","text":"<p>[androidJvm] open override fun process(request: Request): RequestProcessor.ProcessedRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/reader-trust-store/","title":"Reader trust store","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpRequestProcessor/readerTrustStore</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-request-processor/reader-trust-store/#readertruststore","title":"readerTrustStore","text":"<p>[androidJvm] open override var readerTrustStore: ReaderTrustStore?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response","text":"<ul> <li>-device-response</li> <li>-generic-response</li> <li>consensus</li> <li>encryption-parameters</li> <li>mso-mdoc-nonce</li> <li>resolved-request-object</li> <li>vp-content</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] abstract val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/encryption-parameters/","title":"Encryption parameters","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/encryptionParameters</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/encryption-parameters/#encryptionparameters","title":"encryptionParameters","text":"<p>[androidJvm] open val encryptionParameters: EncryptionParameters?</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] abstract val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] abstract val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/vp-content/","title":"Vp content","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/vpContent</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/vp-content/#vpcontent","title":"vpContent","text":"<p>[androidJvm] open val vpContent: VpContent</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response-device-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response","text":"<ul> <li>-device-response</li> <li>consensus</li> <li>document-ids</li> <li>equals</li> <li>hash-code</li> <li>mso-mdoc-nonce</li> <li>resolved-request-object</li> <li>response-bytes</li> <li>session-transcript</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/-device-response/","title":"device response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/DeviceResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/-device-response/#deviceresponse","title":"DeviceResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus.VPTokenConsensus, msoMdocNonce: String, sessionTranscript: ByteArray, responseBytes: DeviceResponseBytes, documentIds: List&lt;DocumentId&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/document-ids/","title":"Document ids","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/documentIds</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/document-ids/#documentids","title":"documentIds","text":"<p>[androidJvm] val documentIds: List&lt;DocumentId&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/equals/","title":"Equals","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/equals</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/equals/#equals","title":"equals","text":"<p>[androidJvm] open operator override fun equals(other: Any?): Boolean</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/hash-code/","title":"Hash code","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/hashCode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/hash-code/#hashcode","title":"hashCode","text":"<p>[androidJvm] open override fun hashCode(): Int</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] open override val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/response-bytes/","title":"Response bytes","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/responseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/response-bytes/#responsebytes","title":"responseBytes","text":"<p>[androidJvm] val responseBytes: DeviceResponseBytes</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/session-transcript/","title":"Session transcript","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/DeviceResponse/sessionTranscript</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-device-response/session-transcript/#sessiontranscript","title":"sessionTranscript","text":"<p>[androidJvm] val sessionTranscript: ByteArray</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-open-id4-vp-response-generic-response","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response","text":"<ul> <li>-generic-response</li> <li>consensus</li> <li>document-ids</li> <li>mso-mdoc-nonce</li> <li>resolved-request-object</li> <li>response</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/-generic-response/","title":"generic response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/GenericResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/-generic-response/#genericresponse","title":"GenericResponse","text":"<p>[androidJvm] constructor(resolvedRequestObject: ResolvedRequestObject, consensus: Consensus.PositiveConsensus.VPTokenConsensus, msoMdocNonce: String, response: List&lt;String&gt;, documentIds: List&lt;DocumentId&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/consensus/","title":"Consensus","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/consensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/consensus/#consensus","title":"consensus","text":"<p>[androidJvm] open override val consensus: Consensus.PositiveConsensus.VPTokenConsensus</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/document-ids/","title":"Document ids","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/documentIds</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/document-ids/#documentids","title":"documentIds","text":"<p>[androidJvm] val documentIds: List&lt;DocumentId&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] open override val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/resolved-request-object/","title":"Resolved request object","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/resolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/resolved-request-object/#resolvedrequestobject","title":"resolvedRequestObject","text":"<p>[androidJvm] open override val resolvedRequestObject: ResolvedRequestObject</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/response/","title":"Response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/OpenId4VpResponse/GenericResponse/response</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-open-id4-vp-response/-generic-response/response/#response","title":"response","text":"<p>[androidJvm] val response: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-preregistered-verifier","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier","text":"<ul> <li>-preregistered-verifier</li> <li>client-id</li> <li>jwk-set-source</li> <li>jws-algorithm</li> <li>legal-name</li> <li>verifier-api</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/-preregistered-verifier/","title":"preregistered verifier","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/PreregisteredVerifier</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/-preregistered-verifier/#preregisteredverifier","title":"PreregisteredVerifier","text":"<p>[androidJvm] constructor(clientId: ClientId, legalName: LegalName, verifierApi: VerifierApi, jwsAlgorithm: JwsAlgorithm = JwsAlgorithm.ES256, jwkSetSource: URI = URI(\"$verifierApi/wallet/public-keys.json\"))</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/client-id/","title":"Client id","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/clientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/client-id/#clientid","title":"clientId","text":"<p>[androidJvm] var clientId: ClientId</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/jwk-set-source/","title":"Jwk set source","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/jwkSetSource</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/jwk-set-source/#jwksetsource","title":"jwkSetSource","text":"<p>[androidJvm] var jwkSetSource: URI</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/jws-algorithm/","title":"Jws algorithm","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/jwsAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/jws-algorithm/#jwsalgorithm","title":"jwsAlgorithm","text":"<p>[androidJvm] var jwsAlgorithm: JwsAlgorithm</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/legal-name/","title":"Legal name","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/legalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/legal-name/#legalname","title":"legalName","text":"<p>[androidJvm] var legalName: LegalName</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/verifier-api/","title":"Verifier api","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/PreregisteredVerifier/verifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-preregistered-verifier/verifier-api/#verifierapi","title":"verifierApi","text":"<p>[androidJvm] var verifierApi: VerifierApi</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-processed-generic-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request","text":"<ul> <li>-processed-generic-open-id4-vp-request</li> <li>generate-response</li> <li>mso-mdoc-nonce</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/","title":"processed generic open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/ProcessedGenericOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/-processed-generic-open-id4-vp-request/#processedgenericopenid4vprequest","title":"ProcessedGenericOpenId4VpRequest","text":"<p>[androidJvm] constructor(documentManager: DocumentManager, resolvedRequestObject: ResolvedRequestObject, inputDescriptorMap: Map&lt;InputDescriptorId, List&lt;DocumentId&gt;&gt;, requestedDocuments: RequestedDocuments, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedGenericOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-generic-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-processed-mso-mdoc-open-id4-vp-request","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request","text":"<ul> <li>-processed-mso-mdoc-open-id4-vp-request</li> <li>generate-response</li> <li>mso-mdoc-nonce</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/","title":"processed mso mdoc open id4 vp request","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/ProcessedMsoMdocOpenId4VpRequest</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/-processed-mso-mdoc-open-id4-vp-request/#processedmsomdocopenid4vprequest","title":"ProcessedMsoMdocOpenId4VpRequest","text":"<p>[androidJvm] constructor(processedDeviceRequest: ProcessedDeviceRequest, resolvedRequestObject: ResolvedRequestObject, msoMdocNonce: String)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/","title":"Generate response","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/generateResponse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/generate-response/#generateresponse","title":"generateResponse","text":"<p>[androidJvm] open override fun generateResponse(disclosedDocuments: DisclosedDocuments, signatureAlgorithm: Algorithm?): ResponseResult</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/","title":"Mso mdoc nonce","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/ProcessedMsoMdocOpenId4VpRequest/msoMdocNonce</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-processed-mso-mdoc-open-id4-vp-request/mso-mdoc-nonce/#msomdocnonce","title":"msoMdocNonce","text":"<p>[androidJvm] val msoMdocNonce: String</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-sd-jwt-vc-item","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item","text":"<ul> <li>-sd-jwt-vc-item</li> <li>path</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/","title":"sd jwt vc item","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/SdJwtVcItem</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/-sd-jwt-vc-item/#sdjwtvcitem","title":"SdJwtVcItem","text":"<p>[androidJvm] constructor(path: List&lt;String&gt;)</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/path/","title":"Path","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/SdJwtVcItem/path</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-sd-jwt-vc-item/path/#path","title":"path","text":"<p>[androidJvm] val path: List&lt;String&gt;</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-verifier-api/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-verifier-api/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwallettransferopenid4vp-verifier-api","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.transfer.openId4vp/-verifier-api","text":""},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletutil","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util","text":"<ul> <li>-c-b-o-r</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/#index-of-eudi-lib-android-wallet-coredocswallet-coreeueuropaeceudiwalletutil-c-b-o-r","title":"Index of eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r","text":"<ul> <li>cbor-decode-byte-string</li> <li>cbor-decode</li> <li>cbor-encode</li> <li>cbor-parse</li> <li>cbor-pretty-print</li> </ul>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/","title":"Cbor decode byte string","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborDecodeByteString</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/#cbordecodebytestring","title":"cborDecodeByteString","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborDecodeByteString(data: ByteArray): ByteArray</p> <p>Decodes a given CBOR byte array into a byte array.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/#return","title":"Return","text":"<p>The decoded byte array.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode-byte-string/#parameters","title":"Parameters","text":"<p>androidJvm</p> data The CBOR byte array to decode."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/","title":"Cbor decode","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborDecode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/#cbordecode","title":"cborDecode","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborDecode(encodedBytes: ByteArray): DataItem</p> <p>Decodes a given CBOR byte array into a DataItem.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/#return","title":"Return","text":"<p>The decoded DataItem.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/#parameters","title":"Parameters","text":"<p>androidJvm</p> encodedBytes The byte array to decode."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-decode/#throws","title":"Throws","text":"IllegalArgumentException If decoding fails or the number of decoded items is not 1."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/","title":"Cbor encode","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborEncode</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/#cborencode","title":"cborEncode","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborEncode(dataItem: DataItem): ByteArray</p> <p>Encodes a given DataItem into a CBOR byte array.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/#return","title":"Return","text":"<p>A byte array representing the encoded CBOR data.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/#parameters","title":"Parameters","text":"<p>androidJvm</p> dataItem The DataItem to encode."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-encode/#throws","title":"Throws","text":"IllegalStateException If encoding fails."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-parse/","title":"Cbor parse","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborParse</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-parse/#cborparse","title":"cborParse","text":"<p>[androidJvm] fun cborParse(data: ByteArray): Any?</p> <p>Parses a given CBOR byte array into a Kotlin object.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-parse/#return","title":"Return","text":"<p>The parsed object.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-parse/#parameters","title":"Parameters","text":"<p>androidJvm</p> data The CBOR byte array to parse."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/","title":"Cbor pretty print","text":"<p>Home //wallet-core/eu.europa.ec.eudi.wallet.util/CBOR/cborPrettyPrint</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/#cborprettyprint","title":"cborPrettyPrint","text":"<p>[androidJvm]\\</p> <p>@JvmStatic</p> <p>fun cborPrettyPrint(encodedBytes: ByteArray): String</p> <p>Pretty prints a given CBOR byte array.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/#return","title":"Return","text":"<p>A string representing the pretty-printed CBOR data.</p>"},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/#parameters","title":"Parameters","text":"<p>androidJvm</p> encodedBytes The CBOR byte array to pretty print."},{"location":"eudi-lib-android-wallet-core/docs/wallet-core/eu.europa.ec.eudi.wallet.util/-c-b-o-r/cbor-pretty-print/#throws","title":"Throws","text":"IllegalStateException If decoding fails."},{"location":"eudi-app-android-wallet-ui/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/#index-of-eudi-app-android-wallet-ui","title":"Index of eudi-app-android-wallet-ui","text":"<ul> <li>.github</li> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>fastlane</li> <li>how-to-use-app</li> <li>resources-logic</li> <li>wiki</li> </ul>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-app-android-wallet-ui/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> </li> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another     round of review.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:</li> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-app-android-wallet-ui/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/","title":"How to use app","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#how-to-use-the-application","title":"How to use the application","text":""},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#minimum-device-requirements","title":"Minimum device requirements","text":"<ul> <li>API level 26.</li> </ul>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#prerequisites","title":"Prerequisites","text":"<p>You can download the application here</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"eudi-app-android-wallet-ui/how-to-use-app/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR/TAP' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol> </li> </ol>"},{"location":"eudi-app-android-wallet-ui/fastlane/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/fastlane/#index-of-eudi-app-android-wallet-uifastlane","title":"Index of eudi-app-android-wallet-ui/fastlane","text":"<ul> <li>README</li> </ul>"},{"location":"eudi-app-android-wallet-ui/resources-logic/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/resources-logic/#index-of-eudi-app-android-wallet-uiresources-logic","title":"Index of eudi-app-android-wallet-ui/resources-logic","text":"<ul> <li>src</li> </ul>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/#index-of-eudi-app-android-wallet-uiresources-logicsrc","title":"Index of eudi-app-android-wallet-ui/resources-logic/src","text":"<ul> <li>main</li> </ul>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/#index-of-eudi-app-android-wallet-uiresources-logicsrcmain","title":"Index of eudi-app-android-wallet-ui/resources-logic/src/main","text":"<ul> <li>res</li> </ul>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/res/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/res/#index-of-eudi-app-android-wallet-uiresources-logicsrcmainres","title":"Index of eudi-app-android-wallet-ui/resources-logic/src/main/res","text":"<ul> <li>drawable</li> </ul>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/res/drawable/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/resources-logic/src/main/res/drawable/#index-of-eudi-app-android-wallet-uiresources-logicsrcmainresdrawable","title":"Index of eudi-app-android-wallet-ui/resources-logic/src/main/res/drawable","text":""},{"location":"eudi-app-android-wallet-ui/wiki/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/wiki/#index-of-eudi-app-android-wallet-uiwiki","title":"Index of eudi-app-android-wallet-ui/wiki","text":"<ul> <li>configuration</li> <li>how_to_build</li> <li>verifier_proximity</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/","title":"Configuration","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#how-to-configure-the-application","title":"How to configure the application","text":""},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#table-of-contents","title":"Table of contents","text":"<ul> <li>General configuration</li> <li>DeepLink Schemas configuration</li> <li>Scoped Issuance Document Configuration</li> <li>How to work with self-signed certificates</li> <li>Theme configuration</li> <li>Pin Storage configuration</li> <li>Analytics configuration</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#general-configuration","title":"General configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Issuing API</li> </ol> <p>Via the WalletCoreConfig interface inside the business-logic module.</p> <pre><code>interface WalletCoreConfig {\n    val config: EudiWalletConfig\n}\n</code></pre> <p>You can configure the EudiWalletConfig per flavor. You can find both implementations inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl</p> <pre><code>    private companion object {\n        const val VCI_ISSUER_URL = \"https://issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-demo\"\n        const val AUTHENTICATION_REQUIRED = false\n    }\n</code></pre> <ol> <li>Trusted certificates</li> </ol> <p>Via the WalletCoreConfig interface.</p> <pre><code>interface WalletCoreConfig {\n    val config: EudiWalletConfig\n}\n</code></pre> <p>Same as the Verifier and Issuing APIs, you can configure the Trusted certificates for the EudiWalletConfig per flavor inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl</p> <pre><code>_config = EudiWalletConfig {\n   configureReaderTrustStore(context, R.raw.eudi_pid_issuer_ut)\n}\n</code></pre> <p>The application's IACA certificates are located here</p> <ol> <li>Preregistered Client Scheme</li> </ol> <p>If you plan to use the ClientIdScheme.Preregistered for OpenId4VP configuration, please add the following to the configuration files.</p> <pre><code>const val OPENID4VP_VERIFIER_API_URI = \"your_verifier_url\"\nconst val OPENID4VP_VERIFIER_LEGAL_NAME = \"your_verifier_legal_name\"\nconst val OPENID4VP_VERIFIER_CLIENT_ID = \"your_verifier_client_id\"\n\n.openId4VpConfig {\n    withClientIdSchemes(\n        listOf(\n            ClientIdScheme.Preregistered(\n                listOf(\n                    PreregisteredVerifier(\n                        clientId = OPENID4VP_VERIFIER_CLIENT_ID,\n                        verifierApi = OPENID4VP_VERIFIER_API_URI,\n                        legalName = OPENID4VP_VERIFIER_LEGAL_NAME\n                    )\n                )\n            )\n        )\n    )\n}\n</code></pre> <ol> <li>RQES</li> </ol> <p>Via the ConfigLogic interface inside the business-logic module.</p> <pre><code>interface ConfigLogic {\n    /**\n     * RQES Config.\n     */\n    val rqesConfig: EudiRQESUiConfig\n}\n</code></pre> <p>You can configure the RQESConfig, which implements the EudiRQESUiConfig interface from the RQESUi SDK, per flavor. Both implementations are inside the business-logic module at src/demo/config/RQESConfigImpl and src/dev/config/RQESConfigImpl.</p> <pre><code>class RQESConfigImpl : EudiRQESUiConfig {\n\n    // Optional. Default English translations will be used if not set.\n    override val translations: Map&lt;String, Map&lt;LocalizableKey, String&gt;&gt; get()\n\n    // Optional. Default theme will be used if not set.\n    override val themeManager: ThemeManager get()\n\n    override val qtsps: List&lt;QtspData&gt; get()\n\n    // Optional. Default is false.\n    override val printLogs: Boolean get()\n\n    override val documentRetrievalConfig: DocumentRetrievalConfig get()\n}\n</code></pre> <p>Example:</p> <pre><code>class RQESConfigImpl : EudiRQESUiConfig {\n\n    override val qtsps: List&lt;QtspData&gt;\n        get() = listOf(\n            QtspData(\n                name = \"your_name\",\n                endpoint = \"your_endpoint\".toUri(),\n                scaUrl = \"your_sca\",\n                clientId = \"your_clientid\",\n                clientSecret = \"your_secret\",\n                authFlowRedirectionURI = URI.create(\"your_uri\"),\n                hashAlgorithm = HashAlgorithmOID.SHA_256,\n            )\n        )\n\n    override val printLogs: Boolean get() = BuildConfig.DEBUG\n\n    override val documentRetrievalConfig: DocumentRetrievalConfig\n        get() = DocumentRetrievalConfig.X509Certificates(\n            context = context,\n            certificates = listOf(R.raw.my_certificate),\n            shouldLog = should_log_option\n        )\n}\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#deeplink-schemas-configuration","title":"DeepLink Schemas configuration","text":"<p>According to the specifications, issuance, presentation, and RQES require deep-linking for the same device flows.</p> <p>If you want to adjust any schema, you can alter the AndroidLibraryConventionPlugin inside the build-logic module.</p> <pre><code>val eudiOpenId4VpScheme = \"eudi-openid4vp\"\nval eudiOpenid4VpHost = \"*\"\n\nval mdocOpenId4VpScheme = \"mdoc-openid4vp\"\nval mdocOpenid4VpHost = \"*\"\n\nval openId4VpScheme = \"openid4vp\"\nval openid4VpHost = \"*\"\n\nval credentialOfferScheme = \"openid-credential-offer\"\nval credentialOfferHost = \"*\"\n\nval rqesScheme = \"rqes\"\nval rqesHost = \"oauth\"\nval rqesPath = \"/callback\"\n\nval rqesDocRetrievalScheme = \"eudi-rqes\"\nval rqesDocRetrievalHost = \"*\"\n</code></pre> <p>Let's assume you want to change the credential offer schema to custom-my-offer:// the AndroidLibraryConventionPlugin should look like this:</p> <pre><code>val eudiOpenId4VpScheme = \"eudi-openid4vp\"\nval eudiOpenid4VpHost = \"*\"\n\nval mdocOpenId4VpScheme = \"mdoc-openid4vp\"\nval mdocOpenid4VpHost = \"*\"\n\nval openId4VpScheme = \"openid4vp\"\nval openid4VpHost = \"*\"\n\nval credentialOfferScheme = \"custom-my-offer\"\nval credentialOfferHost = \"*\"\n</code></pre> <p>In case of an additive change, e.g., adding an extra credential offer schema, you must adjust the following.</p> <p>AndroidLibraryConventionPlugin:</p> <pre><code>val credentialOfferScheme = \"openid-credential-offer\"\nval credentialOfferHost = \"*\"\n\nval myOwnCredentialOfferScheme = \"custom-my-offer\"\nval myOwnCredentialOfferHost = \"*\"\n</code></pre> <pre><code>// Manifest placeholders used for OpenId4VCI\nmanifestPlaceholders[\"credentialOfferHost\"] = credentialOfferHost\nmanifestPlaceholders[\"credentialOfferScheme\"] = credentialOfferScheme\nmanifestPlaceholders[\"myOwnCredentialOfferHost\"] = myOwnCredentialOfferHost\nmanifestPlaceholders[\"myOwnCredentialOfferScheme\"] = myOwnCredentialOfferScheme\n</code></pre> <pre><code>addConfigField(\"CREDENTIAL_OFFER_SCHEME\", credentialOfferScheme)\naddConfigField(\"MY_OWN_CREDENTIAL_OFFER_SCHEME\", myOwnCredentialOfferScheme)\n</code></pre> <p>Android Manifest (inside assembly-logic module):</p> <pre><code>&lt;intent-filter&gt;\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n\n        &lt;data\n            android:host=\"${credentialOfferHost}\"\n            android:scheme=\"${credentialOfferScheme}\" /&gt;\n\n    &lt;/intent-filter&gt;\n\n&lt;intent-filter&gt;\n    &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n\n    &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n    &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n\n        &lt;data\n            android:host=\"${myOwnCredentialOfferHost}\"\n            android:scheme=\"${myOwnCredentialOfferScheme}\" /&gt;\n\n&lt;/intent-filter&gt;\n</code></pre> <p>DeepLinkType (DeepLinkHelper Object inside ui-logic module):</p> <pre><code>enum class DeepLinkType(val schemas: List&lt;String&gt;, val host: String? = null) {\n\n    OPENID4VP(\n        schemas = listOf(\n            BuildConfig.OPENID4VP_SCHEME,\n            BuildConfig.EUDI_OPENID4VP_SCHEME,\n            BuildConfig.MDOC_OPENID4VP_SCHEME\n        )\n    ),\n    CREDENTIAL_OFFER(\n        schemas = listOf(\n            BuildConfig.CREDENTIAL_OFFER_SCHEME,\n            BuildConfig.MY_OWN_CREDENTIAL_OFFER_SCHEME\n        )\n    ),\n    ISSUANCE(\n        schemas = listOf(BuildConfig.ISSUE_AUTHORIZATION_SCHEME),\n        host = BuildConfig.ISSUE_AUTHORIZATION_HOST\n    ),\n    DYNAMIC_PRESENTATION(\n        emptyList()\n    ),\n    RQES(\n        schemas = listOf(BuildConfig.RQES_SCHEME),\n        host = BuildConfig.RQES_HOST\n    ),\n    RQES_DOC_RETRIEVAL(\n        schemas = listOf(BuildConfig.RQES_DOC_RETRIEVAL_SCHEME)\n    ),\n    EXTERNAL(emptyList())\n}\n</code></pre> <p>In the case of an additive change regarding OpenID4VP, you also need to update the EudiWalletConfig for each flavor inside the core-logic module.</p> <pre><code>.openId4VpConfig {\n    withScheme(\n        listOf(\n                BuildConfig.OPENID4VP_SCHEME,\n                BuildConfig.EUDI_OPENID4VP_SCHEME,\n                BuildConfig.MDOC_OPENID4VP_SCHEME,\n                BuildConfig.YOUR_OWN_OPENID4VP_SCHEME\n            )\n    )\n}\n</code></pre>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#scoped-issuance-document-configuration","title":"Scoped Issuance Document Configuration","text":"<p>The credential configuration is derived directly from the issuer's metadata. The issuer URL is configured per flavor via the configureOpenId4Vci method inside the core-logic module at src/demo/config/WalletCoreConfigImpl and src/dev/config/WalletCoreConfigImpl. If you want to add or adjust the displayed scoped documents, you must modify the issuer's metadata, and the wallet will automatically resolve your changes.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block, add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new kotlin file ProvideKtorHttpClient and place it into the srcmainjavaeueuropaeccorelogicconfig package.</li> <li>Copy and paste the following into your newly created ProvideKtorHttpClient kotlin file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Finally, add this custom HttpClient to the EudiWallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> </ol>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#theme-configuration","title":"Theme configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Colors</li> <li>Images</li> <li>Shape</li> <li>Fonts</li> <li>Dimension</li> </ol> <p>Via ThemeManager.Builder().</p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#pin-storage-configuration","title":"Pin Storage configuration","text":"<p>The application allows the configuration of the PIN storage. You can configure the following:</p> <ol> <li>Where the pin will be stored</li> <li>From where the pin will be retrieved</li> <li>Pin matching and validity</li> </ol> <p>Via the StorageConfig inside the authentication-logic module.</p> <pre><code>interface StorageConfig {\n    val pinStorageProvider: PinStorageProvider\n    val biometryStorageProvider: BiometryStorageProvider\n}\n</code></pre> <p>You can provide your storage implementation by implementing the PinStorageProvider interface and then setting it as the default to the StorageConfigImpl pinStorageProvider variable. The project utilizes Koin for Dependency Injection (DI), thus requiring adjustment of the LogicAuthenticationModule graph to provide the configuration.</p> <p>Implementation Example: <pre><code>class PrefsPinStorageProvider(\n    private val prefsController: PrefsController\n) : PinStorageProvider {\n\n    override fun retrievePin(): String {\n        return prefsController.getString(\"DevicePin\", \"\")\n    }\n\n    override fun setPin(pin: String) {\n        prefsController.setString(\"DevicePin\", pin)\n    }\n\n    override fun isPinValid(pin: String): Boolean = retrievePin() == pin\n}\n</code></pre></p> <p>Config Example: <pre><code>class StorageConfigImpl(\n    private val pinImpl: PinStorageProvider,\n    private val biometryImpl: BiometryStorageProvider\n) : StorageConfig {\n    override val pinStorageProvider: PinStorageProvider\n        get() = pinImpl\n    override val biometryStorageProvider: BiometryStorageProvider\n        get() = biometryImpl\n}\n</code></pre></p> <p>Config Construction via Koin DI Example: <pre><code>@Single\nfun provideStorageConfig(\n    prefsController: PrefsController\n): StorageConfig = StorageConfigImpl(\n    pinImpl = PrefsPinStorageProvider(prefsController),\n    biometryImpl = PrefsBiometryStorageProvider(prefsController)\n)\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/configuration/#analytics-configuration","title":"Analytics configuration","text":"<p>The application allows the configuration of multiple analytics providers. You can configure the following:</p> <ol> <li>Initializing the provider (e.g., Firebase, Appcenter, etc)</li> <li>Screen logging</li> <li>Event logging</li> </ol> <p>Via the AnalyticsConfig inside the analytics-logic module.</p> <pre><code>interface AnalyticsConfig {\n    val analyticsProviders: Map&lt;String, AnalyticsProvider&gt;\n        get() = emptyMap()\n}\n</code></pre> <p>You can provide your implementation by implementing the AnalyticsProvider interface and then adding it to your AnalyticsConfigImpl analyticsProviders variable. You will also need the provider's token/key, thus requiring a Map configuration. The project utilizes Koin for Dependency Injection (DI), thus requiring adjustment of the LogicAnalyticsModule graph to provide the configuration. <p>Implementation Example: <pre><code>object AppCenterAnalyticsProvider : AnalyticsProvider {\n    override fun initialize(context: Application, key: String) {\n        AppCenter.start(\n            context,\n            key,\n            Analytics::class.java\n        )\n    }\n\n    override fun logScreen(name: String, arguments: Map&lt;String, String&gt;) {\n        logEvent(name, arguments)\n    }\n\n    override fun logEvent(event: String, arguments: Map&lt;String, String&gt;) {\n        if (Analytics.isEnabled().get()) {\n            Analytics.trackEvent(event, arguments)\n        }\n    }\n}\n</code></pre></p> <p>Config Example: <pre><code>class AnalyticsConfigImpl : AnalyticsConfig {\n    override val analyticsProviders: Map&lt;String, AnalyticsProvider&gt;\n        get() = mapOf(\"YOUR_OWN_KEY\" to AppCenterAnalyticsProvider)\n}\n</code></pre></p> <p>Config Construction via Koin DI Example: <pre><code>@Single\nfun provideAnalyticsConfig(): AnalyticsConfig = AnalyticsConfigImpl()\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/","title":"How to build","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Setup Apps</li> <li>How to work with self signed certificates</li> </ul>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#overview","title":"Overview","text":"<p>This guide aims to assist developers in building the Android Wallet application.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#setup-apps","title":"Setup Apps","text":""},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#eudi-android-wallet-reference-application","title":"EUDI Android Wallet reference application","text":"<p>You need Android Studio and its associated tools installed on your machine. We recommend the latest stable version. Clone the Android repository Open the project in Android Studio.</p> <p>The application has two product flavors: - \"Dev\", which communicates with the services deployed in an environment based on the latest main branch. - \"Demo\", which communicates with the services deployed in an environment based on the latest main branch.</p> <p>and two Build Types: - \"Debug\", which has full logging enabled. - \"Release\", which has no logging enabled.</p> <p>which, ultimately, result in the following Build Variants:</p> <ul> <li>\"devDebug\", \"devRelease\", \"demoDebug\", \"demoRelease\".</li> </ul> <p>To change the Build Variant, go to Build -&gt; Select Build Variant and from the tool window you can click on the \"Active Build Variant\" of the module \":app\" and select the one you prefer. It will automatically apply it to the other modules as well.</p> <p>To run the App on a device, firstly you must connect your device with the Android Studio, and then go to Run -&gt; Run 'app'. To run the App on an emulator, simply go to Run -&gt; Run 'app'.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to use some configuration in the two ConfigWalletCoreImpl.kt files (located in the \"core-logic\" module, in either srcdevjavaeueuropaeccorelogicconfig or srcdemojavaeueuropaeccorelogicconfig, depending on the flavor of your choice).</p> <p>These are the contents of the ConfigWalletCoreImpl file (dev flavor), and you don't need to change anything: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#running-with-local-services","title":"Running with local services","text":"<p>The first step here is to have all three services running locally on your machine, you can follow these Repositories for further instructions: * Issuer * Web Verifier UI * Web Verifier Endpoint</p> <p>After this, and assuming you are now running everything locally, you need to change the contents of the ConfigWalletCoreImpl file, from: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://dev.issuer.eudiw.dev\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre> with this: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"local_IP_address_of_issuer\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p> <p>for example: <pre><code>private companion object {\n        const val VCI_ISSUER_URL = \"https://10.0.2.2\"\n        const val VCI_CLIENT_ID = \"wallet-dev\"\n        const val AUTHENTICATION_REQUIRED = false\n}\n</code></pre></p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#why-10022","title":"Why 10.0.2.2?","text":"<p>When using the Android emulator, 10.0.2.2 is a special alias that routes to localhost on your development machine. So if you\u2019re running the issuer locally on your host, the emulator can access it via https://10.0.2.2.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/how_to_build/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <ol> <li>Open the build.gradle.kts file of the \"core-logic\" module.</li> <li>In the 'dependencies' block, add the following two:     <pre><code>implementation(libs.ktor.android)\nimplementation(libs.ktor.logging)\n</code></pre></li> <li>Now, you need to create a new kotlin file ProvideKtorHttpClient and place it into the srcmainjavaeueuropaeccorelogicconfig package.</li> <li>Copy and paste the following into your newly created ProvideKtorHttpClient kotlin file.     <pre><code>import android.annotation.SuppressLint\nimport io.ktor.client.HttpClient\nimport io.ktor.client.engine.android.Android\nimport io.ktor.client.plugins.logging.Logging\nimport java.security.SecureRandom\nimport javax.net.ssl.HostnameVerifier\nimport javax.net.ssl.SSLContext\nimport javax.net.ssl.TrustManager\nimport javax.net.ssl.X509TrustManager\nimport javax.security.cert.CertificateException\n\nobject ProvideKtorHttpClient {\n\n    @SuppressLint(\"TrustAllX509TrustManager\", \"CustomX509TrustManager\")\n    fun client(): HttpClient {\n        val trustAllCerts = arrayOf&lt;TrustManager&gt;(\n            object : X509TrustManager {\n                @Throws(CertificateException::class)\n                override fun checkClientTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                @Throws(CertificateException::class)\n                override fun checkServerTrusted(\n                    chain: Array&lt;java.security.cert.X509Certificate&gt;,\n                    authType: String\n                ) {\n                }\n\n                override fun getAcceptedIssuers(): Array&lt;java.security.cert.X509Certificate&gt; {\n                    return arrayOf()\n                }\n            }\n        )\n\n        return HttpClient(Android) {\n            install(Logging)\n            engine {\n                requestConfig\n                sslManager = { httpsURLConnection -&gt;\n                    httpsURLConnection.sslSocketFactory = SSLContext.getInstance(\"TLS\").apply {\n                        init(null, trustAllCerts, SecureRandom())\n                    }.socketFactory\n                    httpsURLConnection.hostnameVerifier = HostnameVerifier { _, _ -&gt; true }\n                }\n            }\n        }\n    }\n\n}\n</code></pre></li> <li>Also, add this custom HttpClient to the EudiWallet provider function provideEudiWallet located in LogicCoreModule.kt <pre><code>@Single\nfun provideEudiWallet(\ncontext: Context,\nwalletCoreConfig: WalletCoreConfig,\nwalletCoreLogController: WalletCoreLogController\n): EudiWallet = EudiWallet(context, walletCoreConfig.config) {\n    withLogger(walletCoreLogController)\n    // Custom HttpClient\n    withKtorHttpClientFactory {\n        ProvideKtorHttpClient.client()\n    }\n}\n</code></pre></li> <li>Finally, you need to use the preregistered clientId scheme instead of X509.</li> </ol> <p>Change this:    <pre><code>withClientIdSchemes(\n listOf(ClientIdScheme.X509SanDns)\n)\n ```\n\ninto something like this:\n```Kotlin\nwithClientIdSchemes(\n listOf(\n     ClientIdScheme.Preregistered(\n         preregisteredVerifiers =\n             listOf(\n                 PreregisteredVerifier(\n                     clientId = \"Verifier\",\n                     legalName = \"Verifier\",\n                     verifierApi = \"https://10.0.2.2\"\n                 )\n             )\n         )\n     )\n)\n</code></pre></p> <p>For all configuration options, please refer to this document</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/","title":"Verifier proximity","text":"<p>Home</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#mdoc-verifier-testing","title":"mDoc Verifier (Testing)","text":"<p>The mDoc Verifier (Testing) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#purpose","title":"Purpose","text":"<p>The mDoc Verifier (Testing) app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made:</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul> <p>The app is available for download through GitHub Releases, here  (the code is not currently publicly available).</p>"},{"location":"eudi-app-android-wallet-ui/wiki/verifier_proximity/#important-note","title":"Important Note","text":"<p>The mDoc Verifier (Testing) app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"eudi-lib-ios-wallet-kit/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/#index-of-eudi-lib-ios-wallet-kit","title":"Index of eudi-lib-ios-wallet-kit","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>Sources</li> <li>changelog</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-lib-ios-wallet-kit/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/","title":"Changelog","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0114","title":"v0.11.4","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift package dependency to version 0.12.0</li> <li>Supports openid4vp draft 24</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0113","title":"v0.11.3","text":"<ul> <li>Display \"Unidentified Relying Party\" when reader authentication is disabled.</li> <li>Fix transactions log for verifications with DCQL queries</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0112","title":"v0.11.2","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift package dependency to version 0.11.0</li> <li>DCQL query language support </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0111","title":"v0.11.1","text":"<ul> <li>Package updates</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0110","title":"v0.11.0","text":"<ul> <li>Bug fixes</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0109","title":"v0.10.9","text":"<ul> <li>Updated eudi-lib-ios-siop-openid4vp-swift library to (v0.10.1)[https://github.com/eu-digital-identity-wallet/eudi-lib-ios-siop-openid4vp-swift/releases/tag/v0.10.1]</li> <li>Updated eudi-lib-ios-statium-swift library to (v0.2.0)[https://github.com/eu-digital-identity-wallet/eudi-lib-ios-statium-swift/releases/tag/v0.2.0]</li> <li>Add Sendable conformance to TransactionLogData and PresentationLogData structs.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0108","title":"v0.10.8","text":"<ul> <li>Modified BLE data transfer initialisation to ensure BLE powered on before advertising UUID service and presenting QR code</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0107","title":"v0.10.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#document-status-checks","title":"Document Status Checks","text":"<ul> <li>Integration with <code>eudi-lib-ios-statium-swift</code> library for document status checks (Token Status List Specification draft 10)</li> <li> <p>Added <code>public func getDocumentStatus(for statusIdentifier: StatusIdentifier) async throws -&gt; CredentialStatus</code> method to <code>EudiWallet</code> class. <pre><code>for m in wallet.storage.docModels {\n    guard let st = m.statusIdentifier else { continue }\n    let status = try? await wallet.getDocumentStatus(for: st)\n    // mark document according to its status as active or revoked, etc...\n}\n\n\n## v0.10.6\n### OpenID4VCI - Draft 15\n- Updated OpenID4VCI library to version [0.13.0](https://github.com/eu-digital-identity-wallet/eudi-lib-ios-openid4vci-swift/releases/tag/v0.13.0)\n- Issuing functions updated to work with OpenID4VCI - Draft 15\n\n### Transaction logging\n- To log the transaction data, provide an implementation of the `TransactionLogger` protocol:\n```swift\npublic actor DbTransactionLogger: TransactionLogger {\n    public func log(transaction: TransactionLog) async throws {\n        // Implement your logging logic here\n    }\n}\n</code></pre></p> </li> <li> <p>Set the <code>transactionLogger</code> property of the <code>EudiWallet</code> instance to a <code>TransactionLogger</code> implementation instance: <pre><code>wallet.transactionLogger = DbTransactionLogger()\n</code></pre></p> </li> <li>To display presented documents for a transaction, use the <code>parseTransactionLog</code> function of the <code>EudiWallet</code> instance: <pre><code>let presentationData = await wallet.parseTransactionLog(transaction)\n</code></pre></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0105","title":"v0.10.5","text":"<ul> <li>Updated OpenID4VP library to version v0.9.0</li> <li>Updated OpenID4VCI library to version 0.12.3</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0104","title":"v0.10.4","text":"<ul> <li>Support transaction data for OpenID4VP</li> <li>Fix issue #162 </li> <li>Fix issue #163</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0103","title":"v0.10.3","text":"<ul> <li>Removed <code>vct</code> from <code>docClaims</code> collection. </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0102","title":"v0.10.2","text":"<ul> <li>Simplified OpenID4VCI configuration <pre><code>wallet = try! EudiWallet(serviceName: Self.serviceName, trustedReaderCertificates: certs, \n  openID4VciConfig: OpenId4VCIConfiguration(useDPoP: true), logFileName: \"temp.txt\", secureAreas: [mySecureArea])\n</code></pre></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0101","title":"v0.10.1","text":"<ul> <li>OpenID4VP Draft 23 support</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v0100","title":"v0.10.0","text":"<ul> <li>Fix nil DocClaim issue for request-items</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v099","title":"v0.9.9","text":"<ul> <li><code>DocPresentInfo</code> struct members public</li> <li><code>DocClaim</code>: added property <code>path: [String]</code> to store the path of the claim in the document</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v098","title":"v0.9.8","text":"<ul> <li>sdJwt nested elements presentation</li> <li><code>DocElementsViewModel</code> replaced with <code>enum DocElements</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v096","title":"v0.9.6","text":"<ul> <li>OfferedIssuanceModel: Change the issuerName property to represent a friendly name instead of a URL and add a new issuerLogoUrl property</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v095","title":"v0.9.5","text":"<ul> <li>Updated <code>eudi-lib-ios-openid4vci-swift</code> library to version v0.12.0</li> <li><code>openID4VciConfig</code> now accepts a <code>DPoPConstructorType</code>.</li> <li>Updated <code>eudi-lib-ios-siop-openid4vp-swift</code> library to version v0.7.0</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-changes","title":"Breaking changes","text":"<ul> <li><code>ElementViewModel</code>: removed <code>elementIdentifier</code> and <code>displayName</code> properties and added <code>elementPath</code> and <code>displayNames</code> properties: <pre><code>/// path to locate the element\npublic let elementPath: [String]\n// display names of the component paths \npublic let displayNames: [String?]\n</code></pre></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v094","title":"v0.9.4","text":"<ul> <li>Added properties to <code>DocClaimsDecodable</code> protocol: <code>validFrom</code>, <code>validUntil</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v093","title":"v0.9.3","text":"<ul> <li>Fixed bug for OpenID4VP presentation for more than 2 documents</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v092","title":"v0.9.2","text":"<ul> <li>Fixed bugs for OpenID4VP presentation</li> <li>Added properties to <code>DocClaimsDecodable</code> protocol: <code>issuerDisplay</code>,<code>credentialIssuerIdentifier</code>, <code>configurationIdentifier</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v091","title":"v0.9.1","text":"<ul> <li><code>EudiWallet</code>: added <code>uiCulture</code> string property for UI localization. It must be a 2-letter language code (optional)</li> <li><code>EudiWallet</code>: added <code>getIssuerMetadata()</code> function to retrieve selected issuer's metadata</li> <li><code>EudiWallet</code>: Issue document using either doc-type, scope or configuration identifier:  <code>func issueDocument(docType: String?, scope: String?, identifier: String?, promptMessage: String? = nil)</code></li> <li><code>WalletStorage.Document</code>: added <code>displayName</code> property with localized string value</li> <li><code>ElementViewModel</code>: added <code>displayName</code> property with localized string value</li> <li><code>DocMetadata</code>: stores all localized metadata in <code>display</code> property</li> <li><code>DocClaimMetadata</code>: stores all localized metadata in <code>display</code> property</li> <li>Fix bug with VP presentation</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v090","title":"v0.9.0","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#supports-issuing-and-display-of-documents-with-sd-jwt-vc-format","title":"Supports issuing and display of documents with sd-jwt-vc format","text":"<ul> <li><code>DocClaimDecodable</code> protocol is supported for both mso-mdoc (cbor) and sd-jwt-vc formats</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#supports-saving-and-retrieving-issuer-metadata-to-be-used-for-display","title":"Supports saving and retrieving issuer metadata to be used for display","text":"<ul> <li><code>DocClaim</code> struct has <code>docDataValue</code> property to store the typed value (enum with associated values) of the claim and <code>stringValue</code> property to store the string value of the claim</li> <li><code>DocClaim</code> struct has <code>displayName</code>, <code>isOptional</code> and <code>valueType</code> properties provided by the issuer</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#updated-eudi-lib-ios-openid4vci-swift-to-version-0100","title":"Updated eudi-lib-ios-openid4vci-swift to version 0.10.0","text":"<ul> <li>Feature/dpop nonce</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-changes_1","title":"Breaking changes","text":"<ul> <li><code>StorageManager</code> property <code>mdocModels</code> renamed to <code>docModels</code></li> <li><code>MdocDecodable</code> protocol renamed to <code>DocClaimDecodable</code></li> <li><code>NameValue</code> struct renamed to <code>DocClaim</code></li> <li><code>NameImage</code> struct removed</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v082","title":"v0.8.2","text":"<ul> <li>Update for OpenID4VCI Draft14 (eudi-lib-ios-openid4vci-swift updated to tag 0.9.0)</li> <li>Use @MainActor for issuing methods due to authentication UI</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v081","title":"v0.8.1","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-changes_2","title":"Breaking changes","text":"<ul> <li><code>SecureArea</code> protocol static factory method added: <code>nonisolated public static func create(storage: any SecureKeyStorage) -&gt; Self</code></li> <li>Removed <code>SecureArea</code> protocol initializer: <code>init(storage: any SecureKeyStorage)</code> (use the static factory method instead)</li> <li>Removed property <code>storage</code> from <code>SecureArea</code> protocol</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v080","title":"v0.8.0","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#secure-area-refactoring","title":"Secure area refactoring","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#eudiwallet-changes","title":"<code>EudiWallet</code> changes:","text":"<ul> <li><code>init</code> added <code>secureAreas</code>: <code>[SecureArea]</code> optional parameter (default is <code>[\"SecureEnclave\", \"Software\"]</code>)</li> <li><code>issueDocument</code>: added <code>keyOptions</code> optional parameter to specify the secure area name and other key options for the key creation</li> <li><code>issueDocumentsByOfferUrl</code>: added <code>docTypeKeyOptions</code> optional parameter to specify the secure area name and other key options for each doc type </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v078","title":"v0.7.8","text":"<ul> <li><code>RequestItems</code> conforms to <code>Equatable</code> protocol</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v077","title":"v0.7.7","text":"<ul> <li>Fix issue #118  ### Breaking changes</li> <li><code>RequestItems</code> is now a dictionary with a key of type <code>String</code> (doc-type) and a value of type <code>[String: [RequestItem]]</code> (namespace to request items)</li> <li><code>RequestItem</code> is a struct with the following properties: <code>elementIdentifier</code>, <code>intentToRetain</code> and <code>isOptional</code> <code>swift  public typealias RequestItems = [String: [String: [RequestItem]]]</code></li> <li>ElementViewModel: <code>public var isMandatory: Bool</code> is removed</li> <li>ElementViewModel: <code>public var isOptional: Bool</code> is added (opposite of <code>isMandatory</code>)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v074","title":"v0.7.4","text":"<ul> <li>Update Package.resolved and Package.swift with new versions for openid4vci, openid4vp</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v073","title":"v0.7.3","text":"<ul> <li>Bug fix</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v072","title":"v0.7.2","text":"<ul> <li>Removed <code>@MainActor</code> annotation from class definitions</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v071","title":"v0.7.1","text":"<ul> <li>Swift 6 migration</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v070","title":"v0.7.0","text":"<ul> <li>Updated OpenID4VCI to version 0.6.0</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v069","title":"v0.6.9","text":"<ul> <li>Fill document display name in DocElementsViewModel</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v068","title":"v0.6.8","text":"<ul> <li>Updated OpenID4VCI to version 0.5.0</li> <li>Updated OpenID4VP to version 0.4.0</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v067","title":"v0.6.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#added-methods","title":"Added methods:","text":"<ul> <li><code>public func loadDocument(id:status:) async throws -&gt; WalletStorage.Document?</code></li> <li><code>public func deleteDocument(id:status:) async throws</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#documentation","title":"Documentation","text":"<ul> <li>Updated README.md with new methods and explanations</li> <li>Added documentation using Swift-DocC (deployed here)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v065","title":"v0.6.5","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#fixes-for-dynamic-issuance","title":"Fixes for dynamic issuance:","text":"<ul> <li>Support dynamic issuance in scoped mode </li> <li>Remove pending document after finalizing <code>resumePendingIssuance</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v064","title":"v0.6.4","text":"<ul> <li>New wallet methods: </li> </ul> <p><code>public func loadAllDocuments() async throws -&gt; [WalletStorage.Document]?</code></p> <p><code>public func deleteAllDocuments() async throws</code></p> <p><code>public func resumePendingIssuance(pendingDoc: WalletStorage.Document, webUrl: URL?) async throws -&gt; WalletStorage.Document</code></p> <ul> <li>Dynamic issuance handling:  After calling issueDocumentsByOfferUrl the wallet application need to check if the issuance is pending:</li> </ul> <p><code>if let urlString = newDocs.first?.authorizePresentationUrl {</code></p> <p><code>// perform openid4vp presentation using the urlString</code></p> <p><code>// on success call resumePendingIssuance using the url provided by the server</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v063","title":"v0.6.3","text":"<ul> <li>Fixed issuing error when wallet <code>userAuthenticationRequired</code> property is true</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v062","title":"v0.6.2","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#fix","title":"Fix","text":"<ul> <li>Wrong text on success message after issuing a document: <code>OfferedIssuanceModel</code>, <code>issuerName</code> now has only the domain</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#logging-mechanism","title":"Logging mechanism","text":"<ul> <li> <p><code>EudiWallet</code> supports logging and retrieval of log contents</p> <p>` // If not-nil, logging to the specified log file name will be configured  public var logFileName: String? { didSet { try? initializeLogging() } }</p> <p>// Helper method to return a file URL from a file name.  public static func getLogFileURL(_ fileName: String) throws -&gt; URL? </p> <p>// Reset a log file stored in the caches directory  public func resetLogFile(_ fileName: String) throws  </p> <p>// Get the contents of a log file stored in the caches directory public func getLogFileContents(_ fileName: String) throws -&gt; String    ` </p> </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v061","title":"v0.6.1","text":"<ul> <li>Set WalletStorage.Document displayName property when saving a document</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v060","title":"v0.6.0","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.3</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v059","title":"v0.5.9","text":"<ul> <li><code>EudiWallet</code> new property <code>public var serviceName: String</code></li> </ul> <p>Use a different <code>serviceName</code> than the default one if you want to store documents in a different location. e.g.    wallet.serviceName = \"wallet_dev\"</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v058","title":"v0.5.8","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.2</li> <li>New <code>EudiWallet</code> property <code>public var openID4VciConfig: OpenId4VCIConfig?</code> to pass OpenID4VCI issuer parameters</li> <li>Removed <code>EudiWallet</code> properties <code>var openID4VciClientId</code> and <code>var openID4VciRedirectUri</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v057","title":"v0.5.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#storagemanager-changes","title":"StorageManager changes","text":"<ul> <li><code>loadDocuments</code> takes an optional <code>status</code> parameter of type <code>WalletStorage.DocumentStatus</code> (default is <code>issued</code>)</li> <li><code>deleteDocuments</code> takes an optional <code>status</code> parameter of type <code>WalletStorage.DocumentStatus</code> (default is <code>issued</code>)</li> <li>new variable <code>@Published public private(set) var deferredDocuments: [WalletStorage.Document] = []</code> (documents that are not yet issued)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#deferred-issuance","title":"Deferred issuance","text":"<ul> <li>Request a deferred issuance based on a stored deferred document. On success, the deferred document is updated with the issued document.    The caller does not need to reload documents, storage manager <code>deferredDocuments</code> and <code>docModels</code> properties are updated.</li> <li>New function to request deferred issuance: <code>@discardableResult public func requestDeferredIssuance(deferredDoc: WalletStorage.Document) async throws -&gt; WalletStorage.Document</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#other-changes","title":"Other changes","text":"<ul> <li>Removed <code>otherModels</code>, <code>docTypes</code>, <code>documentIds</code> properties</li> <li>Updated eudi-lib-ios-openid4vci-swift to version 0.4.1</li> <li>Rename <code>OfferedIssueModel</code> to <code>OfferedIssuanceModel</code> </li> <li><code>EudiWallet</code>: added property <code>public var accessGroup: String?</code> (used for sharing keychain items between apps with the same access group)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v056","title":"v0.5.6","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.3.2</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v055","title":"v0.5.5","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.3.1</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v054","title":"v0.5.4","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#custom-urlsession-variable","title":"Custom URLSession variable","text":"<ul> <li>Added <code>public var urlSession: URLSession</code> variable to <code>EudiWallet</code> class. This variable can be used to set a custom URLSession for network requests. Allows for custom configuration of the URLSession, such as setting a custom timeout interval or Self-Signed certificates.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v053","title":"v0.5.3","text":"<ul> <li>Library updates</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v052","title":"v0.5.2","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#support-pre-authorized-code-flow","title":"Support Pre-Authorized Code Flow","text":"<p>The flow is supported by existing methods:</p> <p>1 - An issue offer url is scanned. The following method is called: <code>public func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; OfferedIssueModel</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-the-return-value-type-is-offeredissuemodel-instead-of-offereddocmodel","title":"(Breaking change, the return value type is <code>OfferedIssueModel</code> instead of <code>[OfferedDocModel]</code>)","text":"<p>2 - If <code>OfferedIssueModel.isTxCodeRequired</code> is true, the call to <code>` must include the transaction code (parameter</code>txCodeValue`). </p> <ul> <li>Note: for the clientId value the <code>EudiWallet/openID4VciClientId</code> is used.</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v051","title":"v0.5.1","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-eudi-lib-ios-openid4vci-swift-dependency-to-version-015","title":"Update eudi-lib-ios-openid4vci-swift dependency to version 0.1.5","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift dependency to version 0.1.5</li> <li>Fixes iOS16 offer url parsing issue</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v050","title":"v0.5.0","text":"<ul> <li><code>EuPidModel</code> updated with new PID docType</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v049","title":"v0.4.9","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#openid4vp-fixes-and-updates","title":"Openid4VP fixes and updates","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.1</li> <li>Fix openid4vp certificate chain verification (PresentationSession's  <code>readerCertIssuerValid</code> and <code>readerCertIssuer</code> properties)</li> <li>Add <code>readerLegalName</code> property to PresentationSession</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v048","title":"v0.4.8","text":"<ul> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0</li> <li>Added wallet configuration parameter <code>public var verifierLegalName: String?</code> (used for Openid4VP preregistered clients)</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v047","title":"v0.4.7","text":"<p>###Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v046","title":"v0.4.6","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-openid4vci-to-version-012","title":"Update openid4vci to version 0.1.2","text":"<p>##v0.4.5</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#update-eudi-lib-ios-openid4vci-swift-to-version-009","title":"Update eudi-lib-ios-openid4vci-swift to version 0.0.9","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#v044","title":"v0.4.4","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-docmodels-contains-not-nil-items-swiftui-breaks-with-nil-items","title":"Breaking change - docModels contains not-nil items (SwiftUI breaks with nil items)","text":"<p>@Published public var docModels: [any MdocDecodable] = []</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v043","title":"v0.4.3","text":"<p>Openid4vp, BLE: Support sending multiple documents with same doc-type - DocElementsViewModel: added <code>public var docId: String</code> - PresentationSession / func sendResponse: itemsToSend dictionary is keyed by docId (and not docType) </p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v042","title":"v0.4.2","text":"<p>Refactoring for issuing documents with IssuerSigned cbor data</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change-document-data-is-saved-as-encoded-issuersigned-cbor","title":"Breaking change: Document data is saved as encoded IssuerSigned cbor","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#v041","title":"v0.4.1","text":"<p>OpenID4VCI: fix for filtering resolved identifiers Support mdoc Authentication for OpenId4Vp #46</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v040","title":"v0.4.0","text":"<p>OpenID4VCI fix</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v039","title":"v0.3.9","text":"<p>OpenID4VCI: Allow partial issuing when some documents fail to issue</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v038","title":"v0.3.8","text":"<p>OpenID4VCI: Fixed issuing with https://dev.issuer.eudiw.dev</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v037","title":"v0.3.7","text":""},{"location":"eudi-lib-ios-wallet-kit/changelog/#added-functions","title":"Added functions:","text":"<p>/// Resolve OpenID4VCI offer URL document types. Resolved offer metadata are cached</p> <p><code>public func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; [OfferedDocModel]</code></p> <p>/// Issue documents by offer URI.</p> <p><code>public func issueDocumentsByOfferUrl(offerUri: String, docTypes: [OfferedDocModel], docTypeKeyOptions: [String: KeyOptions]? = nil, promptMessage: String? = nil, claimSet: ClaimSet? = nil) async throws -&gt; [WalletStorage.Document]</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#breaking-change","title":"Breaking change:","text":"<p><code>// PresentationSession  @Published public var deviceEngagement: String?</code>     use the following code to convert to QR code image:  </p> <p><code>let qrImage =  DeviceEngagement.getQrCodeImage(qrCode: d)</code></p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v036","title":"v0.3.6","text":"<p>Updated <code>eudi-lib-ios-siop-openid4vp-swift</code> to v0.0.74 Updated <code>eudi-lib-ios-openid4vci-swift</code> to v0.0.7</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v035","title":"v0.3.5","text":"<p>Updated <code>eudi-lib-ios-siop-openid4vp-swift</code> to v0.0.73 Updated <code>eudi-lib-ios-openid4vci-swift</code> to v0.0.6</p>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v034","title":"v0.3.4","text":"<ul> <li>Refactor MdocDecodable (DocType, DocumentIdentifier, createdAt), </li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v033","title":"v0.3.3","text":"<ul> <li>OpenID4VP draft 13 support</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v032","title":"v0.3.2","text":"<ul> <li>Internal updates for security checks</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v031","title":"v0.3.1","text":"<ul> <li>Updated presentation definition parsing</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v030","title":"v0.3.0","text":"<ul> <li>Updated eudi-lib-ios-siop-openid4vp-swift to 0.0.72</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v029","title":"v0.2.9","text":"<ul> <li>Fixed mDOC authentication MAC validation error for mDL document type</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v017","title":"v0.1.7","text":"<ul> <li>Added delete documents func</li> <li>Storage manager functions are now <code>async throws</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#mdocdatamodel18013","title":"MdocDataModel18013","text":"<ul> <li>extractDisplayStrings is recursive (cbor elements can be dictionaries)</li> <li>NameValue: added <code>var children: [NameValue]</code> property (tree-like structure)</li> <li>MdocDecodable: added 'var displayImages: [NameImage]' property</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#v016","title":"v0.1.6","text":"<ul> <li>Add isMandatory property to DocElementsViewModel structure</li> <li><code>PresentationSession</code> methods do not run on main actor</li> <li><code>PresentationSession</code>: add `readerCertIssuerValid`` (is verifier certificate trusted)</li> <li><code>PresentationSession</code>: change `readerCertIssuer`` (has verifier certificate common name)</li> <li><code>MdocDecodable</code>: add extension method: <code>public func toJson() -&gt; [String: Any]</code></li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/changelog/#pull-requests","title":"Pull requests","text":"<ul> <li>Update eudi-lib-ios-openid4vci-swift to version 0.4.2 and add new properties to EudiWallet (#86) via @phisakel</li> <li>Refactor to support Deferred document issuing (#74) via @phisakel</li> <li>Update documentation links in README.md (#82) via @phisakel</li> <li>Docs: update documentation in README.md (#81) via @phisakel</li> <li>VP version 0.3.2, docs with Swift-DocC Plugin (#80) via @phisakel</li> <li>Update PGP Key link (#79) via @mgiakkou</li> <li>Update eudi-lib-ios-openid4vci-swift to version 0.3.1 (#78) via @phisakel</li> <li>Allow Self-Signed SSL for OpenId4VCI and OpenId4VP (#76) via @phisakel</li> <li>[fix] pre-auth fixes in libs (#75) via @dtsiflit</li> <li>Support Pre-Authorized Code Flow - Wallet-kit (iOS) (#72) via @phisakel</li> <li>Fix swift.yml (#71) via @phisakel</li> <li>Credential offer URL parsing issue for iOS16 (#69) via @phisakel</li> <li>Update eudi-lib-ios-iso18013-data-model and eudi-lib-ios-iso18013-data-transfer dependencies (#68) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.1, fix verifier display name, valid status (#67) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0 (#64) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.1.0 (#64) via @phisakel</li> <li>Update openid4vci library to version 0.1.2 (#62) via @phisakel</li> <li>Update eudi-lib-ios-openid4vci-swift to version 0.0.9 (#61) via @phisakel</li> <li>Issuing - Support for credential offer (#45) via @phisakel</li> <li>OpenID4VCI draft13 support (#31) via @phisakel</li> <li>Simplify Storage Manager API (#59) via @phisakel</li> <li>Openid4vp and BLE should support sending response with multiple documents of the same doc-type (iOS) (#56) via @phisakel</li> <li>Refactor to support IssuerSigned CBOR structure [iOS] (#53) via @phisakel</li> <li>Changelog.md update (#51) via @phisakel</li> <li>Vci offer fix for filtering resolved identifiers (#50) via @phisakel</li> <li>Support mdoc Authentication for OpenId4Vp (#46) via @phisakel</li> <li>OpenID4VCI: Allow partial issuing when some documents fail to issue (#48) via @phisakel</li> <li>Issuing - Support for credential offer (#45) via @phisakel</li> <li>Support OpenID4VCI credential offer (resolution of credential offer, issuing of specific doc types) (#44) via @phisakel</li> <li>Chore: Update dependencies for udi-lib-ios-iso18013-data-transfer to \u2026 (#43) via @phisakel</li> <li>Return the QR code to the device engagement in string representation (#42) via @akarabashov</li> <li>Centralization of sec workflows (#21) via @christosservosNCIN</li> <li>[fix] sdjwt case fix (#36) via @dtsiflit</li> <li>Update openid4vci library to v0.0.7 (#39) via @phisakel</li> <li>Update OpenID4VP to v0.0.74 (#37) via @phisakel</li> <li>Update dependencies to latest versions (#35) via @phisakel</li> <li>Update dependencies and refactor StorageManager to support multiple documents with same docType (#34) via @phisakel</li> <li>Update changelog.md (#32) via @phisakel</li> <li>Update dependencies and changelog (#30) via @phisakel</li> <li>Updates due to security helpers changes (#29) via @phisakel</li> <li>Updated Presentation Definition Parsing (#28) via @phisakel</li> <li>Update eudi-lib-ios-siop-openid4vp-swift to version 0.0.72 (#27) via @phisakel</li> <li>Check if iaca variable is nil, refactor to use multiple device private keys (#23) via @phisakel</li> <li>Update README.md (#25) via @vkanellopoulos</li> <li>Update SECURITY.md (#22) via @vkanellopoulos</li> <li>Use subjectDistinguishedName for openID4vp verifier, update packages (#20) via @phisakel</li> <li>Fix for verifier name (#19) via @phisakel</li> <li>Reader auth for openid4vp, readme overview (#18) via @phisakel</li> <li>SendResponse takes an onSuccess callback function (#17) via @phisakel</li> <li>Add BlueECC dependency and update eudi-lib-ios-siop-openid4vp-swift version (#16) via @phisakel</li> <li>OpenID4VciRedirectUri public property in wallet kit (#15) via @phisakel</li> <li>Changes for Secure Enclave use (#14) via @phisakel</li> <li>Fixes after updating OpenID4VCI library (#13) via @phisakel</li> <li>Issue documents using OpenID4VCI protocol (#12) via @phisakel</li> <li>Bug fixes for storage manager (#11) via @phisakel</li> <li>Method to begin presentation using any custom PresentationService (#10) via @phisakel</li> <li>Update README and SECURITY.md files (#9) via @phisakel</li> <li>Added delete documents func to wallet kit (#8) via @phisakel</li> <li>Make storage manager methods async throws (#7) via @phisakel</li> <li>Update Package.resolved and add isMandatory property to DocElementsViewModel structure (#6) via @phisakel</li> <li>Develop: limit main actor usage, reader cert variables (#5) via @phisakel</li> <li>Update License and Copyright (#4) via @phisakel</li> <li>Develop (#3) via @phisakel</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/#index-of-eudi-lib-ios-wallet-kitsources","title":"Index of eudi-lib-ios-wallet-kit/Sources","text":"<ul> <li>EudiWalletKit</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkit","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit","text":"<ul> <li>EudiWalletKit.docc</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkiteudiwalletkitdocc","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc","text":"<ul> <li>EudiWalletKit</li> <li>GetStarted</li> <li>IssueDocuments</li> <li>ManageDocuments</li> <li>PresentationService</li> <li>Resources</li> <li>SecureAreas</li> <li>WalletUI</li> </ul>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/","title":"EudiWalletKit","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#eudiwalletkit","title":"<code>EudiWalletKit</code>","text":"<p>EUDI Wallet Kit library for iOS</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#overview","title":"Overview","text":"<p>This repository contains the EUDI Wallet Kit library for iOS. The library is a part             of the EUDI Wallet Reference Implementation project.</p> <p>This library acts as a coordinator by orchestrating the various components that are             required to implement the EUDI Wallet functionality. On top of that, it provides a simplified API             that can be used by the application to implement the EUDI Wallet functionality.</p> <p>The library depends on the following EUDI libraries:</p> Library path Library name Documentation iso18013-data-model MdocDataModel18013 Documentation iso18013-data-transfer MdocDataTransfer18013 Documentation iso18013-security MdocSecurity18013 Documentation wallet-storage WalletStorage Documentation openid4vp-swift SiopOpenID4VP Documentation presentation-exchange-swift PresentationExchange Documentation openid4vci-swift OpenID4VCI Documentation <p></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#topics","title":"Topics","text":""},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/EudiWalletKit/#essentials","title":"Essentials","text":"<ul> <li> <li> <li> <li> <li> <p>@Links(visualStyle: detailedGrid) {     -  }"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/","title":"GetStarted","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#get-started","title":"Get started","text":"<p>How to install and initialize EUDI Wallet Kit in your project</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#package-installation","title":"Package installation","text":"<p>To use EUDI Wallet Kit, add the following dependency to your Package.swift: <pre><code>dependencies: [\n        .package(url: \"https://github.com/eu-digital-identity-wallet/eudi-lib-ios-wallet-kit.git\", .upToNextMajor(from: \"0.6.6\"))\n]\n</code></pre></p> <p>Then add the Eudi Wallet package to your target's dependencies: <pre><code>dependencies: [\n        .product(name: \"EudiWalletKit\", package: \"eudi-lib-ios-wallet-kit\"),\n]\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/GetStarted/#initialization","title":"Initialization","text":"<p>The <code>EudiWallet</code> class provides a unified API for the two user attestation presentation flows. It is initialized with a document storage manager instance. For SwiftUI apps, the wallet instance can be added as an <code>environmentObject</code> to be accessible from all views. A KeyChain implementation of document storage is available.</p> <p>```swift let wallet = EudiWallet.standard wallet.userAuthenticationRequired = true wallet.trustedReaderCertificates = [...] // array of der certificate data wallet.openId4VpVerifierApiUri = \"https:// ... verifier api uri ...\" wallet.verifierApiUri = configLogic.verifierConfig.apiUri wallet.verifierLegalName = configLogic.verifierConfig.legalName wallet.openID4VciIssuerUrl = configLogic.vciConfig.issuerUrl wallet.openID4VciClientId = configLogic.vciConfig.clientId wallet.openID4VciRedirectUri = configLogic.vciConfig.redirectUri wallet.loadAllDocuments()</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/","title":"IssueDocuments","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#issue-documents","title":"Issue documents","text":"<p>The library provides the functionality to issue documents using OpenID4VCI. </p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#overview","title":"Overview","text":"<p>To issue a document using this functionality, EudiWallet must be property initialized.  If <code>EudiWallet/userAuthenticationRequired</code> is true, user authentication is required. The authentication prompt message has localisation key \"issue_document\". After issuing a document, the document data and corresponding private key are stored in the wallet storage.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#issue-document-by-doctype","title":"Issue document by docType","text":"<p>When the document docType to be issued use the <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> method.</p> <p>Important Notes:</p> <ul> <li>Currently, only mso_mdoc format is supported</li> <li>For the 'SecureEnclave' secure area, only ES256 algorithm is supported for signing OpenId4CVI proof of possession of the public/private key pair.</li> </ul> <p>The following example shows how to issue an EUDI Personal ID document using OpenID4VCI:</p> <pre><code>wallet.openID4VciIssuerUrl = \"https://issuer.eudiw.dev\" \nwallet.openID4VciClientId = \"wallet-dev\"\nwallet.openID4VciRedirectUri = \"eudi-openid4ci://authorize/\" \ndo {\n    let doc = try await userWallet.: EuPidModel.euPidDocType)\n    // document has been added to wallet storage, you can display it\n}\ncatch {\n    // display error\n}\n</code></pre> <p>You can also issue a document by passing configuration <code>identifier</code> parameter the <code>identifier</code>. The configuration identifiers can be retrieved from the issuer's metadata,  using the <code>getIssuerMetadata</code> method.</p> <pre><code>  // get current issuer metadata\n  let configuration = try await wallet.getIssuerMetadata()\n  ...\n  let doc = try await userWallet.issueDocument(identifier: \"eu.europa.ec.eudi.pid_vc_sd_jwt\")\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#resolving-credential-offer","title":"Resolving Credential offer","text":"<p>The library provides the <code>EudiWallet/resolveOfferUrlDocTypes(uriOffer:)</code> method that resolves the credential offer URI. The method returns the resolved <code>OfferedIssuanceModel</code> object that contains the offer's data (offered document types, issuer name and transaction code specification for pre-authorized flow). The offer's data can be displayed to the user.</p> <p>The following example shows how to resolve a credential offer:</p> <pre><code> func resolveOfferUrlDocTypes(uriOffer: String) async throws -&gt; OfferedIssuanceModel {\n        return try await wallet.resolveOfferUrlDocTypes(uriOffer: uriOffer)\n    }\n</code></pre> <p>After user acceptance of the offer, the selected documents can be issued using the <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> method. The <code>txCodeValue</code> parameter is not used in the case of the authorization code flow.</p> <p>The following example shows how to issue documents by offer URL: <pre><code> let documents = try await walletController.issueDocumentsByOfferUrl(offerUri: uri,  docTypes: docOffers, txCodeValue: txCodeValue )\n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#authorization-code-flow","title":"Authorization code flow","text":"<p>For the authorization code flow to work, the redirect URI must be specified specified by setting the the <code>EudiWallet/openID4VciConfig</code> property. The user is redirected in an authorization web view to the issuer's authorization endpoint. After the user authenticates and authorizes the request, the issuer redirects the user back to the application with an authorization code. The library exchanges the authorization code for an access token and issues the document.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#pre-authorization-code-flow","title":"Pre-Authorization code flow","text":"<p>When Issuer supports the pre-authorization code flow, the resolved offer will also contain the corresponding information. Specifically, the <code>txCodeSpec</code> field in the <code>OfferedIssuanceModel</code> object will contain:</p> <ul> <li>The input mode, whether it is NUMERIC or TEXT</li> <li>The expected length of the input</li> <li>The description of the input</li> </ul> <p>From the user's perspective, the application must provide a way to input the transaction code.</p> <p>After user acceptance of the offer, the selected documents can be issued using the <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:txCodeValue:promptMessage:useSecureEnclave:claimSet:)</code> method. When the transaction code is provided, the issuance process can be resumed by calling the above-mentioned method and passing the transaction code in the <code>txCodeValue</code> parameter.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/IssueDocuments/#dynamic-issuance","title":"Dynamic issuance","text":"<p>Wallet kit supports the Dynamic PID based issuance</p> <p>After calling <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> or <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> the wallet application need to check if the doc is pending and has a <code>authorizePresentationUrl</code> property. If the property is present, the application should perform the OpenID4VP presentation using the presentation URL. On success, the <code>EudiWallet/resumePendingIssuance(pendingDoc:webUrl:)</code> method should be called with the authorization URL provided by the server. <pre><code>if let urlString = newDocs.last?.authorizePresentationUrl { \n    // perform openid4vp presentation using the urlString \n    // on success call resumePendingIssuance using the authorization url  \n</code></pre></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/","title":"ManageDocuments","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#manage-documents","title":"Manage documents","text":"<p>The EudiWallet class provides a set of methods to work with documents.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#loading-documents","title":"Loading documents","text":"<p>The <code>EudiWallet/loadDocuments(status:)</code> method returns documents with a specific status from storage.</p> <p>The following example shows how to retrieve issued documents:</p> <pre><code> public func loadDocuments() async throws {\n        let documents = try await wallet.loadDocuments(status: .issued)\n    }\n</code></pre> <p>To load documents of all statuses use the <code>EudiWallet/loadAllDocuments()</code> method.</p> <pre><code>let documents = try await wallet.loadAllDocuments()\n</code></pre> <p>The <code>EudiWallet/loadDocument(id:status:)</code> method returns a document with a given id and status. </p> <p>The following example shows how to retrieve a document:</p> <pre><code>let document = try await wallet.loadDocument(id: documentId, status: .issued)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#storage-manager","title":"Storage manager","text":"<p>The read-only property <code>storage</code> is an instance of a <code>StorageManager</code> class. Currently the keychain implementation is used. It provides document management functionality using the iOS KeyChain.</p> <p>The storage model provides the following models for the supported well-known document types:</p> DocType Model eu.europa.ec.eudiw.pid.1 EuPidModel org.iso.18013.5.1.mDL IsoMdlModel <p>Since the issued mDoc documents retrieved expose only basic metadata and the raw data, they must be decoded to the corresponding CBOR models. The library provides the <code>StorageManager/toClaimsModel(doc:modelFactory:)</code> function to decode document raw CBOR data to strongly-typed models conforming to MdocDecodable protocol. </p> <p>The loading functions automatically update the <code>StorageManager</code> members. The decoded issued documents are available in the <code>docModels</code> property. The deferred and pending documents are available in the <code>deferredDocuments</code> and <code>pendingDocuments</code> properties respectively.</p> <p>For other document types the GenericMdocModel is provided.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/ManageDocuments/#deleting-a-document","title":"Deleting a document","text":"<p>The <code>EudiWallet/deleteDocument(id:status:)</code> method that deletes a document with the given id.</p> <p>The following example shows how to delete a document:</p> <p><pre><code>try await wallet.deleteDocument(id: documentId, status: .issued)\n</code></pre> To delete all documents you can use <code>EudiWallet/deleteAllDocuments()</code></p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/PresentationService/","title":"PresentationService","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/PresentationService/#presentation-service","title":"Presentation Service","text":"<p>The library supports document presentation via BLE or online verifier</p> <p>The <code>PresentationService</code> protocol abstracts the presentation flow. The <code>BlePresentationService</code> and <code>OpenId4VpService</code> classes implement the proximity and remote presentation flows respectively. The <code>PresentationSession</code> class is used to wrap the presentation service and provide <code>@Published</code> properties for SwiftUI screens. The following example code demonstrates the initialization of a SwiftUI view with a new presentation session of a selected <code>FlowType</code>.</p> <pre><code>let session = eudiWallet.beginPresentation(flow: flow)\n// pass the session to a SwiftUI view\nShareView(presentationSession: session)\n</code></pre> <p>On view appearance the attestations are presented with the <code>PresentationService/receiveRequest()</code>  method. For the BLE (proximity) case, the <code>PresentationSession/deviceEngagement</code> property is populated with the QR code to be displayed on the holder device.</p> <p><pre><code>.task {\n     if presentationSession.flow.isProximity { await presentationSession.startQrEngagement() }\n     _ = await presentationSession.receiveRequest()\n}\n</code></pre> After the request is received the <code>PresentationSession/disclosedDocuments</code> contains the requested attested items. The selected state of the items can be modified via UI binding. Finally, the response is sent with the following code: </p> <pre><code>// Send the disclosed document items after biometric authentication (FaceID or TouchID)\n// if the user cancels biometric authentication, onCancel method is called\n await presentationSession.sendResponse(userAccepted: true,\n    itemsToSend: presentationSession.disclosedDocuments.items, onCancel: { dismiss() }, onSuccess: {\n            if let url = $0 { \n                // handle URL\n             }\n        })\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/","title":"SecureAreas","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#custom-key-management","title":"Custom key management","text":"<p>Eudi Wallet Kit supports custom key management through the implementation of SecureArea and SecureKeyStorage protocols. This document details the process of integrating custom key management with the library.</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-areas","title":"Secure areas","text":"<p>The wallet developer can customize cryptographic key operations by passing SecureArea instances to the wallet. In the absence of custom instances, the wallet kit automatically generates SecureEnclaveSecureArea (default) and SoftwareSecureArea secure areas. </p> <p>The secure area instance must be initialized with a secure key storage area implementing the SecureKeyStorage protocol. An iOS keychain-based storage is provided via the KeyChainSecureKeyStorage actor. </p> <p>Assuming that the application developer has implemented the SecureArea protocol and registered an instance with the wallet kit, it will be available for custom secure area cryptographic operations. The following example demonstrates how to register a custom secure area with the Wallet Kit:</p> <pre><code>let keyChainStorage = KeyChainSecureKeyStorage(serviceName: self.serviceName, accessGroup: nil)\nlet mySecureArea = MySecureArea(storage: keyChainStorage)\nlet wallet = try! EudiWallet(serviceName: \"wallet_dev_ui\",\n        trustedReaderCertificates: [Data(name: \"eudi_pid_issuer_ut\", ext: \"der\")!],\n        secureAreas: [mySecureArea])\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-key-creation-on-issuing","title":"Secure key creation on issuing","text":"<p>For each document type, the wallet developer has the flexibility to define specific key creation parameters, including the secure area name, curve type, key access control and key unlock policy.</p> <p>Specifically:</p> <ul> <li>The <code>EudiWallet/issueDocument(docType:scope:identifier:keyOptions:promptMessage:)</code> has been extended to support an additional keyOptions optional parameter to specify the secure area name and other key options for the key creation. </li> <li>The <code>EudiWallet/issueDocumentsByOfferUrl(offerUri:docTypes:docTypeKeyOptions:txCodeValue:promptMessage:claimSet:)</code> has been extended to support a <code>docTypeKeyOptions</code> to specify the secure area name and other key options for each doc type.</li> </ul> <pre><code>// For keychain saved keys, the iOS will automatically present a biometric or user PIN screen to authorize key usage for PID documents\nlet docTypeKeyOptions: [EuPidModel.euPidDocType : KeyOptions(secureAreaName: \"Software\", accessControl: [.requireUserPresence])]\nlet issuedDocs = try await wallet.issueDocumentsByOfferUrl(offerUri: uriOffered, docTypes: docIssueOffered.docModels, docTypeKeyOptions: docTypeKeyOptions)\n</code></pre>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/SecureAreas/#secure-key-usage-on-presentation","title":"Secure key usage on presentation","text":"<p>During presentation with BLE proximity or OpenID4VP, the private key is used to create a device signature. The secure area is automatically used to sign the device response. An unlock key hook is provided via the unlockKey method which is internally called to get the optional <code>unlockData</code>. </p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/","title":"WalletUI","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/#eudi-ios-wallet-reference-implementation","title":"EUDI iOS Wallet reference implementation","text":"<p>@Metadata {     @CallToAction(                                 purpose: link,                                 url: \"https://github.com/eu-digital-identity-wallet/eudi-app-ios-wallet-ui\")     @PageKind(sampleCode) }</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/WalletUI/#overview","title":"Overview","text":"<p>The app consumes EUDIW Wallet kit and a list of available libraries to facilitate remote presentation, proximity, and issuing test/demo functionality following specification of The Architecture and Reference Framework (ARF)</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources/#index-of-eudi-lib-ios-wallet-kitsourceseudiwalletkiteudiwalletkitdoccresources","title":"Index of eudi-lib-ios-wallet-kit/Sources/EudiWalletKit/EudiWalletKit.docc/Resources","text":""},{"location":"eudi-app-ios-wallet-ui/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/#index-of-eudi-app-ios-wallet-ui","title":"Index of eudi-app-ios-wallet-ui","text":"<ul> <li>.github</li> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>Modules</li> <li>README</li> <li>SECURITY</li> <li>Wallet</li> <li>fastlane</li> <li>how-to-use-app</li> <li>wiki</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-app-ios-wallet-ui/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-app-ios-wallet-ui/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/","title":"How to use app","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#how-to-use-the-application","title":"How to use the application","text":"<p>Minimum device requirements</p> <ul> <li>Any device that supports iOS 16.0</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#prerequisites","title":"Prerequisites","text":"<p>To complete the flows described below you need to build and run the application with xcode. Alternatively, you can directly download the Android app onto your device.</p> <p>App center download method (Android app)</p> <p>In addition to building the app from the source, you can also use the Android app which you can download here</p> <p>Run the app from the source (xcode build)</p> <p>Clone this repo and make sure you have access to the dependencies below:</p> <p>iso18013-data-model</p> <p>iso18013-data-transfer</p> <p>iso18013-security</p> <p>wallet-storage.</p> <p>wallet-kit</p> <p>openid4vp-swift</p> <p>presentation-exchange-swift</p> <p>openid4vci-swift</p> <p>You will also need to download the Android Verifier app. More information can be found here</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#app-launch","title":"App launch","text":"<ol> <li>Launch the application</li> <li>You will be presented with a welcome screen where you will be asked to create a PIN for future logins.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#issuance-flow-scoped","title":"Issuance flow (Scoped)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Pick \"National ID\".</li> <li>From the web view that appears select the \"FormEU\" option and tap submit.</li> <li>Fill in the form. Any data will do.</li> <li>You will be shown a success screen. Tap next.</li> <li>Your \"National ID\" is displayed. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#issuance-flow-credential-offer","title":"Issuance flow (Credential Offer)","text":"<ol> <li>Open the \"Add document\" screen or if it's the first time you open the app, you will be redirected there after you enter or set up your PIN.</li> <li>Tap \"SCAN QR\".</li> <li>Scan The QR Code from the issuer's website EUDI Issuer</li> <li>Review the documents contained in the credential offer and tap \"Issue\".</li> <li>You will be shown a success screen. Tap \"Continue\".</li> <li>You are now on the \"Dashboard\" screen.</li> </ol> <p>While on the \"Dashboard\" screen you can tap \"Add doc\" and issue a new document, e.g. \"Driving License\".</p> <p>If you want to re-issue a document you must delete it first by tapping on the document in the \"Dashboard\" screen and tapping the delete icon in the \"Document details\" view.</p>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#presentation-online-authenticationsame-device-flow","title":"Presentation (Online authentication/Same device) flow.","text":"<ol> <li>Go to the browser application on your device and enter \"https://verifier.eudiw.dev\"</li> <li>Tap the first option (selectable) and pick the fields you want to share (e.g. \"Family Name\" and \"Given Name\")</li> <li>Tap \"Next\" and then \"Authorize\".</li> <li>When asked to open the wallet app tap \"Open\".</li> <li>You will be returned to the app to the \"Request\" screen. Tap \"Share\".</li> <li>Enter the PIN you added in the initial steps.</li> <li>On success tap \"Continue\".</li> <li>A browser will open showing that the Verifier has accepted your request.</li> <li>Return to the app. You are back to the \"Dashboard\" screen and the flow is complete.</li> </ol>"},{"location":"eudi-app-ios-wallet-ui/how-to-use-app/#proximity-flow","title":"Proximity flow","text":"<ol> <li>The user logs in successfully to the EUDI Wallet app and views the dashboard.</li> <li>The user clicks the 'SHOW QR' button to display the QR code.</li> <li>The Relying Party scans the presented QR code.</li> <li> <p>EUDI Wallet User can view the requested data set from the relying party.</p> <ol> <li>The distinction between mandatory and optional data elements is depicted.</li> <li>The requestor (i.e. relying party) of the data is depicted.</li> <li>EUDI Wallet User may select additional optional attributes to be shared.</li> <li>EUDI Wallet User selects the option to share the attributes.</li> <li>EUDI Wallet authenticates to share data (quick PIN).</li> <li>User authorization is accepted - a corresponding message is displayed to the  EUDI Wallet User.</li> </ol> </li> </ol>"},{"location":"eudi-app-ios-wallet-ui/Modules/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/#index-of-eudi-app-ios-wallet-uimodules","title":"Index of eudi-app-ios-wallet-ui/Modules","text":"<ul> <li>logic-resources</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/#index-of-eudi-app-ios-wallet-uimoduleslogic-resources","title":"Index of eudi-app-ios-wallet-ui/Modules/logic-resources","text":"<ul> <li>Sources</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/#index-of-eudi-app-ios-wallet-uimoduleslogic-resourcessources","title":"Index of eudi-app-ios-wallet-ui/Modules/logic-resources/Sources","text":"<ul> <li>Resources</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/#index-of-eudi-app-ios-wallet-uimoduleslogic-resourcessourcesresources","title":"Index of eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources","text":"<ul> <li>Images.xcassets</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets/#index-of-eudi-app-ios-wallet-uimoduleslogic-resourcessourcesresourcesimagesxcassets","title":"Index of eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets","text":"<ul> <li>EUDI-text.imageset</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets/EUDI-text.imageset/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets/EUDI-text.imageset/#index-of-eudi-app-ios-wallet-uimoduleslogic-resourcessourcesresourcesimagesxcassetseudi-textimageset","title":"Index of eudi-app-ios-wallet-ui/Modules/logic-resources/Sources/Resources/Images.xcassets/EUDI-text.imageset","text":""},{"location":"eudi-app-ios-wallet-ui/Wallet/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/#index-of-eudi-app-ios-wallet-uiwallet","title":"Index of eudi-app-ios-wallet-ui/Wallet","text":"<ul> <li>Assets.xcassets</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassets","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets","text":"<ul> <li>AppIcon.appiconset</li> <li>AppIconDev.appiconset</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassetsappiconappiconset","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIcon.appiconset","text":""},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset/#index-of-eudi-app-ios-wallet-uiwalletassetsxcassetsappicondevappiconset","title":"Index of eudi-app-ios-wallet-ui/Wallet/Assets.xcassets/AppIconDev.appiconset","text":""},{"location":"eudi-app-ios-wallet-ui/fastlane/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/fastlane/#index-of-eudi-app-ios-wallet-uifastlane","title":"Index of eudi-app-ios-wallet-ui/fastlane","text":"<ul> <li>README</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/#index-of-eudi-app-ios-wallet-uiwiki","title":"Index of eudi-app-ios-wallet-ui/wiki","text":"<ul> <li>configuration</li> <li>how_to_build</li> <li>verifier_proximity</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/","title":"Configuration","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#how-to-configure-the-application","title":"How to configure the application","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#table-of-contents","title":"Table of contents","text":"<ul> <li>General configuration</li> <li>DeepLink Schemas configuration</li> <li>Scoped Issuance Document Configuration</li> <li>How to work with self-signed certificates</li> <li>Theme configuration</li> <li>Pin Storage configuration</li> <li>Analytics configuration</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#general-configuration","title":"General configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Issuing API</li> </ol> <p>Via the WalletKitConfig protocol inside the logic-core module.</p> <p><pre><code>public protocol WalletKitConfig {\n  /**\n   * VCI Configuration\n   */\n  var vciConfig: VciConfig { get }\n}\n</code></pre> Based on the Build Variant of the Wallet (e.g., Dev)</p> <pre><code>struct WalletKitConfigImpl: WalletKitConfig {\n\n  let configLogic: ConfigLogic\n\n  init(configLogic: ConfigLogic) {\n    self.configLogic = configLogic\n  }\n\n  var vciConfig: VciConfig {\n    return switch configLogic.appBuildVariant {\n    case .DEMO:\n        .init(\n          issuerUrl: \"your_demo_url\",\n          clientId: \"your_demo_clientid\",\n          redirectUri: URL(string: \"your_demo_redirect\")!\n        )\n    case .DEV:\n        .init(\n          issuerUrl: \"your_dev_url\",\n          clientId: \"your_dev_clientid\",\n          redirectUri: URL(string: \"your_dev_redirect\")!\n        )\n    }\n  }\n}\n</code></pre> <ol> <li>Trusted certificates</li> </ol> <p>Via the WalletKitConfig protocol inside the logic-core module.</p> <pre><code>public protocol WalletKitConfig {\n  /**\n   * Reader Configuration\n   */\n  var readerConfig: ReaderConfig { get }\n}\n</code></pre> <pre><code>public struct ReaderConfig {\n  public let trustedCerts: [Data]\n}\n</code></pre> <p>The WalletKitConfigImpl implementation of the WalletKitConfig protocol can be located inside the logic-core module.</p> <p>The application's IACA certificates are located here</p> <pre><code>  var readerConfigConfig: ReaderConfig {\n    guard let cert = Data(name: \"eudi_pid_issuer_ut\", ext: \"der\") else {\n      return .init(trustedCerts: [])\n    }\n    return .init(trustedCerts: [cert])\n  }\n</code></pre> <ol> <li>Preregistered Client Scheme</li> </ol> <p>If you plan to use the Preregistered for OpenId4VP configuration, please add the following to the WalletKitConfigImpl initializer.</p> <pre><code>wallet.verifierApiUri = \"your_verifier_url\"\nwallet.verifierLegalName = \"your_verifier_legal_name\"\n</code></pre> <ol> <li>RQES</li> </ol> <p>Via the RQESConfig struct, which implements the EudiRQESUiConfig protocol from the RQESUi SDK, inside the logic-business module.</p> <pre><code>final class RQESConfig: EudiRQESUiConfig {\n\n  let buildVariant: AppBuildVariant\n  let buildType: AppBuildType\n\n  init(buildVariant: AppBuildVariant, buildType: AppBuildType) {\n    self.buildVariant = buildVariant\n    self.buildType = buildType\n  }\n\n  var rssps: [QTSPData]\n\n  // Optional. Default is false.\n  var printLogs: Bool\n\n  // Optional. Default English translations will be used if not set.\n  var translations: [String : [LocalizableKey : String]]\n\n  // Optional. Default theme will be used if not set.\n  var theme: ThemeProtocol\n}\n</code></pre> <p>Based on the Build Variant and Type of the Wallet (e.g., Dev Debug)</p> <pre><code>final class RQESConfig: EudiRQESUiConfig {\n\n  let buildVariant: AppBuildVariant\n  let buildType: AppBuildType\n\n  init(buildVariant: AppBuildVariant, buildType: AppBuildType) {\n    self.buildVariant = buildVariant\n    self.buildType = buildType\n  }\n\n  var rssps: [QTSPData] {\n    return switch buildVariant {\n    case .DEV:\n      [\n        .init(\n          name: \"your_dev_name\",\n          uri: URL(string: \"your_dev_uri\")!,\n          scaURL: \"your_dev_sca\",\n          clientId: \"your_dev_clientid\",\n          clientSecret: \"your_dev_secret\",\n          authFlowRedirectionURI: \"your_dev_redirect\",\n          hashAlgorithm: .SHA256\n        )\n      ]\n    case .DEMO:\n      [\n        .init(\n          name: \"your_demo_name\",\n          uri: URL(string: \"your_demo_uri\")!,\n          scaURL: \"your_demo_sca\",\n          clientId: \"your_demo_clientid\",\n          clientSecret: \"your_demo_secret\",\n          authFlowRedirectionURI: \"your_demo_redirect\",\n          hashAlgorithm: .SHA256\n        )\n      ]\n    }\n  }\n\n  var printLogs: Bool {\n    buildType == .DEBUG\n  }\n}\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#deeplink-schemas-configuration","title":"DeepLink Schemas configuration","text":"<p>According to the specifications, issuance, presentation, and RQES require deep-linking for the same device flows.</p> <p>If you want to change or add your own, you can do it by adjusting the Wallet.plist file.</p> <pre><code>&lt;array&gt;\n    &lt;dict&gt;\n        &lt;key&gt;CFBundleTypeRole&lt;/key&gt;\n        &lt;string&gt;Editor&lt;/string&gt;\n        &lt;key&gt;CFBundleURLName&lt;/key&gt;\n        &lt;string&gt;$(PRODUCT_BUNDLE_IDENTIFIER)&lt;/string&gt;\n        &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n        &lt;array&gt;\n            &lt;string&gt;eudi-openid4vp&lt;/string&gt;\n            &lt;string&gt;mdoc-openid4vp&lt;/string&gt;\n            &lt;string&gt;openid4vp&lt;/string&gt;\n            &lt;string&gt;openid-credential-offer&lt;/string&gt;\n            &lt;string&gt;rqes&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n&lt;/array&gt;\n</code></pre> <p>Let's assume you want to add a new one for the credential offer (e.g., custom-my-offer://), the Wallet.plist should look like this:</p> <pre><code>&lt;array&gt;\n    &lt;dict&gt;\n        &lt;key&gt;CFBundleTypeRole&lt;/key&gt;\n        &lt;string&gt;Editor&lt;/string&gt;\n        &lt;key&gt;CFBundleURLName&lt;/key&gt;\n        &lt;string&gt;$(PRODUCT_BUNDLE_IDENTIFIER)&lt;/string&gt;\n        &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;\n        &lt;array&gt;\n            &lt;string&gt;eudi-openid4vp&lt;/string&gt;\n            &lt;string&gt;mdoc-openid4vp&lt;/string&gt;\n            &lt;string&gt;openid4vp&lt;/string&gt;\n            &lt;string&gt;openid-credential-offer&lt;/string&gt;\n            &lt;string&gt;rqes&lt;/string&gt;\n            &lt;string&gt;custom-my-offer&lt;/string&gt;\n        &lt;/array&gt;\n    &lt;/dict&gt;\n&lt;/array&gt;\n</code></pre> <p>After the Wallet.plist adjustment, you must also adjust the DeepLinkController inside the logic-ui module.</p> <p>Current Implementation:</p> <pre><code>public extension DeepLink {\n  enum Action: String, Equatable {\n\n    case openid4vp\n    case credential_offer\n    case rqes\n    case external\n\n    static func parseType(\n      with scheme: String,\n      and urlSchemaController: UrlSchemaController\n    ) -&gt; Action? {\n      switch scheme {\n      case _ where openid4vp.getSchemas(with: urlSchemaController).contains(scheme):\n        return .openid4vp\n      case _ where credential_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      case _ where rqes.getSchemas(with: urlSchemaController).contains(scheme):\n        return .rqes\n      default:\n        return .external\n      }\n    }\n  }\n}\n</code></pre> <p>Adjusted with the new schema:</p> <pre><code>public extension DeepLink {\n  enum Action: String, Equatable {\n\n    case openid4vp\n    case credential_offer\n    case rqes\n    case custom_my_offer\n    case external\n\n    static func parseType(\n      with scheme: String,\n      and urlSchemaController: UrlSchemaController\n    ) -&gt; Action? {\n      switch scheme {\n      case _ where openid4vp.getSchemas(with: urlSchemaController).contains(scheme):\n        return .openid4vp\n      case _ where credential_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      case _ where custom_my_offer.getSchemas(with: urlSchemaController).contains(scheme):\n        return .credential_offer\n      case _ where rqes.getSchemas(with: urlSchemaController).contains(scheme):\n        return .rqes\n      default:\n        return .external\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#scoped-issuance-document-configuration","title":"Scoped Issuance Document Configuration","text":"<p>The credential configuration is derived directly from the issuer's metadata. The issuer URL is configured via the VciConfig property inside the logic-core module in WalletKitConfigImpl. If you want to add or adjust the displayed scoped documents, you must modify the issuer's metadata, and the wallet will automatically resolve your changes.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#how-to-work-with-self-signed-certificates","title":"How to work with self-signed certificates","text":"<p>This section describes configuring the application to interact with services utilizing self-signed certificates.</p> <p>Add these lines of code to the top of the file WalletKitController, inside the logic-core module, just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> <p>Once the above is in place, add the following:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> <p>in the initializer. This change will allow the app to interact with web services that rely on self-signed certificates.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#theme-configuration","title":"Theme configuration","text":"<p>The application allows the configuration of:</p> <ol> <li>Colors</li> <li>Images</li> <li>Shape</li> <li>Fonts</li> <li>Dimension</li> </ol> <p>Via the ThemeConfiguration struct.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#pin-storage-configuration","title":"Pin Storage configuration","text":"<p>The application allows the configuration of the PIN storage. You can configure the following:</p> <ol> <li>Where the pin will be stored</li> <li>From where the pin will be retrieved</li> <li>Pin matching and validity</li> </ol> <p>Via the LogicAuthAssembly inside the logic-authentication module.</p> <pre><code>public final class LogicAuthAssembly: Assembly {\n\n  public init() {}\n\n  public func assemble(container: Container) {\n  }\n}\n</code></pre> <p>You can provide your storage implementation by implementing the PinStorageProvider protocol and then providing the implementation inside the Assembly DI Graph LogicAuthAssembly</p> <p>Implementation Example:</p> <pre><code>final class KeychainPinStorageProvider: PinStorageProvider {\n\n  private let keyChainController: KeyChainController\n\n  init(keyChainController: KeyChainController) {\n    self.keyChainController = keyChainController\n  }\n\n  func retrievePin() -&gt; String? {\n    keyChainController.getValue(key: KeychainIdentifier.devicePin)\n  }\n\n  func setPin(with pin: String) {\n    keyChainController.storeValue(key: KeychainIdentifier.devicePin, value: pin)\n  }\n\n  func isPinValid(with pin: String) -&gt; Bool {\n    keyChainController.getValue(key: KeychainIdentifier.devicePin) == pin\n  }\n}\n</code></pre> <p>Config Example:</p> <pre><code>container.register(PinStorageProvider.self) { r in\n  KeychainPinStorageProvider(keyChainController: r.force(KeyChainController.self))\n}\n.inObjectScope(ObjectScope.graph)\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/configuration/#analytics-configuration","title":"Analytics configuration","text":"<p>The application allows the configuration of multiple analytics providers. You can configure the following:</p> <ol> <li>Initializing the provider (e.g., Firebase, Appcenter, etc)</li> <li>Screen logging</li> <li>Event logging</li> </ol> <p>Via the AnalyticsConfig and LogicAnalyticsAssembly inside the logic-analytics module.</p> <pre><code>protocol AnalyticsConfig {\n  /**\n   * Supported Analytics Provider, e.g. Firebase\n   */\n  var analyticsProviders: [String: AnalyticsProvider] { get }\n}\n</code></pre> <p>You can provide your implementation by implementing the AnalyticsProvider protocol and then adding it to your AnalyticsConfigImpl analyticsProviders variable. You will also need the provider's token/key, thus requiring a [String: AnalyticsProvider] configuration. The project utilizes Dependency Injection (DI), thus requiring adjustment of the LogicAnalyticsAssembly graph to provide the configuration.</p> <p>Implementation Example:</p> <pre><code>struct AppCenterProvider: AnalyticsProvider {\n\n  func initialize(key: String) {\n    AppCenter.start(\n      withAppSecret: key,\n      services: [\n        Analytics.self\n      ]\n    )\n  }\n\n  func logScreen(screen: String, arguments: [String: String]) {\n    if Analytics.enabled {\n      logEvent(event: screen, arguments: arguments)\n    }\n  }\n\n  func logEvent(event: String, arguments: [String: String]) {\n    Analytics.trackEvent(event, withProperties: arguments)\n  }\n}\n</code></pre> <p>Config Example:</p> <pre><code>struct AnalyticsConfigImpl: AnalyticsConfig {\n  var analyticsProviders: [String: AnalyticsProvider] {\n    return [\"YOUR_OWN_KEY\": AppCenterProvider()]\n  }\n}\n</code></pre> <p>Config Construction via DI Graph Example:</p> <pre><code>container.register(AnalyticsConfig.self) { _ in\n AnalyticsConfigImpl()\n}\n.inObjectScope(ObjectScope.graph)\n</code></pre>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/","title":"How to build","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#building-the-reference-apps-to-interact-with-issuing-and-verifying-services","title":"Building the Reference apps to interact with issuing and verifying services.","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#table-of-contents","title":"Table of contents","text":"<ul> <li>Overview</li> <li>Setup Apps</li> <li>How to work with self signed certificates on iOS</li> </ul>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#overview","title":"Overview","text":"<p>This guide aims to assist developers to build the iOS application.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#setup-apps","title":"Setup Apps","text":""},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#eudi-ios-wallet-reference-application","title":"EUDI iOS Wallet reference application","text":"<p>You need xcode and its associated tools installed on your machine. We recommend the latest non-beta version. </p> <p>Clone the iOS repository</p> <p>Open the project file in Xcode. The application has two schemes: \"EUDI Wallet Dev\" and \"EUDI Wallet Demo\".</p> <ul> <li>EUDI Wallet Dev: This target communicates with the services deployed in an environment based on the latest main branch.</li> <li>EUDI Wallet Demo: This target communicates with the services deployed in the latest stable environment.</li> </ul> <p>Each scheme has two configurations: Debug and Release.</p> <ul> <li>Debug: Used when running the app from within Xcode.</li> <li>Release: Used when running the app after it has been distributed via a distribution platform, currently TestFlight.</li> </ul> <p>This setup results in a total of four configurations. All four configurations are defined in the xcconfig files located under the Config folder in the project.</p> <p>To run the app on the simulator, select your app schema and press Run.</p> <p>To run the app on a device, follow similar steps to running it on the simulator. Additionally, you need to supply your own provisioning profile and signing certificate in the Signing &amp; Capabilities tab of your app target.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#running-with-remote-services","title":"Running with remote services","text":"<p>The app is configured to the type (debug/release) and variant (dev/demo) in the four xcconfig files. These are the contents of the xcconfig file and you don't need to change anything if you don't want to:</p> <pre><code>BUILD_TYPE = RELEASE\nBUILD_VARIANT = DEMO\n</code></pre> <p>The values defined in the <code>.xcconfig</code> files are utilized within instances of <code>WalletKitConfig</code> and <code>RQESConfig</code> to assign the appropriate configurations. These configurations are selected based on the specified build type and build variant defined in the <code>.xcconfig</code> files.</p> <p>Instances of <code>ConfigLogic</code> are responsible for interpreting the raw string values extracted from the <code>.xcconfig</code> files and converting them into appropriate data types.</p> <pre><code>/**\n * Build type.\n */\nvar appBuildType: AppBuildType { get }\n\n/**\n * Build variant.\n */\nvar appBuildVariant: AppBuildVariant { get }\n</code></pre> <p>Using this parsed information, instances such as <code>WalletKitConfig</code> and <code>RQESConfig</code> can determine and assign their specific configurations based on the defined build type and variant.</p> <p>For instance, here's how <code>WalletKitConfig</code> resolves its configuration for OpenID4VCI remote services based on the build variant:</p> <pre><code>var vciConfig: VciConfig {\n    switch configLogic.appBuildVariant {\n    case .DEMO:\n        return .init(\n            issuerUrl: \"https://issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    case .DEV:\n        return .init(\n            issuerUrl: \"https://dev.issuer.eudiw.dev\",\n            clientId: \"wallet-dev\",\n            redirectUri: URL(string: \"eu.europa.ec.euidi://authorization\")!\n        )\n    }\n}\n</code></pre> <p>In this example, the <code>vciConfig</code> property dynamically assigns configurations such as <code>issuerUrl</code>, <code>clientId</code>, and <code>redirectUri</code> based on the current appBuildVariant. This ensures that the appropriate settings are applied for each variant (e.g., .<code>DEMO</code> or <code>.DEV</code>).</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#running-with-local-services","title":"Running with local services","text":"<p>The first step here is to have all three services running locally on your machine,  you can follow these Repositories for further instructions: * Issuer * Web Verifier UI * Web Verifier Endpoint</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/how_to_build/#how-to-work-with-self-signed-certificates-on-ios","title":"How to work with self signed certificates on iOS","text":"<p>In addition to the change below, in order for the app to interact with locally running service a small code change is required to do this successfully.</p> <p>Before running the app in the simulator add these lines of code to the top of the file WalletKitController just below the import statements. </p> <pre><code>class SelfSignedDelegate: NSObject, URLSessionDelegate {\n  func urlSession(\n    _ session: URLSession,\n    didReceive challenge: URLAuthenticationChallenge,\n    completionHandler: @escaping (URLSession.AuthChallengeDisposition, URLCredential?) -&gt; Void\n  ) {\n    // Check if the challenge is for a self-signed certificate\n    if challenge.protectionSpace.authenticationMethod == NSURLAuthenticationMethodServerTrust,\n       let trust = challenge.protectionSpace.serverTrust {\n      // Create a URLCredential with the self-signed certificate\n      let credential = URLCredential(trust: trust)\n      // Call the completion handler with the credential to accept the self-signed certificate\n      completionHandler(.useCredential, credential)\n    } else {\n      // For other authentication methods, call the completion handler with a nil credential to reject the request\n      completionHandler(.cancelAuthenticationChallenge, nil)\n    }\n  }\n}\n\nlet walletSession: URLSession = {\n  let delegate = SelfSignedDelegate()\n  let configuration = URLSessionConfiguration.default\n  return URLSession(\n    configuration: configuration,\n    delegate: delegate,\n    delegateQueue: nil\n  )\n}()\n</code></pre> <p>Once the above is in place add:</p> <pre><code>wallet.urlSession = walletSession\n</code></pre> <p>in the initializer. This change will allow the app to interact with web services that rely on self signed certificates.</p> <p>For all configuration options please refer to this document</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/","title":"Verifier proximity","text":"<p>Home</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#mdoc-verifier-testing","title":"mDoc Verifier (Testing)","text":"<p>The mDoc Verifier (Testing) is an Android application based on the <code>appverifier</code> from the Google Identity Credential library, implementing ISO/IEC 18013-5:2021.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#purpose","title":"Purpose","text":"<p>The mDoc Verifier (Testing) app is provided to help developers test and validate their wallet implementations.</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#modifications","title":"Modifications","text":"<p>Starting from the original code of the <code>appverifier</code> here, the following modifications have been made:</p> <ul> <li>Support for requesting EU Documents:</li> <li>Personal Identification Data (PID) document, according to the ARF PID RuleBook.</li> <li>Age Verification (Pseudonym) document.</li> <li>IACA Certificates: Updated to support EUDI Wallet IACAs as trusted certificates.</li> <li>Reader Authentication Certificate.</li> </ul> <p>The app is available for download through GitHub Releases, here  (the code is not currently publicly available).</p>"},{"location":"eudi-app-ios-wallet-ui/wiki/verifier_proximity/#important-note","title":"Important Note","text":"<p>The mDoc Verifier (Testing) app is a testing tool for developers to validate their wallet implementations.  It is not intended for production use.  The app may contain bugs or other issues that affect its functionality on different mobile devices or Android versions. These issues will be addressed in the upcoming open-source library, which will be available for developers to build their own verifier applications.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/#index-of-eudi-srv-web-issuing-eudiw-py","title":"Index of eudi-srv-web-issuing-eudiw-py","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> <li>api_docs</li> <li>app</li> <li>changelog</li> <li>install</li> <li>licenses</li> <li>support</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public   repositories</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following:","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you   agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using   our PGP key   to prevent this critical information from falling into the wrong hands.</li> <li>Provide us sufficient information to reproduce the problem so that we can resolve it as quickly as   possible. Usually, the IP address or the URL of the affected system and a description of the   vulnerability will be sufficient, but complex vulnerabilities may require further explanation in   terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European   Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the   vulnerability.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example by   downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying   other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:<ul> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam etc.).</li> </ul> </li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/SECURITY/#what-we-promise","title":"What we promise:","text":"<ul> <li>We will respond to your report within three business days with our evaluation of the report.</li> <li>We will handle your report with strict confidentiality.</li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in   accordance with the applicable data protection legislation and will not pass on your personal   details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the   discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/","title":"Changelog","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changelog","title":"Changelog","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#030","title":"[0.3.0]","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added","title":"Added:","text":"<ul> <li>A new mandatory argument, \"device_publickey\", has been added. This new attribute is the wallet instance public key.</li> <li>Added a tutorial on how to use Pytest, which can be found in the tests folder, \"Pytest_Tutorial.md\".</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed","title":"Changed","text":"<ul> <li>Modifications to the /get_pid and /pid routes: when the \"country\" parameter is empty, the user is redirected to the      /pid route to choose the corresponding country. In the /pid route, when a card is selected, the user is redirected      back to /getpid, now with the desired country information.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed","title":"Fixed","text":"<ul> <li>Correction in the encoding process where the data was encoded twice in base64. Rectified to just base64 encoding.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#040","title":"[0.4.0]","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_1","title":"Added:","text":"<ul> <li> <p>Added tutorial on using the Robot framework, found in the tests folder under the name, \"robot_tutorial.md\".</p> </li> <li> <p>Added functionality for issuing mDL requests, both in CBOR and SD-JWT format. To use the \"/mdl\" and \"/getmdl\"      routes, the operation and arguments required are the same as for the PID.</p> </li> <li> <p>Added metadata to the PID (\"issuance_date\", \"expiry_date\", \"issuing_authority\" and \"issuing_country\").</p> </li> <li> <p>Added the \"un_distinguishing_sign\" attribute to the mDL.</p> </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#050","title":"[0.5.0]","text":"<p>20 Jun 2024</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_2","title":"Added:","text":"<ul> <li>Support notification endpoint - OID4VCI draf13</li> <li>Support deferred flow - OID4VCI draft 13</li> <li>Support dynamic-credential-request - OID4VCI draft 13</li> <li>Support Pre-Authorized Code Flow - OID4VCI draft 13</li> <li>Support credential offer - OID4VCI draft 13</li> <li>Configure a new generic IdP based on OIDC</li> <li>Support batch flow - OID4VCI draft 13</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_1","title":"Changed","text":"<ul> <li>Update current flows to OID4VCI draft 13</li> <li>Remove /oidc route</li> <li>A more dynamically built form and country selection</li> <li>Changed doctype and namespace from \"eudiw\" to \"eudi\" in pid and age verification credentials. </li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_1","title":"Fixed","text":"<ul> <li>UI scalling for mobile devices</li> <li>Pull #11 Fix date validation for issue_date and expiry_date for doc_type org.iso.18013.5.1.mDL</li> <li>Pull #7 Fix Directory /tmp/log does not exist</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#060","title":"[0.6.0]","text":"<p>04 Oct 2024</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_3","title":"Added:","text":"<ul> <li>Docker</li> <li>config with environment variables</li> <li>Issue Photo ID attestation</li> <li>Issue attestations needed for the LSP POTENTIAL</li> <li>Endpoint to create a credential offer, from an external request</li> <li>Credential offer guides to the front page</li> <li>Issuing PID/EAA with optional attributes</li> <li>Added information to the metadata on how the attribute will be sourced</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_2","title":"Changed","text":"<ul> <li>UI changes in the credential offer and authorisation pages</li> <li>change the way optional attributes are managed</li> <li>dynamic generation of Issuer managed attributes (issuance date, expiration date, issuing authority, issuing country, ...)</li> <li>Improve responsiveness to the issuer profile and service (including UI) to improve usability and accessibility</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Fixed form data being prematurely removed</li> <li>Conflicting dependencies</li> <li>Dynamic Issuing always requests full PID attestation instead of the required attributes.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#070","title":"[0.7.0]","text":"<p>28 Jan 2025</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_4","title":"Added:","text":"<ul> <li>Authorization server metadata</li> <li>Attestation Revocation</li> <li>Issuer logo to metadata</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_3","title":"Changed","text":"<ul> <li>Align SD-JWT-VC format of PID with latest drafts</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#071","title":"[0.7.1]","text":"<p>05 Mar 2025</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_5","title":"Added:","text":"<ul> <li>EHIC Credential compliant with LSP DC4EU technical specification.</li> <li>PDA1 Credential compliant with LSP DC4EU technical specification.</li> <li>sd-jwt vc: EHIC, PDA1, HIID, IBAN, MSISDN, POR, Tax, Pseudonym age over 18.</li> <li>Created a new issuer_conditions schema in credential metadate to further specify complex credentials like nested claims.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_4","title":"Changed","text":"<ul> <li>Backend logic management creating the form and credentials based on metadata issuer_condtitions</li> <li>Front-end form changes to dynamically create a form based on metadata issuer_conditions with nested fields, cardinality and nested mandatory.</li> <li>Update PID to version 1.5</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Status code on oauth2 PAR is 200 should be 201</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#072","title":"[0.7.2]","text":"<p>15 Apr 2025</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_5","title":"Changed","text":"<ul> <li>oid4vp presentation_id to transaction_id</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#fixed_4","title":"Fixed","text":"<ul> <li>EHIC and PDA1 not appearing in credential offer selection</li> <li>Some PID sd-jwt vc attribure identifiers</li> <li>PDA1 and EHIC formatting</li> <li>Remove padding from mdoc base64 url encode</li> <li>Fix jwk coordinate padding</li> <li>remove location_status from PID mdoc</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#080","title":"[0.8.0]","text":"<p>05 May 2025</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#added_6","title":"Added:","text":"<ul> <li>Nonce Endpoint</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/changelog/#changed_6","title":"Changed","text":"<ul> <li>Credential endpoint oid4vci d15</li> <li>Deferred endpoint oid4vci d15</li> <li>Metadata oid4vci d15</li> <li>Set scopes to credential id</li> <li>Further separation of sd-jwt vc and mdoc formatters based on metadata</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/","title":"Install","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#installation","title":"Installation","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/install/#1-python","title":"1. Python","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Python version 3.9.2</li> </ul> <p>and should only be used with Python 3.9 or 3.10.</p> <p>If you don't have it installed, please download it from https://www.python.org/downloads/ and follow the Python Developer's Guide.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#2-flask","title":"2. Flask","text":"<p>The EUDIW Issuer was tested with</p> <ul> <li>Flask v. 2.3</li> </ul> <p>and should only be used with Flask v. 2.3 or higher.</p> <p>To install Flask, please follow the Installation Guide.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#3-how-to-run-the-eudiw-issuer","title":"3. How to run the EUDIW Issuer?","text":"<p>To run the EUDIW Issuer, please follow these simple steps (some of which may have already been completed when installing Flask) for Linux/macOS or Windows.</p> <ol> <li> <p>Clone the EUDIW Issuer repository:</p> <pre><code>git clone git@github.com:eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py.git\n</code></pre> </li> <li> <p>Create a <code>.venv</code> folder within the cloned repository:</p> <pre><code>cd eudi-srv-web-issuing-eudiw-py\npython3 -m venv .venv\n</code></pre> </li> <li> <p>Activate the environment:</p> </li> </ol> <p>Linux/macOS</p> <pre><code>```shell\n. .venv/bin/activate\n```\n\nWindows\n\n```shell\n. .venv\\Scripts\\Activate\n```\n</code></pre> <ol> <li> <p>Install or upgrade pip</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> </li> <li> <p>Install Flask, gunicorn and other dependencies in virtual environment</p> <pre><code>pip install -r app/requirements.txt\n</code></pre> </li> <li> <p>Setup secrets</p> </li> <li> <p>Copy <code>app/app_config/__config_secrets.py</code> to <code>app/app_config/config_secrets.py</code> and modify secrets.</p> </li> <li> <p>Service Configuration</p> </li> <li> <p>Configure the service according to documentation </p> </li> <li> <p>Run the EUDIW Issuer </p> <p>On the root directory of the clone repository, insert one of the following command lines to run the EUDIW Issuer.</p> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000)</li> </ul> <pre><code>flask --app app run\n</code></pre> <ul> <li>Linux/macOS/Windows (on http://127.0.0.1:5000 or http://localhost:5000 with flag debug)</li> </ul> <pre><code>flask --app app run --debug\n</code></pre> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#4-running-your-local-eudiw-issuer-over-https","title":"4. Running your local EUDIW Issuer over HTTPS","text":"<ol> <li>Generate a self signed certificate and a private key</li> <li> <p>Linux/macOS</p> <p>Example:      <code>openssl req -x509 -out localhost.crt -keyout localhost.key -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -extensions EXT -config &lt;( \\    printf \"[dn]\\nCN=localhost\\n[req]\\ndistinguished_name = dn\\n[EXT]\\nsubjectAltName=IP.1:127.0.0.1\\nkeyUsage=digitalSignature\\nextendedKeyUsage=serverAuth\")</code></p> <ul> <li> <p>Windows</p> <p>Create the file localhost.conf using the following as an example: <pre><code>[req]\ndefault_bits  = 2048\ndistinguished_name = req_distinguished_name\nreq_extensions = req_ext\nx509_extensions = v3_req\nprompt = no\n[req_distinguished_name]\ncountryName = XX\nstateOrProvinceName = N/A\nlocalityName = N/A\norganizationName = Self-signed certificate\ncommonName = 120.0.0.1: Self-signed certificate\n[req_ext]\nsubjectAltName = @alt_names\n[v3_req]\nsubjectAltName = @alt_names\n[alt_names]\nIP.1 = 127.0.0.1\n</code></pre></p> <p>Use the configuration file above to generate the certificate and key <pre><code>openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout key.pem -out cert.pem -config localhost.conf \n</code></pre></p> </li> </ul> </li> <li> <p>Add certificate to environment variables</p> </li> <li> <p>Linux/macOS        <pre><code> export REQUESTS_CA_BUNDLE=\"/path/to/certificate\"\n</code></pre></p> </li> <li> <p>Windows         <pre><code>set REQUESTS_CA_BUNDLE=\"\\path\\to\\certificate\"\n</code></pre></p> </li> <li> <p>Run the EUDIW Issuer with certificate and key     <pre><code>flask --app app run --cert=cert.pem --key=key.pem\n</code></pre></p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#5-make-your-local-eudiw-issuer-available-on-the-internet-optional","title":"5. Make your local EUDIW Issuer available on the Internet (optional)","text":"<p>If you want to make your local EUDIW Issuer available on the Internet, we recommend to use NGINX reverse proxy and certbot (to generate an HTTPS certificate).</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#51-install-and-configure-nginx","title":"5.1 Install and configure NGINX","text":"<ol> <li> <p>Follow the installation guide in https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/</p> </li> <li> <p>Configure your local EUDIW Issuer. For example, use the following Nginx configuration file (for a Linux installation):</p> </li> </ol> <pre><code>server {\n    server_name FQDN; # Change to the FQDN you want to use\n\n    listen 80;\n    access_log /var/log/nginx/issuer.eudiw.access.log;\n    error_log /var/log/nginx/issuer.eudiw.error.log;\n    root /var/www/html;\n\n# Recommended\n    proxy_busy_buffers_size   512k;\n    proxy_buffers   4 512k;\n    proxy_buffer_size   256k;\n\n# Provider backend\n    location / {\n        # The proxy_pass directive assumes that your local EUDIW Issuer is running at http://127.0.0.1:5000/. \n        # If not, please adjust it accordingly.\n        proxy_pass                              http://127.0.0.1:5000/;\n        proxy_set_header Host                   $http_host;\n        proxy_set_header X-Real-IP              $remote_addr;\n        proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto      $scheme;\n    }\n}\n</code></pre> <ol> <li>Restart the Nginx server</li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#52-install-and-run-certbot-to-gef-a-free-https-certificate","title":"5.2 Install and run certbot to gef a free HTTPS certificate","text":"<ol> <li> <p>Follow the installation guide in https://certbot.eff.org</p> </li> <li> <p>Run <code>certbot</code> to get a free HTTPS certificate. The <code>certbot</code> will also configure the EUDIW Issuer Nginx configuration file with the HTTPS certificate.</p> </li> <li> <p>Restart the Nginx server and goto <code>https:\\\\FQDN\\</code> (FQDN configured in the Nginx configuration file)</p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/install/#6-docker","title":"6. Docker","text":"<p>To run the EUDIW issuer in Docker please follow these steps:</p> <ol> <li> <p>Install Docker following the official instructions for your operating system : https://docs.docker.com/engine/install/</p> </li> <li> <p>Download the Dockerfile at https://github.com/eu-digital-identity-wallet/eudi-srv-web-issuing-eudiw-py/blob/main/Dockerfile </p> </li> <li> <p>Build the Docker: <code>sudo docker build -t eudiw-issuer .</code></p> </li> <li> <p>Create 2 directories to be mounted:</p> </li> <li> <p>First directory named <code>config_secrets</code></p> <p>This directory will have the cert.pem and key.pem generated in Section 4</p> <p>As well as the config_secrets.py based on this example</p> </li> <li> <p>Second directory named <code>pid-issuer</code>, inside will be a directory <code>cert</code> and <code>privKey</code></p> <p>The <code>cert</code> directory has the certificates of the trusted CAs in PEM format as well as the Document/Credential signer (DS) certificates in DER format</p> <p>The <code>privKey</code> directory has the Document/Credential signer (DS) private keys</p> <p>Example:</p> <pre><code>docker-issuer\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 config_secrets\n\u2502   \u251c\u2500\u2500 config_secrets.py\n\u2502   \u251c\u2500\u2500 cert.pem\n\u2502   \u2514\u2500\u2500 key.pem\n\u2514\u2500\u2500 pid-issuer\n    \u251c\u2500\u2500 cert\n    \u2502   \u251c\u2500\u2500 PID-DS-0001_UT_cert.der\n    \u2502   \u2514\u2500\u2500 PIDIssuerCAUT01.pem\n    \u2514\u2500\u2500 privKey\n        \u2514\u2500\u2500 PID-DS-0001_UT.pem\n</code></pre> </li> <li> <p>Run Docker</p> <p>If running a basic configuration without EIDAS node or Dynamic presentation, their respective variables can be removed from the run command below.</p> <pre><code>sudo docker run -d \\\n--name eudiw-issuer \\\n-e SERVICE_URL=\"https://your.service.url/\" \\\n-e EIDAS_NODE_URL=\"https://your.eidas.node.url/\" \\\n-e DYNAMIC_PRESENTATION_URL=\"https://your.dynamic.presentation.url/\" \\\n-v ./config_secrets:/root/secrets \\\n-v ./pid-issuer:/etc/eudiw/pid-issuer \\\n-p 5000:5000 \\\neudiw-issuer\n</code></pre> </li> <li> <p>Docker logs</p> <p>Issuer logs in real time: <code>sudo docker logs -f eudiw-issuer</code> All logs: <code>sudo docker logs eudiw-issuer</code></p> </li> <li> <p>Stopping Docker Issuer    <code>sudo docker stop eudiw-issuer</code></p> </li> </ol>"},{"location":"eudi-srv-web-issuing-eudiw-py/licenses/","title":"Licenses","text":"<p>Home | Name                      | Version   | License                                             | Project URL                                                    | License URL    | |---------------------------|-----------|-----------------------------------------------------|----------------------------------------------------------------|---------------------------------------------------------------| | Flask                     | 2.3.3     | BSD 3-Clause License                                       | https://github.com/pallets/flask/                              | https://github.com/pallets/flask/blob/main/LICENSE.txt         | | Flask-API                 | 3.1       | BSD 2-Clause License                                       | https://github.com/flask-api/flask-api/                        | https://github.com/flask-api/flask-api/blob/develop/LICENSE.md | | Flask-Cors                | 4.0.0     | MIT License                                         | https://github.com/corydolphin/flask-cors/                     | https://github.com/corydolphin/flask-cors/blob/main/LICENSE    | | Flask-Session             | 0.6.0     | BSD 3-Clause License                                       | https://github.com/pallets-eco/flask-session/                  | https://github.com/pallets-eco/flask-session/blob/development/LICENSE.rst| | requests                  | 2.31.0    | Apache Software License 2.0                         | https://github.com/psf/requests/                               | https://github.com/psf/requests/blob/main/LICENSE| | cbor2                     | 5.4.6     | MIT License                                         | https://github.com/agronholm/cbor2/                            | https://github.com/agronholm/cbor2/blob/master/LICENSE.txt| | pytz                      | 2023.4    | MIT License                                         | https://github.com/stub42/pytz/                                | https://github.com/stub42/pytz/blob/master/LICENSE.txt| | pyignite                  | 0.6.1     | Apache Software License 2.0                         | https://github.com/apache/ignite-python-thin-client/            | https://github.com/apache/ignite-python-thin-client/blob/master/LICENSE| | tinyec                    | 0.4.0     | GPLv3                                               | https://github.com/alexmgr/tinyec/                              | https://github.com/alexmgr/tinyec/blob/master/LICENSE| | pycryptodome              | 3.20.0    | BSD 2-Clause License; Public Domain                        | https://github.com/Legrandin/pycryptodome/                      | https://github.com/Legrandin/pycryptodome/blob/master/LICENSE.rst| | config                    | 0.5.1     | BSD 3-Clause License                                       | https://github.com/vsajip/py-cfg-lib/                           | https://github.com/vsajip/py-cfg-lib/blob/master/LICENSE| | cbor-diag                 | 1.0.1     | Apache Software License 2.0; MIT License            | https://github.com/chrysn/cbor-diag-py/                         | https://github.com/chrysn/cbor-diag-py?tab=readme-ov-file#license| | validators                | 0.22.0    | MIT License                                         | https://github.com/python-validators/validators/                | https://github.com/python-validators/validators/blob/master/LICENSE.txt| | jsonschema                | 4.21.1    | MIT License                                         | https://github.com/python-jsonschema/jsonschema/                | https://github.com/python-jsonschema/jsonschema?tab=MIT-1-ov-file#readme| | Werkzeug                  | 2.3.7     | BSD 3-Clause License                                         | https://github.com/pallets/werkzeug/                           | https://github.com/pallets/werkzeug/blob/main/LICENSE.txt| | pycose                    | 1.0.1     | BSD 3-Clause License                                | https://github.com/TimothyClaeys/pycose/                        | https://github.com/TimothyClaeys/pycose/blob/master/LICENSE| | cwt                       | 2.3.2     | MIT License                                         | https://github.com/dajiaji/python-cwt/                          | https://github.com/dajiaji/python-cwt/blob/main/LICENSE| | PyJWT                     | 2.8.0     | MIT License                                         | https://github.com/jpadilla/pyjwt/                              | https://github.com/jpadilla/pyjwt/blob/master/LICENSE| | schedule                  | 1.2.1     | MIT License                                         | https://github.com/dbader/schedule/                             | https://github.com/dbader/schedule/blob/master/LICENSE.txt| | pillow                    | 10.2.0    | Historical Permission Notice and Disclaimer (HPND)  | https://github.com/python-pillow/Pillow/                       | https://github.com/python-pillow/Pillow/blob/main/LICENSE| | segno                     | 1.6.1     | BSD 3-Clause License                                | https://github.com/heuer/segno/                                | https://github.com/heuer/segno/blob/master/LICENSE| | qrcode-artistic           | 3.0.2     | BSD 3-Clause License                                | https://github.com/heuer/qrcode-artistic/                      | https://github.com/heuer/qrcode-artistic/blob/master/LICENSE| | gunicorn                  | 22.0.0    | MIT License                                         | https://github.com/benoitc/gunicorn/                           | https://github.com/benoitc/gunicorn/blob/master/LICENSE| | pymdoccbor                | 0.5.4     | Apache Software License 2.0                         | https://github.com/peppelinux/pyMDL-MDOC/                       | https://github.com/IdentityPython/pyMDOC-CBOR/blob/main/LICENSE| | sd-jwt                    | 0.10.4    | Apache Software License 2.0                         | https://github.com/openwallet-foundation-labs/sd-jwt-python/    | https://github.com/openwallet-foundation-labs/sd-jwt-python/blob/main/LICENSE| | idpyoidc                  | 3.0.0     | Apache Software License 2.0                             | https://github.com/IdentityPython/idpy-oidc/                   | https://github.com/IdentityPython/idpy-oidc/blob/main/LICENSE| | openid4v                  | 0.0.1     | Apache Software License 2.0                            | https://github.com/rohe/openid4v/                              |  https://github.com/rohe/openid4v/blob/main/LICENSE| | fedservice                | 4.0.0     | Apache Software License 2.0                            | https://github.com/rohe/fedservice/                            | https://github.com/rohe/fedservice/blob/master/LICENSE | idpysdjwt                 | 0.0.1     | Apache Software License 2.0                            | https://github.com/rohe/idpy-sdjwt/                             | https://github.com/rohe/idpy-sdjwt/blob/main/LICENSE|</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/#index-of-eudi-srv-web-issuing-eudiw-pyapi_docs","title":"Index of eudi-srv-web-issuing-eudiw-py/api_docs","text":"<ul> <li>add_credential</li> <li>authorization</li> <li>configuration</li> <li>credential</li> <li>credential_offer</li> <li>deferred</li> <li>images</li> <li>nonce_endpoint</li> <li>notification</li> <li>pre-authorized</li> <li>token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/","title":"Add credential","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#configuration","title":"Configuration","text":"<p>This document specifies the changes needed to add a new attestation/credential to the EUDIW Issuer. We will use a generic loyalty card credential as an example for this configuration.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#1-metadata-configuration","title":"1. Metadata Configuration","text":"<p>Add a new json file with the credential metadata to <code>app/metadata_config/credentials_supported</code></p> <p>For this example we will use <code>app/metadata_config/credentials_supported/loyalty_mdoc.json</code></p> <p>Example loyalty card metadata for mso_mdoc format (ISO 18013-5), with namespace <code>eu.europa.ec.eudi.loyalty_mdoc</code>:</p> <pre><code>{\n  \"eu.europa.ec.eudi.loyalty_mdoc\": {\n      \"format\": \"mso_mdoc\",\n      \"doctype\": \"eu.europa.ec.eudi.loyalty.1\",\n      \"scope\": \"eu.europa.ec.eudi.loyalty_mdoc\",\n      \"cryptographic_binding_methods_supported\": [\n        \"jwk\", \"cose_key\"\n      ],\n      \"credential_signing_alg_values_supported\": [\n        \"ES256\"\n      ],\n      \"proof_types_supported\": {\n        \"jwt\": {\n          \"proof_signing_alg_values_supported\": [\n            \"ES256\"\n          ]\n        }\n      },\n      \"display\": [\n        {\n          \"name\": \"Loyalty\",\n          \"locale\": \"en\",\n          \"logo\": {\n            \"uri\": \"https://examplestate.com/public/pid.png\",\n            \"alt_text\": \"A square figure of a PID\"\n          }\n        }\n      ],\n      \"claims\": [\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"given_name\"],\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Given Name\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"family_name\"],\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Family Name\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"company\"],\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Loyalty Card Company\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"client_id\"],\n            \"mandatory\": true,\n            \"value_type\":\"string\",\n            \"source\":\"user\",\n            \"display\": [\n              {\n                \"name\": \"Client ID\",\n                \"locale\": \"en\"              }\n            ]\n          },\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"issuance_date\"],\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Issuance Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          },\n          {\n            \"path\":[\"eu.europa.ec.eudi.loyalty.1\",\"expiry_date\"],\n            \"mandatory\": true,\n            \"source\":\"issuer\",\n            \"display\": [\n              {\n                \"name\": \"Expiry Date\",\n                \"locale\": \"en\"\n              }\n            ]\n          }\n      ],\n      \"issuer_config\":{\n            \"issuing_authority\":\"Test PID issuer\",\n            \"organization_id\":\"EUDI Wallet Reference Implementation\",\n            \"validity\":90,\n            \"organization_name\":\"Test PID issuer\",\n            \"namespace\": \"eu.europa.ec.eudi.loyalty.1\"\n        }\n    }\n  }\n</code></pre> <p>If you want to issue a different attestation/credential using this example as a template, please choose a different namespace, doctype, and scope, and modify the claims to include the required attributes.</p> <p>For more information on the metadata parameters, please refer to https://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html#name-metadata.</p> <p>Extra Parameters  - source: Where the attributed is sourced from. Either the user or issuer (Example: Issuance Date is filled in by the issuer while given_name is filled in by the user on the form) - value_type: Type of the value expected. This will add the attribute to the forms. (Can be string, full-date, jpeg, driving_privileges, uint, bool) - issuer_conditions: a json structure with extra parameters and logic allowing for more complex credentials. - issuer_config: a json structure with extra parameters used in credential creation</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#11-issuer-conditions","title":"1.1 Issuer Conditions","text":"<p>The issuer_conditions structure can be used in the metadata as follows: - Specific to a claim:</p> <p>Allows for the usage of nested claims by defining the value_type as another claims structure with the same identifier inside the issuer_conditions. Additionally, it can specify the cardinality not only of the claim itself but also of its nested claims.   As an example we have the credential Portable Document A1 (PDA1) which has a claim places_of_work. This claim allows for two nested claims, a place_of_work and a no_fixed_place.   We can define the value_type as the structure places_of_work_attributes, the identifier we will use inside issuer_conditions, the places_of_work_attributes will contain two claim structures, place_of_work and no_fixed_place. Inside these two structures we define the nested claim as seen below.   Within each nested claim, we can once again add issuer_conditions, specifying its cardinality and a not_used_if field. In this case, the not_used_if field ensures that place_of_work cannot be used if no_fixed_place is present, and vice versa.</p> <p><pre><code>\"places_of_work\": {\n        \"mandatory\": true,\n        \"value_type\":\"places_of_work_attributes\",\n        \"source\":\"user\",\n        \"display\": [\n          {\n            \"name\": \"Places of Work\",\n            \"locale\": \"en\"            }\n        ],\n        \"issuer_conditions\": {\n          \"cardinality\": {\n            \"min\": 1,\n            \"max\": 1\n          },\n          \"places_of_work_attributes\":{\n            \"place_of_work\": {\n              \"mandatory\": false,\n              \"value_type\": \"place_of_work_attributes\",\n              \"source\": \"user\",\n              \"issuer_conditions\": {\n                \"cardinality\": {\n                  \"min\": 0,\n                  \"max\": \"n\"\n                },\n                \"not_used_if\": {\n                    \"logic\": \"any\",\n                    \"attributes\": [\"no_fixed_place\"]\n                },\n                \"place_of_work_attributes\":{\n                  \"company\": {\n                    \"mandatory\": true,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"flag_base_home_state\": {\n                    \"mandatory\": false,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"company_id\": {\n                    \"mandatory\": false,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"id_type\": {\n                    \"mandatory\": false,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"street\": {\n                    \"mandatory\": false,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"town\": {\n                    \"mandatory\": true,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"postal_code\": {\n                    \"mandatory\": false,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  },\n                  \"country_code\": {\n                    \"mandatory\": true,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  }\n                }\n              }\n            },\n            \"no_fixed_place\": {\n              \"mandatory\": false,\n              \"value_type\": \"no_fixed_place_attributes\",\n              \"source\": \"user\",\n              \"issuer_conditions\": {\n                \"cardinality\": {\n                  \"min\": 0,\n                  \"max\": \"n\"\n                },\n                \"not_used_if\": {\n                    \"logic\": \"any\",\n                    \"attributes\": [\"place_of_work\"]\n                },\n                \"no_fixed_place_attributes\":{\n                  \"country_code\": {\n                    \"mandatory\": true,\n                    \"value_type\": \"string\",\n                    \"source\": \"user\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n</code></pre> - Encompassing multiple claims:</p> <p>Currently this approach supports the condition at_least_one_of which specifies that at least one of these claims need to be present in the credential.   As an example, the Health ID credential requires at least one of the following claims to be present: health_insurance_id, patient_id, tax_number, one_time_token.   For this example the following issuer_conditions would be added inside the claims{} field but outside any specific claim.</p> <pre><code>\"overall_issuer_conditions\": {\n          \"at_least_one_of\":[\n                \"health_insurance_id\",\n                \"patient_id\",\n                \"tax_number\",\n                \"one_time_token\"\n            ]\n        }\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#2-service-configuration","title":"2. Service Configuration","text":"<p>In the service configuration file (<code>app/app_config/config_service.py</code>), you need to configure the issuing authority, organization and validity of the credential.</p> <ul> <li>Add a new entry to config_doctype (using the doctype of the credential as key)</li> </ul> <pre><code>\"eu.europa.ec.eudi.loyalty.1\": {\n    \"issuing_authority\": \"Test QEAA issuer\",\n    \"organization_id\": pid_organization_id,\n    \"validity\": qeaa_validity,\n    \"organization_name\": \"Test QEAA issuer\",\n    \"namespace\": \"eu.europa.ec.eudi.loyalty.1\",\n}\n</code></pre> <ul> <li> <p>Add a new entry to auth_method_supported_credencials (using the credential identifier specified in the metadata)</p> <p>This configures the type of user authentication allowed for the credential. You may choose authentication through a PID using OpenId4VP, or through a country selection (options are: IDP, eidas node or a simple form).</p> <p>In the following examples the authentication allowed for the loyalty credential is country selection.</p> </li> </ul> <pre><code>auth_method_supported_credencials = {\n    \"PID_login\": [\n    ],\n    \"country_selection\": [\n        \"eu.europa.ec.eudi.loyalty_mdoc\",\n    ],\n}\n</code></pre> <ul> <li>If this credential supports Dynamic Credential Request, add a new entry to dynamic_issuing</li> </ul> <p>This configures which attestation and attributes are asked for in the OID4VP Request When using Dynamic credential request to issue this credential.</p> <p>Follows the format: <pre><code>dynamic_issuing = {\n      \"credential_configuration_id\":{\n          \"DocType\":{\"Namespace\":[\"attribute\",...,\"attribute\"]}\n      }\n}\n</code></pre></p> <p>Example from age over 18 pseudonym: <pre><code>dynamic_issuing = {\n      \"eu.europa.ec.eudi.pseudonym_over18_mdoc\":{\n          \"eu.europa.ec.eudi.pid.1\":{\"eu.europa.ec.eudi.pid.1\":[\"age_over_18\"]}\n      }\n}\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/add_credential/#3-configuration-of-countries-supported-by-the-eudiw-issuer","title":"3. Configuration of Countries supported by the EUDIW Issuer","text":"<p>Located in <code>app/app_config/config_countries.py</code>, this configuration file contains configuration data related to the countries supported by the PID Issuer, and the credentials supported by each country.</p> <p>For example, to add the loyalty credential to the <code>formCountry</code>, you need to add the loyalty credential id (defined in the metadata) to the <code>supported_credentials</code> of the <code>formCountry</code>.</p> <pre><code>\"supported_credentials\": [\n  \"eu.europa.ec.eudi.loyalty_mdoc\"\n]\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/","title":"Authorization","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-details","title":"Authorization Details","text":"<p>The following authorization flows are supported:</p> <ul> <li>PAR + PKCE -&gt; Pushed Authorization Request with PKCE.</li> <li>PAR -&gt; Pushed Authorization Request without PKCE.</li> <li>PKCE -&gt; Authorization Request with PKCE.</li> <li>Authorization Request -&gt; Authorization Request without PKCE.</li> <li>Scope -&gt; Using scope Parameter to Request Issuance of a Credential</li> <li>Authorization Details -&gt; Using Authorization Details to Request Issuance of a Credential</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-1-push-authorization-request-with-pkce-post","title":"Authorization flow - step 1 - Push Authorization Request with PKCE (POST)","text":"<p>Endpoint: https://issuer.eudiw.dev/pushed_authorizationv2 (or https://localhost/pushed_authorizationv2 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque value used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>code_challenge - RFC 7636  see section 4.2 (PKCE)</li> <li>code_challenge_method - RFC 7636  see section 4.2 (PKCE)</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>Header:\n\n  Content-Type - application/x-www-form-urlencoded\n\nPayload:\n\n  response_type=code&amp;state=af0ifjsldkj&amp;client_id=ID&amp;redirect_uri=...&amp;code_challenge=-ciaVij0VMswVfqm3_GK758-_dAI0E9i97hu1SAOiFQ&amp;code_challenge_method=S256&amp;scope=eu.europa.ec.eudi.pid.1 openid&amp;authorization_details=[{\"type\": \"openid_credential\", \"format\": \"vc+sd-jwt\", \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\"}]\n</code></pre> <p>Response:</p> <ul> <li>expires_in - RFC 9126 see section 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-1-push-authorization-request-without-pkce-post","title":"Authorization flow - step 1 - Push Authorization Request without PKCE (POST)","text":"<p>Endpoint: https://issuer.eudiw.dev/pushed_authorizationv2 (or https://localhost/pushed_authorizationv2 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>Header:\n\n  Content-Type - application/x-www-form-urlencoded\n\nPayload:\n\n  response_type=code&amp;state=af0ifjsldkj&amp;client_id=ID&amp;redirect_uri=...&amp;scope= eu.europa.ec.eudi.pid.1 openid&amp;authorization_details=[{\"type\": \"openid_credential\", \"format\": \"vc+sd-jwt\", \"vct\": \"eu.europa.ec.eudi.mdl_jwt_vc_json\"}]\n</code></pre> <p>Response:</p> <ul> <li>expires_in - RFC 9126 see section 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-with-par-get","title":"Authorization flow - step 2 - Authorization Request with PAR (GET)","text":"<p>After the <code>Push Authorization Request</code> (step 1 of the authorization flow) with or without PKCE.</p> <p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>client_id - Required. The client identifier as described in RFC6749 2.2</li> <li>request_uri - RFC 9126 see section 2.2</li> </ul> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Optional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-with-pkce-and-without-par-get","title":"Authorization flow - step 2 - Authorization Request with PKCE and without PAR (GET)","text":"<p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>code_challenge - RFC 7636  see section 4.2 (PKCE)</li> <li>code_challenge_method - RFC 7636  see section 4.2 (PKCE)</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>  https://issuer.eudiw.dev/authorizationV3?response_type=code&amp;client_id=ID&amp;redirect_uri=...&amp;scope=eu.europa.ec.eudi.pid.1&amp;code_challenge_method=S256&amp;code_challenge=-ciaVij0VMswVfqm3_GK758-_dAI0E9i97hu1SAOiFQ&amp;authorization_details=[{\"type\": \"openid_credential\",\"credential_configuration_id\": \"eu.europa.ec.eudi.pid_mdoc\"},{\"type\": \"openid_credential\",\"credential_configuration_id\":\"eu.europa.ec.eudi.mdl_mdoc\"}]\n</code></pre> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Optional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/authorization/#authorization-flow-step-2-authorization-request-without-pkce-and-without-par-get","title":"Authorization flow - step 2 - Authorization Request without PKCE and without PAR (GET)","text":"<p>Endpoint: https://issuer.eudiw.dev/authorizationV3 (or https://localhost/authorizationV3 if installed locally)</p> <p>The following parameters are supported:</p> <ul> <li>response_type - Required. Value must be \u201ccode\u201d</li> <li>state - Recommended. Opaque valued used by the client to maintain state between requests</li> <li>client_id - Required. The client identifier as described in RFC6749 (section 2.2)</li> <li>redirect_uri</li> <li>scope - Required if authorization_details is not used</li> <li>authorization_details - Required if scope is not used</li> </ul> <p>Example:</p> <pre><code>  https://issuer.eudiw.dev/authorizationV3?response_type=code&amp;client_id=ID&amp;redirect_uri=...&amp;scope=eu.europa.ec.eudi.pid.1&amp;authorization_details=[{\"type\": \"openid_credential\",\"credential_configuration_id\": \"eu.europa.ec.eudi.pid_mdoc\"},{\"type\": \"openid_credential\",\"credential_configuration_id\":\"eu.europa.ec.eudi.mdl_mdoc\"}]\n</code></pre> <p>At the end of user authentication, the following parameters are returned:</p> <ul> <li>state - Opcional. Same value received from client</li> <li>code - Authorization code generated by authorization server </li> <li>iss</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/","title":"Configuration","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#configuration","title":"Configuration","text":"<p>For configuring your locally installed version of the EUDIW Issuer, you need to change the following configurations.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#1-service-configuration","title":"1. Service Configuration","text":"<p>Base configuration for the EUDIW Issuer is located in <code>app/app_config/config_service.py</code>.</p> <p>Parameters that should be changed:</p> <ul> <li><code>service_url</code> (Base url of the service)</li> <li><code>trusted_CAs_path</code> (Path to a folder with trusted IACA certificates)</li> <li><code>eidasnode_url</code> (eIDAS Node base URL. Only needs to be changed if you're configuring the eIDAS Node)</li> <li><code>eidasnode_lightToken_connectorEndpoint</code> (eIDAS node connector endpoint for lightrequest. Only needs to be changed if you're configuring the eIDAS Node.)</li> </ul> <p>You must copy your IACA trusted certificate(s) (in PEM format) to the <code>trusted_CAs_path</code> folder - you can find an example test IACA certificate for country Utopia (UT) here -.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#2-configuration-of-countries","title":"2. Configuration of Countries","text":"<p>The supported countries configuration of the EUDIW Issuer is located in <code>/app/app_config/config_countries.py</code>.</p> <p>Parameters that should be changed for each country:</p> <ul> <li><code>name</code> - name of the country</li> <li><code>connection_type</code>- options are eidasnode, oauth, and openid.</li> <li><code>pid_mdoc_privkey</code>- Document/Credential signer (DS) private key file location.</li> <li><code>pid_mdoc_privkey_passwd</code> - Document/Credential signer (DS) private key password.( Can be None or bytes. Example: b\"password\")</li> <li><code>pid_mdoc_cert</code> - Document/Credential signer (DS) certificate file location.</li> </ul> <p>You must copy your DS private key (in PEM format) to <code>pid_mdoc_privkey</code> file (the password must be defined in <code>pid_mdoc_privkey_passwd</code>), and the certificate (in DER format) to <code>pid_mdoc_cert</code> file.</p> <p>You can find example test private DS keys and certificates, for country Utopia (UT) here - the password of the example test private DS keys is b\"pid-ds-0002\". To decrypt the private key you can run the following command <code>openssl ec -in PID-DS-0002.pid-ds-0002.key.pem -out PID-DS-0002-decrypted.key.pem</code>.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#3-oid4vci-configuration","title":"3. OID4VCI configuration","text":"<p>For configuring the installed idpy-oidc and openid4v libraries, you need to change the following parameters in the <code>app/app_config/oid_config.py</code> configuration file:</p> <ul> <li>port</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/configuration/#4-metadata-configuration","title":"4. Metadata configuration","text":"<p>The EUDIW Issuer OAuth2 metadata configuration files are located in <code>app/metadata_config/metadata_config.json</code> and <code>app/metadata_config/openid-configuration.json</code></p> <p>You must change the base URL of the endpoints from <code>https://issuer.eudiw.dev</code> to a custom one or <code>https://localhost</code> if installed locally</p> <p>Example: <pre><code>\"credential_issuer\": \"{base_url}\",\n\"credential_endpoint\": \"{base_url}/credential\",\n\"notification_endpoint\": \"{base_url}/notification\",\n\"deferred_credential_endpoint\": \"{base_url}/deferred_credential\",\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential/","title":"Credential","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential/#credential-request-post","title":"Credential Request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/credential (or https://localhost/credential if installed locally)</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>credential_configuration_id - REQUIRED if a credential_identifiers parameter was not returned from the Token Response as part of the authorization_details parameter.</li> <li>proofs - OPTIONAL. Object providing one or more proof of possessions of the cryptographic key material to which the issued Credential instances will be bound to. The proofs parameter MUST NOT be present if proof parameter is used. </li> <li>credential_response_encryption - OPTIONAL. Object containing information for encrypting the Credential Response. If this request element is not present, the corresponding credential response returned is not encrypted.</li> <li>proof - OPTIONAL if proofs is used. Supported: JWT</li> </ul> <p>Example Requests:</p> <p>header:   <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJzY29wZSI6ICJvcGVuaWQiLCAiYXVkIjogWyJJRCJdLCAianRpIjogImZiMGI3NzdmODk5ODQ2MjBiMjQwZjNhZjczNjFlYzU3IiwgImNsaWVudF9pZCI6ICJJRCIsICJzdWIiOiAiODQzZjFjN2FkMDRjYTAyYTY1ZWEzYTc0MWY2YjkzOGNjN2U2N2E3OGQ0ZmFhN2YwMDYyNWFkYTFkZTM2OTM1NiIsICJhY3IiOiAidXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmFjOmNsYXNzZXM6SW50ZXJuZXRQcm90b2NvbFBhc3N3b3JkIiwgInNpZCI6ICJaMEZCUVVGQlFtMWhSbEYwVFV0TVRYUnJkak5wVkRjdFRWOTFWa3RRUmtkcVptTjFhamxETUdKemMzUkpXV1ZzUTBoeFVHazNZbXhpVjNaV1QzZDVjbFJ0Wkd0bk16Qk9WekEwV0Y5T2NuRkZYMWg2UjFWSGFuWlhkV0V0UmkwdGRtcFZVbTl1YzFJM2MwdDFjVUoyVGs1RGMyNXlaRVpxWkhKa1MwSkJObWxpY1hSS1JFaEVkVXRMT1dOWFRYcFBWMHB1VlVSWE9UTjZVVUZMYmw5RFNGOXVMWEJaY1VwRFRrbGxYMnQzVURadlNra3dka1owZEd0Vk9VVkRVMGhzWlhwelREVnpiemRuYzFCTk16TTFjVEZoUTA0eGN6Um5SekU1UnpsZlJrYzBZMDFXU2tGbmJYUkxXV1ZOVjNGRk9VRkRVMVl5Y25KWWRuZFdlR2h4VVZBMGVUZHJWMWQzTW1vMFRWRndVa3RJZFdGc2QySTNMVkozWW5wTVpWb3pRbEU5UFE9PSIsICJ0b2tlbl9jbGFzcyI6ICJhY2Nlc3NfdG9rZW4iLCAiaXNzIjogImh0dHBzOi8vZGV2Lmlzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODExMzMzNCwgImV4cCI6IDE3MTgxMTY5MzR9.QA7er_vPCqQsXjP3BtL2uFT1tKYKqaV7RRd_rwcdBOOO_uniax2uwjsWp5m5TAXYjzhec_ioL3kmv2OmRSLhlg'\n</code></pre></p> <p>payload:   <code>Json {     \"credential_configuration_id\": \"eu.europa.ec.eudi.pid_vc_sd_jwt\",     \"proof\": {     \"proof_type\": \"jwt\",     \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"   } }   Request with multiple proofs:   payload:</code>Json {  \"credential_configuration_id\": \"eu.europa.ec.eudi.pid_mdoc\",   \"proofs\": {     \"jwt\": [\"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\",\"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\",\"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"]   } }</p> <p><code>Request for encrypted response:     payload:</code>Json {     \"credential_configuration_id\": \"eu.europa.ec.eudi.pid_jwt_vc_json\",     \"proof\": {     \"proof_type\": \"jwt\",     \"jwt\": \"eyJ0eXAiOiJvcGVuaWQ0dmNpLXByb29mK2p3dCIsImFsZyI6IkVTMjU2IiwiandrIjp7Imt0eSI6IkVDIiwiY3J2IjoiUC0yNTYiLCJ4Ijoid1V1UDJPbHdIZWZlRS1ZMTZXajdQSEF6WjBKQVF5ZXZxV01mZDUtS21LWSIsInkiOiJZVy1iOE8zVWszTlVyazlvWnBBVDFsYVBlQWdpTlF3RGNvdFdpd0JGUTZFIn19.eyJhdWQiOiJodHRwczovL3ByZXByb2QuaXNzdWVyLmV1ZGl3LmRldi9vaWRjIiwibm9uY2UiOiJTcUdTMzc0eUFheFpIc254aUs5NWVnIiwiaWF0IjoxNzA0ODg2ODU1fQ.IdmxwbfJIKwcaqvADp6bzV2u-o0UwKIVmo_kQkc1rZHQ9MtBDNbO21NoVr99ZEgumTX8UYNFJcr_R95xfO1NiA\"   },   \"credential_response_encryption\":{     \"jwk\":{         \"kty\": \"RSA\",         \"e\": \"AQAB\",         \"use\": \"enc\",         \"kid\": \"TnZdnKa6J2CNWVqiXfeA0cTncNEUpW1aUz7sjLGT3KM\",         \"alg\": \"RSA1_5\",         \"n\": \"vb0jIdYbhIWgUguleNnycccu1O3of20BghIllQ9jjaa8QQNQaVN3KkRk6-YoeOz6PUfEtlZPBSQ3qmXndX3f1JPQ3m1hRor6oWs7oBzAndKbKAPtgnLl5iOMcQDW0K6OmIJJnrtrx6zTZCjcoJhdN063ZeUhmeQ5-K5kF0Ka9ZSdmqvTwpYmSTTbxrVtIJvq-LxqxPEb1a_cMVcZ4VahO5GCh8bGBcw0Rity9JGGxUo2m2c1e5cyqn5nN5tnHh0A17qinxlWg65CeOv9LTrEp4inf4ymlneyoNzhugdRqf5aS_3lLL-R4aQOxsm1nhB0JMpHKf23YRuNDT945GWP0w\"     },     \"alg\":\"RSA1_5\",     \"enc\":\"A256GCM\"   } }   ```</p> <p>Response:</p> <ul> <li>credentials - OPTIONAL. Contains an array of one or more issued Credentials. It MUST NOT be used if the transaction_id parameter is present.</li> <li>transaction_id - OPTIONAL. String identifying a Deferred Issuance transaction. This parameter is contained in the response if the Credential Issuer cannot immediately issue the Credential. </li> <li>notification_id - OPTIONAL. String identifying one or more Credentials issued in one Credential Response.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/","title":"Credential offer","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#credential-offer","title":"Credential Offer","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#1-authorization-code-flow","title":"1. Authorization code flow","text":"<p>Endpoint: https://issuer.eudiw.dev/credential_offer (or https://localhost/credential_offer if installed locally)</p> <p>A form is presented showing the Request Credentials for your EUDI Wallet that can be requested.</p> <p></p> <p>After choosing the credential(s) and submitting, a QR code and DeepLink is generated:</p> <p></p> <p>This generated DeepLink contains information about the credentials chosen in the form.</p> <p>Example:</p> <p>if the selected options are Personal Identification Data and the Mobile Driver's License in both sd-jwt and mdoc format:</p> <pre><code>openid-credential-offer://credential_offer?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.pid_jwt_vc_json%22%2C%20%22eu.europa.ec.eudi.mdl_jwt_vc_json%22%2C%20%22eu.europa.ec.eudi.pid_mdoc%22%2C%20%22eu.europa.ec.eudi.mdl_mdoc%22%5D%2C%20%22grants%22:%20%7B%22authorization_code%22:%20%7B%7D%7D%7D&gt;\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/credential_offer/#2-pre-authorized-code-flow","title":"2. Pre-Authorized Code Flow","text":"<p>Currently only suporting a loyalty credential through form</p> <p>Endpoint: https://dev.issuer.eudiw.dev/dynamic/preauth (or https://localhost/dynamic/preauth if installed locally)</p> <p>Example of generated DeepLink: <pre><code>openid-credential-offer://?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev/%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.loyalty_mdoc%22%5D%2C%20%22grants%22:%20%7B%22urn:ietf:params:oauth:grant-type:pre-authorized_code%22:%20%7B%22pre-authorized_code%22:%20%22Z0FBQUFBQm1mWHdPdlR0X0JBTjRXR2EtRVFkZVpKTXFaTW95U29mVElnTkQ1cnphTEg5ajg0YnJTMk1JLUZaUHFlSUxuVDZ1c1hNRnZJQ3YzNUZfaVZuRVZueEotb1ROWkUyOTNGbUk2ZUJBemZXT2k0ZThRZHVTMWo2Z2JUYjJFOGwxQURxMWdYaHZjNFNCNXdkRVpocVlPV3VNSnlsT1g2Vjl2Nk1IOGJ0aWg2T2tMa1YyaVVudFJwc2owVzE4UGlod3RBM2w0UF9aQzdzTzFQUUZKNkRrYmtnei14ZmFXRWczWXV3Y2hGOFd2YUp6Q0dRMTB1aVNBTHNSSTg2aUJKNC0tTFBjSHFiTnRaRHpEdFdRNmlfcXM2clFaVXVXdjQ2TGZlejlKeXdjSEJDV0E3VVB1aGhhMDI2dlBMWXAyT3VXQ0F6Z1FvcHVVMUFhMUdxdl81WUpvbFp4bGNWRXRwdE85TC1yb29hbi1QbUFTN3BPX2NDM1pjdGk3b3d4VlVNMjhYelBjSWhZM3BoRzJhUFNZTzV2dFpZVUpreVpiT2w5c0hRR3VuZXY5enRaWHJRcEV0NEVTbnRpZkNpNU14QlJGWjVaY3ZUc0lkMUZ1MXJNckZzblBrNXl2ejBWWGJHQmJ4QUZLSjFvZExFSW1oaWdCS3FmSzM3dFlLOUk0NndUendvdmxCZWZtOWtPMzA0OEtTTnFxZmphYmRzc2Q5bXJpVlhwV2o4QWZ6OXNZNldMd1ctOW9pYmlnTHZnYklQVW9zV3JmUjdLM3oxVkpoQVJMeTlOaS1KSUFkSWlkc0xQNEFUaHoxNVYxUS1Qa3ZISzVpWjJ2UDB5MUZUc3IxMDE5dTR1YS10S2Q2eUl5R3FMMWhPQkJkSGdvSFJDOW1vbjg2VVJsVWpsckVaUTFnVVBHaXc9%22%7D%7D%7D\n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/deferred/","title":"Deferred","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/deferred/#deferred-endpoint","title":"Deferred Endpoint","text":"<p>This endpoint is used to issue a Credential previously requested at the Credential Endpoint or Batch Credential Endpoint in cases where the Credential Issuer was not able to immediately issue this Credential. Support for this endpoint is OPTIONAL.</p> <p>There must be a credential request where it's response contains:</p> <ul> <li>transaction_id - String identifying a Deferred Issuance transaction</li> </ul> <p>Deferred Endpoint only works if the response contains a transaction_id which is then used to make the request.</p> <p>Endpoint: https://issuer.eudiw.dev/deferred_credential (or https://localhost/deferred_credential if installed locally)</p> <p>Example Request:</p> <p>header:</p> <pre><code>'Content-Type': 'application/json',\n'Authorization': 'Bearer eyJhbGciOiJFUzI1NiIsImtpZCI6Ik1tWkhTQzE0UlhwNVRUQjVkMHR1UTE5a1FYVnJTVlZLUldKelVWSTVlREJ6UWkxd1ZuQXdVMGgyYncifQ.eyJhdWQiOiBbIklEIl0sICJqdGkiOiAiYWY5MmRlMDg3YzI2NGM1OThhOTNmZTExZDAyYmFmNWEiLCAiY2xpZW50X2lkIjogIklEIiwgInN1YiI6ICJiYzM4YWVhNTEwMzMzZDI4NjUyYmIyYWJkM2EwZmJhZDg5M2JiM2JmMjBlNjJlNmZjYzFhODY4ZmQ0NDNmMjgzIiwgInNpZCI6ICJaMEZCUVVGQlFtMWpXWEIwTTJsQldrWlJSR2RNZVdoTmJsRkxjemN4TW1aNWJqVXROVlZPYXpoVk9USlVlRzVUU2xOeWNIZHJVV3d3T0dWSExXa3pXRU5FVlZCMVoxRkpka0V4TFRoRmVuZzJkbXA0V0V4NVIyUlRSMVo0ZG5kb1dHbEVVVTlhUm1wTGVqWkpSbkYwUVhwR1UzRk9TbmhHUmpWQ05FaE5RVlpLWW14UVRXZFdORkZMYzJKdFJteGlYMnBGT1dwaU5rTkdiamRGTFZwSlYwMXVWbDlCWlZKTWRrSkdkRGhET1dzM09FZHdjak4wYjIxWGVVeExSMkpVVms1V2FFTnFTa0pOZHpCMFZVeEpaa0V6TVVnelJGbHJZVFZSYkZOMllUUTJNVlpEVW0xeGJYaDVjblJ3ZDFKMFZrZE9abVJSVDNWbGEzZHFRbTFaUVhWRGIwVjNRamQyWmxCcVZBPT0iLCAidG9rZW5fY2xhc3MiOiAiYWNjZXNzX3Rva2VuIiwgImlzcyI6ICJodHRwczovL2lzc3Vlci5ldWRpdy5kZXYiLCAiaWF0IjogMTcxODcxNzAzOSwgImV4cCI6IDE3MTg3MjA2Mzl9.tQCfMGu_IPv4B5BGzKPWbS_i70gaEbaQ9JpoOgfKBkuAWYrMDmD8YVUEpDO3W-Gu6mkix_ev4IBQOX3gac_Eng'\n</code></pre> <p>payload:   <pre><code>'transaction_id': '3J0VrO3TiQAPHsMe8Nt89g'\n</code></pre></p> <p>Response:</p> <ul> <li>credentials - OPTIONAL. Contains an array of one or more issued Credentials. It MUST NOT be used if the transaction_id parameter is present.</li> <li>transaction_id - OPTIONAL. String identifying a Deferred Issuance transaction. This parameter is contained in the response if the Credential Issuer cannot immediately issue the Credential. </li> <li>notification_id - OPTIONAL. String identifying one or more Credentials issued in one Credential Response.</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/nonce_endpoint/","title":"Nonce endpoint","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/nonce_endpoint/#batch-credential-request-post","title":"Batch Credential Request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/nonce (or https://localhost/nonce if installed locally)</p> <p>Request: POST /nonce HTTP/1.1  Content-Length: 0</p> <p>Response:</p> <p>HTTP/1.1 200 OK Content-Type: application/json <pre><code>{  \n    \"c_nonce\": \"eyJ0eXBlIjoiY25vbmNlK2p3dCIsImFsZyI6IlJTQS1PQUVQIiwiZW5jIjoiQTI1NkdDTSJ9.I7xww7qgKbBiwN8-WGhx-8TnLWaKwQMbNd5n_dxxhYppwEc7fxnSXWE6r6F77lJmxyk-tgRDXe5EXv1y54z5hZUzXBmbas2IwLMy8Qyoljd_aajpUDlbSY9EpYs5ThdV43IyaJRYd71qA6OLtRD9P4hlEi4igNlJi-zDX_ktkD9dH93bzRJ5rj1zMomLojQsFoZz2KyD-xJ5NUGq4UA47CnZjWcdDfHZZdjx1q2NkmMQXnYoT9CfjC6UVdNFoC2YR9p4BKO8v8KRE3BuP96gAd_VyzyVgEr1HMyuHrGYPSl1g6BzbGMD6u9TZ0C4ArzqRg3feZmSeaHOQxSNaHAuRSFYDoAZ-wSPdVJ0hDL6Jck_I00M0gvKM8sCoLHraF_d76xEQIvsaB7HsFWWwRRpoEtmfMQ_QBSIWaQ3VKgZ6qz58GjSOAa2Sd3zAheatZrZB0rWo0U8IuwoWbFY7s-bLwdhWQsGPaQ3egsW-sedcpH-xT4MxX9y4XJ9Sg3EapJNW3J4caRsqLl036Df16O7sNLjwSThwDIMGN3PJ-GYlT09AYmC117_ZUkXGvvDfe12MlEq9JjI0Fs2NfXAMv13i1uplwwZSzXBljS7eT61HuGATJHSI7iRDZqJSuIyxjQROLAkT0Wa-goi0X70LZ4zaxYhTVaorVH0nyoseECvYrs.rXegqzWABkN1xOKw.BLje0_LTxBr0D3a9zeJO2-M8CK7s5hBjIQjqTDTHBNz4ETcdJGyUzfRZcaBs1yLdX-3gVm4SJebaF8uErEyceYgQeWc_1rcjbyaGSVp6gTYSx6XohaZ-HyUWBvJ91YKOUzLqqsM5EyMKHxq6NbijziJIBARk0ZiD2g_VJUUsDqHdYMlvKJoNUXlVKLU-HVpYWtOqsw63z0j3yPTLyLg0qYB9qTfHZavNIvW5dJYxu2RmzpyyZ7ArmzkD.A064SrBe4UjVT1s8B_tHKw\"\n}  \n</code></pre></p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/notification/","title":"Notification","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/notification/#notification-request","title":"Notification Request","text":"<p>This is an Optional Endpoint used by the Wallet to notify the Credential Issuer of certain events for issued Credentials. These events enable the Credential Issuer to take subsequent actions after issuance. </p> <p>Endpoint: https://issuer.eudiw.dev/notification (or https://localhost/notification if installed locally)</p> <p>This data must be present in Json so that the request can be made:</p> <p>Header:</p> <ul> <li>Content-Type - application/json</li> <li>Authorization - Bearer token</li> </ul> <p>Payload:</p> <ul> <li>notification_id - Received after a Batch Credential or Credential request</li> <li>event - type of event that occurred</li> </ul> <p></p> <p>If everything goes well, a HTTP/1.1 204 No Content will be received in the Wallet</p> <p>In the event of an error, HTTP/1.1 400 Bad Request, a JSON will be received with:</p> <ul> <li>error - error description</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/pre-authorized/","title":"Pre authorized","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/pre-authorized/#pre-authorized","title":"Pre-authorized","text":"<p>For the pre-authorized flow, you can test our examples by selecting Pre-Authorization Code Grant in https://issuer.eudiw.dev/credential_offer (or https://localhost/credential_offer if installed locally).</p> <p>After submitting, a QR code and DeepLink is generated:</p> <p></p> <pre><code>openid-credential-offer://?credential_offer=%7B%22credential_issuer%22:%20%22https://issuer.eudiw.dev/%22%2C%20%22credential_configuration_ids%22:%20%5B%22eu.europa.ec.eudi.loyalty_mdoc%22%5D%2C%20%22grants%22:%20%7B%22urn:ietf:params:oauth:grant-type:pre-authorized_code%22:%20%7B%22pre-authorized_code%22:%20%22Z0FBQUFBQm1WMWZTQUwySE5WSklFcTJ5WU5pNXRPZ3pjU0V2UXRJbUpRYnRiM3I0eEthVU5OSzZhMXpPSHE1M2ZFVHFnRG9ReXRwRm95MzBtaTVkQzk3U05lRE4xSExqSkQtNGV3QmhNS0pLaVRBTk9HTmdXa2t1c3liMFBJeE9JVUQwc1o0UjI1ZTdFZTFDRndFeFkwd094NEk5eC1sM2ozb0FUekQxTVdjc1plMGFUdXR0czd4TkVxZUh5LVJ0RGtXWmZLbFJ4LU1KMzNtN01qamIzTFp6cER4SVVnSUtzbk84dUJlbmxEQ3ZPUjk1N3VEZndvOFdweWZhQjJzbTJLZ1hvZ0NoLXNBVHNnU0VFSmJEQ0VPWUF6UHotRzIyQVFTWlFTLTBqSmdadm0tYm1wLTYzMDFwYW4wQnVVNUJjSmpubGdwVTZQMEFzUUxMcHdnSHRBZEhZR0FLVXRaelNCNklGbnhqSTRxS05VXzdXa3VqQUNSOXp6UG13N2VqOFlqYXVXQ2dnTUdybHNUSXZwYlpqSWVMLXhBVFlUTHgwVnZydkNsTUxIWGlvRUlibWtoWGNiY1BMdFZKbG1EX2ttU1EwMmZLZ2J5ekNoOEM2ZVJtanQ5VEZWZ3N2SC03SjB6cklBMGZrckpQYXo5aXY4ODVMcjRMbWcyU3JuV21VRkdRdF9CTC12Z3FfQVlYWk5mY2FtdDNuZEVsZmhkSkFZaF9uVEpoakNuY2ZQMzlTZUxnWUlIU3FiZjQ2a0hJNkM3SVRTbTRFaXJ3eUx5UEtjdzBWNTRZMWFPTllsMkFoczNCd1lqQTg1SzJGTEdfQWlLSjRtQUxIVTk5RU9NaXhSUUtoQVRIekFIMUlOUEdkWEpDTmNIRllPTDhTazdVMUFoMjlOemdlZVROYU1xTi1heFl3TVE9%22%7D%7D%7D\n</code></pre>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/","title":"Token","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-post","title":"Token request (Post)","text":"<p>Endpoint: https://issuer.eudiw.dev/token (or https://localhost/token if installed locally)</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-with-pkce","title":"Token request with PKCE","text":"<p>The following parameters are supported:</p> <ul> <li>grant_type - Required. Value must be set to \u201cauthorization_code\u201d</li> <li>redirect_uri - Required. Must be identical value to authorization request redirect_uri</li> <li>client_id - Required.</li> <li>state - Recommended. </li> <li>code - Required. The authorization code received from authorization</li> <li>code_verifier - Required. RFC 7636 see section 4.1</li> </ul> <p>Example Request:</p> <p>header: <pre><code>'Content-Type': 'application/x-www-form-urlencoded\n</code></pre></p> <p>payload: <pre><code>grant_type=authorization_code&amp;code=Z0FBQUFBQm1hWG5nb2ZKQlo0cEpuQ1pPZWpERU9iczhPYndETzRuRU5OZmkyX3FnNzAtM3ZYRmNpamZRdUF0d1B6Y0MzVmhlNnl2QWtjT281cW5lQjFSWW9RYVVmcmNQQVdVcjcxUUZ4RDFtYTZ0eWJNT3Y1aGI4VFAxX3hKd2FWeHpBMWZUYVNJcmY1LTNQRUdTbUJ0clZBdmJoeVpIZDdRN29maUdNTUh6OVhncWtpcFQ3d2xKVVRkYTRhU19EZHV5QTRHalgyRmtrVWNvcGdRUmRVMnI5X2NtYTJZZWVhUXl4NkhGRzBMaEN2c0pGQnBIemJfUUtIUlpMY09qQmRRSzI0OHdMNDRFWXpSU1lTRDhRNEZfYTI2a1hXQV80ZF93Z2VQdnAwY1VHcHVBaVZIZTZaS283cW5VeTVPcWlPQldxWm1ObHhIZ08xcHhFTENsajFwTDRmNVhZQ1pzbWlnSVd4TGZDcHYxTXdJV2cwdThzcVFqcWNDQVBiX0U1OUpRZ3RiZG41bTFVSHdoUk1KYlZEc0dIbXN1UmJRZ1Y5RXZrYURwLUMzd3FMLW0tV0Q0VUM3eGtFZER1bjN4ZWttWWxtbDBham9uM01XVy1mdUFqd2I5UTdtSU4xYmJGaEhOdEVHR3pPV2lLQjIwcmhkcjYxSG04R1lHWTdkcEE1Si1GVzRocGpvR1BzS1ZaSEU3WEY1QjJkYjNXY0wxSXE3TnZMb3ZoVkx4T3ZWRkxsUkV6QnNfYWxVNmdzNUh6em1Pb0I1eGhFLWdNSmRtWXVMV1pCZl8xSnhrZ2hmdjJNS3doeUpXWlRLM3FqcThMTU04MmZLT3hjQXNtaGNJMTlXTXdDYXJZbk5kX3lCQlNSRWk1T1pGd2NaYjdGNFVtUk1DRTRUaGw1OElFRVh3SGRPUmtPbnc9&amp;redirect_uri=...&amp;client_id=ID&amp;state=vFs5DfvJqoyHj7_dZs2JbdklePg6pMLsUHHmVIfobRw&amp;code_verifier=FnWCRIhpJtl6IYwVVYB8gZkQsmvBVLfU4HQiABPopYQ6gvIZBwMrXg\n</code></pre></p> <p>Response:</p> <ul> <li>token_type</li> <li>scope - If authorization through scope</li> <li>authorization_details - If authorization through authorization details</li> <li>access_token</li> <li>expires_in</li> <li>refresh_token</li> <li>id_token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/token/#token-request-without-pkce","title":"Token request without PKCE","text":"<p>The \"code\" need to be saved to make the POST request for the Token.</p> <p>The following parameters are supported:</p> <ul> <li>grant_type - Required. Value must be set to \u201cauthorization_code\u201d</li> <li>redirect_uri - Required. Must be identical value to authorization requrest redirect_uri</li> <li>client_id - Required.</li> <li>state - Recommended. </li> <li>code - Required. The authorization code received from authorization</li> </ul> <p>Example Request:</p> <p>header: <pre><code>'Content-Type': 'application/x-www-form-urlencoded\n</code></pre></p> <p>payload: <pre><code>grant_type=authorization_code&amp;code=Z0FBQUFBQm1hWG5nb2ZKQlo0cEpuQ1pPZWpERU9iczhPYndETzRuRU5OZmkyX3FnNzAtM3ZYRmNpamZRdUF0d1B6Y0MzVmhlNnl2QWtjT281cW5lQjFSWW9RYVVmcmNQQVdVcjcxUUZ4RDFtYTZ0eWJNT3Y1aGI4VFAxX3hKd2FWeHpBMWZUYVNJcmY1LTNQRUdTbUJ0clZBdmJoeVpIZDdRN29maUdNTUh6OVhncWtpcFQ3d2xKVVRkYTRhU19EZHV5QTRHalgyRmtrVWNvcGdRUmRVMnI5X2NtYTJZZWVhUXl4NkhGRzBMaEN2c0pGQnBIemJfUUtIUlpMY09qQmRRSzI0OHdMNDRFWXpSU1lTRDhRNEZfYTI2a1hXQV80ZF93Z2VQdnAwY1VHcHVBaVZIZTZaS283cW5VeTVPcWlPQldxWm1ObHhIZ08xcHhFTENsajFwTDRmNVhZQ1pzbWlnSVd4TGZDcHYxTXdJV2cwdThzcVFqcWNDQVBiX0U1OUpRZ3RiZG41bTFVSHdoUk1KYlZEc0dIbXN1UmJRZ1Y5RXZrYURwLUMzd3FMLW0tV0Q0VUM3eGtFZER1bjN4ZWttWWxtbDBham9uM01XVy1mdUFqd2I5UTdtSU4xYmJGaEhOdEVHR3pPV2lLQjIwcmhkcjYxSG04R1lHWTdkcEE1Si1GVzRocGpvR1BzS1ZaSEU3WEY1QjJkYjNXY0wxSXE3TnZMb3ZoVkx4T3ZWRkxsUkV6QnNfYWxVNmdzNUh6em1Pb0I1eGhFLWdNSmRtWXVMV1pCZl8xSnhrZ2hmdjJNS3doeUpXWlRLM3FqcThMTU04MmZLT3hjQXNtaGNJMTlXTXdDYXJZbk5kX3lCQlNSRWk1T1pGd2NaYjdGNFVtUk1DRTRUaGw1OElFRVh3SGRPUmtPbnc9&amp;redirect_uri=...&amp;client_id=ID&amp;state=vFs5DfvJqoyHj7_dZs2JbdklePg6pMLsUHHmVIfobRw\n</code></pre></p> <p>Response:</p> <ul> <li>token_type</li> <li>scope - If authorization through scope</li> <li>authorization_details - If authorization through authorization details</li> <li>access_token</li> <li>expires_in</li> <li>refresh_token</li> <li>id_token</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/images/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/api_docs/images/#index-of-eudi-srv-web-issuing-eudiw-pyapi_docsimages","title":"Index of eudi-srv-web-issuing-eudiw-py/api_docs/images","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/#index-of-eudi-srv-web-issuing-eudiw-pyapp","title":"Index of eudi-srv-web-issuing-eudiw-py/app","text":"<ul> <li>static</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/#index-of-eudi-srv-web-issuing-eudiw-pyappstatic","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static","text":"<ul> <li>images</li> <li>issuer_guides</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/images/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/images/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticimages","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/images","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guides","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides","text":"<ul> <li>guides_images</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_images","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images","text":"<ul> <li>credential_offer</li> <li>credential_offer_deferred</li> <li>credential_offer_dynamic_age_over18</li> <li>credential_offer_pre-auth</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_deferred","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_deferred","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_dynamic_age_over18","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_dynamic_age_over18","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth/#index-of-eudi-srv-web-issuing-eudiw-pyappstaticissuer_guidesguides_imagescredential_offer_pre-auth","title":"Index of eudi-srv-web-issuing-eudiw-py/app/static/issuer_guides/guides_images/credential_offer_pre-auth","text":""},{"location":"eudi-srv-web-issuing-eudiw-py/support/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/#index-of-eudi-srv-web-issuing-eudiw-pysupport","title":"Index of eudi-srv-web-issuing-eudiw-py/support","text":"<ul> <li>suport</li> </ul>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/","title":"Suport","text":"<p>Home</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#pid-issuer-support","title":"PID issuer support","text":"<p>This section is intended to assist all users on how to use the PID Issuer test GUI to request a PID, aiming to demonstrate it explicitly and as straightforwardly as possible, for all available countries up to version 0.3.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#1-eidas-node-eidas-cw","title":"1. eIDAS-Node (eIDAS CW)","text":"<p>Requesting a PID using eIDAS-Node (eIDAS node deployed for PID issuing testing purposes) is a simple 3-step process.</p> <p>The first displayed page shows the requested attributes to the eIDAS-node for issuing a PID, which are:</p> <ul> <li>Family Name</li> <li>First Name</li> <li>Date of Birth</li> <li>National Identifier</li> </ul> <p>To proceed, please click the \"Next\" button located in the bottom right corner, indicating that you authorize access to these attributes.</p> <p>On the next page, please click the \"Next\" button to continue, since no additional attributes are requested. You will be redirected to a new page where you can authenticate yourself.</p> <p>On the authentication page, you need to enter your username and password, and change the \"Level of Assurance\" field to \"LoA High\". The test user data is as follows: + Username: xavi + Password: creus</p> <p>To proceed, please click the \"Submit\" button at the bottom of the page.</p> <p>Finally, in the last step, the data corresponding to the attributes requested in the first step is displayed. Please click the \"Submit\" button, and the PID will be issued in mdoc and sd-jwt format.</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#2-utopia-form-country","title":"2. Utopia (Form country)","text":"<p>The Country form consists of only one step, and unlike all the others, it does not require authentication and you can enter your own PID information.</p> <p>When you select this option, a page will be displayed, with a form that you need to fill in with the necessary data to make the PID request: + First Name + Family Name + Date of Birth + National Identifier</p> <p>In the end, simply click the \"Submit\" button.</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#3-portugal","title":"3. Portugal","text":"<p>In the case of Portugal, it's important to note that there is no test user available. Therefore, you will need to have a Portuguese ID card (\"Cart\u00e3o de Cidad\u00e3o\"),visit the Autentica\u00e7\u00e3o.Gov pre-prod website (https://pprwww.autenticacao.gov.pt/) and make a request in order to use the CMD (\"Chave M\u00f3vel Digital\") in the pre-production environment (or you can use directly your Portuguese ID card).</p> <p>The first page that appears is related to how the user wants to authenticate, with two options available: + Citizen Card (\"Cart\u00e3o de Cidad\u00e3o\") + Mobile Digital Key (\"Chave M\u00f3vel Digital\")</p> <p>After selecting the preferred authentication method - we are assuming that you will select the Mobile Digital Key -, simply click the \"Continue\" button.</p> <p>Next, you will be shown the required attributes to issue the PID, and you'll need to authorize the access to these attributes. In this case, the required attributes are: + Surname + First Name + Date of Birth + Civil Identification number</p> <p>To proceed, please click the \"Autorizar\" button. Please note that by clicking this button, you are granting permission to retrieve the value of the required attributes.</p> <p>Next, you will be asked to fill in two fields: + Mobile Number + PIN (Mobile Digital Key authentication PIN)</p> <p>Once you have correctly filled in these two pieces of information, please click the \"Autenticar\" button.</p> <p>If everything is correct, you will be presented with a new page and asked for a confirmation code. The code will be sent to the mobile number you provided on the previous page (by SMS or \u201cpush notification\u201d). Once you have the code inserted, please click \"Confirmar.\"</p> <p>The last page displays the content of the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p>"},{"location":"eudi-srv-web-issuing-eudiw-py/support/suport/#4-estonia","title":"4. Estonia","text":"<p>The PID request for Estonia depends on the chosen type of authentication, and the first page presented is for selecting the desired authentication type.</p> <p>To follow this tutorial, the default language of the website, which was Estonian, has been changed to English. You can do this by selecting the \"English\" option in the upper right corner.</p> <p>There are 4 types of authentications:  + ID-Card + Mobile-ID + Smart-ID + EU eID</p> <p>For this tutorial, we will only mention authentication using \"Mobile-ID\" and \"Smart-ID\" because there are test users available for these methods. For more information on each type of authentication, please refer to the documentation (https://e-gov.github.io/TARA-Doku/Testing#21-quick-reference-of-testing-accounts).</p> <p>Mobile-ID</p> <p>Please select the \"Mobile-ID\" option from the menu and enter your personal code and the corresponding mobile phone number. Then, click the \"Continue\" button. Here's an example, using the test user: + Personal code: 60001017869 + Phone number: 68000769</p> <p>Smart-ID</p> <p>In case you choose authentication with Smart-ID, select the \"Smart-ID\" option from the menu and then enter your personal code. After that, pease click the \"Continue\" button. </p> <p>Here's an example, using the test user: + Personal code: 30303039914</p> <p>Finally, regardless of the chosen authentication method, the page displayed after your authentication will be the same, containing the PID issued by the PID Issuer. On this page, there are two options: + Cancel - You will be redirected to the initial country selection page. + Store - This option simulates the storage of the mdoc and sd-jwt in the EUDI Wallet. If you select it, both the mdoc and sd-jwt format of the issued PID will be displayed.</p> <p>For more detailed information, please read read this text.</p>"},{"location":"eudi-web-verifier/","title":"Index","text":"<p>Home</p>"},{"location":"eudi-web-verifier/#index-of-eudi-web-verifier","title":"Index of eudi-web-verifier","text":"<ul> <li>CODE_OF_CONDUCT</li> <li>CONTRIBUTING</li> <li>README</li> <li>SECURITY</li> </ul>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/","title":"CODE OF CONDUCT","text":"<p>Home</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","title":"Contributor Covenant Code of Conduct","text":""},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported at cnect-eudiw-development@ec.europa.eu. to the community leaders responsible for enforcement.</p> <p>All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"eudi-web-verifier/CODE_OF_CONDUCT/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/","title":"CONTRIBUTING","text":"<p>Home</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/#contribution-guidelines","title":"Contribution Guidelines","text":"<p>We welcome contributions to this project. To ensure that the process is smooth for everyone involved, please follow the guidelines below.</p> <p>If you encounter a bug in the project, check if the bug has already been reported. If the bug has not been reported, you can open an issue to report the bug.</p> <p>Before making any changes, it's a good practice to create an issue to describe the changes you plan to make and the reasoning behind them.</p> <p>You can read Finding ways to contribute to open source on GitHub for more information.</p>"},{"location":"eudi-web-verifier/CONTRIBUTING/#github-flow","title":"GitHub Flow","text":"<p>We use the GitHub Flow workflow for making contributions to this project. This means that:</p> <ol> <li>Fork the repository and create a new branch from <code>main</code> for your changes.</li> </ol> <pre><code>git checkout main\ngit pull\ngit checkout -b my-branch\n</code></pre> <ol> <li>Make changes to the code, documentation, or any other relevant files.</li> <li>Commit your changes and push them to your forked repository.</li> </ol> <pre><code>git add .\ngit commit -m \"Add a new feature\"\ngit push origin my-branch\n</code></pre> <ol> <li>Create a pull request from your branch to the <code>main</code> branch of this repository.</li> </ol>"},{"location":"eudi-web-verifier/CONTRIBUTING/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li> <p>Branch from the main branch and, if needed, rebase to the current main branch before submitting   your pull request. If it doesn't merge cleanly with main you may be asked to rebase your changes.</p> </li> <li> <p>Commits should be as small as possible while ensuring that each commit is correct independently (   i.e., each commit should compile and pass tests).</p> </li> <li> <p>Test your changes as thoroughly as possible before you commit them. Preferably, automate your test   by unit/integration tests. If tested manually, provide information about the test scope in the PR   description (e.g. \u201cTest passed: Upgrade version from 0.42 to 0.42.23.\u201d).</p> </li> <li> <p>Create Work In Progress [WIP] pull requests only if you need clarification or an explicit review   before you can continue your work item.</p> </li> <li> <p>If your patch is not getting reviewed or you need a specific person to review it, you can @-reply   a reviewer asking for a review in the pull request or a comment.</p> </li> <li> <p>Post review:</p> <ul> <li>If a review requires you to change your commit(s), please test the changes again.</li> <li>Amend the affected commit(s) and force push onto your branch.</li> <li>Set respective comments in your GitHub review to resolved.</li> <li>Create a general PR comment to notify the reviewers that your amendments are ready for another   round of review.</li> </ul> </li> </ul>"},{"location":"eudi-web-verifier/CONTRIBUTING/#branch-name-rules","title":"Branch Name Rules","text":"<p>Please name your branch using the following convention:</p> <pre><code>&lt;type&gt;/&lt;short-description&gt;\n</code></pre> <ul> <li><code>type</code> should be one of the following:<ul> <li><code>feat</code> for a new feature,</li> <li><code>fix</code> for a bug fix,</li> <li><code>docs</code> for documentation changes,</li> <li><code>style</code> for changes that do not affect the code, such as formatting or whitespace,</li> <li><code>refactor</code> for code refactoring,</li> <li><code>test</code> for adding or updating tests, or</li> <li><code>chore</code> for any other miscellaneous tasks.</li> </ul> </li> <li><code>short-description</code> should be a short, descriptive name of the changes you are making.</li> </ul> <p>For example:</p> <pre><code>feat/add-new-button\nfix/typo-in-readme\ndocs/update-contributing-guide\nstyle/format-code\nrefactor/extract-method\ntest/add-unit-tests\nchore/update-dependencies\n</code></pre>"},{"location":"eudi-web-verifier/CONTRIBUTING/#issues-and-planning","title":"Issues and Planning","text":"<ul> <li> <p>We use GitHub issues to track bugs and enhancement requests.</p> </li> <li> <p>Please provide as much context as possible when you open an issue. The information you provide   must be comprehensive enough to reproduce that issue for the assignee. Therefore, contributors may   use but aren't restricted to the issue template provided by the project maintainers.</p> </li> <li> <p>When creating an issue, try using one of our issue templates which already contain some guidelines   on which content is expected to process the issue most efficiently. If no template applies, you   can of course also create an issue from scratch.</p> </li> <li> <p>Please apply one or more applicable labels to your issue so that all community   members are able to cluster the issues better.</p> </li> </ul>"},{"location":"eudi-web-verifier/CONTRIBUTING/#code-of-conduct","title":"Code of Conduct","text":"<p>Please note that this project is released with a Contributor Code of Conduct. By participating in this project, you agree to abide by its terms.</p>"},{"location":"eudi-web-verifier/SECURITY/","title":"SECURITY","text":"<p>Home</p>"},{"location":"eudi-web-verifier/SECURITY/#eu-digital-identity-wallet-vulnerability-disclosure-policy-vdp","title":"EU Digital Identity Wallet Vulnerability Disclosure Policy (VDP)","text":"<p>At the European Commission, we treat the security of our Communication and Information Systems as a top priority, in line with Commission Decision EC 2017/46. However, vulnerabilities can never be completely eliminated, despite all efforts. If exploited, such vulnerabilities can harm the confidentiality, integrity or availability of the Commission's systems and of the information processed therein. To identify and remediate vulnerabilities as soon as possible, we value the input of external entities acting in good faith, and we encourage responsible vulnerability research and disclosure. This document sets out our definition of good faith in the context of finding and reporting vulnerabilities, as well as what you can expect from us in return.</p>"},{"location":"eudi-web-verifier/SECURITY/#scope","title":"Scope","text":"<ul> <li>Architecture and Reference Framework</li> <li>Source code in eu-digital-identity-wallet public repositories</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#if-you-have-identified-a-vulnerability-please-do-the-following","title":"If you have identified a vulnerability, please do the following","text":"<ul> <li>E-mail your findings to EC-VULNERABILITY-DISCLOSURE@ec.europa.eu, specifying whether or not you agree to your name or pseudonym being made publicly available as the discoverer of the problem.</li> <li>Encrypt your findings using our PGP key to prevent this critical information from falling into the wrong hands.</li> <li>Provide us with sufficient information to reproduce the problem so that we can resolve it as quickly as possible. Usually, the IP address or the URL of the affected system and a description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation in terms of technical information or potential proof-of-concept code.</li> <li>Provide your report in English, preferably, or in any other official language of the European Union.</li> <li>Inform us if you agree to make your name/pseudonym publicly available as the discoverer of the vulnerability.</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#please-do-not-do-the-following","title":"Please do not do the following","text":"<ul> <li>Do not take advantage of the vulnerability or problem you have discovered, for example, by downloading more data than necessary to demonstrate the vulnerability, deleting, or modifying other people\u2019s data.</li> <li>Do not reveal any data downloaded during the discovery to any other parties.</li> <li>Do not reveal the problem to others until it has been resolved.</li> <li>Do not perform the following actions:</li> <li>Placing malware (virus, worm, Trojan horse, etc.) within the system.</li> <li>Reading, copying, modifying or deleting data from the system.</li> <li>Making changes to the system.</li> <li>Repeatedly accessing the system or sharing access with others.</li> <li>Using any access obtained to attempt to access other systems.</li> <li>Changing access rights for any other users.</li> <li>Using automated scanning tools.</li> <li>Using the so-called \"brute force\" of access to the system.</li> <li>Using denial-of-service or social engineering (phishing, vishing, spam, etc.).</li> <li>Do not use attacks on physical security.</li> </ul>"},{"location":"eudi-web-verifier/SECURITY/#what-we-promise","title":"What we promise","text":"<ul> <li> <p>We will respond to your report within three business days with our evaluation of the report.</p> </li> <li> <p>We will handle your report with strict confidentiality.</p> </li> <li>Where possible, we will inform you when the vulnerability has been remedied.</li> <li>We will process the personal data that you provide (such as your e-mail address and name) in accordance with the applicable data protection legislation and will not pass on your personal details to third parties without your permission.</li> <li>In the public information concerning the problem reported, we will publish your name as the discoverer of the problem if you have agreed to this in your initial e-mail</li> </ul>"}]}